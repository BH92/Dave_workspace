   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 D14B     	 ldr r3,.L26
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c CF4B     	 ldr r3,.L26
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 241 )  //ende
 469              	 .loc 3 119 0
 470 0010 CE4B     	 ldr r3,.L26
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 F12B     	 cmp r3,#241
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 CC4B     	 ldr r3,.L26
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e 92E1     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 CA4B     	 ldr r3,.L26
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 1CD1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 485              	 .loc 3 125 0
 486 0028 C94B     	 ldr r3,.L26+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c 0022     	 mov r2,#0
 489 002e 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 490              	 .loc 3 126 0
 491 0030 C74B     	 ldr r3,.L26+4
 492 0032 DB6A     	 ldr r3,[r3,#44]
 493 0034 0022     	 mov r2,#0
 494 0036 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 495              	 .loc 3 127 0
 496 0038 C54B     	 ldr r3,.L26+4
 497 003a DB6A     	 ldr r3,[r3,#44]
 498 003c 0022     	 mov r2,#0
 499 003e 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 500              	 .loc 3 128 0
 501 0040 C34B     	 ldr r3,.L26+4
 502 0042 DB6A     	 ldr r3,[r3,#44]
 503 0044 0022     	 mov r2,#0
 504 0046 DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 505              	 .loc 3 129 0
 506 0048 C14B     	 ldr r3,.L26+4
 507 004a 181C     	 mov r0,r3
 508 004c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 509              	 .loc 3 130 0
 510 0050 BF4A     	 ldr r2,.L26+4
 511 0052 E523     	 mov r3,#229
 512 0054 9B00     	 lsl r3,r3,#2
 513 0056 101C     	 mov r0,r2
 514 0058 0021     	 mov r1,#0
 515 005a 1A1C     	 mov r2,r3
 516 005c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 517 0060 71E1     	 b .L12
 518              	.L15:
 131:../samuel/samuel_io.c **** 	 			 }
 132:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 40 )
 519              	 .loc 3 132 0
 520 0062 BA4B     	 ldr r3,.L26
 521 0064 1B88     	 ldrh r3,[r3]
 522 0066 282B     	 cmp r3,#40
 523 0068 1ED1     	 bne .L16
 133:../samuel/samuel_io.c **** 	 			 {
 134:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 524              	 .loc 3 134 0
 525 006a B94B     	 ldr r3,.L26+4
 526 006c DB6A     	 ldr r3,[r3,#44]
 527 006e 0022     	 mov r2,#0
 528 0070 1A80     	 strh r2,[r3]
 135:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4000;
 529              	 .loc 3 135 0
 530 0072 B74B     	 ldr r3,.L26+4
 531 0074 DB6A     	 ldr r3,[r3,#44]
 532 0076 FA22     	 mov r2,#250
 533 0078 1201     	 lsl r2,r2,#4
 534 007a 5A80     	 strh r2,[r3,#2]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 535              	 .loc 3 136 0
 536 007c B44B     	 ldr r3,.L26+4
 537 007e DB6A     	 ldr r3,[r3,#44]
 538 0080 0022     	 mov r2,#0
 539 0082 9A80     	 strh r2,[r3,#4]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4000;
 540              	 .loc 3 137 0
 541 0084 B24B     	 ldr r3,.L26+4
 542 0086 DB6A     	 ldr r3,[r3,#44]
 543 0088 FA22     	 mov r2,#250
 544 008a 1201     	 lsl r2,r2,#4
 545 008c DA80     	 strh r2,[r3,#6]
 138:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 546              	 .loc 3 138 0
 547 008e B04B     	 ldr r3,.L26+4
 548 0090 181C     	 mov r0,r3
 549 0092 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 139:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 550              	 .loc 3 139 0
 551 0096 AE4A     	 ldr r2,.L26+4
 552 0098 E523     	 mov r3,#229
 553 009a 9B00     	 lsl r3,r3,#2
 554 009c 101C     	 mov r0,r2
 555 009e 0021     	 mov r1,#0
 556 00a0 1A1C     	 mov r2,r3
 557 00a2 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 558 00a6 4EE1     	 b .L12
 559              	.L16:
 140:../samuel/samuel_io.c **** 	 			 }
 141:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 60 )
 560              	 .loc 3 141 0
 561 00a8 A84B     	 ldr r3,.L26
 562 00aa 1B88     	 ldrh r3,[r3]
 563 00ac 3C2B     	 cmp r3,#60
 564 00ae 1ED1     	 bne .L17
 142:../samuel/samuel_io.c **** 	 			 {
 143:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 4000;
 565              	 .loc 3 143 0
 566 00b0 A74B     	 ldr r3,.L26+4
 567 00b2 DB6A     	 ldr r3,[r3,#44]
 568 00b4 FA22     	 mov r2,#250
 569 00b6 1201     	 lsl r2,r2,#4
 570 00b8 1A80     	 strh r2,[r3]
 144:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 571              	 .loc 3 144 0
 572 00ba A54B     	 ldr r3,.L26+4
 573 00bc DB6A     	 ldr r3,[r3,#44]
 574 00be 0022     	 mov r2,#0
 575 00c0 5A80     	 strh r2,[r3,#2]
 145:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 4000;
 576              	 .loc 3 145 0
 577 00c2 A34B     	 ldr r3,.L26+4
 578 00c4 DB6A     	 ldr r3,[r3,#44]
 579 00c6 FA22     	 mov r2,#250
 580 00c8 1201     	 lsl r2,r2,#4
 581 00ca 9A80     	 strh r2,[r3,#4]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 582              	 .loc 3 146 0
 583 00cc A04B     	 ldr r3,.L26+4
 584 00ce DB6A     	 ldr r3,[r3,#44]
 585 00d0 0022     	 mov r2,#0
 586 00d2 DA80     	 strh r2,[r3,#6]
 147:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 587              	 .loc 3 147 0
 588 00d4 9E4B     	 ldr r3,.L26+4
 589 00d6 181C     	 mov r0,r3
 590 00d8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 148:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 591              	 .loc 3 148 0
 592 00dc 9C4A     	 ldr r2,.L26+4
 593 00de E523     	 mov r3,#229
 594 00e0 9B00     	 lsl r3,r3,#2
 595 00e2 101C     	 mov r0,r2
 596 00e4 0021     	 mov r1,#0
 597 00e6 1A1C     	 mov r2,r3
 598 00e8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 599 00ec 2BE1     	 b .L12
 600              	.L17:
 149:../samuel/samuel_io.c **** 	 			 }
 150:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 80 )
 601              	 .loc 3 150 0
 602 00ee 974B     	 ldr r3,.L26
 603 00f0 1B88     	 ldrh r3,[r3]
 604 00f2 502B     	 cmp r3,#80
 605 00f4 20D1     	 bne .L18
 151:../samuel/samuel_io.c **** 	 			 {
 152:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 4000;
 606              	 .loc 3 152 0
 607 00f6 964B     	 ldr r3,.L26+4
 608 00f8 DB6A     	 ldr r3,[r3,#44]
 609 00fa FA22     	 mov r2,#250
 610 00fc 1201     	 lsl r2,r2,#4
 611 00fe 1A80     	 strh r2,[r3]
 153:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4000;
 612              	 .loc 3 153 0
 613 0100 934B     	 ldr r3,.L26+4
 614 0102 DB6A     	 ldr r3,[r3,#44]
 615 0104 FA22     	 mov r2,#250
 616 0106 1201     	 lsl r2,r2,#4
 617 0108 5A80     	 strh r2,[r3,#2]
 154:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 4000;
 618              	 .loc 3 154 0
 619 010a 914B     	 ldr r3,.L26+4
 620 010c DB6A     	 ldr r3,[r3,#44]
 621 010e FA22     	 mov r2,#250
 622 0110 1201     	 lsl r2,r2,#4
 623 0112 9A80     	 strh r2,[r3,#4]
 155:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4000;
 624              	 .loc 3 155 0
 625 0114 8E4B     	 ldr r3,.L26+4
 626 0116 DB6A     	 ldr r3,[r3,#44]
 627 0118 FA22     	 mov r2,#250
 628 011a 1201     	 lsl r2,r2,#4
 629 011c DA80     	 strh r2,[r3,#6]
 156:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 630              	 .loc 3 156 0
 631 011e 8C4B     	 ldr r3,.L26+4
 632 0120 181C     	 mov r0,r3
 633 0122 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 157:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 634              	 .loc 3 157 0
 635 0126 8A4A     	 ldr r2,.L26+4
 636 0128 E523     	 mov r3,#229
 637 012a 9B00     	 lsl r3,r3,#2
 638 012c 101C     	 mov r0,r2
 639 012e 0021     	 mov r1,#0
 640 0130 1A1C     	 mov r2,r3
 641 0132 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 642 0136 06E1     	 b .L12
 643              	.L18:
 158:../samuel/samuel_io.c **** 	 			 }
 159:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 100 )
 644              	 .loc 3 159 0
 645 0138 844B     	 ldr r3,.L26
 646 013a 1B88     	 ldrh r3,[r3]
 647 013c 642B     	 cmp r3,#100
 648 013e 1CD1     	 bne .L19
 160:../samuel/samuel_io.c **** 	 			 {
 161:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 649              	 .loc 3 161 0
 650 0140 834B     	 ldr r3,.L26+4
 651 0142 DB6A     	 ldr r3,[r3,#44]
 652 0144 0022     	 mov r2,#0
 653 0146 1A80     	 strh r2,[r3]
 162:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 654              	 .loc 3 162 0
 655 0148 814B     	 ldr r3,.L26+4
 656 014a DB6A     	 ldr r3,[r3,#44]
 657 014c 0022     	 mov r2,#0
 658 014e 5A80     	 strh r2,[r3,#2]
 163:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 659              	 .loc 3 163 0
 660 0150 7F4B     	 ldr r3,.L26+4
 661 0152 DB6A     	 ldr r3,[r3,#44]
 662 0154 0022     	 mov r2,#0
 663 0156 9A80     	 strh r2,[r3,#4]
 164:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 664              	 .loc 3 164 0
 665 0158 7D4B     	 ldr r3,.L26+4
 666 015a DB6A     	 ldr r3,[r3,#44]
 667 015c 0022     	 mov r2,#0
 668 015e DA80     	 strh r2,[r3,#6]
 165:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 669              	 .loc 3 165 0
 670 0160 7B4B     	 ldr r3,.L26+4
 671 0162 181C     	 mov r0,r3
 672 0164 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 166:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 673              	 .loc 3 166 0
 674 0168 794A     	 ldr r2,.L26+4
 675 016a E523     	 mov r3,#229
 676 016c 9B00     	 lsl r3,r3,#2
 677 016e 101C     	 mov r0,r2
 678 0170 0021     	 mov r1,#0
 679 0172 1A1C     	 mov r2,r3
 680 0174 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 681 0178 E5E0     	 b .L12
 682              	.L19:
 167:../samuel/samuel_io.c **** 	 			 }
 168:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 120 )
 683              	 .loc 3 168 0
 684 017a 744B     	 ldr r3,.L26
 685 017c 1B88     	 ldrh r3,[r3]
 686 017e 782B     	 cmp r3,#120
 687 0180 1CD1     	 bne .L20
 169:../samuel/samuel_io.c **** 	 			 {
 170:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 100;
 688              	 .loc 3 170 0
 689 0182 734B     	 ldr r3,.L26+4
 690 0184 DB6A     	 ldr r3,[r3,#44]
 691 0186 6422     	 mov r2,#100
 692 0188 1A80     	 strh r2,[r3]
 171:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 100;
 693              	 .loc 3 171 0
 694 018a 714B     	 ldr r3,.L26+4
 695 018c DB6A     	 ldr r3,[r3,#44]
 696 018e 6422     	 mov r2,#100
 697 0190 5A80     	 strh r2,[r3,#2]
 172:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 100;
 698              	 .loc 3 172 0
 699 0192 6F4B     	 ldr r3,.L26+4
 700 0194 DB6A     	 ldr r3,[r3,#44]
 701 0196 6422     	 mov r2,#100
 702 0198 9A80     	 strh r2,[r3,#4]
 173:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 100;
 703              	 .loc 3 173 0
 704 019a 6D4B     	 ldr r3,.L26+4
 705 019c DB6A     	 ldr r3,[r3,#44]
 706 019e 6422     	 mov r2,#100
 707 01a0 DA80     	 strh r2,[r3,#6]
 174:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 708              	 .loc 3 174 0
 709 01a2 6B4B     	 ldr r3,.L26+4
 710 01a4 181C     	 mov r0,r3
 711 01a6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 175:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 712              	 .loc 3 175 0
 713 01aa 694A     	 ldr r2,.L26+4
 714 01ac E523     	 mov r3,#229
 715 01ae 9B00     	 lsl r3,r3,#2
 716 01b0 101C     	 mov r0,r2
 717 01b2 0021     	 mov r1,#0
 718 01b4 1A1C     	 mov r2,r3
 719 01b6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 720 01ba C4E0     	 b .L12
 721              	.L20:
 176:../samuel/samuel_io.c **** 	 			 }
 177:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 140 )
 722              	 .loc 3 177 0
 723 01bc 634B     	 ldr r3,.L26
 724 01be 1B88     	 ldrh r3,[r3]
 725 01c0 8C2B     	 cmp r3,#140
 726 01c2 1CD1     	 bne .L21
 178:../samuel/samuel_io.c **** 	 			 {
 179:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 727              	 .loc 3 179 0
 728 01c4 624B     	 ldr r3,.L26+4
 729 01c6 DB6A     	 ldr r3,[r3,#44]
 730 01c8 0022     	 mov r2,#0
 731 01ca 1A80     	 strh r2,[r3]
 180:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 732              	 .loc 3 180 0
 733 01cc 604B     	 ldr r3,.L26+4
 734 01ce DB6A     	 ldr r3,[r3,#44]
 735 01d0 0022     	 mov r2,#0
 736 01d2 5A80     	 strh r2,[r3,#2]
 181:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 737              	 .loc 3 181 0
 738 01d4 5E4B     	 ldr r3,.L26+4
 739 01d6 DB6A     	 ldr r3,[r3,#44]
 740 01d8 0022     	 mov r2,#0
 741 01da 9A80     	 strh r2,[r3,#4]
 182:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 742              	 .loc 3 182 0
 743 01dc 5C4B     	 ldr r3,.L26+4
 744 01de DB6A     	 ldr r3,[r3,#44]
 745 01e0 0022     	 mov r2,#0
 746 01e2 DA80     	 strh r2,[r3,#6]
 183:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 747              	 .loc 3 183 0
 748 01e4 5A4B     	 ldr r3,.L26+4
 749 01e6 181C     	 mov r0,r3
 750 01e8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 184:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 751              	 .loc 3 184 0
 752 01ec 584A     	 ldr r2,.L26+4
 753 01ee E523     	 mov r3,#229
 754 01f0 9B00     	 lsl r3,r3,#2
 755 01f2 101C     	 mov r0,r2
 756 01f4 0021     	 mov r1,#0
 757 01f6 1A1C     	 mov r2,r3
 758 01f8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 759 01fc A3E0     	 b .L12
 760              	.L21:
 185:../samuel/samuel_io.c **** 	 			 }
 186:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 160 )
 761              	 .loc 3 186 0
 762 01fe 534B     	 ldr r3,.L26
 763 0200 1B88     	 ldrh r3,[r3]
 764 0202 A02B     	 cmp r3,#160
 765 0204 1CD1     	 bne .L22
 187:../samuel/samuel_io.c **** 	 			 {
 188:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 100;
 766              	 .loc 3 188 0
 767 0206 524B     	 ldr r3,.L26+4
 768 0208 DB6A     	 ldr r3,[r3,#44]
 769 020a 6422     	 mov r2,#100
 770 020c 1A80     	 strh r2,[r3]
 189:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 771              	 .loc 3 189 0
 772 020e 504B     	 ldr r3,.L26+4
 773 0210 DB6A     	 ldr r3,[r3,#44]
 774 0212 0022     	 mov r2,#0
 775 0214 5A80     	 strh r2,[r3,#2]
 190:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 100;
 776              	 .loc 3 190 0
 777 0216 4E4B     	 ldr r3,.L26+4
 778 0218 DB6A     	 ldr r3,[r3,#44]
 779 021a 6422     	 mov r2,#100
 780 021c 9A80     	 strh r2,[r3,#4]
 191:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 781              	 .loc 3 191 0
 782 021e 4C4B     	 ldr r3,.L26+4
 783 0220 DB6A     	 ldr r3,[r3,#44]
 784 0222 0022     	 mov r2,#0
 785 0224 DA80     	 strh r2,[r3,#6]
 192:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 786              	 .loc 3 192 0
 787 0226 4A4B     	 ldr r3,.L26+4
 788 0228 181C     	 mov r0,r3
 789 022a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 193:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 790              	 .loc 3 193 0
 791 022e 484A     	 ldr r2,.L26+4
 792 0230 E523     	 mov r3,#229
 793 0232 9B00     	 lsl r3,r3,#2
 794 0234 101C     	 mov r0,r2
 795 0236 0021     	 mov r1,#0
 796 0238 1A1C     	 mov r2,r3
 797 023a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 798 023e 82E0     	 b .L12
 799              	.L22:
 194:../samuel/samuel_io.c **** 	 			 }
 195:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 180 )
 800              	 .loc 3 195 0
 801 0240 424B     	 ldr r3,.L26
 802 0242 1B88     	 ldrh r3,[r3]
 803 0244 B42B     	 cmp r3,#180
 804 0246 1CD1     	 bne .L23
 196:../samuel/samuel_io.c **** 	 			 {
 197:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 805              	 .loc 3 197 0
 806 0248 414B     	 ldr r3,.L26+4
 807 024a DB6A     	 ldr r3,[r3,#44]
 808 024c 0022     	 mov r2,#0
 809 024e 1A80     	 strh r2,[r3]
 198:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 810              	 .loc 3 198 0
 811 0250 3F4B     	 ldr r3,.L26+4
 812 0252 DB6A     	 ldr r3,[r3,#44]
 813 0254 0022     	 mov r2,#0
 814 0256 5A80     	 strh r2,[r3,#2]
 199:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 815              	 .loc 3 199 0
 816 0258 3D4B     	 ldr r3,.L26+4
 817 025a DB6A     	 ldr r3,[r3,#44]
 818 025c 0022     	 mov r2,#0
 819 025e 9A80     	 strh r2,[r3,#4]
 200:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 820              	 .loc 3 200 0
 821 0260 3B4B     	 ldr r3,.L26+4
 822 0262 DB6A     	 ldr r3,[r3,#44]
 823 0264 0022     	 mov r2,#0
 824 0266 DA80     	 strh r2,[r3,#6]
 201:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 825              	 .loc 3 201 0
 826 0268 394B     	 ldr r3,.L26+4
 827 026a 181C     	 mov r0,r3
 828 026c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 202:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 829              	 .loc 3 202 0
 830 0270 374A     	 ldr r2,.L26+4
 831 0272 E523     	 mov r3,#229
 832 0274 9B00     	 lsl r3,r3,#2
 833 0276 101C     	 mov r0,r2
 834 0278 0021     	 mov r1,#0
 835 027a 1A1C     	 mov r2,r3
 836 027c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 837 0280 61E0     	 b .L12
 838              	.L23:
 203:../samuel/samuel_io.c **** 	 			 }
 204:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 200 )
 839              	 .loc 3 204 0
 840 0282 324B     	 ldr r3,.L26
 841 0284 1B88     	 ldrh r3,[r3]
 842 0286 C82B     	 cmp r3,#200
 843 0288 1CD1     	 bne .L24
 205:../samuel/samuel_io.c **** 	 			 {
 206:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 844              	 .loc 3 206 0
 845 028a 314B     	 ldr r3,.L26+4
 846 028c DB6A     	 ldr r3,[r3,#44]
 847 028e 0022     	 mov r2,#0
 848 0290 1A80     	 strh r2,[r3]
 207:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 100;
 849              	 .loc 3 207 0
 850 0292 2F4B     	 ldr r3,.L26+4
 851 0294 DB6A     	 ldr r3,[r3,#44]
 852 0296 6422     	 mov r2,#100
 853 0298 5A80     	 strh r2,[r3,#2]
 208:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 854              	 .loc 3 208 0
 855 029a 2D4B     	 ldr r3,.L26+4
 856 029c DB6A     	 ldr r3,[r3,#44]
 857 029e 0022     	 mov r2,#0
 858 02a0 9A80     	 strh r2,[r3,#4]
 209:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 100;
 859              	 .loc 3 209 0
 860 02a2 2B4B     	 ldr r3,.L26+4
 861 02a4 DB6A     	 ldr r3,[r3,#44]
 862 02a6 6422     	 mov r2,#100
 863 02a8 DA80     	 strh r2,[r3,#6]
 210:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 864              	 .loc 3 210 0
 865 02aa 294B     	 ldr r3,.L26+4
 866 02ac 181C     	 mov r0,r3
 867 02ae FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 211:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 868              	 .loc 3 211 0
 869 02b2 274A     	 ldr r2,.L26+4
 870 02b4 E523     	 mov r3,#229
 871 02b6 9B00     	 lsl r3,r3,#2
 872 02b8 101C     	 mov r0,r2
 873 02ba 0021     	 mov r1,#0
 874 02bc 1A1C     	 mov r2,r3
 875 02be FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 876 02c2 40E0     	 b .L12
 877              	.L24:
 212:../samuel/samuel_io.c **** 	 			 }
 213:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 220 )
 878              	 .loc 3 213 0
 879 02c4 214B     	 ldr r3,.L26
 880 02c6 1B88     	 ldrh r3,[r3]
 881 02c8 DC2B     	 cmp r3,#220
 882 02ca 1CD1     	 bne .L25
 214:../samuel/samuel_io.c **** 	 			 {
 215:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 883              	 .loc 3 215 0
 884 02cc 204B     	 ldr r3,.L26+4
 885 02ce DB6A     	 ldr r3,[r3,#44]
 886 02d0 0022     	 mov r2,#0
 887 02d2 1A80     	 strh r2,[r3]
 216:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 888              	 .loc 3 216 0
 889 02d4 1E4B     	 ldr r3,.L26+4
 890 02d6 DB6A     	 ldr r3,[r3,#44]
 891 02d8 0022     	 mov r2,#0
 892 02da 5A80     	 strh r2,[r3,#2]
 217:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 893              	 .loc 3 217 0
 894 02dc 1C4B     	 ldr r3,.L26+4
 895 02de DB6A     	 ldr r3,[r3,#44]
 896 02e0 0022     	 mov r2,#0
 897 02e2 9A80     	 strh r2,[r3,#4]
 218:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 898              	 .loc 3 218 0
 899 02e4 1A4B     	 ldr r3,.L26+4
 900 02e6 DB6A     	 ldr r3,[r3,#44]
 901 02e8 0022     	 mov r2,#0
 902 02ea DA80     	 strh r2,[r3,#6]
 219:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 903              	 .loc 3 219 0
 904 02ec 184B     	 ldr r3,.L26+4
 905 02ee 181C     	 mov r0,r3
 906 02f0 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 220:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 907              	 .loc 3 220 0
 908 02f4 164A     	 ldr r2,.L26+4
 909 02f6 E523     	 mov r3,#229
 910 02f8 9B00     	 lsl r3,r3,#2
 911 02fa 101C     	 mov r0,r2
 912 02fc 0021     	 mov r1,#0
 913 02fe 1A1C     	 mov r2,r3
 914 0300 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 915 0304 1FE0     	 b .L12
 916              	.L25:
 221:../samuel/samuel_io.c **** 	 			 }
 222:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 240 )
 917              	 .loc 3 222 0
 918 0306 114B     	 ldr r3,.L26
 919 0308 1B88     	 ldrh r3,[r3]
 920 030a F02B     	 cmp r3,#240
 921 030c 1BD1     	 bne .L12
 223:../samuel/samuel_io.c **** 	 			 {
 224:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 1500;
 922              	 .loc 3 224 0
 923 030e 104B     	 ldr r3,.L26+4
 924 0310 DB6A     	 ldr r3,[r3,#44]
 925 0312 104A     	 ldr r2,.L26+8
 926 0314 1A80     	 strh r2,[r3]
 225:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 1500;
 927              	 .loc 3 225 0
 928 0316 0E4B     	 ldr r3,.L26+4
 929 0318 DB6A     	 ldr r3,[r3,#44]
 930 031a 0E4A     	 ldr r2,.L26+8
 931 031c 5A80     	 strh r2,[r3,#2]
 226:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 1500;
 932              	 .loc 3 226 0
 933 031e 0C4B     	 ldr r3,.L26+4
 934 0320 DB6A     	 ldr r3,[r3,#44]
 935 0322 0C4A     	 ldr r2,.L26+8
 936 0324 9A80     	 strh r2,[r3,#4]
 227:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 1500;
 937              	 .loc 3 227 0
 938 0326 0A4B     	 ldr r3,.L26+4
 939 0328 DB6A     	 ldr r3,[r3,#44]
 940 032a 0A4A     	 ldr r2,.L26+8
 941 032c DA80     	 strh r2,[r3,#6]
 228:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 942              	 .loc 3 228 0
 943 032e 084B     	 ldr r3,.L26+4
 944 0330 181C     	 mov r0,r3
 945 0332 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 229:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 946              	 .loc 3 229 0
 947 0336 064A     	 ldr r2,.L26+4
 948 0338 E523     	 mov r3,#229
 949 033a 9B00     	 lsl r3,r3,#2
 950 033c 101C     	 mov r0,r2
 951 033e 0021     	 mov r1,#0
 952 0340 1A1C     	 mov r2,r3
 953 0342 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 954              	.L12:
 230:../samuel/samuel_io.c **** 	 			 }
 231:../samuel/samuel_io.c **** 				 else
 232:../samuel/samuel_io.c **** 
 233:../samuel/samuel_io.c **** 				 {
 234:../samuel/samuel_io.c **** 
 235:../samuel/samuel_io.c **** 				 }
 236:../samuel/samuel_io.c **** 
 237:../samuel/samuel_io.c ****    }
 955              	 .loc 3 237 0
 956 0346 BD46     	 mov sp,r7
 957              	 
 958 0348 80BD     	 pop {r7,pc}
 959              	.L27:
 960 034a C046     	 .align 2
 961              	.L26:
 962 034c 00000000 	 .word zahler_lightprog01
 963 0350 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 964 0354 DC050000 	 .word 1500
 965              	 .cfi_endproc
 966              	.LFE292:
 968              	 .section .text.light_aus,"ax",%progbits
 969              	 .align 2
 970              	 .global light_aus
 971              	 .code 16
 972              	 .thumb_func
 974              	light_aus:
 975              	.LFB293:
 238:../samuel/samuel_io.c ****   //------------------------------------------
 239:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 240:../samuel/samuel_io.c ****    {
 976              	 .loc 3 240 0
 977              	 .cfi_startproc
 978 0000 80B5     	 push {r7,lr}
 979              	.LCFI18:
 980              	 .cfi_def_cfa_offset 8
 981              	 .cfi_offset 7,-8
 982              	 .cfi_offset 14,-4
 983 0002 00AF     	 add r7,sp,#0
 984              	.LCFI19:
 985              	 .cfi_def_cfa_register 7
 241:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 986              	 .loc 3 241 0
 987 0004 104B     	 ldr r3,.L29
 988 0006 1A88     	 ldrh r2,[r3]
 989 0008 104B     	 ldr r3,.L29+4
 990 000a 1A80     	 strh r2,[r3]
 242:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 991              	 .loc 3 242 0
 992 000c 0E4B     	 ldr r3,.L29
 993 000e 1A88     	 ldrh r2,[r3]
 994 0010 0F4B     	 ldr r3,.L29+8
 995 0012 1A80     	 strh r2,[r3]
 243:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 996              	 .loc 3 243 0
 997 0014 0C4B     	 ldr r3,.L29
 998 0016 1A88     	 ldrh r2,[r3]
 999 0018 0E4B     	 ldr r3,.L29+12
 1000 001a 1A80     	 strh r2,[r3]
 244:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 1001              	 .loc 3 244 0
 1002 001c 0A4B     	 ldr r3,.L29
 1003 001e 1A88     	 ldrh r2,[r3]
 1004 0020 0D4B     	 ldr r3,.L29+16
 1005 0022 1A80     	 strh r2,[r3]
 245:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 1006              	 .loc 3 245 0
 1007 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 246:../samuel/samuel_io.c **** 	  bcuUebergabe();
 1008              	 .loc 3 246 0
 1009 0028 FFF7FEFF 	 bl bcuUebergabe
 247:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 248:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 1010              	 .loc 3 248 0
 1011 002c 0B4A     	 ldr r2,.L29+20
 1012 002e 8023     	 mov r3,#128
 1013 0030 1B01     	 lsl r3,r3,#4
 1014 0032 101C     	 mov r0,r2
 1015 0034 191C     	 mov r1,r3
 1016 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 249:../samuel/samuel_io.c **** 	     // Start Dimming
 250:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 1017              	 .loc 3 250 0
 1018 003a 084B     	 ldr r3,.L29+20
 1019 003c 181C     	 mov r0,r3
 1020 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 251:../samuel/samuel_io.c **** 
 252:../samuel/samuel_io.c ****    }
 1021              	 .loc 3 252 0
 1022 0042 BD46     	 mov sp,r7
 1023              	 
 1024 0044 80BD     	 pop {r7,pc}
 1025              	.L30:
 1026 0046 C046     	 .align 2
 1027              	.L29:
 1028 0048 00000000 	 .word linearwalk_gen
 1029 004c 00000000 	 .word linearwalk_ww1
 1030 0050 00000000 	 .word linearwalk_ww2
 1031 0054 00000000 	 .word linearwalk_cw1
 1032 0058 00000000 	 .word linearwalk_cw2
 1033 005c 00000000 	 .word DIM_BCCU_0
 1034              	 .cfi_endproc
 1035              	.LFE293:
 1037              	 .section .text.analog_start,"ax",%progbits
 1038              	 .align 2
 1039              	 .global analog_start
 1040              	 .code 16
 1041              	 .thumb_func
 1043              	analog_start:
 1044              	.LFB294:
 253:../samuel/samuel_io.c ****   //------------------------------------------
 254:../samuel/samuel_io.c **** 
 255:../samuel/samuel_io.c **** 
 256:../samuel/samuel_io.c **** 
 257:../samuel/samuel_io.c ****  void analog_start (void)
 258:../samuel/samuel_io.c ****   {
 1045              	 .loc 3 258 0
 1046              	 .cfi_startproc
 1047 0000 80B5     	 push {r7,lr}
 1048              	.LCFI20:
 1049              	 .cfi_def_cfa_offset 8
 1050              	 .cfi_offset 7,-8
 1051              	 .cfi_offset 14,-4
 1052 0002 00AF     	 add r7,sp,#0
 1053              	.LCFI21:
 1054              	 .cfi_def_cfa_register 7
 259:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 260:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 261:../samuel/samuel_io.c **** 
 262:../samuel/samuel_io.c ****   }
 1055              	 .loc 3 262 0
 1056 0004 BD46     	 mov sp,r7
 1057              	 
 1058 0006 80BD     	 pop {r7,pc}
 1059              	 .cfi_endproc
 1060              	.LFE294:
 1062              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 1063              	 .align 2
 1064              	 .global SCU_0_IRQHandler
 1065              	 .code 16
 1066              	 .thumb_func
 1068              	SCU_0_IRQHandler:
 1069              	.LFB295:
 263:../samuel/samuel_io.c **** 
 264:../samuel/samuel_io.c **** 
 265:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 266:../samuel/samuel_io.c ****   {
 1070              	 .loc 3 266 0
 1071              	 .cfi_startproc
 1072 0000 80B5     	 push {r7,lr}
 1073              	.LCFI22:
 1074              	 .cfi_def_cfa_offset 8
 1075              	 .cfi_offset 7,-8
 1076              	 .cfi_offset 14,-4
 1077 0002 00AF     	 add r7,sp,#0
 1078              	.LCFI23:
 1079              	 .cfi_def_cfa_register 7
 267:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 268:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 269:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 270:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 271:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 272:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 273:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 274:../samuel/samuel_io.c ****   }
 1080              	 .loc 3 274 0
 1081 0004 BD46     	 mov sp,r7
 1082              	 
 1083 0006 80BD     	 pop {r7,pc}
 1084              	 .cfi_endproc
 1085              	.LFE295:
 1087              	 .section .text.new_data_fill,"ax",%progbits
 1088              	 .align 2
 1089              	 .global new_data_fill
 1090              	 .code 16
 1091              	 .thumb_func
 1093              	new_data_fill:
 1094              	.LFB296:
 275:../samuel/samuel_io.c **** 
 276:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 277:../samuel/samuel_io.c ****  {
 1095              	 .loc 3 277 0
 1096              	 .cfi_startproc
 1097 0000 80B5     	 push {r7,lr}
 1098              	.LCFI24:
 1099              	 .cfi_def_cfa_offset 8
 1100              	 .cfi_offset 7,-8
 1101              	 .cfi_offset 14,-4
 1102 0002 00AF     	 add r7,sp,#0
 1103              	.LCFI25:
 1104              	 .cfi_def_cfa_register 7
 278:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1105              	 .loc 3 278 0
 1106 0004 124B     	 ldr r3,.L34
 1107 0006 0B22     	 mov r2,#11
 1108 0008 1A70     	 strb r2,[r3]
 279:../samuel/samuel_io.c **** 	 new_data[0]=1;
 1109              	 .loc 3 279 0
 1110 000a 124B     	 ldr r3,.L34+4
 1111 000c 0122     	 mov r2,#1
 1112 000e 1A70     	 strb r2,[r3]
 280:../samuel/samuel_io.c **** 	 new_data[1]=2;
 1113              	 .loc 3 280 0
 1114 0010 104B     	 ldr r3,.L34+4
 1115 0012 0222     	 mov r2,#2
 1116 0014 5A70     	 strb r2,[r3,#1]
 281:../samuel/samuel_io.c **** 	 new_data[2]=3;
 1117              	 .loc 3 281 0
 1118 0016 0F4B     	 ldr r3,.L34+4
 1119 0018 0322     	 mov r2,#3
 1120 001a 9A70     	 strb r2,[r3,#2]
 282:../samuel/samuel_io.c **** 	 new_data[3]=4;
 1121              	 .loc 3 282 0
 1122 001c 0D4B     	 ldr r3,.L34+4
 1123 001e 0422     	 mov r2,#4
 1124 0020 DA70     	 strb r2,[r3,#3]
 283:../samuel/samuel_io.c **** 	 new_data[4]=5;
 1125              	 .loc 3 283 0
 1126 0022 0C4B     	 ldr r3,.L34+4
 1127 0024 0522     	 mov r2,#5
 1128 0026 1A71     	 strb r2,[r3,#4]
 284:../samuel/samuel_io.c **** 	 new_data[5]=6;
 1129              	 .loc 3 284 0
 1130 0028 0A4B     	 ldr r3,.L34+4
 1131 002a 0622     	 mov r2,#6
 1132 002c 5A71     	 strb r2,[r3,#5]
 285:../samuel/samuel_io.c ****  	 new_data[6]=7;
 1133              	 .loc 3 285 0
 1134 002e 094B     	 ldr r3,.L34+4
 1135 0030 0722     	 mov r2,#7
 1136 0032 9A71     	 strb r2,[r3,#6]
 286:../samuel/samuel_io.c ****  	 new_data[7]=8;
 1137              	 .loc 3 286 0
 1138 0034 074B     	 ldr r3,.L34+4
 1139 0036 0822     	 mov r2,#8
 1140 0038 DA71     	 strb r2,[r3,#7]
 287:../samuel/samuel_io.c ****  	 new_data[8]=9;
 1141              	 .loc 3 287 0
 1142 003a 064B     	 ldr r3,.L34+4
 1143 003c 0922     	 mov r2,#9
 1144 003e 1A72     	 strb r2,[r3,#8]
 288:../samuel/samuel_io.c ****  	 new_data[9]='a';
 1145              	 .loc 3 288 0
 1146 0040 044B     	 ldr r3,.L34+4
 1147 0042 6122     	 mov r2,#97
 1148 0044 5A72     	 strb r2,[r3,#9]
 289:../samuel/samuel_io.c **** 	 new_data[10]='b';
 1149              	 .loc 3 289 0
 1150 0046 034B     	 ldr r3,.L34+4
 1151 0048 6222     	 mov r2,#98
 1152 004a 9A72     	 strb r2,[r3,#10]
 290:../samuel/samuel_io.c ****  }
 1153              	 .loc 3 290 0
 1154 004c BD46     	 mov sp,r7
 1155              	 
 1156 004e 80BD     	 pop {r7,pc}
 1157              	.L35:
 1158              	 .align 2
 1159              	.L34:
 1160 0050 00000000 	 .word transmit_buf_size
 1161 0054 00000000 	 .word new_data
 1162              	 .cfi_endproc
 1163              	.LFE296:
 1165              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 1166              	 .align 2
 1167              	 .global new_data_unbekanntBack
 1168              	 .code 16
 1169              	 .thumb_func
 1171              	new_data_unbekanntBack:
 1172              	.LFB297:
 291:../samuel/samuel_io.c **** 
 292:../samuel/samuel_io.c **** 
 293:../samuel/samuel_io.c **** 
 294:../samuel/samuel_io.c **** 
 295:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 296:../samuel/samuel_io.c ****  {
 1173              	 .loc 3 296 0
 1174              	 .cfi_startproc
 1175 0000 80B5     	 push {r7,lr}
 1176              	.LCFI26:
 1177              	 .cfi_def_cfa_offset 8
 1178              	 .cfi_offset 7,-8
 1179              	 .cfi_offset 14,-4
 1180 0002 00AF     	 add r7,sp,#0
 1181              	.LCFI27:
 1182              	 .cfi_def_cfa_register 7
 297:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1183              	 .loc 3 297 0
 1184 0004 134B     	 ldr r3,.L37
 1185 0006 0B22     	 mov r2,#11
 1186 0008 1A70     	 strb r2,[r3]
 298:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1187              	 .loc 3 298 0
 1188 000a 134B     	 ldr r3,.L37+4
 1189 000c 4C22     	 mov r2,#76
 1190 000e 1A70     	 strb r2,[r3]
 299:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1191              	 .loc 3 299 0
 1192 0010 114B     	 ldr r3,.L37+4
 1193 0012 4922     	 mov r2,#73
 1194 0014 5A70     	 strb r2,[r3,#1]
 300:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1195              	 .loc 3 300 0
 1196 0016 104B     	 ldr r3,.L37+4
 1197 0018 4E22     	 mov r2,#78
 1198 001a 9A70     	 strb r2,[r3,#2]
 301:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1199              	 .loc 3 301 0
 1200 001c 0F4B     	 ldr r3,.L37+8
 1201 001e 1A78     	 ldrb r2,[r3]
 1202 0020 0D4B     	 ldr r3,.L37+4
 1203 0022 DA70     	 strb r2,[r3,#3]
 302:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1204              	 .loc 3 302 0
 1205 0024 0B4B     	 ldr r3,.L37
 1206 0026 1A78     	 ldrb r2,[r3]
 1207 0028 0B4B     	 ldr r3,.L37+4
 1208 002a 1A71     	 strb r2,[r3,#4]
 303:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 1209              	 .loc 3 303 0
 1210 002c 0A4B     	 ldr r3,.L37+4
 1211 002e 3122     	 mov r2,#49
 1212 0030 5A71     	 strb r2,[r3,#5]
 304:../samuel/samuel_io.c **** 	 new_data[6]='n';
 1213              	 .loc 3 304 0
 1214 0032 094B     	 ldr r3,.L37+4
 1215 0034 6E22     	 mov r2,#110
 1216 0036 9A71     	 strb r2,[r3,#6]
 305:../samuel/samuel_io.c **** 	 new_data[7]='o';
 1217              	 .loc 3 305 0
 1218 0038 074B     	 ldr r3,.L37+4
 1219 003a 6F22     	 mov r2,#111
 1220 003c DA71     	 strb r2,[r3,#7]
 306:../samuel/samuel_io.c **** 	 new_data[8]='n';
 1221              	 .loc 3 306 0
 1222 003e 064B     	 ldr r3,.L37+4
 1223 0040 6E22     	 mov r2,#110
 1224 0042 1A72     	 strb r2,[r3,#8]
 307:../samuel/samuel_io.c **** 	 new_data[9]='o';
 1225              	 .loc 3 307 0
 1226 0044 044B     	 ldr r3,.L37+4
 1227 0046 6F22     	 mov r2,#111
 1228 0048 5A72     	 strb r2,[r3,#9]
 308:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1229              	 .loc 3 308 0
 1230 004a 034B     	 ldr r3,.L37+4
 1231 004c FF22     	 mov r2,#255
 1232 004e 9A72     	 strb r2,[r3,#10]
 309:../samuel/samuel_io.c ****  }
 1233              	 .loc 3 309 0
 1234 0050 BD46     	 mov sp,r7
 1235              	 
 1236 0052 80BD     	 pop {r7,pc}
 1237              	.L38:
 1238              	 .align 2
 1239              	.L37:
 1240 0054 00000000 	 .word transmit_buf_size
 1241 0058 00000000 	 .word new_data
 1242 005c 00000000 	 .word node_id
 1243              	 .cfi_endproc
 1244              	.LFE297:
 1246              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 1247              	 .align 2
 1248              	 .global new_data_BroadcastBack
 1249              	 .code 16
 1250              	 .thumb_func
 1252              	new_data_BroadcastBack:
 1253              	.LFB298:
 310:../samuel/samuel_io.c **** 
 311:../samuel/samuel_io.c **** //------------------------------------------
 312:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 313:../samuel/samuel_io.c ****  {
 1254              	 .loc 3 313 0
 1255              	 .cfi_startproc
 1256 0000 80B5     	 push {r7,lr}
 1257              	.LCFI28:
 1258              	 .cfi_def_cfa_offset 8
 1259              	 .cfi_offset 7,-8
 1260              	 .cfi_offset 14,-4
 1261 0002 00AF     	 add r7,sp,#0
 1262              	.LCFI29:
 1263              	 .cfi_def_cfa_register 7
 314:../samuel/samuel_io.c **** 
 315:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1264              	 .loc 3 315 0
 1265 0004 194B     	 ldr r3,.L40
 1266 0006 0B22     	 mov r2,#11
 1267 0008 1A70     	 strb r2,[r3]
 316:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1268              	 .loc 3 316 0
 1269 000a 194B     	 ldr r3,.L40+4
 1270 000c 4C22     	 mov r2,#76
 1271 000e 1A70     	 strb r2,[r3]
 317:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1272              	 .loc 3 317 0
 1273 0010 174B     	 ldr r3,.L40+4
 1274 0012 4922     	 mov r2,#73
 1275 0014 5A70     	 strb r2,[r3,#1]
 318:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1276              	 .loc 3 318 0
 1277 0016 164B     	 ldr r3,.L40+4
 1278 0018 4E22     	 mov r2,#78
 1279 001a 9A70     	 strb r2,[r3,#2]
 319:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1280              	 .loc 3 319 0
 1281 001c 154B     	 ldr r3,.L40+8
 1282 001e 1A78     	 ldrb r2,[r3]
 1283 0020 134B     	 ldr r3,.L40+4
 1284 0022 DA70     	 strb r2,[r3,#3]
 320:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1285              	 .loc 3 320 0
 1286 0024 114B     	 ldr r3,.L40
 1287 0026 1A78     	 ldrb r2,[r3]
 1288 0028 114B     	 ldr r3,.L40+4
 1289 002a 1A71     	 strb r2,[r3,#4]
 321:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 1290              	 .loc 3 321 0
 1291 002c 104B     	 ldr r3,.L40+4
 1292 002e 6F22     	 mov r2,#111
 1293 0030 5A71     	 strb r2,[r3,#5]
 322:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 1294              	 .loc 3 322 0
 1295 0032 114B     	 ldr r3,.L40+12
 1296 0034 1B88     	 ldrh r3,[r3]
 1297 0036 1B0A     	 lsr r3,r3,#8
 1298 0038 9BB2     	 uxth r3,r3
 1299 003a DAB2     	 uxtb r2,r3
 1300 003c 0C4B     	 ldr r3,.L40+4
 1301 003e 9A71     	 strb r2,[r3,#6]
 323:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 1302              	 .loc 3 323 0
 1303 0040 0D4B     	 ldr r3,.L40+12
 1304 0042 1B88     	 ldrh r3,[r3]
 1305 0044 DAB2     	 uxtb r2,r3
 1306 0046 0A4B     	 ldr r3,.L40+4
 1307 0048 DA71     	 strb r2,[r3,#7]
 324:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 1308              	 .loc 3 324 0
 1309 004a 0C4B     	 ldr r3,.L40+16
 1310 004c 1B88     	 ldrh r3,[r3]
 1311 004e 1B0A     	 lsr r3,r3,#8
 1312 0050 9BB2     	 uxth r3,r3
 1313 0052 DAB2     	 uxtb r2,r3
 1314 0054 064B     	 ldr r3,.L40+4
 1315 0056 1A72     	 strb r2,[r3,#8]
 325:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 1316              	 .loc 3 325 0
 1317 0058 084B     	 ldr r3,.L40+16
 1318 005a 1B88     	 ldrh r3,[r3]
 1319 005c DAB2     	 uxtb r2,r3
 1320 005e 044B     	 ldr r3,.L40+4
 1321 0060 5A72     	 strb r2,[r3,#9]
 326:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1322              	 .loc 3 326 0
 1323 0062 034B     	 ldr r3,.L40+4
 1324 0064 FF22     	 mov r2,#255
 1325 0066 9A72     	 strb r2,[r3,#10]
 327:../samuel/samuel_io.c ****  }
 1326              	 .loc 3 327 0
 1327 0068 BD46     	 mov sp,r7
 1328              	 
 1329 006a 80BD     	 pop {r7,pc}
 1330              	.L41:
 1331              	 .align 2
 1332              	.L40:
 1333 006c 00000000 	 .word transmit_buf_size
 1334 0070 00000000 	 .word new_data
 1335 0074 00000000 	 .word node_id
 1336 0078 00000000 	 .word Ser_NrH
 1337 007c 00000000 	 .word Ser_NrL
 1338              	 .cfi_endproc
 1339              	.LFE298:
 1341              	 .section .text.new_data_analog1Back,"ax",%progbits
 1342              	 .align 2
 1343              	 .global new_data_analog1Back
 1344              	 .code 16
 1345              	 .thumb_func
 1347              	new_data_analog1Back:
 1348              	.LFB299:
 328:../samuel/samuel_io.c ****  //------------------------------------------
 329:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 330:../samuel/samuel_io.c ****  {
 1349              	 .loc 3 330 0
 1350              	 .cfi_startproc
 1351 0000 80B5     	 push {r7,lr}
 1352              	.LCFI30:
 1353              	 .cfi_def_cfa_offset 8
 1354              	 .cfi_offset 7,-8
 1355              	 .cfi_offset 14,-4
 1356 0002 00AF     	 add r7,sp,#0
 1357              	.LCFI31:
 1358              	 .cfi_def_cfa_register 7
 331:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1359              	 .loc 3 331 0
 1360 0004 194B     	 ldr r3,.L43
 1361 0006 0B22     	 mov r2,#11
 1362 0008 1A70     	 strb r2,[r3]
 332:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1363              	 .loc 3 332 0
 1364 000a 194B     	 ldr r3,.L43+4
 1365 000c 4C22     	 mov r2,#76
 1366 000e 1A70     	 strb r2,[r3]
 333:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1367              	 .loc 3 333 0
 1368 0010 174B     	 ldr r3,.L43+4
 1369 0012 4922     	 mov r2,#73
 1370 0014 5A70     	 strb r2,[r3,#1]
 334:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1371              	 .loc 3 334 0
 1372 0016 164B     	 ldr r3,.L43+4
 1373 0018 4E22     	 mov r2,#78
 1374 001a 9A70     	 strb r2,[r3,#2]
 335:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1375              	 .loc 3 335 0
 1376 001c 154B     	 ldr r3,.L43+8
 1377 001e 1A78     	 ldrb r2,[r3]
 1378 0020 134B     	 ldr r3,.L43+4
 1379 0022 DA70     	 strb r2,[r3,#3]
 336:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1380              	 .loc 3 336 0
 1381 0024 114B     	 ldr r3,.L43
 1382 0026 1A78     	 ldrb r2,[r3]
 1383 0028 114B     	 ldr r3,.L43+4
 1384 002a 1A71     	 strb r2,[r3,#4]
 337:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1385              	 .loc 3 337 0
 1386 002c 104B     	 ldr r3,.L43+4
 1387 002e 6122     	 mov r2,#97
 1388 0030 5A71     	 strb r2,[r3,#5]
 338:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1389              	 .loc 3 338 0
 1390 0032 114B     	 ldr r3,.L43+12
 1391 0034 1B88     	 ldrh r3,[r3]
 1392 0036 1B0A     	 lsr r3,r3,#8
 1393 0038 9BB2     	 uxth r3,r3
 1394 003a DAB2     	 uxtb r2,r3
 1395 003c 0C4B     	 ldr r3,.L43+4
 1396 003e 9A71     	 strb r2,[r3,#6]
 339:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1397              	 .loc 3 339 0
 1398 0040 0D4B     	 ldr r3,.L43+12
 1399 0042 1B88     	 ldrh r3,[r3]
 1400 0044 DAB2     	 uxtb r2,r3
 1401 0046 0A4B     	 ldr r3,.L43+4
 1402 0048 DA71     	 strb r2,[r3,#7]
 340:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1403              	 .loc 3 340 0
 1404 004a 0C4B     	 ldr r3,.L43+16
 1405 004c 1B88     	 ldrh r3,[r3]
 1406 004e 1B0A     	 lsr r3,r3,#8
 1407 0050 9BB2     	 uxth r3,r3
 1408 0052 DAB2     	 uxtb r2,r3
 1409 0054 064B     	 ldr r3,.L43+4
 1410 0056 1A72     	 strb r2,[r3,#8]
 341:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1411              	 .loc 3 341 0
 1412 0058 084B     	 ldr r3,.L43+16
 1413 005a 1B88     	 ldrh r3,[r3]
 1414 005c DAB2     	 uxtb r2,r3
 1415 005e 044B     	 ldr r3,.L43+4
 1416 0060 5A72     	 strb r2,[r3,#9]
 342:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1417              	 .loc 3 342 0
 1418 0062 034B     	 ldr r3,.L43+4
 1419 0064 FF22     	 mov r2,#255
 1420 0066 9A72     	 strb r2,[r3,#10]
 343:../samuel/samuel_io.c ****  }
 1421              	 .loc 3 343 0
 1422 0068 BD46     	 mov sp,r7
 1423              	 
 1424 006a 80BD     	 pop {r7,pc}
 1425              	.L44:
 1426              	 .align 2
 1427              	.L43:
 1428 006c 00000000 	 .word transmit_buf_size
 1429 0070 00000000 	 .word new_data
 1430 0074 00000000 	 .word node_id
 1431 0078 00000000 	 .word resultA2
 1432 007c 00000000 	 .word resultB2
 1433              	 .cfi_endproc
 1434              	.LFE299:
 1436              	 .section .text.new_data_analog2Back,"ax",%progbits
 1437              	 .align 2
 1438              	 .global new_data_analog2Back
 1439              	 .code 16
 1440              	 .thumb_func
 1442              	new_data_analog2Back:
 1443              	.LFB300:
 344:../samuel/samuel_io.c ****  //------------------------------------------------------
 345:../samuel/samuel_io.c **** 
 346:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 347:../samuel/samuel_io.c ****  {
 1444              	 .loc 3 347 0
 1445              	 .cfi_startproc
 1446 0000 80B5     	 push {r7,lr}
 1447              	.LCFI32:
 1448              	 .cfi_def_cfa_offset 8
 1449              	 .cfi_offset 7,-8
 1450              	 .cfi_offset 14,-4
 1451 0002 00AF     	 add r7,sp,#0
 1452              	.LCFI33:
 1453              	 .cfi_def_cfa_register 7
 348:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1454              	 .loc 3 348 0
 1455 0004 194B     	 ldr r3,.L46
 1456 0006 0B22     	 mov r2,#11
 1457 0008 1A70     	 strb r2,[r3]
 349:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1458              	 .loc 3 349 0
 1459 000a 194B     	 ldr r3,.L46+4
 1460 000c 4C22     	 mov r2,#76
 1461 000e 1A70     	 strb r2,[r3]
 350:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1462              	 .loc 3 350 0
 1463 0010 174B     	 ldr r3,.L46+4
 1464 0012 4922     	 mov r2,#73
 1465 0014 5A70     	 strb r2,[r3,#1]
 351:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1466              	 .loc 3 351 0
 1467 0016 164B     	 ldr r3,.L46+4
 1468 0018 4E22     	 mov r2,#78
 1469 001a 9A70     	 strb r2,[r3,#2]
 352:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1470              	 .loc 3 352 0
 1471 001c 154B     	 ldr r3,.L46+8
 1472 001e 1A78     	 ldrb r2,[r3]
 1473 0020 134B     	 ldr r3,.L46+4
 1474 0022 DA70     	 strb r2,[r3,#3]
 353:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1475              	 .loc 3 353 0
 1476 0024 114B     	 ldr r3,.L46
 1477 0026 1A78     	 ldrb r2,[r3]
 1478 0028 114B     	 ldr r3,.L46+4
 1479 002a 1A71     	 strb r2,[r3,#4]
 354:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1480              	 .loc 3 354 0
 1481 002c 104B     	 ldr r3,.L46+4
 1482 002e 6222     	 mov r2,#98
 1483 0030 5A71     	 strb r2,[r3,#5]
 355:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1484              	 .loc 3 355 0
 1485 0032 114B     	 ldr r3,.L46+12
 1486 0034 1B88     	 ldrh r3,[r3]
 1487 0036 1B0A     	 lsr r3,r3,#8
 1488 0038 9BB2     	 uxth r3,r3
 1489 003a DAB2     	 uxtb r2,r3
 1490 003c 0C4B     	 ldr r3,.L46+4
 1491 003e 9A71     	 strb r2,[r3,#6]
 356:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1492              	 .loc 3 356 0
 1493 0040 0D4B     	 ldr r3,.L46+12
 1494 0042 1B88     	 ldrh r3,[r3]
 1495 0044 DAB2     	 uxtb r2,r3
 1496 0046 0A4B     	 ldr r3,.L46+4
 1497 0048 DA71     	 strb r2,[r3,#7]
 357:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1498              	 .loc 3 357 0
 1499 004a 0C4B     	 ldr r3,.L46+16
 1500 004c 1B88     	 ldrh r3,[r3]
 1501 004e 1B0A     	 lsr r3,r3,#8
 1502 0050 9BB2     	 uxth r3,r3
 1503 0052 DAB2     	 uxtb r2,r3
 1504 0054 064B     	 ldr r3,.L46+4
 1505 0056 1A72     	 strb r2,[r3,#8]
 358:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1506              	 .loc 3 358 0
 1507 0058 084B     	 ldr r3,.L46+16
 1508 005a 1B88     	 ldrh r3,[r3]
 1509 005c DAB2     	 uxtb r2,r3
 1510 005e 044B     	 ldr r3,.L46+4
 1511 0060 5A72     	 strb r2,[r3,#9]
 359:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1512              	 .loc 3 359 0
 1513 0062 034B     	 ldr r3,.L46+4
 1514 0064 FF22     	 mov r2,#255
 1515 0066 9A72     	 strb r2,[r3,#10]
 360:../samuel/samuel_io.c ****  }
 1516              	 .loc 3 360 0
 1517 0068 BD46     	 mov sp,r7
 1518              	 
 1519 006a 80BD     	 pop {r7,pc}
 1520              	.L47:
 1521              	 .align 2
 1522              	.L46:
 1523 006c 00000000 	 .word transmit_buf_size
 1524 0070 00000000 	 .word new_data
 1525 0074 00000000 	 .word node_id
 1526 0078 00000000 	 .word resultC2
 1527 007c 00000000 	 .word resultD2
 1528              	 .cfi_endproc
 1529              	.LFE300:
 1531              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1532              	 .align 2
 1533              	 .global new_data_aktLichtBack
 1534              	 .code 16
 1535              	 .thumb_func
 1537              	new_data_aktLichtBack:
 1538              	.LFB301:
 361:../samuel/samuel_io.c ****  //------------------------------------------------------
 362:../samuel/samuel_io.c **** 
 363:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 364:../samuel/samuel_io.c ****  {
 1539              	 .loc 3 364 0
 1540              	 .cfi_startproc
 1541 0000 80B5     	 push {r7,lr}
 1542              	.LCFI34:
 1543              	 .cfi_def_cfa_offset 8
 1544              	 .cfi_offset 7,-8
 1545              	 .cfi_offset 14,-4
 1546 0002 00AF     	 add r7,sp,#0
 1547              	.LCFI35:
 1548              	 .cfi_def_cfa_register 7
 365:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1549              	 .loc 3 365 0
 1550 0004 194B     	 ldr r3,.L49
 1551 0006 0B22     	 mov r2,#11
 1552 0008 1A70     	 strb r2,[r3]
 366:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1553              	 .loc 3 366 0
 1554 000a 194B     	 ldr r3,.L49+4
 1555 000c 4C22     	 mov r2,#76
 1556 000e 1A70     	 strb r2,[r3]
 367:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1557              	 .loc 3 367 0
 1558 0010 174B     	 ldr r3,.L49+4
 1559 0012 4922     	 mov r2,#73
 1560 0014 5A70     	 strb r2,[r3,#1]
 368:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1561              	 .loc 3 368 0
 1562 0016 164B     	 ldr r3,.L49+4
 1563 0018 4E22     	 mov r2,#78
 1564 001a 9A70     	 strb r2,[r3,#2]
 369:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1565              	 .loc 3 369 0
 1566 001c 154B     	 ldr r3,.L49+8
 1567 001e 1A78     	 ldrb r2,[r3]
 1568 0020 134B     	 ldr r3,.L49+4
 1569 0022 DA70     	 strb r2,[r3,#3]
 370:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1570              	 .loc 3 370 0
 1571 0024 114B     	 ldr r3,.L49
 1572 0026 1A78     	 ldrb r2,[r3]
 1573 0028 114B     	 ldr r3,.L49+4
 1574 002a 1A71     	 strb r2,[r3,#4]
 371:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1575              	 .loc 3 371 0
 1576 002c 104B     	 ldr r3,.L49+4
 1577 002e 6622     	 mov r2,#102
 1578 0030 5A71     	 strb r2,[r3,#5]
 372:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1579              	 .loc 3 372 0
 1580 0032 114B     	 ldr r3,.L49+12
 1581 0034 1B88     	 ldrh r3,[r3]
 1582 0036 1B0A     	 lsr r3,r3,#8
 1583 0038 9BB2     	 uxth r3,r3
 1584 003a DAB2     	 uxtb r2,r3
 1585 003c 0C4B     	 ldr r3,.L49+4
 1586 003e 9A71     	 strb r2,[r3,#6]
 373:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1587              	 .loc 3 373 0
 1588 0040 0D4B     	 ldr r3,.L49+12
 1589 0042 1B88     	 ldrh r3,[r3]
 1590 0044 DAB2     	 uxtb r2,r3
 1591 0046 0A4B     	 ldr r3,.L49+4
 1592 0048 DA71     	 strb r2,[r3,#7]
 374:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1593              	 .loc 3 374 0
 1594 004a 0C4B     	 ldr r3,.L49+16
 1595 004c 1B88     	 ldrh r3,[r3]
 1596 004e 1B0A     	 lsr r3,r3,#8
 1597 0050 9BB2     	 uxth r3,r3
 1598 0052 DAB2     	 uxtb r2,r3
 1599 0054 064B     	 ldr r3,.L49+4
 1600 0056 1A72     	 strb r2,[r3,#8]
 375:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1601              	 .loc 3 375 0
 1602 0058 084B     	 ldr r3,.L49+16
 1603 005a 1B88     	 ldrh r3,[r3]
 1604 005c DAB2     	 uxtb r2,r3
 1605 005e 044B     	 ldr r3,.L49+4
 1606 0060 5A72     	 strb r2,[r3,#9]
 376:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1607              	 .loc 3 376 0
 1608 0062 034B     	 ldr r3,.L49+4
 1609 0064 FF22     	 mov r2,#255
 1610 0066 9A72     	 strb r2,[r3,#10]
 377:../samuel/samuel_io.c ****  }
 1611              	 .loc 3 377 0
 1612 0068 BD46     	 mov sp,r7
 1613              	 
 1614 006a 80BD     	 pop {r7,pc}
 1615              	.L50:
 1616              	 .align 2
 1617              	.L49:
 1618 006c 00000000 	 .word transmit_buf_size
 1619 0070 00000000 	 .word new_data
 1620 0074 00000000 	 .word node_id
 1621 0078 00000000 	 .word dimAkt_Ww
 1622 007c 00000000 	 .word dimAkt_Cw
 1623              	 .cfi_endproc
 1624              	.LFE301:
 1626              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1627              	 .align 2
 1628              	 .global new_data_offLichtBack
 1629              	 .code 16
 1630              	 .thumb_func
 1632              	new_data_offLichtBack:
 1633              	.LFB302:
 378:../samuel/samuel_io.c ****  //------------------------------------------------------
 379:../samuel/samuel_io.c **** 
 380:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 381:../samuel/samuel_io.c ****  {
 1634              	 .loc 3 381 0
 1635              	 .cfi_startproc
 1636 0000 80B5     	 push {r7,lr}
 1637              	.LCFI36:
 1638              	 .cfi_def_cfa_offset 8
 1639              	 .cfi_offset 7,-8
 1640              	 .cfi_offset 14,-4
 1641 0002 00AF     	 add r7,sp,#0
 1642              	.LCFI37:
 1643              	 .cfi_def_cfa_register 7
 382:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1644              	 .loc 3 382 0
 1645 0004 1D4B     	 ldr r3,.L52
 1646 0006 0D22     	 mov r2,#13
 1647 0008 1A70     	 strb r2,[r3]
 383:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1648              	 .loc 3 383 0
 1649 000a 1D4B     	 ldr r3,.L52+4
 1650 000c 4C22     	 mov r2,#76
 1651 000e 1A70     	 strb r2,[r3]
 384:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1652              	 .loc 3 384 0
 1653 0010 1B4B     	 ldr r3,.L52+4
 1654 0012 4922     	 mov r2,#73
 1655 0014 5A70     	 strb r2,[r3,#1]
 385:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1656              	 .loc 3 385 0
 1657 0016 1A4B     	 ldr r3,.L52+4
 1658 0018 4E22     	 mov r2,#78
 1659 001a 9A70     	 strb r2,[r3,#2]
 386:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1660              	 .loc 3 386 0
 1661 001c 194B     	 ldr r3,.L52+8
 1662 001e 1A78     	 ldrb r2,[r3]
 1663 0020 174B     	 ldr r3,.L52+4
 1664 0022 DA70     	 strb r2,[r3,#3]
 387:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1665              	 .loc 3 387 0
 1666 0024 154B     	 ldr r3,.L52
 1667 0026 1A78     	 ldrb r2,[r3]
 1668 0028 154B     	 ldr r3,.L52+4
 1669 002a 1A71     	 strb r2,[r3,#4]
 388:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1670              	 .loc 3 388 0
 1671 002c 144B     	 ldr r3,.L52+4
 1672 002e 6722     	 mov r2,#103
 1673 0030 5A71     	 strb r2,[r3,#5]
 389:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1674              	 .loc 3 389 0
 1675 0032 154B     	 ldr r3,.L52+12
 1676 0034 1B88     	 ldrh r3,[r3]
 1677 0036 1B0A     	 lsr r3,r3,#8
 1678 0038 9BB2     	 uxth r3,r3
 1679 003a DAB2     	 uxtb r2,r3
 1680 003c 104B     	 ldr r3,.L52+4
 1681 003e 9A71     	 strb r2,[r3,#6]
 390:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1682              	 .loc 3 390 0
 1683 0040 114B     	 ldr r3,.L52+12
 1684 0042 1B88     	 ldrh r3,[r3]
 1685 0044 DAB2     	 uxtb r2,r3
 1686 0046 0E4B     	 ldr r3,.L52+4
 1687 0048 DA71     	 strb r2,[r3,#7]
 391:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1688              	 .loc 3 391 0
 1689 004a 104B     	 ldr r3,.L52+16
 1690 004c 1B88     	 ldrh r3,[r3]
 1691 004e 1B0A     	 lsr r3,r3,#8
 1692 0050 9BB2     	 uxth r3,r3
 1693 0052 DAB2     	 uxtb r2,r3
 1694 0054 0A4B     	 ldr r3,.L52+4
 1695 0056 1A72     	 strb r2,[r3,#8]
 392:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1696              	 .loc 3 392 0
 1697 0058 0C4B     	 ldr r3,.L52+16
 1698 005a 1B88     	 ldrh r3,[r3]
 1699 005c DAB2     	 uxtb r2,r3
 1700 005e 084B     	 ldr r3,.L52+4
 1701 0060 5A72     	 strb r2,[r3,#9]
 393:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1702              	 .loc 3 393 0
 1703 0062 0B4B     	 ldr r3,.L52+20
 1704 0064 1A78     	 ldrb r2,[r3]
 1705 0066 064B     	 ldr r3,.L52+4
 1706 0068 9A72     	 strb r2,[r3,#10]
 394:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1707              	 .loc 3 394 0
 1708 006a 0A4B     	 ldr r3,.L52+24
 1709 006c 1A78     	 ldrb r2,[r3]
 1710 006e 044B     	 ldr r3,.L52+4
 1711 0070 DA72     	 strb r2,[r3,#11]
 395:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1712              	 .loc 3 395 0
 1713 0072 034B     	 ldr r3,.L52+4
 1714 0074 FF22     	 mov r2,#255
 1715 0076 1A73     	 strb r2,[r3,#12]
 396:../samuel/samuel_io.c ****  }
 1716              	 .loc 3 396 0
 1717 0078 BD46     	 mov sp,r7
 1718              	 
 1719 007a 80BD     	 pop {r7,pc}
 1720              	.L53:
 1721              	 .align 2
 1722              	.L52:
 1723 007c 00000000 	 .word transmit_buf_size
 1724 0080 00000000 	 .word new_data
 1725 0084 00000000 	 .word node_id
 1726 0088 00000000 	 .word dimOff_Ww
 1727 008c 00000000 	 .word dimOff_Cw
 1728 0090 00000000 	 .word RegOnOff
 1729 0094 00000000 	 .word RegOnOff2
 1730              	 .cfi_endproc
 1731              	.LFE302:
 1733              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1734              	 .align 2
 1735              	 .global new_data_Bright_Color_Back
 1736              	 .code 16
 1737              	 .thumb_func
 1739              	new_data_Bright_Color_Back:
 1740              	.LFB303:
 397:../samuel/samuel_io.c ****  //------------------------------------------------------
 398:../samuel/samuel_io.c **** 
 399:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 400:../samuel/samuel_io.c ****   {
 1741              	 .loc 3 400 0
 1742              	 .cfi_startproc
 1743 0000 80B5     	 push {r7,lr}
 1744              	.LCFI38:
 1745              	 .cfi_def_cfa_offset 8
 1746              	 .cfi_offset 7,-8
 1747              	 .cfi_offset 14,-4
 1748 0002 00AF     	 add r7,sp,#0
 1749              	.LCFI39:
 1750              	 .cfi_def_cfa_register 7
 401:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1751              	 .loc 3 401 0
 1752 0004 194B     	 ldr r3,.L55
 1753 0006 0B22     	 mov r2,#11
 1754 0008 1A70     	 strb r2,[r3]
 402:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1755              	 .loc 3 402 0
 1756 000a 194B     	 ldr r3,.L55+4
 1757 000c 4C22     	 mov r2,#76
 1758 000e 1A70     	 strb r2,[r3]
 403:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1759              	 .loc 3 403 0
 1760 0010 174B     	 ldr r3,.L55+4
 1761 0012 4922     	 mov r2,#73
 1762 0014 5A70     	 strb r2,[r3,#1]
 404:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1763              	 .loc 3 404 0
 1764 0016 164B     	 ldr r3,.L55+4
 1765 0018 4E22     	 mov r2,#78
 1766 001a 9A70     	 strb r2,[r3,#2]
 405:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1767              	 .loc 3 405 0
 1768 001c 154B     	 ldr r3,.L55+8
 1769 001e 1A78     	 ldrb r2,[r3]
 1770 0020 134B     	 ldr r3,.L55+4
 1771 0022 DA70     	 strb r2,[r3,#3]
 406:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1772              	 .loc 3 406 0
 1773 0024 114B     	 ldr r3,.L55
 1774 0026 1A78     	 ldrb r2,[r3]
 1775 0028 114B     	 ldr r3,.L55+4
 1776 002a 1A71     	 strb r2,[r3,#4]
 407:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1777              	 .loc 3 407 0
 1778 002c 104B     	 ldr r3,.L55+4
 1779 002e 6822     	 mov r2,#104
 1780 0030 5A71     	 strb r2,[r3,#5]
 408:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1781              	 .loc 3 408 0
 1782 0032 114B     	 ldr r3,.L55+12
 1783 0034 1B88     	 ldrh r3,[r3]
 1784 0036 1B0A     	 lsr r3,r3,#8
 1785 0038 9BB2     	 uxth r3,r3
 1786 003a DAB2     	 uxtb r2,r3
 1787 003c 0C4B     	 ldr r3,.L55+4
 1788 003e 9A71     	 strb r2,[r3,#6]
 409:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1789              	 .loc 3 409 0
 1790 0040 0D4B     	 ldr r3,.L55+12
 1791 0042 1B88     	 ldrh r3,[r3]
 1792 0044 DAB2     	 uxtb r2,r3
 1793 0046 0A4B     	 ldr r3,.L55+4
 1794 0048 DA71     	 strb r2,[r3,#7]
 410:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1795              	 .loc 3 410 0
 1796 004a 0C4B     	 ldr r3,.L55+16
 1797 004c 1B88     	 ldrh r3,[r3]
 1798 004e 1B0A     	 lsr r3,r3,#8
 1799 0050 9BB2     	 uxth r3,r3
 1800 0052 DAB2     	 uxtb r2,r3
 1801 0054 064B     	 ldr r3,.L55+4
 1802 0056 1A72     	 strb r2,[r3,#8]
 411:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1803              	 .loc 3 411 0
 1804 0058 084B     	 ldr r3,.L55+16
 1805 005a 1B88     	 ldrh r3,[r3]
 1806 005c DAB2     	 uxtb r2,r3
 1807 005e 044B     	 ldr r3,.L55+4
 1808 0060 5A72     	 strb r2,[r3,#9]
 412:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1809              	 .loc 3 412 0
 1810 0062 034B     	 ldr r3,.L55+4
 1811 0064 FF22     	 mov r2,#255
 1812 0066 9A72     	 strb r2,[r3,#10]
 413:../samuel/samuel_io.c ****   }
 1813              	 .loc 3 413 0
 1814 0068 BD46     	 mov sp,r7
 1815              	 
 1816 006a 80BD     	 pop {r7,pc}
 1817              	.L56:
 1818              	 .align 2
 1819              	.L55:
 1820 006c 00000000 	 .word transmit_buf_size
 1821 0070 00000000 	 .word new_data
 1822 0074 00000000 	 .word node_id
 1823 0078 00000000 	 .word Brightness_Gen
 1824 007c 00000000 	 .word ColorQuot_Gen
 1825              	 .cfi_endproc
 1826              	.LFE303:
 1828              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1829              	 .align 2
 1830              	 .global new_data_Quot_Walk_Back
 1831              	 .code 16
 1832              	 .thumb_func
 1834              	new_data_Quot_Walk_Back:
 1835              	.LFB304:
 414:../samuel/samuel_io.c ****   //------------------------------------------------------
 415:../samuel/samuel_io.c **** 
 416:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 417:../samuel/samuel_io.c ****   {
 1836              	 .loc 3 417 0
 1837              	 .cfi_startproc
 1838 0000 80B5     	 push {r7,lr}
 1839              	.LCFI40:
 1840              	 .cfi_def_cfa_offset 8
 1841              	 .cfi_offset 7,-8
 1842              	 .cfi_offset 14,-4
 1843 0002 00AF     	 add r7,sp,#0
 1844              	.LCFI41:
 1845              	 .cfi_def_cfa_register 7
 418:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1846              	 .loc 3 418 0
 1847 0004 194B     	 ldr r3,.L58
 1848 0006 0B22     	 mov r2,#11
 1849 0008 1A70     	 strb r2,[r3]
 419:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1850              	 .loc 3 419 0
 1851 000a 194B     	 ldr r3,.L58+4
 1852 000c 4C22     	 mov r2,#76
 1853 000e 1A70     	 strb r2,[r3]
 420:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1854              	 .loc 3 420 0
 1855 0010 174B     	 ldr r3,.L58+4
 1856 0012 4922     	 mov r2,#73
 1857 0014 5A70     	 strb r2,[r3,#1]
 421:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1858              	 .loc 3 421 0
 1859 0016 164B     	 ldr r3,.L58+4
 1860 0018 4E22     	 mov r2,#78
 1861 001a 9A70     	 strb r2,[r3,#2]
 422:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1862              	 .loc 3 422 0
 1863 001c 154B     	 ldr r3,.L58+8
 1864 001e 1A78     	 ldrb r2,[r3]
 1865 0020 134B     	 ldr r3,.L58+4
 1866 0022 DA70     	 strb r2,[r3,#3]
 423:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1867              	 .loc 3 423 0
 1868 0024 114B     	 ldr r3,.L58
 1869 0026 1A78     	 ldrb r2,[r3]
 1870 0028 114B     	 ldr r3,.L58+4
 1871 002a 1A71     	 strb r2,[r3,#4]
 424:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1872              	 .loc 3 424 0
 1873 002c 104B     	 ldr r3,.L58+4
 1874 002e 6922     	 mov r2,#105
 1875 0030 5A71     	 strb r2,[r3,#5]
 425:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1876              	 .loc 3 425 0
 1877 0032 114B     	 ldr r3,.L58+12
 1878 0034 1B88     	 ldrh r3,[r3]
 1879 0036 1B0A     	 lsr r3,r3,#8
 1880 0038 9BB2     	 uxth r3,r3
 1881 003a DAB2     	 uxtb r2,r3
 1882 003c 0C4B     	 ldr r3,.L58+4
 1883 003e 9A71     	 strb r2,[r3,#6]
 426:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1884              	 .loc 3 426 0
 1885 0040 0D4B     	 ldr r3,.L58+12
 1886 0042 1B88     	 ldrh r3,[r3]
 1887 0044 DAB2     	 uxtb r2,r3
 1888 0046 0A4B     	 ldr r3,.L58+4
 1889 0048 DA71     	 strb r2,[r3,#7]
 427:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1890              	 .loc 3 427 0
 1891 004a 0C4B     	 ldr r3,.L58+16
 1892 004c 1B88     	 ldrh r3,[r3]
 1893 004e 1B0A     	 lsr r3,r3,#8
 1894 0050 9BB2     	 uxth r3,r3
 1895 0052 DAB2     	 uxtb r2,r3
 1896 0054 064B     	 ldr r3,.L58+4
 1897 0056 1A72     	 strb r2,[r3,#8]
 428:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1898              	 .loc 3 428 0
 1899 0058 084B     	 ldr r3,.L58+16
 1900 005a 1B88     	 ldrh r3,[r3]
 1901 005c DAB2     	 uxtb r2,r3
 1902 005e 044B     	 ldr r3,.L58+4
 1903 0060 5A72     	 strb r2,[r3,#9]
 429:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1904              	 .loc 3 429 0
 1905 0062 034B     	 ldr r3,.L58+4
 1906 0064 FF22     	 mov r2,#255
 1907 0066 9A72     	 strb r2,[r3,#10]
 430:../samuel/samuel_io.c ****   }
 1908              	 .loc 3 430 0
 1909 0068 BD46     	 mov sp,r7
 1910              	 
 1911 006a 80BD     	 pop {r7,pc}
 1912              	.L59:
 1913              	 .align 2
 1914              	.L58:
 1915 006c 00000000 	 .word transmit_buf_size
 1916 0070 00000000 	 .word new_data
 1917 0074 00000000 	 .word node_id
 1918 0078 00000000 	 .word linearwalk_gen
 1919 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1920              	 .cfi_endproc
 1921              	.LFE304:
 1923              	 .section .text.new_data_HalloBack,"ax",%progbits
 1924              	 .align 2
 1925              	 .global new_data_HalloBack
 1926              	 .code 16
 1927              	 .thumb_func
 1929              	new_data_HalloBack:
 1930              	.LFB305:
 431:../samuel/samuel_io.c ****  //------------------------------------------
 432:../samuel/samuel_io.c **** 
 433:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 434:../samuel/samuel_io.c ****   {
 1931              	 .loc 3 434 0
 1932              	 .cfi_startproc
 1933 0000 80B5     	 push {r7,lr}
 1934              	.LCFI42:
 1935              	 .cfi_def_cfa_offset 8
 1936              	 .cfi_offset 7,-8
 1937              	 .cfi_offset 14,-4
 1938 0002 00AF     	 add r7,sp,#0
 1939              	.LCFI43:
 1940              	 .cfi_def_cfa_register 7
 435:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1941              	 .loc 3 435 0
 1942 0004 134B     	 ldr r3,.L61
 1943 0006 0B22     	 mov r2,#11
 1944 0008 1A70     	 strb r2,[r3]
 436:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1945              	 .loc 3 436 0
 1946 000a 134B     	 ldr r3,.L61+4
 1947 000c 4C22     	 mov r2,#76
 1948 000e 1A70     	 strb r2,[r3]
 437:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1949              	 .loc 3 437 0
 1950 0010 114B     	 ldr r3,.L61+4
 1951 0012 4922     	 mov r2,#73
 1952 0014 5A70     	 strb r2,[r3,#1]
 438:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1953              	 .loc 3 438 0
 1954 0016 104B     	 ldr r3,.L61+4
 1955 0018 4E22     	 mov r2,#78
 1956 001a 9A70     	 strb r2,[r3,#2]
 439:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1957              	 .loc 3 439 0
 1958 001c 0F4B     	 ldr r3,.L61+8
 1959 001e 1A78     	 ldrb r2,[r3]
 1960 0020 0D4B     	 ldr r3,.L61+4
 1961 0022 DA70     	 strb r2,[r3,#3]
 440:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1962              	 .loc 3 440 0
 1963 0024 0B4B     	 ldr r3,.L61
 1964 0026 1A78     	 ldrb r2,[r3]
 1965 0028 0B4B     	 ldr r3,.L61+4
 1966 002a 1A71     	 strb r2,[r3,#4]
 441:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1967              	 .loc 3 441 0
 1968 002c 0A4B     	 ldr r3,.L61+4
 1969 002e 6A22     	 mov r2,#106
 1970 0030 5A71     	 strb r2,[r3,#5]
 442:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1971              	 .loc 3 442 0
 1972 0032 094B     	 ldr r3,.L61+4
 1973 0034 6F22     	 mov r2,#111
 1974 0036 9A71     	 strb r2,[r3,#6]
 443:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1975              	 .loc 3 443 0
 1976 0038 074B     	 ldr r3,.L61+4
 1977 003a 6B22     	 mov r2,#107
 1978 003c DA71     	 strb r2,[r3,#7]
 444:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1979              	 .loc 3 444 0
 1980 003e 064B     	 ldr r3,.L61+4
 1981 0040 6F22     	 mov r2,#111
 1982 0042 1A72     	 strb r2,[r3,#8]
 445:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1983              	 .loc 3 445 0
 1984 0044 044B     	 ldr r3,.L61+4
 1985 0046 6B22     	 mov r2,#107
 1986 0048 5A72     	 strb r2,[r3,#9]
 446:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1987              	 .loc 3 446 0
 1988 004a 034B     	 ldr r3,.L61+4
 1989 004c FF22     	 mov r2,#255
 1990 004e 9A72     	 strb r2,[r3,#10]
 447:../samuel/samuel_io.c ****   }
 1991              	 .loc 3 447 0
 1992 0050 BD46     	 mov sp,r7
 1993              	 
 1994 0052 80BD     	 pop {r7,pc}
 1995              	.L62:
 1996              	 .align 2
 1997              	.L61:
 1998 0054 00000000 	 .word transmit_buf_size
 1999 0058 00000000 	 .word new_data
 2000 005c 00000000 	 .word node_id
 2001              	 .cfi_endproc
 2002              	.LFE305:
 2004              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 2005              	 .align 2
 2006              	 .global new_data_neuNodeIdBack
 2007              	 .code 16
 2008              	 .thumb_func
 2010              	new_data_neuNodeIdBack:
 2011              	.LFB306:
 448:../samuel/samuel_io.c ****   //------------------------------------------------------
 449:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 450:../samuel/samuel_io.c ****    {
 2012              	 .loc 3 450 0
 2013              	 .cfi_startproc
 2014 0000 80B5     	 push {r7,lr}
 2015              	.LCFI44:
 2016              	 .cfi_def_cfa_offset 8
 2017              	 .cfi_offset 7,-8
 2018              	 .cfi_offset 14,-4
 2019 0002 00AF     	 add r7,sp,#0
 2020              	.LCFI45:
 2021              	 .cfi_def_cfa_register 7
 451:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 2022              	 .loc 3 451 0
 2023 0004 1B4B     	 ldr r3,.L64
 2024 0006 0C22     	 mov r2,#12
 2025 0008 1A70     	 strb r2,[r3]
 452:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2026              	 .loc 3 452 0
 2027 000a 1B4B     	 ldr r3,.L64+4
 2028 000c 4C22     	 mov r2,#76
 2029 000e 1A70     	 strb r2,[r3]
 453:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2030              	 .loc 3 453 0
 2031 0010 194B     	 ldr r3,.L64+4
 2032 0012 4922     	 mov r2,#73
 2033 0014 5A70     	 strb r2,[r3,#1]
 454:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2034              	 .loc 3 454 0
 2035 0016 184B     	 ldr r3,.L64+4
 2036 0018 4E22     	 mov r2,#78
 2037 001a 9A70     	 strb r2,[r3,#2]
 455:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2038              	 .loc 3 455 0
 2039 001c 174B     	 ldr r3,.L64+8
 2040 001e 1A78     	 ldrb r2,[r3]
 2041 0020 154B     	 ldr r3,.L64+4
 2042 0022 DA70     	 strb r2,[r3,#3]
 456:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2043              	 .loc 3 456 0
 2044 0024 134B     	 ldr r3,.L64
 2045 0026 1A78     	 ldrb r2,[r3]
 2046 0028 134B     	 ldr r3,.L64+4
 2047 002a 1A71     	 strb r2,[r3,#4]
 457:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 2048              	 .loc 3 457 0
 2049 002c 124B     	 ldr r3,.L64+4
 2050 002e 6B22     	 mov r2,#107
 2051 0030 5A71     	 strb r2,[r3,#5]
 458:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 2052              	 .loc 3 458 0
 2053 0032 134B     	 ldr r3,.L64+12
 2054 0034 1A78     	 ldrb r2,[r3]
 2055 0036 104B     	 ldr r3,.L64+4
 2056 0038 9A71     	 strb r2,[r3,#6]
 459:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 2057              	 .loc 3 459 0
 2058 003a 124B     	 ldr r3,.L64+16
 2059 003c 1B88     	 ldrh r3,[r3]
 2060 003e 1B0A     	 lsr r3,r3,#8
 2061 0040 9BB2     	 uxth r3,r3
 2062 0042 DAB2     	 uxtb r2,r3
 2063 0044 0C4B     	 ldr r3,.L64+4
 2064 0046 DA71     	 strb r2,[r3,#7]
 460:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 2065              	 .loc 3 460 0
 2066 0048 0E4B     	 ldr r3,.L64+16
 2067 004a 1B88     	 ldrh r3,[r3]
 2068 004c DAB2     	 uxtb r2,r3
 2069 004e 0A4B     	 ldr r3,.L64+4
 2070 0050 1A72     	 strb r2,[r3,#8]
 461:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 2071              	 .loc 3 461 0
 2072 0052 0D4B     	 ldr r3,.L64+20
 2073 0054 1B88     	 ldrh r3,[r3]
 2074 0056 1B0A     	 lsr r3,r3,#8
 2075 0058 9BB2     	 uxth r3,r3
 2076 005a DAB2     	 uxtb r2,r3
 2077 005c 064B     	 ldr r3,.L64+4
 2078 005e 5A72     	 strb r2,[r3,#9]
 462:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 2079              	 .loc 3 462 0
 2080 0060 094B     	 ldr r3,.L64+20
 2081 0062 1B88     	 ldrh r3,[r3]
 2082 0064 DAB2     	 uxtb r2,r3
 2083 0066 044B     	 ldr r3,.L64+4
 2084 0068 9A72     	 strb r2,[r3,#10]
 463:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 2085              	 .loc 3 463 0
 2086 006a 034B     	 ldr r3,.L64+4
 2087 006c FF22     	 mov r2,#255
 2088 006e DA72     	 strb r2,[r3,#11]
 464:../samuel/samuel_io.c ****    }
 2089              	 .loc 3 464 0
 2090 0070 BD46     	 mov sp,r7
 2091              	 
 2092 0072 80BD     	 pop {r7,pc}
 2093              	.L65:
 2094              	 .align 2
 2095              	.L64:
 2096 0074 00000000 	 .word transmit_buf_size
 2097 0078 00000000 	 .word new_data
 2098 007c 00000000 	 .word node_id
 2099 0080 00000000 	 .word node_id_neu
 2100 0084 00000000 	 .word Ser_NrH
 2101 0088 00000000 	 .word Ser_NrL
 2102              	 .cfi_endproc
 2103              	.LFE306:
 2105              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 2106              	 .align 2
 2107              	 .global new_data_neuSerNrBack
 2108              	 .code 16
 2109              	 .thumb_func
 2111              	new_data_neuSerNrBack:
 2112              	.LFB307:
 465:../samuel/samuel_io.c ****    //------------------------------------------------------
 466:../samuel/samuel_io.c **** 
 467:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 468:../samuel/samuel_io.c ****    {
 2113              	 .loc 3 468 0
 2114              	 .cfi_startproc
 2115 0000 80B5     	 push {r7,lr}
 2116              	.LCFI46:
 2117              	 .cfi_def_cfa_offset 8
 2118              	 .cfi_offset 7,-8
 2119              	 .cfi_offset 14,-4
 2120 0002 00AF     	 add r7,sp,#0
 2121              	.LCFI47:
 2122              	 .cfi_def_cfa_register 7
 469:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 2123              	 .loc 3 469 0
 2124 0004 254B     	 ldr r3,.L67
 2125 0006 0F22     	 mov r2,#15
 2126 0008 1A70     	 strb r2,[r3]
 470:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2127              	 .loc 3 470 0
 2128 000a 254B     	 ldr r3,.L67+4
 2129 000c 4C22     	 mov r2,#76
 2130 000e 1A70     	 strb r2,[r3]
 471:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2131              	 .loc 3 471 0
 2132 0010 234B     	 ldr r3,.L67+4
 2133 0012 4922     	 mov r2,#73
 2134 0014 5A70     	 strb r2,[r3,#1]
 472:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2135              	 .loc 3 472 0
 2136 0016 224B     	 ldr r3,.L67+4
 2137 0018 4E22     	 mov r2,#78
 2138 001a 9A70     	 strb r2,[r3,#2]
 473:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2139              	 .loc 3 473 0
 2140 001c 214B     	 ldr r3,.L67+8
 2141 001e 1A78     	 ldrb r2,[r3]
 2142 0020 1F4B     	 ldr r3,.L67+4
 2143 0022 DA70     	 strb r2,[r3,#3]
 474:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2144              	 .loc 3 474 0
 2145 0024 1D4B     	 ldr r3,.L67
 2146 0026 1A78     	 ldrb r2,[r3]
 2147 0028 1D4B     	 ldr r3,.L67+4
 2148 002a 1A71     	 strb r2,[r3,#4]
 475:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 2149              	 .loc 3 475 0
 2150 002c 1C4B     	 ldr r3,.L67+4
 2151 002e 6C22     	 mov r2,#108
 2152 0030 5A71     	 strb r2,[r3,#5]
 476:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 2153              	 .loc 3 476 0
 2154 0032 1D4B     	 ldr r3,.L67+12
 2155 0034 1B88     	 ldrh r3,[r3]
 2156 0036 1B0A     	 lsr r3,r3,#8
 2157 0038 9BB2     	 uxth r3,r3
 2158 003a DAB2     	 uxtb r2,r3
 2159 003c 184B     	 ldr r3,.L67+4
 2160 003e 9A71     	 strb r2,[r3,#6]
 477:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 2161              	 .loc 3 477 0
 2162 0040 194B     	 ldr r3,.L67+12
 2163 0042 1B88     	 ldrh r3,[r3]
 2164 0044 DAB2     	 uxtb r2,r3
 2165 0046 164B     	 ldr r3,.L67+4
 2166 0048 DA71     	 strb r2,[r3,#7]
 478:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 2167              	 .loc 3 478 0
 2168 004a 184B     	 ldr r3,.L67+16
 2169 004c 1B88     	 ldrh r3,[r3]
 2170 004e 1B0A     	 lsr r3,r3,#8
 2171 0050 9BB2     	 uxth r3,r3
 2172 0052 DAB2     	 uxtb r2,r3
 2173 0054 124B     	 ldr r3,.L67+4
 2174 0056 1A72     	 strb r2,[r3,#8]
 479:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 2175              	 .loc 3 479 0
 2176 0058 144B     	 ldr r3,.L67+16
 2177 005a 1B88     	 ldrh r3,[r3]
 2178 005c DAB2     	 uxtb r2,r3
 2179 005e 104B     	 ldr r3,.L67+4
 2180 0060 5A72     	 strb r2,[r3,#9]
 480:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 2181              	 .loc 3 480 0
 2182 0062 134B     	 ldr r3,.L67+20
 2183 0064 1B88     	 ldrh r3,[r3]
 2184 0066 1B0A     	 lsr r3,r3,#8
 2185 0068 9BB2     	 uxth r3,r3
 2186 006a DAB2     	 uxtb r2,r3
 2187 006c 0C4B     	 ldr r3,.L67+4
 2188 006e 9A72     	 strb r2,[r3,#10]
 481:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 2189              	 .loc 3 481 0
 2190 0070 0F4B     	 ldr r3,.L67+20
 2191 0072 1B88     	 ldrh r3,[r3]
 2192 0074 DAB2     	 uxtb r2,r3
 2193 0076 0A4B     	 ldr r3,.L67+4
 2194 0078 DA72     	 strb r2,[r3,#11]
 482:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 2195              	 .loc 3 482 0
 2196 007a 0E4B     	 ldr r3,.L67+24
 2197 007c 1B88     	 ldrh r3,[r3]
 2198 007e 1B0A     	 lsr r3,r3,#8
 2199 0080 9BB2     	 uxth r3,r3
 2200 0082 DAB2     	 uxtb r2,r3
 2201 0084 064B     	 ldr r3,.L67+4
 2202 0086 1A73     	 strb r2,[r3,#12]
 483:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 2203              	 .loc 3 483 0
 2204 0088 0A4B     	 ldr r3,.L67+24
 2205 008a 1B88     	 ldrh r3,[r3]
 2206 008c DAB2     	 uxtb r2,r3
 2207 008e 044B     	 ldr r3,.L67+4
 2208 0090 5A73     	 strb r2,[r3,#13]
 484:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 2209              	 .loc 3 484 0
 2210 0092 034B     	 ldr r3,.L67+4
 2211 0094 FF22     	 mov r2,#255
 2212 0096 9A73     	 strb r2,[r3,#14]
 485:../samuel/samuel_io.c ****    }
 2213              	 .loc 3 485 0
 2214 0098 BD46     	 mov sp,r7
 2215              	 
 2216 009a 80BD     	 pop {r7,pc}
 2217              	.L68:
 2218              	 .align 2
 2219              	.L67:
 2220 009c 00000000 	 .word transmit_buf_size
 2221 00a0 00000000 	 .word new_data
 2222 00a4 00000000 	 .word node_id
 2223 00a8 00000000 	 .word neu_Ser_NrH
 2224 00ac 00000000 	 .word neu_Ser_NrL
 2225 00b0 00000000 	 .word Ser_NrH
 2226 00b4 00000000 	 .word Ser_NrL
 2227              	 .cfi_endproc
 2228              	.LFE307:
 2230              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 2231              	 .align 2
 2232              	 .global new_data_NodeIdBack
 2233              	 .code 16
 2234              	 .thumb_func
 2236              	new_data_NodeIdBack:
 2237              	.LFB308:
 486:../samuel/samuel_io.c ****    //------------------------------------------------------
 487:../samuel/samuel_io.c **** 
 488:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 489:../samuel/samuel_io.c ****    {
 2238              	 .loc 3 489 0
 2239              	 .cfi_startproc
 2240 0000 80B5     	 push {r7,lr}
 2241              	.LCFI48:
 2242              	 .cfi_def_cfa_offset 8
 2243              	 .cfi_offset 7,-8
 2244              	 .cfi_offset 14,-4
 2245 0002 00AF     	 add r7,sp,#0
 2246              	.LCFI49:
 2247              	 .cfi_def_cfa_register 7
 490:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 2248              	 .loc 3 490 0
 2249 0004 1D4B     	 ldr r3,.L70
 2250 0006 0D22     	 mov r2,#13
 2251 0008 1A70     	 strb r2,[r3]
 491:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2252              	 .loc 3 491 0
 2253 000a 1D4B     	 ldr r3,.L70+4
 2254 000c 4C22     	 mov r2,#76
 2255 000e 1A70     	 strb r2,[r3]
 492:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2256              	 .loc 3 492 0
 2257 0010 1B4B     	 ldr r3,.L70+4
 2258 0012 4922     	 mov r2,#73
 2259 0014 5A70     	 strb r2,[r3,#1]
 493:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2260              	 .loc 3 493 0
 2261 0016 1A4B     	 ldr r3,.L70+4
 2262 0018 4E22     	 mov r2,#78
 2263 001a 9A70     	 strb r2,[r3,#2]
 494:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2264              	 .loc 3 494 0
 2265 001c 194B     	 ldr r3,.L70+8
 2266 001e 1A78     	 ldrb r2,[r3]
 2267 0020 174B     	 ldr r3,.L70+4
 2268 0022 DA70     	 strb r2,[r3,#3]
 495:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2269              	 .loc 3 495 0
 2270 0024 154B     	 ldr r3,.L70
 2271 0026 1A78     	 ldrb r2,[r3]
 2272 0028 154B     	 ldr r3,.L70+4
 2273 002a 1A71     	 strb r2,[r3,#4]
 496:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 2274              	 .loc 3 496 0
 2275 002c 144B     	 ldr r3,.L70+4
 2276 002e 6D22     	 mov r2,#109
 2277 0030 5A71     	 strb r2,[r3,#5]
 497:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 2278              	 .loc 3 497 0
 2279 0032 154B     	 ldr r3,.L70+12
 2280 0034 1A78     	 ldrb r2,[r3]
 2281 0036 124B     	 ldr r3,.L70+4
 2282 0038 9A71     	 strb r2,[r3,#6]
 498:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 2283              	 .loc 3 498 0
 2284 003a 124B     	 ldr r3,.L70+8
 2285 003c 1A78     	 ldrb r2,[r3]
 2286 003e 104B     	 ldr r3,.L70+4
 2287 0040 DA71     	 strb r2,[r3,#7]
 499:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 2288              	 .loc 3 499 0
 2289 0042 124B     	 ldr r3,.L70+16
 2290 0044 1B88     	 ldrh r3,[r3]
 2291 0046 1B0A     	 lsr r3,r3,#8
 2292 0048 9BB2     	 uxth r3,r3
 2293 004a DAB2     	 uxtb r2,r3
 2294 004c 0C4B     	 ldr r3,.L70+4
 2295 004e 1A72     	 strb r2,[r3,#8]
 500:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 2296              	 .loc 3 500 0
 2297 0050 0E4B     	 ldr r3,.L70+16
 2298 0052 1B88     	 ldrh r3,[r3]
 2299 0054 DAB2     	 uxtb r2,r3
 2300 0056 0A4B     	 ldr r3,.L70+4
 2301 0058 5A72     	 strb r2,[r3,#9]
 501:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 2302              	 .loc 3 501 0
 2303 005a 0D4B     	 ldr r3,.L70+20
 2304 005c 1B88     	 ldrh r3,[r3]
 2305 005e 1B0A     	 lsr r3,r3,#8
 2306 0060 9BB2     	 uxth r3,r3
 2307 0062 DAB2     	 uxtb r2,r3
 2308 0064 064B     	 ldr r3,.L70+4
 2309 0066 9A72     	 strb r2,[r3,#10]
 502:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 2310              	 .loc 3 502 0
 2311 0068 094B     	 ldr r3,.L70+20
 2312 006a 1B88     	 ldrh r3,[r3]
 2313 006c DAB2     	 uxtb r2,r3
 2314 006e 044B     	 ldr r3,.L70+4
 2315 0070 DA72     	 strb r2,[r3,#11]
 503:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 2316              	 .loc 3 503 0
 2317 0072 034B     	 ldr r3,.L70+4
 2318 0074 FF22     	 mov r2,#255
 2319 0076 1A73     	 strb r2,[r3,#12]
 504:../samuel/samuel_io.c ****    }
 2320              	 .loc 3 504 0
 2321 0078 BD46     	 mov sp,r7
 2322              	 
 2323 007a 80BD     	 pop {r7,pc}
 2324              	.L71:
 2325              	 .align 2
 2326              	.L70:
 2327 007c 00000000 	 .word transmit_buf_size
 2328 0080 00000000 	 .word new_data
 2329 0084 00000000 	 .word node_id
 2330 0088 00000000 	 .word node_id_alt
 2331 008c 00000000 	 .word Ser_NrH
 2332 0090 00000000 	 .word Ser_NrL
 2333              	 .cfi_endproc
 2334              	.LFE308:
 2336              	 .section .text.new_data_SerNrBack,"ax",%progbits
 2337              	 .align 2
 2338              	 .global new_data_SerNrBack
 2339              	 .code 16
 2340              	 .thumb_func
 2342              	new_data_SerNrBack:
 2343              	.LFB309:
 505:../samuel/samuel_io.c **** 
 506:../samuel/samuel_io.c ****    //------------------------------------------------------
 507:../samuel/samuel_io.c **** 
 508:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 509:../samuel/samuel_io.c ****    {
 2344              	 .loc 3 509 0
 2345              	 .cfi_startproc
 2346 0000 80B5     	 push {r7,lr}
 2347              	.LCFI50:
 2348              	 .cfi_def_cfa_offset 8
 2349              	 .cfi_offset 7,-8
 2350              	 .cfi_offset 14,-4
 2351 0002 00AF     	 add r7,sp,#0
 2352              	.LCFI51:
 2353              	 .cfi_def_cfa_register 7
 510:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 2354              	 .loc 3 510 0
 2355 0004 194B     	 ldr r3,.L73
 2356 0006 0B22     	 mov r2,#11
 2357 0008 1A70     	 strb r2,[r3]
 511:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2358              	 .loc 3 511 0
 2359 000a 194B     	 ldr r3,.L73+4
 2360 000c 4C22     	 mov r2,#76
 2361 000e 1A70     	 strb r2,[r3]
 512:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2362              	 .loc 3 512 0
 2363 0010 174B     	 ldr r3,.L73+4
 2364 0012 4922     	 mov r2,#73
 2365 0014 5A70     	 strb r2,[r3,#1]
 513:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2366              	 .loc 3 513 0
 2367 0016 164B     	 ldr r3,.L73+4
 2368 0018 4E22     	 mov r2,#78
 2369 001a 9A70     	 strb r2,[r3,#2]
 514:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2370              	 .loc 3 514 0
 2371 001c 154B     	 ldr r3,.L73+8
 2372 001e 1A78     	 ldrb r2,[r3]
 2373 0020 134B     	 ldr r3,.L73+4
 2374 0022 DA70     	 strb r2,[r3,#3]
 515:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2375              	 .loc 3 515 0
 2376 0024 114B     	 ldr r3,.L73
 2377 0026 1A78     	 ldrb r2,[r3]
 2378 0028 114B     	 ldr r3,.L73+4
 2379 002a 1A71     	 strb r2,[r3,#4]
 516:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2380              	 .loc 3 516 0
 2381 002c 104B     	 ldr r3,.L73+4
 2382 002e 6E22     	 mov r2,#110
 2383 0030 5A71     	 strb r2,[r3,#5]
 517:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2384              	 .loc 3 517 0
 2385 0032 114B     	 ldr r3,.L73+12
 2386 0034 1B88     	 ldrh r3,[r3]
 2387 0036 1B0A     	 lsr r3,r3,#8
 2388 0038 9BB2     	 uxth r3,r3
 2389 003a DAB2     	 uxtb r2,r3
 2390 003c 0C4B     	 ldr r3,.L73+4
 2391 003e 9A71     	 strb r2,[r3,#6]
 518:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2392              	 .loc 3 518 0
 2393 0040 0D4B     	 ldr r3,.L73+12
 2394 0042 1B88     	 ldrh r3,[r3]
 2395 0044 DAB2     	 uxtb r2,r3
 2396 0046 0A4B     	 ldr r3,.L73+4
 2397 0048 DA71     	 strb r2,[r3,#7]
 519:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2398              	 .loc 3 519 0
 2399 004a 0C4B     	 ldr r3,.L73+16
 2400 004c 1B88     	 ldrh r3,[r3]
 2401 004e 1B0A     	 lsr r3,r3,#8
 2402 0050 9BB2     	 uxth r3,r3
 2403 0052 DAB2     	 uxtb r2,r3
 2404 0054 064B     	 ldr r3,.L73+4
 2405 0056 1A72     	 strb r2,[r3,#8]
 520:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2406              	 .loc 3 520 0
 2407 0058 084B     	 ldr r3,.L73+16
 2408 005a 1B88     	 ldrh r3,[r3]
 2409 005c DAB2     	 uxtb r2,r3
 2410 005e 044B     	 ldr r3,.L73+4
 2411 0060 5A72     	 strb r2,[r3,#9]
 521:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2412              	 .loc 3 521 0
 2413 0062 034B     	 ldr r3,.L73+4
 2414 0064 FF22     	 mov r2,#255
 2415 0066 9A72     	 strb r2,[r3,#10]
 522:../samuel/samuel_io.c ****    }
 2416              	 .loc 3 522 0
 2417 0068 BD46     	 mov sp,r7
 2418              	 
 2419 006a 80BD     	 pop {r7,pc}
 2420              	.L74:
 2421              	 .align 2
 2422              	.L73:
 2423 006c 00000000 	 .word transmit_buf_size
 2424 0070 00000000 	 .word new_data
 2425 0074 00000000 	 .word node_id
 2426 0078 00000000 	 .word Ser_NrH
 2427 007c 00000000 	 .word Ser_NrL
 2428              	 .cfi_endproc
 2429              	.LFE309:
 2431              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2432              	 .align 2
 2433              	 .global new_data_readbuff2Back
 2434              	 .code 16
 2435              	 .thumb_func
 2437              	new_data_readbuff2Back:
 2438              	.LFB310:
 523:../samuel/samuel_io.c ****    //-------------------------------------
 524:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 525:../samuel/samuel_io.c ****    {
 2439              	 .loc 3 525 0
 2440              	 .cfi_startproc
 2441 0000 80B5     	 push {r7,lr}
 2442              	.LCFI52:
 2443              	 .cfi_def_cfa_offset 8
 2444              	 .cfi_offset 7,-8
 2445              	 .cfi_offset 14,-4
 2446 0002 00AF     	 add r7,sp,#0
 2447              	.LCFI53:
 2448              	 .cfi_def_cfa_register 7
 526:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2449              	 .loc 3 526 0
 2450 0004 2F4B     	 ldr r3,.L76
 2451 0006 1822     	 mov r2,#24
 2452 0008 1A70     	 strb r2,[r3]
 527:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2453              	 .loc 3 527 0
 2454 000a 2F4B     	 ldr r3,.L76+4
 2455 000c 4C22     	 mov r2,#76
 2456 000e 1A70     	 strb r2,[r3]
 528:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2457              	 .loc 3 528 0
 2458 0010 2D4B     	 ldr r3,.L76+4
 2459 0012 4922     	 mov r2,#73
 2460 0014 5A70     	 strb r2,[r3,#1]
 529:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2461              	 .loc 3 529 0
 2462 0016 2C4B     	 ldr r3,.L76+4
 2463 0018 4E22     	 mov r2,#78
 2464 001a 9A70     	 strb r2,[r3,#2]
 530:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2465              	 .loc 3 530 0
 2466 001c 2B4B     	 ldr r3,.L76+8
 2467 001e 1A78     	 ldrb r2,[r3]
 2468 0020 294B     	 ldr r3,.L76+4
 2469 0022 DA70     	 strb r2,[r3,#3]
 531:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2470              	 .loc 3 531 0
 2471 0024 274B     	 ldr r3,.L76
 2472 0026 1A78     	 ldrb r2,[r3]
 2473 0028 274B     	 ldr r3,.L76+4
 2474 002a 1A71     	 strb r2,[r3,#4]
 532:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2475              	 .loc 3 532 0
 2476 002c 264B     	 ldr r3,.L76+4
 2477 002e 7022     	 mov r2,#112
 2478 0030 5A71     	 strb r2,[r3,#5]
 533:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2479              	 .loc 3 533 0
 2480 0032 254B     	 ldr r3,.L76+4
 2481 0034 0022     	 mov r2,#0
 2482 0036 9A71     	 strb r2,[r3,#6]
 534:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2483              	 .loc 3 534 0
 2484 0038 254B     	 ldr r3,.L76+12
 2485 003a 1A78     	 ldrb r2,[r3]
 2486 003c 224B     	 ldr r3,.L76+4
 2487 003e DA71     	 strb r2,[r3,#7]
 535:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2488              	 .loc 3 535 0
 2489 0040 234B     	 ldr r3,.L76+12
 2490 0042 5A78     	 ldrb r2,[r3,#1]
 2491 0044 204B     	 ldr r3,.L76+4
 2492 0046 1A72     	 strb r2,[r3,#8]
 536:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2493              	 .loc 3 536 0
 2494 0048 214B     	 ldr r3,.L76+12
 2495 004a 9A78     	 ldrb r2,[r3,#2]
 2496 004c 1E4B     	 ldr r3,.L76+4
 2497 004e 5A72     	 strb r2,[r3,#9]
 537:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2498              	 .loc 3 537 0
 2499 0050 1F4B     	 ldr r3,.L76+12
 2500 0052 DA78     	 ldrb r2,[r3,#3]
 2501 0054 1C4B     	 ldr r3,.L76+4
 2502 0056 9A72     	 strb r2,[r3,#10]
 538:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2503              	 .loc 3 538 0
 2504 0058 1D4B     	 ldr r3,.L76+12
 2505 005a 1A79     	 ldrb r2,[r3,#4]
 2506 005c 1A4B     	 ldr r3,.L76+4
 2507 005e DA72     	 strb r2,[r3,#11]
 539:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2508              	 .loc 3 539 0
 2509 0060 1B4B     	 ldr r3,.L76+12
 2510 0062 5A79     	 ldrb r2,[r3,#5]
 2511 0064 184B     	 ldr r3,.L76+4
 2512 0066 1A73     	 strb r2,[r3,#12]
 540:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2513              	 .loc 3 540 0
 2514 0068 194B     	 ldr r3,.L76+12
 2515 006a 9A79     	 ldrb r2,[r3,#6]
 2516 006c 164B     	 ldr r3,.L76+4
 2517 006e 5A73     	 strb r2,[r3,#13]
 541:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2518              	 .loc 3 541 0
 2519 0070 174B     	 ldr r3,.L76+12
 2520 0072 DA79     	 ldrb r2,[r3,#7]
 2521 0074 144B     	 ldr r3,.L76+4
 2522 0076 9A73     	 strb r2,[r3,#14]
 542:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2523              	 .loc 3 542 0
 2524 0078 154B     	 ldr r3,.L76+12
 2525 007a 1A7A     	 ldrb r2,[r3,#8]
 2526 007c 124B     	 ldr r3,.L76+4
 2527 007e DA73     	 strb r2,[r3,#15]
 543:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2528              	 .loc 3 543 0
 2529 0080 134B     	 ldr r3,.L76+12
 2530 0082 5A7A     	 ldrb r2,[r3,#9]
 2531 0084 104B     	 ldr r3,.L76+4
 2532 0086 1A74     	 strb r2,[r3,#16]
 544:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2533              	 .loc 3 544 0
 2534 0088 114B     	 ldr r3,.L76+12
 2535 008a 9A7A     	 ldrb r2,[r3,#10]
 2536 008c 0E4B     	 ldr r3,.L76+4
 2537 008e 5A74     	 strb r2,[r3,#17]
 545:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2538              	 .loc 3 545 0
 2539 0090 0F4B     	 ldr r3,.L76+12
 2540 0092 DA7A     	 ldrb r2,[r3,#11]
 2541 0094 0C4B     	 ldr r3,.L76+4
 2542 0096 9A74     	 strb r2,[r3,#18]
 546:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2543              	 .loc 3 546 0
 2544 0098 0D4B     	 ldr r3,.L76+12
 2545 009a 1A7B     	 ldrb r2,[r3,#12]
 2546 009c 0A4B     	 ldr r3,.L76+4
 2547 009e DA74     	 strb r2,[r3,#19]
 547:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2548              	 .loc 3 547 0
 2549 00a0 0B4B     	 ldr r3,.L76+12
 2550 00a2 5A7B     	 ldrb r2,[r3,#13]
 2551 00a4 084B     	 ldr r3,.L76+4
 2552 00a6 1A75     	 strb r2,[r3,#20]
 548:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2553              	 .loc 3 548 0
 2554 00a8 094B     	 ldr r3,.L76+12
 2555 00aa 9A7B     	 ldrb r2,[r3,#14]
 2556 00ac 064B     	 ldr r3,.L76+4
 2557 00ae 5A75     	 strb r2,[r3,#21]
 549:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2558              	 .loc 3 549 0
 2559 00b0 074B     	 ldr r3,.L76+12
 2560 00b2 DA7B     	 ldrb r2,[r3,#15]
 2561 00b4 044B     	 ldr r3,.L76+4
 2562 00b6 9A75     	 strb r2,[r3,#22]
 550:../samuel/samuel_io.c **** 
 551:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2563              	 .loc 3 551 0
 2564 00b8 034B     	 ldr r3,.L76+4
 2565 00ba FF22     	 mov r2,#255
 2566 00bc DA75     	 strb r2,[r3,#23]
 552:../samuel/samuel_io.c ****    }
 2567              	 .loc 3 552 0
 2568 00be BD46     	 mov sp,r7
 2569              	 
 2570 00c0 80BD     	 pop {r7,pc}
 2571              	.L77:
 2572 00c2 C046     	 .align 2
 2573              	.L76:
 2574 00c4 00000000 	 .word transmit_buf_size
 2575 00c8 00000000 	 .word new_data
 2576 00cc 00000000 	 .word node_id
 2577 00d0 00000000 	 .word ReadBuffer2
 2578              	 .cfi_endproc
 2579              	.LFE310:
 2581              	 .section .text.clearEpromBuffer,"ax",%progbits
 2582              	 .align 2
 2583              	 .global clearEpromBuffer
 2584              	 .code 16
 2585              	 .thumb_func
 2587              	clearEpromBuffer:
 2588              	.LFB311:
 553:../samuel/samuel_io.c **** 
 554:../samuel/samuel_io.c ****  //------------------------------------------------------
 555:../samuel/samuel_io.c **** 
 556:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 557:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 558:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 559:../samuel/samuel_io.c ****  {
 2589              	 .loc 3 559 0
 2590              	 .cfi_startproc
 2591 0000 80B5     	 push {r7,lr}
 2592              	.LCFI54:
 2593              	 .cfi_def_cfa_offset 8
 2594              	 .cfi_offset 7,-8
 2595              	 .cfi_offset 14,-4
 2596 0002 00AF     	 add r7,sp,#0
 2597              	.LCFI55:
 2598              	 .cfi_def_cfa_register 7
 560:../samuel/samuel_io.c **** 
 561:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 562:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2599              	 .loc 3 562 0
 2600 0004 1E4B     	 ldr r3,.L85
 2601 0006 0022     	 mov r2,#0
 2602 0008 1A70     	 strb r2,[r3]
 2603 000a 0BE0     	 b .L79
 2604              	.L80:
 563:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2605              	 .loc 3 563 0 discriminator 3
 2606 000c 1C4B     	 ldr r3,.L85
 2607 000e 1B78     	 ldrb r3,[r3]
 2608 0010 1A1C     	 mov r2,r3
 2609 0012 1C4B     	 ldr r3,.L85+4
 2610 0014 0021     	 mov r1,#0
 2611 0016 9954     	 strb r1,[r3,r2]
 562:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2612              	 .loc 3 562 0 discriminator 3
 2613 0018 194B     	 ldr r3,.L85
 2614 001a 1B78     	 ldrb r3,[r3]
 2615 001c 0133     	 add r3,r3,#1
 2616 001e DAB2     	 uxtb r2,r3
 2617 0020 174B     	 ldr r3,.L85
 2618 0022 1A70     	 strb r2,[r3]
 2619              	.L79:
 562:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2620              	 .loc 3 562 0 is_stmt 0 discriminator 1
 2621 0024 164B     	 ldr r3,.L85
 2622 0026 1B78     	 ldrb r3,[r3]
 2623 0028 0F2B     	 cmp r3,#15
 2624 002a EFD9     	 bls .L80
 564:../samuel/samuel_io.c **** 
 565:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 566:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2625              	 .loc 3 566 0 is_stmt 1
 2626 002c 144B     	 ldr r3,.L85
 2627 002e 0022     	 mov r2,#0
 2628 0030 1A70     	 strb r2,[r3]
 2629 0032 0BE0     	 b .L81
 2630              	.L82:
 567:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2631              	 .loc 3 567 0 discriminator 3
 2632 0034 124B     	 ldr r3,.L85
 2633 0036 1B78     	 ldrb r3,[r3]
 2634 0038 1A1C     	 mov r2,r3
 2635 003a 134B     	 ldr r3,.L85+8
 2636 003c 0021     	 mov r1,#0
 2637 003e 9954     	 strb r1,[r3,r2]
 566:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2638              	 .loc 3 566 0 discriminator 3
 2639 0040 0F4B     	 ldr r3,.L85
 2640 0042 1B78     	 ldrb r3,[r3]
 2641 0044 0133     	 add r3,r3,#1
 2642 0046 DAB2     	 uxtb r2,r3
 2643 0048 0D4B     	 ldr r3,.L85
 2644 004a 1A70     	 strb r2,[r3]
 2645              	.L81:
 566:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2646              	 .loc 3 566 0 is_stmt 0 discriminator 1
 2647 004c 0C4B     	 ldr r3,.L85
 2648 004e 1B78     	 ldrb r3,[r3]
 2649 0050 0F2B     	 cmp r3,#15
 2650 0052 EFD9     	 bls .L82
 568:../samuel/samuel_io.c **** 
 569:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 570:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2651              	 .loc 3 570 0 is_stmt 1
 2652 0054 0A4B     	 ldr r3,.L85
 2653 0056 0022     	 mov r2,#0
 2654 0058 1A70     	 strb r2,[r3]
 2655 005a 0BE0     	 b .L83
 2656              	.L84:
 571:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2657              	 .loc 3 571 0 discriminator 3
 2658 005c 084B     	 ldr r3,.L85
 2659 005e 1B78     	 ldrb r3,[r3]
 2660 0060 1A1C     	 mov r2,r3
 2661 0062 0A4B     	 ldr r3,.L85+12
 2662 0064 0021     	 mov r1,#0
 2663 0066 9954     	 strb r1,[r3,r2]
 570:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2664              	 .loc 3 570 0 discriminator 3
 2665 0068 054B     	 ldr r3,.L85
 2666 006a 1B78     	 ldrb r3,[r3]
 2667 006c 0133     	 add r3,r3,#1
 2668 006e DAB2     	 uxtb r2,r3
 2669 0070 034B     	 ldr r3,.L85
 2670 0072 1A70     	 strb r2,[r3]
 2671              	.L83:
 570:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2672              	 .loc 3 570 0 is_stmt 0 discriminator 1
 2673 0074 024B     	 ldr r3,.L85
 2674 0076 1B78     	 ldrb r3,[r3]
 2675 0078 1F2B     	 cmp r3,#31
 2676 007a EFD9     	 bls .L84
 572:../samuel/samuel_io.c ****  }
 2677              	 .loc 3 572 0 is_stmt 1
 2678 007c BD46     	 mov sp,r7
 2679              	 
 2680 007e 80BD     	 pop {r7,pc}
 2681              	.L86:
 2682              	 .align 2
 2683              	.L85:
 2684 0080 00000000 	 .word Index
 2685 0084 00000000 	 .word ReadBuffer1
 2686 0088 00000000 	 .word ReadBuffer2
 2687 008c 00000000 	 .word ReadBuffer3
 2688              	 .cfi_endproc
 2689              	.LFE311:
 2691              	 .section .text.fillEpromBuffer,"ax",%progbits
 2692              	 .align 2
 2693              	 .global fillEpromBuffer
 2694              	 .code 16
 2695              	 .thumb_func
 2697              	fillEpromBuffer:
 2698              	.LFB312:
 573:../samuel/samuel_io.c **** 
 574:../samuel/samuel_io.c ****  //---------------------------------
 575:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 576:../samuel/samuel_io.c ****  {
 2699              	 .loc 3 576 0
 2700              	 .cfi_startproc
 2701 0000 80B5     	 push {r7,lr}
 2702              	.LCFI56:
 2703              	 .cfi_def_cfa_offset 8
 2704              	 .cfi_offset 7,-8
 2705              	 .cfi_offset 14,-4
 2706 0002 00AF     	 add r7,sp,#0
 2707              	.LCFI57:
 2708              	 .cfi_def_cfa_register 7
 577:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 578:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2709              	 .loc 3 578 0
 2710 0004 0B4B     	 ldr r3,.L90
 2711 0006 0022     	 mov r2,#0
 2712 0008 1A70     	 strb r2,[r3]
 2713 000a 0CE0     	 b .L88
 2714              	.L89:
 579:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2715              	 .loc 3 579 0 discriminator 3
 2716 000c 094B     	 ldr r3,.L90
 2717 000e 1B78     	 ldrb r3,[r3]
 2718 0010 1A1C     	 mov r2,r3
 2719 0012 084B     	 ldr r3,.L90
 2720 0014 1978     	 ldrb r1,[r3]
 2721 0016 084B     	 ldr r3,.L90+4
 2722 0018 9954     	 strb r1,[r3,r2]
 578:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2723              	 .loc 3 578 0 discriminator 3
 2724 001a 064B     	 ldr r3,.L90
 2725 001c 1B78     	 ldrb r3,[r3]
 2726 001e 0133     	 add r3,r3,#1
 2727 0020 DAB2     	 uxtb r2,r3
 2728 0022 044B     	 ldr r3,.L90
 2729 0024 1A70     	 strb r2,[r3]
 2730              	.L88:
 578:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2731              	 .loc 3 578 0 is_stmt 0 discriminator 1
 2732 0026 034B     	 ldr r3,.L90
 2733 0028 1B78     	 ldrb r3,[r3]
 2734 002a 632B     	 cmp r3,#99
 2735 002c EED9     	 bls .L89
 580:../samuel/samuel_io.c ****  }
 2736              	 .loc 3 580 0 is_stmt 1
 2737 002e BD46     	 mov sp,r7
 2738              	 
 2739 0030 80BD     	 pop {r7,pc}
 2740              	.L91:
 2741 0032 C046     	 .align 2
 2742              	.L90:
 2743 0034 00000000 	 .word Index
 2744 0038 00000000 	 .word data_buffer
 2745              	 .cfi_endproc
 2746              	.LFE312:
 2748              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2749              	 .align 2
 2750              	 .global fill2EpromBuffer
 2751              	 .code 16
 2752              	 .thumb_func
 2754              	fill2EpromBuffer:
 2755              	.LFB313:
 581:../samuel/samuel_io.c **** 
 582:../samuel/samuel_io.c ****  //---------------------------------
 583:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 584:../samuel/samuel_io.c ****  {
 2756              	 .loc 3 584 0
 2757              	 .cfi_startproc
 2758 0000 80B5     	 push {r7,lr}
 2759              	.LCFI58:
 2760              	 .cfi_def_cfa_offset 8
 2761              	 .cfi_offset 7,-8
 2762              	 .cfi_offset 14,-4
 2763 0002 00AF     	 add r7,sp,#0
 2764              	.LCFI59:
 2765              	 .cfi_def_cfa_register 7
 585:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 586:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2766              	 .loc 3 586 0
 2767 0004 0C4B     	 ldr r3,.L95
 2768 0006 0022     	 mov r2,#0
 2769 0008 1A70     	 strb r2,[r3]
 2770 000a 0EE0     	 b .L93
 2771              	.L94:
 587:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2772              	 .loc 3 587 0 discriminator 3
 2773 000c 0A4B     	 ldr r3,.L95
 2774 000e 1B78     	 ldrb r3,[r3]
 2775 0010 1A1C     	 mov r2,r3
 2776 0012 094B     	 ldr r3,.L95
 2777 0014 1B78     	 ldrb r3,[r3]
 2778 0016 DB43     	 mvn r3,r3
 2779 0018 D9B2     	 uxtb r1,r3
 2780 001a 084B     	 ldr r3,.L95+4
 2781 001c 9954     	 strb r1,[r3,r2]
 586:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2782              	 .loc 3 586 0 discriminator 3
 2783 001e 064B     	 ldr r3,.L95
 2784 0020 1B78     	 ldrb r3,[r3]
 2785 0022 0133     	 add r3,r3,#1
 2786 0024 DAB2     	 uxtb r2,r3
 2787 0026 044B     	 ldr r3,.L95
 2788 0028 1A70     	 strb r2,[r3]
 2789              	.L93:
 586:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2790              	 .loc 3 586 0 is_stmt 0 discriminator 1
 2791 002a 034B     	 ldr r3,.L95
 2792 002c 1B78     	 ldrb r3,[r3]
 2793 002e 632B     	 cmp r3,#99
 2794 0030 ECD9     	 bls .L94
 588:../samuel/samuel_io.c ****  }
 2795              	 .loc 3 588 0 is_stmt 1
 2796 0032 BD46     	 mov sp,r7
 2797              	 
 2798 0034 80BD     	 pop {r7,pc}
 2799              	.L96:
 2800 0036 C046     	 .align 2
 2801              	.L95:
 2802 0038 00000000 	 .word Index
 2803 003c 00000000 	 .word data_buffer
 2804              	 .cfi_endproc
 2805              	.LFE313:
 2807              	 .section .text.readAllEEprom,"ax",%progbits
 2808              	 .align 2
 2809              	 .global readAllEEprom
 2810              	 .code 16
 2811              	 .thumb_func
 2813              	readAllEEprom:
 2814              	.LFB314:
 589:../samuel/samuel_io.c **** 
 590:../samuel/samuel_io.c **** 
 591:../samuel/samuel_io.c ****  //------------------------------------------------
 592:../samuel/samuel_io.c **** 
 593:../samuel/samuel_io.c **** 
 594:../samuel/samuel_io.c ****  //------------------------------------------------
 595:../samuel/samuel_io.c ****  int readAllEEprom(void)
 596:../samuel/samuel_io.c ****  {
 2815              	 .loc 3 596 0
 2816              	 .cfi_startproc
 2817 0000 80B5     	 push {r7,lr}
 2818              	.LCFI60:
 2819              	 .cfi_def_cfa_offset 8
 2820              	 .cfi_offset 7,-8
 2821              	 .cfi_offset 14,-4
 2822 0002 00AF     	 add r7,sp,#0
 2823              	.LCFI61:
 2824              	 .cfi_def_cfa_register 7
 597:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2825              	 .loc 3 597 0
 2826 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2827 0008 031C     	 mov r3,r0
 2828 000a 1A1C     	 mov r2,r3
 2829 000c 614B     	 ldr r3,.L103
 2830 000e 1A70     	 strb r2,[r3]
 598:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2831              	 .loc 3 598 0
 2832 0010 604B     	 ldr r3,.L103
 2833 0012 1B78     	 ldrb r3,[r3]
 2834 0014 032B     	 cmp r3,#3
 2835 0016 0AD1     	 bne .L98
 599:../samuel/samuel_io.c ****    {
 600:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2836              	 .loc 3 600 0
 2837 0018 5F4B     	 ldr r3,.L103+4
 2838 001a 0120     	 mov r0,#1
 2839 001c 0021     	 mov r1,#0
 2840 001e 1A1C     	 mov r2,r3
 2841 0020 1023     	 mov r3,#16
 2842 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2843 0026 031C     	 mov r3,r0
 2844 0028 1A1C     	 mov r2,r3
 2845 002a 5C4B     	 ldr r3,.L103+8
 2846 002c 1A70     	 strb r2,[r3]
 2847              	.L98:
 601:../samuel/samuel_io.c ****    }
 602:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2848              	 .loc 3 602 0
 2849 002e 5B4B     	 ldr r3,.L103+8
 2850 0030 1B78     	 ldrb r3,[r3]
 2851 0032 002B     	 cmp r3,#0
 2852 0034 14D1     	 bne .L99
 603:../samuel/samuel_io.c ****    {
 604:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2853              	 .loc 3 604 0
 2854 0036 584B     	 ldr r3,.L103+4
 2855 0038 5B78     	 ldrb r3,[r3,#1]
 2856 003a 9AB2     	 uxth r2,r3
 2857 003c 584B     	 ldr r3,.L103+12
 2858 003e 1A80     	 strh r2,[r3]
 605:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2859              	 .loc 3 605 0
 2860 0040 554B     	 ldr r3,.L103+4
 2861 0042 9B78     	 ldrb r3,[r3,#2]
 2862 0044 9AB2     	 uxth r2,r3
 2863 0046 574B     	 ldr r3,.L103+16
 2864 0048 1A80     	 strh r2,[r3]
 606:../samuel/samuel_io.c **** 
 607:../samuel/samuel_io.c **** 
 608:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2865              	 .loc 3 608 0
 2866 004a 574B     	 ldr r3,.L103+20
 2867 004c 0220     	 mov r0,#2
 2868 004e 0021     	 mov r1,#0
 2869 0050 1A1C     	 mov r2,r3
 2870 0052 1023     	 mov r3,#16
 2871 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2872 0058 031C     	 mov r3,r0
 2873 005a 1A1C     	 mov r2,r3
 2874 005c 4F4B     	 ldr r3,.L103+8
 2875 005e 1A70     	 strb r2,[r3]
 2876              	.L99:
 609:../samuel/samuel_io.c ****    }
 610:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2877              	 .loc 3 610 0
 2878 0060 4E4B     	 ldr r3,.L103+8
 2879 0062 1B78     	 ldrb r3,[r3]
 2880 0064 002B     	 cmp r3,#0
 2881 0066 1ED1     	 bne .L100
 611:../samuel/samuel_io.c ****    {
 612:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2882              	 .loc 3 612 0
 2883 0068 4F4B     	 ldr r3,.L103+20
 2884 006a 5A78     	 ldrb r2,[r3,#1]
 2885 006c 4F4B     	 ldr r3,.L103+24
 2886 006e 1A70     	 strb r2,[r3]
 613:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2887              	 .loc 3 613 0
 2888 0070 4D4B     	 ldr r3,.L103+20
 2889 0072 9A78     	 ldrb r2,[r3,#2]
 2890 0074 4E4B     	 ldr r3,.L103+28
 2891 0076 1A70     	 strb r2,[r3]
 614:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2892              	 .loc 3 614 0
 2893 0078 4B4B     	 ldr r3,.L103+20
 2894 007a DB78     	 ldrb r3,[r3,#3]
 2895 007c 9BB2     	 uxth r3,r3
 2896 007e 1B02     	 lsl r3,r3,#8
 2897 0080 9AB2     	 uxth r2,r3
 2898 0082 494B     	 ldr r3,.L103+20
 2899 0084 1B79     	 ldrb r3,[r3,#4]
 2900 0086 9BB2     	 uxth r3,r3
 2901 0088 D318     	 add r3,r2,r3
 2902 008a 9AB2     	 uxth r2,r3
 2903 008c 494B     	 ldr r3,.L103+32
 2904 008e 1A80     	 strh r2,[r3]
 615:../samuel/samuel_io.c **** 
 616:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2905              	 .loc 3 616 0
 2906 0090 494B     	 ldr r3,.L103+36
 2907 0092 0520     	 mov r0,#5
 2908 0094 0021     	 mov r1,#0
 2909 0096 1A1C     	 mov r2,r3
 2910 0098 2023     	 mov r3,#32
 2911 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2912 009e 031C     	 mov r3,r0
 2913 00a0 1A1C     	 mov r2,r3
 2914 00a2 3E4B     	 ldr r3,.L103+8
 2915 00a4 1A70     	 strb r2,[r3]
 2916              	.L100:
 617:../samuel/samuel_io.c ****    }
 618:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2917              	 .loc 3 618 0
 2918 00a6 3D4B     	 ldr r3,.L103+8
 2919 00a8 1B78     	 ldrb r3,[r3]
 2920 00aa 002B     	 cmp r3,#0
 2921 00ac 67D1     	 bne .L101
 619:../samuel/samuel_io.c ****    {
 620:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2922              	 .loc 3 620 0
 2923 00ae 424B     	 ldr r3,.L103+36
 2924 00b0 5A78     	 ldrb r2,[r3,#1]
 2925 00b2 424B     	 ldr r3,.L103+40
 2926 00b4 1A70     	 strb r2,[r3]
 621:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2927              	 .loc 3 621 0
 2928 00b6 404B     	 ldr r3,.L103+36
 2929 00b8 9A78     	 ldrb r2,[r3,#2]
 2930 00ba 414B     	 ldr r3,.L103+44
 2931 00bc 1A70     	 strb r2,[r3]
 622:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2932              	 .loc 3 622 0
 2933 00be 3E4B     	 ldr r3,.L103+36
 2934 00c0 DB78     	 ldrb r3,[r3,#3]
 2935 00c2 9BB2     	 uxth r3,r3
 2936 00c4 1B02     	 lsl r3,r3,#8
 2937 00c6 9AB2     	 uxth r2,r3
 2938 00c8 3B4B     	 ldr r3,.L103+36
 2939 00ca 1B79     	 ldrb r3,[r3,#4]
 2940 00cc 9BB2     	 uxth r3,r3
 2941 00ce D318     	 add r3,r2,r3
 2942 00d0 9AB2     	 uxth r2,r3
 2943 00d2 3C4B     	 ldr r3,.L103+48
 2944 00d4 1A80     	 strh r2,[r3]
 623:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2945              	 .loc 3 623 0
 2946 00d6 384B     	 ldr r3,.L103+36
 2947 00d8 5B79     	 ldrb r3,[r3,#5]
 2948 00da 9BB2     	 uxth r3,r3
 2949 00dc 1B02     	 lsl r3,r3,#8
 2950 00de 9AB2     	 uxth r2,r3
 2951 00e0 354B     	 ldr r3,.L103+36
 2952 00e2 9B79     	 ldrb r3,[r3,#6]
 2953 00e4 9BB2     	 uxth r3,r3
 2954 00e6 D318     	 add r3,r2,r3
 2955 00e8 9AB2     	 uxth r2,r3
 2956 00ea 374B     	 ldr r3,.L103+52
 2957 00ec 1A80     	 strh r2,[r3]
 624:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2958              	 .loc 3 624 0
 2959 00ee 324B     	 ldr r3,.L103+36
 2960 00f0 DB79     	 ldrb r3,[r3,#7]
 2961 00f2 9BB2     	 uxth r3,r3
 2962 00f4 1B02     	 lsl r3,r3,#8
 2963 00f6 9AB2     	 uxth r2,r3
 2964 00f8 2F4B     	 ldr r3,.L103+36
 2965 00fa 1B7A     	 ldrb r3,[r3,#8]
 2966 00fc 9BB2     	 uxth r3,r3
 2967 00fe D318     	 add r3,r2,r3
 2968 0100 9AB2     	 uxth r2,r3
 2969 0102 324B     	 ldr r3,.L103+56
 2970 0104 1A80     	 strh r2,[r3]
 625:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2971              	 .loc 3 625 0
 2972 0106 2C4B     	 ldr r3,.L103+36
 2973 0108 5B7A     	 ldrb r3,[r3,#9]
 2974 010a 9BB2     	 uxth r3,r3
 2975 010c 1B02     	 lsl r3,r3,#8
 2976 010e 9AB2     	 uxth r2,r3
 2977 0110 294B     	 ldr r3,.L103+36
 2978 0112 9B7A     	 ldrb r3,[r3,#10]
 2979 0114 9BB2     	 uxth r3,r3
 2980 0116 D318     	 add r3,r2,r3
 2981 0118 9AB2     	 uxth r2,r3
 2982 011a 2D4B     	 ldr r3,.L103+60
 2983 011c 1A80     	 strh r2,[r3]
 626:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2984              	 .loc 3 626 0
 2985 011e 264B     	 ldr r3,.L103+36
 2986 0120 DB7A     	 ldrb r3,[r3,#11]
 2987 0122 9BB2     	 uxth r3,r3
 2988 0124 1B02     	 lsl r3,r3,#8
 2989 0126 9AB2     	 uxth r2,r3
 2990 0128 234B     	 ldr r3,.L103+36
 2991 012a 1B7B     	 ldrb r3,[r3,#12]
 2992 012c 9BB2     	 uxth r3,r3
 2993 012e D318     	 add r3,r2,r3
 2994 0130 9AB2     	 uxth r2,r3
 2995 0132 284B     	 ldr r3,.L103+64
 2996 0134 1A80     	 strh r2,[r3]
 627:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2997              	 .loc 3 627 0
 2998 0136 204B     	 ldr r3,.L103+36
 2999 0138 5B7B     	 ldrb r3,[r3,#13]
 3000 013a 9BB2     	 uxth r3,r3
 3001 013c 1B02     	 lsl r3,r3,#8
 3002 013e 9AB2     	 uxth r2,r3
 3003 0140 1D4B     	 ldr r3,.L103+36
 3004 0142 9B7B     	 ldrb r3,[r3,#14]
 3005 0144 9BB2     	 uxth r3,r3
 3006 0146 D318     	 add r3,r2,r3
 3007 0148 9AB2     	 uxth r2,r3
 3008 014a 234B     	 ldr r3,.L103+68
 3009 014c 1A80     	 strh r2,[r3]
 628:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 3010              	 .loc 3 628 0
 3011 014e 1A4B     	 ldr r3,.L103+36
 3012 0150 DB7B     	 ldrb r3,[r3,#15]
 3013 0152 9BB2     	 uxth r3,r3
 3014 0154 1B02     	 lsl r3,r3,#8
 3015 0156 9AB2     	 uxth r2,r3
 3016 0158 174B     	 ldr r3,.L103+36
 3017 015a 1B7C     	 ldrb r3,[r3,#16]
 3018 015c 9BB2     	 uxth r3,r3
 3019 015e D318     	 add r3,r2,r3
 3020 0160 9AB2     	 uxth r2,r3
 3021 0162 1E4B     	 ldr r3,.L103+72
 3022 0164 1A80     	 strh r2,[r3]
 629:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 3023              	 .loc 3 629 0
 3024 0166 144B     	 ldr r3,.L103+36
 3025 0168 5B7C     	 ldrb r3,[r3,#17]
 3026 016a 9BB2     	 uxth r3,r3
 3027 016c 1B02     	 lsl r3,r3,#8
 3028 016e 9AB2     	 uxth r2,r3
 3029 0170 114B     	 ldr r3,.L103+36
 3030 0172 9B7C     	 ldrb r3,[r3,#18]
 3031 0174 9BB2     	 uxth r3,r3
 3032 0176 D318     	 add r3,r2,r3
 3033 0178 9AB2     	 uxth r2,r3
 3034 017a 194B     	 ldr r3,.L103+76
 3035 017c 1A80     	 strh r2,[r3]
 3036              	.L101:
 630:../samuel/samuel_io.c **** 
 631:../samuel/samuel_io.c ****    }
 632:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 3037              	 .loc 3 632 0
 3038 017e 054B     	 ldr r3,.L103
 3039 0180 1B78     	 ldrb r3,[r3]
 3040 0182 1A1C     	 mov r2,r3
 3041 0184 054B     	 ldr r3,.L103+8
 3042 0186 1B78     	 ldrb r3,[r3]
 3043 0188 1B01     	 lsl r3,r3,#4
 3044 018a D318     	 add r3,r2,r3
 633:../samuel/samuel_io.c ****  }
 3045              	 .loc 3 633 0
 3046 018c 181C     	 mov r0,r3
 3047 018e BD46     	 mov sp,r7
 3048              	 
 3049 0190 80BD     	 pop {r7,pc}
 3050              	.L104:
 3051 0192 C046     	 .align 2
 3052              	.L103:
 3053 0194 00000000 	 .word EEprom_status
 3054 0198 00000000 	 .word ReadBuffer1
 3055 019c 00000000 	 .word oper_status
 3056 01a0 00000000 	 .word Ser_NrH
 3057 01a4 00000000 	 .word Ser_NrL
 3058 01a8 00000000 	 .word ReadBuffer2
 3059 01ac 00000000 	 .word node_id_alt
 3060 01b0 00000000 	 .word node_id
 3061 01b4 00000000 	 .word node_id_16bit
 3062 01b8 00000000 	 .word ReadBuffer3
 3063 01bc 00000000 	 .word RegOnOff
 3064 01c0 00000000 	 .word RegOnOff2
 3065 01c4 00000000 	 .word dimAkt_Ww
 3066 01c8 00000000 	 .word dimAkt_Cw
 3067 01cc 00000000 	 .word dimOff_Ww
 3068 01d0 00000000 	 .word dimOff_Cw
 3069 01d4 00000000 	 .word dimNorm1_Ww
 3070 01d8 00000000 	 .word dimNorm1_Cw
 3071 01dc 00000000 	 .word dimNorm2_Ww
 3072 01e0 00000000 	 .word dimNorm2_Cw
 3073              	 .cfi_endproc
 3074              	.LFE314:
 3076              	 .section .text.readSerNrEEprom,"ax",%progbits
 3077              	 .align 2
 3078              	 .global readSerNrEEprom
 3079              	 .code 16
 3080              	 .thumb_func
 3082              	readSerNrEEprom:
 3083              	.LFB315:
 634:../samuel/samuel_io.c ****  //------------------------------------------------
 635:../samuel/samuel_io.c **** 
 636:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 637:../samuel/samuel_io.c ****  {
 3084              	 .loc 3 637 0
 3085              	 .cfi_startproc
 3086 0000 80B5     	 push {r7,lr}
 3087              	.LCFI62:
 3088              	 .cfi_def_cfa_offset 8
 3089              	 .cfi_offset 7,-8
 3090              	 .cfi_offset 14,-4
 3091 0002 00AF     	 add r7,sp,#0
 3092              	.LCFI63:
 3093              	 .cfi_def_cfa_register 7
 638:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3094              	 .loc 3 638 0
 3095 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3096 0008 031C     	 mov r3,r0
 3097 000a 1A1C     	 mov r2,r3
 3098 000c 0D4B     	 ldr r3,.L108
 3099 000e 1A70     	 strb r2,[r3]
 639:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3100              	 .loc 3 639 0
 3101 0010 0C4B     	 ldr r3,.L108
 3102 0012 1B78     	 ldrb r3,[r3]
 3103 0014 032B     	 cmp r3,#3
 3104 0016 0AD1     	 bne .L106
 640:../samuel/samuel_io.c **** 	 {
 641:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 3105              	 .loc 3 641 0
 3106 0018 0B4B     	 ldr r3,.L108+4
 3107 001a 0120     	 mov r0,#1
 3108 001c 0021     	 mov r1,#0
 3109 001e 1A1C     	 mov r2,r3
 3110 0020 1023     	 mov r3,#16
 3111 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3112 0026 031C     	 mov r3,r0
 3113 0028 1A1C     	 mov r2,r3
 3114 002a 084B     	 ldr r3,.L108+8
 3115 002c 1A70     	 strb r2,[r3]
 3116              	.L106:
 642:../samuel/samuel_io.c ****      }
 643:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 3117              	 .loc 3 643 0
 3118 002e 054B     	 ldr r3,.L108
 3119 0030 1B78     	 ldrb r3,[r3]
 3120 0032 1A1C     	 mov r2,r3
 3121 0034 054B     	 ldr r3,.L108+8
 3122 0036 1B78     	 ldrb r3,[r3]
 3123 0038 1B01     	 lsl r3,r3,#4
 3124 003a D318     	 add r3,r2,r3
 644:../samuel/samuel_io.c ****  }
 3125              	 .loc 3 644 0
 3126 003c 181C     	 mov r0,r3
 3127 003e BD46     	 mov sp,r7
 3128              	 
 3129 0040 80BD     	 pop {r7,pc}
 3130              	.L109:
 3131 0042 C046     	 .align 2
 3132              	.L108:
 3133 0044 00000000 	 .word EEprom_status
 3134 0048 00000000 	 .word ReadBuffer1
 3135 004c 00000000 	 .word oper_status
 3136              	 .cfi_endproc
 3137              	.LFE315:
 3139              	 .section .text.readNodeIdEEprom,"ax",%progbits
 3140              	 .align 2
 3141              	 .global readNodeIdEEprom
 3142              	 .code 16
 3143              	 .thumb_func
 3145              	readNodeIdEEprom:
 3146              	.LFB316:
 645:../samuel/samuel_io.c ****  //------------------------------------------------
 646:../samuel/samuel_io.c **** 
 647:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 648:../samuel/samuel_io.c ****  {
 3147              	 .loc 3 648 0
 3148              	 .cfi_startproc
 3149 0000 80B5     	 push {r7,lr}
 3150              	.LCFI64:
 3151              	 .cfi_def_cfa_offset 8
 3152              	 .cfi_offset 7,-8
 3153              	 .cfi_offset 14,-4
 3154 0002 00AF     	 add r7,sp,#0
 3155              	.LCFI65:
 3156              	 .cfi_def_cfa_register 7
 649:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3157              	 .loc 3 649 0
 3158 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3159 0008 031C     	 mov r3,r0
 3160 000a 1A1C     	 mov r2,r3
 3161 000c 0D4B     	 ldr r3,.L113
 3162 000e 1A70     	 strb r2,[r3]
 650:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3163              	 .loc 3 650 0
 3164 0010 0C4B     	 ldr r3,.L113
 3165 0012 1B78     	 ldrb r3,[r3]
 3166 0014 032B     	 cmp r3,#3
 3167 0016 0AD1     	 bne .L111
 651:../samuel/samuel_io.c **** 	 {
 652:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 3168              	 .loc 3 652 0
 3169 0018 0B4B     	 ldr r3,.L113+4
 3170 001a 0220     	 mov r0,#2
 3171 001c 0021     	 mov r1,#0
 3172 001e 1A1C     	 mov r2,r3
 3173 0020 1023     	 mov r3,#16
 3174 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3175 0026 031C     	 mov r3,r0
 3176 0028 1A1C     	 mov r2,r3
 3177 002a 084B     	 ldr r3,.L113+8
 3178 002c 1A70     	 strb r2,[r3]
 3179              	.L111:
 653:../samuel/samuel_io.c ****      }
 654:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3180              	 .loc 3 654 0
 3181 002e 054B     	 ldr r3,.L113
 3182 0030 1B78     	 ldrb r3,[r3]
 3183 0032 1A1C     	 mov r2,r3
 3184 0034 054B     	 ldr r3,.L113+8
 3185 0036 1B78     	 ldrb r3,[r3]
 3186 0038 1B01     	 lsl r3,r3,#4
 3187 003a D318     	 add r3,r2,r3
 655:../samuel/samuel_io.c ****  }
 3188              	 .loc 3 655 0
 3189 003c 181C     	 mov r0,r3
 3190 003e BD46     	 mov sp,r7
 3191              	 
 3192 0040 80BD     	 pop {r7,pc}
 3193              	.L114:
 3194 0042 C046     	 .align 2
 3195              	.L113:
 3196 0044 00000000 	 .word EEprom_status
 3197 0048 00000000 	 .word ReadBuffer2
 3198 004c 00000000 	 .word oper_status
 3199              	 .cfi_endproc
 3200              	.LFE316:
 3202              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 3203              	 .align 2
 3204              	 .global read_akt_light_EEprom
 3205              	 .code 16
 3206              	 .thumb_func
 3208              	read_akt_light_EEprom:
 3209              	.LFB317:
 656:../samuel/samuel_io.c **** 
 657:../samuel/samuel_io.c ****  //------------------------------------------------
 658:../samuel/samuel_io.c **** 
 659:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 660:../samuel/samuel_io.c ****  {
 3210              	 .loc 3 660 0
 3211              	 .cfi_startproc
 3212 0000 80B5     	 push {r7,lr}
 3213              	.LCFI66:
 3214              	 .cfi_def_cfa_offset 8
 3215              	 .cfi_offset 7,-8
 3216              	 .cfi_offset 14,-4
 3217 0002 00AF     	 add r7,sp,#0
 3218              	.LCFI67:
 3219              	 .cfi_def_cfa_register 7
 661:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3220              	 .loc 3 661 0
 3221 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3222 0008 031C     	 mov r3,r0
 3223 000a 1A1C     	 mov r2,r3
 3224 000c 0D4B     	 ldr r3,.L118
 3225 000e 1A70     	 strb r2,[r3]
 662:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3226              	 .loc 3 662 0
 3227 0010 0C4B     	 ldr r3,.L118
 3228 0012 1B78     	 ldrb r3,[r3]
 3229 0014 032B     	 cmp r3,#3
 3230 0016 0AD1     	 bne .L116
 663:../samuel/samuel_io.c **** 	 {
 664:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 3231              	 .loc 3 664 0
 3232 0018 0B4B     	 ldr r3,.L118+4
 3233 001a 0420     	 mov r0,#4
 3234 001c 0021     	 mov r1,#0
 3235 001e 1A1C     	 mov r2,r3
 3236 0020 1023     	 mov r3,#16
 3237 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3238 0026 031C     	 mov r3,r0
 3239 0028 1A1C     	 mov r2,r3
 3240 002a 084B     	 ldr r3,.L118+8
 3241 002c 1A70     	 strb r2,[r3]
 3242              	.L116:
 665:../samuel/samuel_io.c ****      }
 666:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3243              	 .loc 3 666 0
 3244 002e 054B     	 ldr r3,.L118
 3245 0030 1B78     	 ldrb r3,[r3]
 3246 0032 1A1C     	 mov r2,r3
 3247 0034 054B     	 ldr r3,.L118+8
 3248 0036 1B78     	 ldrb r3,[r3]
 3249 0038 1B01     	 lsl r3,r3,#4
 3250 003a D318     	 add r3,r2,r3
 667:../samuel/samuel_io.c ****  }
 3251              	 .loc 3 667 0
 3252 003c 181C     	 mov r0,r3
 3253 003e BD46     	 mov sp,r7
 3254              	 
 3255 0040 80BD     	 pop {r7,pc}
 3256              	.L119:
 3257 0042 C046     	 .align 2
 3258              	.L118:
 3259 0044 00000000 	 .word EEprom_status
 3260 0048 00000000 	 .word ReadBuffer2
 3261 004c 00000000 	 .word oper_status
 3262              	 .cfi_endproc
 3263              	.LFE317:
 3265              	 .section .text.read_off_light_EEprom,"ax",%progbits
 3266              	 .align 2
 3267              	 .global read_off_light_EEprom
 3268              	 .code 16
 3269              	 .thumb_func
 3271              	read_off_light_EEprom:
 3272              	.LFB318:
 668:../samuel/samuel_io.c ****  //------------------------------------------------
 669:../samuel/samuel_io.c **** 
 670:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 671:../samuel/samuel_io.c ****  {
 3273              	 .loc 3 671 0
 3274              	 .cfi_startproc
 3275 0000 80B5     	 push {r7,lr}
 3276              	.LCFI68:
 3277              	 .cfi_def_cfa_offset 8
 3278              	 .cfi_offset 7,-8
 3279              	 .cfi_offset 14,-4
 3280 0002 00AF     	 add r7,sp,#0
 3281              	.LCFI69:
 3282              	 .cfi_def_cfa_register 7
 672:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3283              	 .loc 3 672 0
 3284 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3285 0008 031C     	 mov r3,r0
 3286 000a 1A1C     	 mov r2,r3
 3287 000c 0D4B     	 ldr r3,.L123
 3288 000e 1A70     	 strb r2,[r3]
 673:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3289              	 .loc 3 673 0
 3290 0010 0C4B     	 ldr r3,.L123
 3291 0012 1B78     	 ldrb r3,[r3]
 3292 0014 032B     	 cmp r3,#3
 3293 0016 0AD1     	 bne .L121
 674:../samuel/samuel_io.c **** 	 {
 675:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 3294              	 .loc 3 675 0
 3295 0018 0B4B     	 ldr r3,.L123+4
 3296 001a 0520     	 mov r0,#5
 3297 001c 0021     	 mov r1,#0
 3298 001e 1A1C     	 mov r2,r3
 3299 0020 1023     	 mov r3,#16
 3300 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3301 0026 031C     	 mov r3,r0
 3302 0028 1A1C     	 mov r2,r3
 3303 002a 084B     	 ldr r3,.L123+8
 3304 002c 1A70     	 strb r2,[r3]
 3305              	.L121:
 676:../samuel/samuel_io.c ****      }
 677:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3306              	 .loc 3 677 0
 3307 002e 054B     	 ldr r3,.L123
 3308 0030 1B78     	 ldrb r3,[r3]
 3309 0032 1A1C     	 mov r2,r3
 3310 0034 054B     	 ldr r3,.L123+8
 3311 0036 1B78     	 ldrb r3,[r3]
 3312 0038 1B01     	 lsl r3,r3,#4
 3313 003a D318     	 add r3,r2,r3
 678:../samuel/samuel_io.c ****  }
 3314              	 .loc 3 678 0
 3315 003c 181C     	 mov r0,r3
 3316 003e BD46     	 mov sp,r7
 3317              	 
 3318 0040 80BD     	 pop {r7,pc}
 3319              	.L124:
 3320 0042 C046     	 .align 2
 3321              	.L123:
 3322 0044 00000000 	 .word EEprom_status
 3323 0048 00000000 	 .word ReadBuffer2
 3324 004c 00000000 	 .word oper_status
 3325              	 .cfi_endproc
 3326              	.LFE318:
 3328              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 3329              	 .align 2
 3330              	 .global writeSernr_B1_EEprom
 3331              	 .code 16
 3332              	 .thumb_func
 3334              	writeSernr_B1_EEprom:
 3335              	.LFB319:
 679:../samuel/samuel_io.c **** 
 680:../samuel/samuel_io.c ****  //------------------------------------------------
 681:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 682:../samuel/samuel_io.c ****  {
 3336              	 .loc 3 682 0
 3337              	 .cfi_startproc
 3338 0000 80B5     	 push {r7,lr}
 3339              	.LCFI70:
 3340              	 .cfi_def_cfa_offset 8
 3341              	 .cfi_offset 7,-8
 3342              	 .cfi_offset 14,-4
 3343 0002 82B0     	 sub sp,sp,#8
 3344              	.LCFI71:
 3345              	 .cfi_def_cfa_offset 16
 3346 0004 00AF     	 add r7,sp,#0
 3347              	.LCFI72:
 3348              	 .cfi_def_cfa_register 7
 683:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3349              	 .loc 3 683 0
 3350 0006 8023     	 mov r3,#128
 3351 0008 7B60     	 str r3,[r7,#4]
 684:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3352              	 .loc 3 684 0
 3353 000a 144B     	 ldr r3,.L129
 3354 000c 1A88     	 ldrh r2,[r3]
 3355 000e BA23     	 mov r3,#186
 3356 0010 1B01     	 lsl r3,r3,#4
 3357 0012 9A42     	 cmp r2,r3
 3358 0014 14D9     	 bls .L126
 685:../samuel/samuel_io.c ****   {
 686:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3359              	 .loc 3 686 0
 3360 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3361 001a 031C     	 mov r3,r0
 3362 001c 1A1C     	 mov r2,r3
 3363 001e 104B     	 ldr r3,.L129+4
 3364 0020 1A70     	 strb r2,[r3]
 687:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3365              	 .loc 3 687 0
 3366 0022 0F4B     	 ldr r3,.L129+4
 3367 0024 1B78     	 ldrb r3,[r3]
 3368 0026 032B     	 cmp r3,#3
 3369 0028 08D1     	 bne .L127
 688:../samuel/samuel_io.c ****     {
 689:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3370              	 .loc 3 689 0
 3371 002a 0E4B     	 ldr r3,.L129+8
 3372 002c 0120     	 mov r0,#1
 3373 002e 191C     	 mov r1,r3
 3374 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3375 0034 031C     	 mov r3,r0
 3376 0036 1A1C     	 mov r2,r3
 3377 0038 0B4B     	 ldr r3,.L129+12
 3378 003a 1A70     	 strb r2,[r3]
 3379              	.L127:
 690:../samuel/samuel_io.c ****     }
 691:../samuel/samuel_io.c **** 	 a = 0;
 3380              	 .loc 3 691 0
 3381 003c 0023     	 mov r3,#0
 3382 003e 7B60     	 str r3,[r7,#4]
 3383              	.L126:
 692:../samuel/samuel_io.c ****   }
 693:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3384              	 .loc 3 693 0
 3385 0040 074B     	 ldr r3,.L129+4
 3386 0042 1B78     	 ldrb r3,[r3]
 3387 0044 1A1C     	 mov r2,r3
 3388 0046 084B     	 ldr r3,.L129+12
 3389 0048 1B78     	 ldrb r3,[r3]
 3390 004a 1B01     	 lsl r3,r3,#4
 3391 004c D218     	 add r2,r2,r3
 3392 004e 7B68     	 ldr r3,[r7,#4]
 3393 0050 D318     	 add r3,r2,r3
 694:../samuel/samuel_io.c ****  }
 3394              	 .loc 3 694 0
 3395 0052 181C     	 mov r0,r3
 3396 0054 BD46     	 mov sp,r7
 3397 0056 02B0     	 add sp,sp,#8
 3398              	 
 3399 0058 80BD     	 pop {r7,pc}
 3400              	.L130:
 3401 005a C046     	 .align 2
 3402              	.L129:
 3403 005c 00000000 	 .word resultB
 3404 0060 00000000 	 .word EEprom_status
 3405 0064 00000000 	 .word ReadBuffer1
 3406 0068 00000000 	 .word oper_status
 3407              	 .cfi_endproc
 3408              	.LFE319:
 3410              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3411              	 .align 2
 3412              	 .global writeNodeid_B2_EEprom
 3413              	 .code 16
 3414              	 .thumb_func
 3416              	writeNodeid_B2_EEprom:
 3417              	.LFB320:
 695:../samuel/samuel_io.c ****  //------------------------------------------------
 696:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 697:../samuel/samuel_io.c ****  {
 3418              	 .loc 3 697 0
 3419              	 .cfi_startproc
 3420 0000 80B5     	 push {r7,lr}
 3421              	.LCFI73:
 3422              	 .cfi_def_cfa_offset 8
 3423              	 .cfi_offset 7,-8
 3424              	 .cfi_offset 14,-4
 3425 0002 82B0     	 sub sp,sp,#8
 3426              	.LCFI74:
 3427              	 .cfi_def_cfa_offset 16
 3428 0004 00AF     	 add r7,sp,#0
 3429              	.LCFI75:
 3430              	 .cfi_def_cfa_register 7
 698:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3431              	 .loc 3 698 0
 3432 0006 8023     	 mov r3,#128
 3433 0008 7B60     	 str r3,[r7,#4]
 699:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3434              	 .loc 3 699 0
 3435 000a 144B     	 ldr r3,.L135
 3436 000c 1A88     	 ldrh r2,[r3]
 3437 000e BA23     	 mov r3,#186
 3438 0010 1B01     	 lsl r3,r3,#4
 3439 0012 9A42     	 cmp r2,r3
 3440 0014 14D9     	 bls .L132
 700:../samuel/samuel_io.c ****     {
 701:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3441              	 .loc 3 701 0
 3442 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3443 001a 031C     	 mov r3,r0
 3444 001c 1A1C     	 mov r2,r3
 3445 001e 104B     	 ldr r3,.L135+4
 3446 0020 1A70     	 strb r2,[r3]
 702:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3447              	 .loc 3 702 0
 3448 0022 0F4B     	 ldr r3,.L135+4
 3449 0024 1B78     	 ldrb r3,[r3]
 3450 0026 032B     	 cmp r3,#3
 3451 0028 08D1     	 bne .L133
 703:../samuel/samuel_io.c ****       {
 704:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3452              	 .loc 3 704 0
 3453 002a 0E4B     	 ldr r3,.L135+8
 3454 002c 0220     	 mov r0,#2
 3455 002e 191C     	 mov r1,r3
 3456 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3457 0034 031C     	 mov r3,r0
 3458 0036 1A1C     	 mov r2,r3
 3459 0038 0B4B     	 ldr r3,.L135+12
 3460 003a 1A70     	 strb r2,[r3]
 3461              	.L133:
 705:../samuel/samuel_io.c ****       }
 706:../samuel/samuel_io.c **** 	 a = 0;
 3462              	 .loc 3 706 0
 3463 003c 0023     	 mov r3,#0
 3464 003e 7B60     	 str r3,[r7,#4]
 3465              	.L132:
 707:../samuel/samuel_io.c ****     }
 708:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3466              	 .loc 3 708 0
 3467 0040 074B     	 ldr r3,.L135+4
 3468 0042 1B78     	 ldrb r3,[r3]
 3469 0044 1A1C     	 mov r2,r3
 3470 0046 084B     	 ldr r3,.L135+12
 3471 0048 1B78     	 ldrb r3,[r3]
 3472 004a 1B01     	 lsl r3,r3,#4
 3473 004c D218     	 add r2,r2,r3
 3474 004e 7B68     	 ldr r3,[r7,#4]
 3475 0050 D318     	 add r3,r2,r3
 709:../samuel/samuel_io.c ****  }
 3476              	 .loc 3 709 0
 3477 0052 181C     	 mov r0,r3
 3478 0054 BD46     	 mov sp,r7
 3479 0056 02B0     	 add sp,sp,#8
 3480              	 
 3481 0058 80BD     	 pop {r7,pc}
 3482              	.L136:
 3483 005a C046     	 .align 2
 3484              	.L135:
 3485 005c 00000000 	 .word resultB
 3486 0060 00000000 	 .word EEprom_status
 3487 0064 00000000 	 .word ReadBuffer2
 3488 0068 00000000 	 .word oper_status
 3489              	 .cfi_endproc
 3490              	.LFE320:
 3492              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3493              	 .align 2
 3494              	 .global writeLamp_data_B3_EEprom
 3495              	 .code 16
 3496              	 .thumb_func
 3498              	writeLamp_data_B3_EEprom:
 3499              	.LFB321:
 710:../samuel/samuel_io.c ****  //----------------------------
 711:../samuel/samuel_io.c **** 
 712:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 713:../samuel/samuel_io.c ****  {
 3500              	 .loc 3 713 0
 3501              	 .cfi_startproc
 3502 0000 80B5     	 push {r7,lr}
 3503              	.LCFI76:
 3504              	 .cfi_def_cfa_offset 8
 3505              	 .cfi_offset 7,-8
 3506              	 .cfi_offset 14,-4
 3507 0002 82B0     	 sub sp,sp,#8
 3508              	.LCFI77:
 3509              	 .cfi_def_cfa_offset 16
 3510 0004 00AF     	 add r7,sp,#0
 3511              	.LCFI78:
 3512              	 .cfi_def_cfa_register 7
 714:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3513              	 .loc 3 714 0
 3514 0006 8023     	 mov r3,#128
 3515 0008 7B60     	 str r3,[r7,#4]
 715:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3516              	 .loc 3 715 0
 3517 000a 144B     	 ldr r3,.L141
 3518 000c 1A88     	 ldrh r2,[r3]
 3519 000e BA23     	 mov r3,#186
 3520 0010 1B01     	 lsl r3,r3,#4
 3521 0012 9A42     	 cmp r2,r3
 3522 0014 14D9     	 bls .L138
 716:../samuel/samuel_io.c ****   {
 717:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3523              	 .loc 3 717 0
 3524 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3525 001a 031C     	 mov r3,r0
 3526 001c 1A1C     	 mov r2,r3
 3527 001e 104B     	 ldr r3,.L141+4
 3528 0020 1A70     	 strb r2,[r3]
 718:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3529              	 .loc 3 718 0
 3530 0022 0F4B     	 ldr r3,.L141+4
 3531 0024 1B78     	 ldrb r3,[r3]
 3532 0026 032B     	 cmp r3,#3
 3533 0028 08D1     	 bne .L139
 719:../samuel/samuel_io.c ****     {
 720:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3534              	 .loc 3 720 0
 3535 002a 0E4B     	 ldr r3,.L141+8
 3536 002c 0320     	 mov r0,#3
 3537 002e 191C     	 mov r1,r3
 3538 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3539 0034 031C     	 mov r3,r0
 3540 0036 1A1C     	 mov r2,r3
 3541 0038 0B4B     	 ldr r3,.L141+12
 3542 003a 1A70     	 strb r2,[r3]
 3543              	.L139:
 721:../samuel/samuel_io.c ****     }
 722:../samuel/samuel_io.c **** 	 a = 0;
 3544              	 .loc 3 722 0
 3545 003c 0023     	 mov r3,#0
 3546 003e 7B60     	 str r3,[r7,#4]
 3547              	.L138:
 723:../samuel/samuel_io.c ****   }
 724:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3548              	 .loc 3 724 0
 3549 0040 074B     	 ldr r3,.L141+4
 3550 0042 1B78     	 ldrb r3,[r3]
 3551 0044 1A1C     	 mov r2,r3
 3552 0046 084B     	 ldr r3,.L141+12
 3553 0048 1B78     	 ldrb r3,[r3]
 3554 004a 1B01     	 lsl r3,r3,#4
 3555 004c D218     	 add r2,r2,r3
 3556 004e 7B68     	 ldr r3,[r7,#4]
 3557 0050 D318     	 add r3,r2,r3
 725:../samuel/samuel_io.c ****  }
 3558              	 .loc 3 725 0
 3559 0052 181C     	 mov r0,r3
 3560 0054 BD46     	 mov sp,r7
 3561 0056 02B0     	 add sp,sp,#8
 3562              	 
 3563 0058 80BD     	 pop {r7,pc}
 3564              	.L142:
 3565 005a C046     	 .align 2
 3566              	.L141:
 3567 005c 00000000 	 .word resultB
 3568 0060 00000000 	 .word EEprom_status
 3569 0064 00000000 	 .word ReadBuffer3
 3570 0068 00000000 	 .word oper_status
 3571              	 .cfi_endproc
 3572              	.LFE321:
 3574              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3575              	 .align 2
 3576              	 .global writeakt_light_data_B4_EEprom
 3577              	 .code 16
 3578              	 .thumb_func
 3580              	writeakt_light_data_B4_EEprom:
 3581              	.LFB322:
 726:../samuel/samuel_io.c **** 
 727:../samuel/samuel_io.c ****  //------------------------------------------------
 728:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 729:../samuel/samuel_io.c ****  {
 3582              	 .loc 3 729 0
 3583              	 .cfi_startproc
 3584 0000 80B5     	 push {r7,lr}
 3585              	.LCFI79:
 3586              	 .cfi_def_cfa_offset 8
 3587              	 .cfi_offset 7,-8
 3588              	 .cfi_offset 14,-4
 3589 0002 82B0     	 sub sp,sp,#8
 3590              	.LCFI80:
 3591              	 .cfi_def_cfa_offset 16
 3592 0004 00AF     	 add r7,sp,#0
 3593              	.LCFI81:
 3594              	 .cfi_def_cfa_register 7
 730:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3595              	 .loc 3 730 0
 3596 0006 8023     	 mov r3,#128
 3597 0008 7B60     	 str r3,[r7,#4]
 731:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3598              	 .loc 3 731 0
 3599 000a 144B     	 ldr r3,.L147
 3600 000c 1A88     	 ldrh r2,[r3]
 3601 000e BA23     	 mov r3,#186
 3602 0010 1B01     	 lsl r3,r3,#4
 3603 0012 9A42     	 cmp r2,r3
 3604 0014 14D9     	 bls .L144
 732:../samuel/samuel_io.c ****     {
 733:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3605              	 .loc 3 733 0
 3606 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3607 001a 031C     	 mov r3,r0
 3608 001c 1A1C     	 mov r2,r3
 3609 001e 104B     	 ldr r3,.L147+4
 3610 0020 1A70     	 strb r2,[r3]
 734:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3611              	 .loc 3 734 0
 3612 0022 0F4B     	 ldr r3,.L147+4
 3613 0024 1B78     	 ldrb r3,[r3]
 3614 0026 032B     	 cmp r3,#3
 3615 0028 08D1     	 bne .L145
 735:../samuel/samuel_io.c ****       {
 736:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3616              	 .loc 3 736 0
 3617 002a 0E4B     	 ldr r3,.L147+8
 3618 002c 0420     	 mov r0,#4
 3619 002e 191C     	 mov r1,r3
 3620 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3621 0034 031C     	 mov r3,r0
 3622 0036 1A1C     	 mov r2,r3
 3623 0038 0B4B     	 ldr r3,.L147+12
 3624 003a 1A70     	 strb r2,[r3]
 3625              	.L145:
 737:../samuel/samuel_io.c ****       }
 738:../samuel/samuel_io.c **** 	 a = 0;
 3626              	 .loc 3 738 0
 3627 003c 0023     	 mov r3,#0
 3628 003e 7B60     	 str r3,[r7,#4]
 3629              	.L144:
 739:../samuel/samuel_io.c ****     }
 740:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3630              	 .loc 3 740 0
 3631 0040 074B     	 ldr r3,.L147+4
 3632 0042 1B78     	 ldrb r3,[r3]
 3633 0044 1A1C     	 mov r2,r3
 3634 0046 084B     	 ldr r3,.L147+12
 3635 0048 1B78     	 ldrb r3,[r3]
 3636 004a 1B01     	 lsl r3,r3,#4
 3637 004c D218     	 add r2,r2,r3
 3638 004e 7B68     	 ldr r3,[r7,#4]
 3639 0050 D318     	 add r3,r2,r3
 741:../samuel/samuel_io.c ****  }
 3640              	 .loc 3 741 0
 3641 0052 181C     	 mov r0,r3
 3642 0054 BD46     	 mov sp,r7
 3643 0056 02B0     	 add sp,sp,#8
 3644              	 
 3645 0058 80BD     	 pop {r7,pc}
 3646              	.L148:
 3647 005a C046     	 .align 2
 3648              	.L147:
 3649 005c 00000000 	 .word resultB
 3650 0060 00000000 	 .word EEprom_status
 3651 0064 00000000 	 .word ReadBuffer2
 3652 0068 00000000 	 .word oper_status
 3653              	 .cfi_endproc
 3654              	.LFE322:
 3656              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3657              	 .align 2
 3658              	 .global writeOff_light_B5_EEprom
 3659              	 .code 16
 3660              	 .thumb_func
 3662              	writeOff_light_B5_EEprom:
 3663              	.LFB323:
 742:../samuel/samuel_io.c ****  //----------------------------
 743:../samuel/samuel_io.c **** 
 744:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 745:../samuel/samuel_io.c ****  {
 3664              	 .loc 3 745 0
 3665              	 .cfi_startproc
 3666 0000 80B5     	 push {r7,lr}
 3667              	.LCFI82:
 3668              	 .cfi_def_cfa_offset 8
 3669              	 .cfi_offset 7,-8
 3670              	 .cfi_offset 14,-4
 3671 0002 82B0     	 sub sp,sp,#8
 3672              	.LCFI83:
 3673              	 .cfi_def_cfa_offset 16
 3674 0004 00AF     	 add r7,sp,#0
 3675              	.LCFI84:
 3676              	 .cfi_def_cfa_register 7
 746:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3677              	 .loc 3 746 0
 3678 0006 8023     	 mov r3,#128
 3679 0008 7B60     	 str r3,[r7,#4]
 747:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3680              	 .loc 3 747 0
 3681 000a 144B     	 ldr r3,.L153
 3682 000c 1A88     	 ldrh r2,[r3]
 3683 000e BA23     	 mov r3,#186
 3684 0010 1B01     	 lsl r3,r3,#4
 3685 0012 9A42     	 cmp r2,r3
 3686 0014 14D9     	 bls .L150
 748:../samuel/samuel_io.c ****   {
 749:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3687              	 .loc 3 749 0
 3688 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3689 001a 031C     	 mov r3,r0
 3690 001c 1A1C     	 mov r2,r3
 3691 001e 104B     	 ldr r3,.L153+4
 3692 0020 1A70     	 strb r2,[r3]
 750:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3693              	 .loc 3 750 0
 3694 0022 0F4B     	 ldr r3,.L153+4
 3695 0024 1B78     	 ldrb r3,[r3]
 3696 0026 032B     	 cmp r3,#3
 3697 0028 08D1     	 bne .L151
 751:../samuel/samuel_io.c ****     {
 752:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3698              	 .loc 3 752 0
 3699 002a 0E4B     	 ldr r3,.L153+8
 3700 002c 0520     	 mov r0,#5
 3701 002e 191C     	 mov r1,r3
 3702 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3703 0034 031C     	 mov r3,r0
 3704 0036 1A1C     	 mov r2,r3
 3705 0038 0B4B     	 ldr r3,.L153+12
 3706 003a 1A70     	 strb r2,[r3]
 3707              	.L151:
 753:../samuel/samuel_io.c **** 
 754:../samuel/samuel_io.c **** 
 755:../samuel/samuel_io.c **** 
 756:../samuel/samuel_io.c **** 
 757:../samuel/samuel_io.c ****     }
 758:../samuel/samuel_io.c **** 	 a = 0;
 3708              	 .loc 3 758 0
 3709 003c 0023     	 mov r3,#0
 3710 003e 7B60     	 str r3,[r7,#4]
 3711              	.L150:
 759:../samuel/samuel_io.c ****   }
 760:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3712              	 .loc 3 760 0
 3713 0040 074B     	 ldr r3,.L153+4
 3714 0042 1B78     	 ldrb r3,[r3]
 3715 0044 1A1C     	 mov r2,r3
 3716 0046 084B     	 ldr r3,.L153+12
 3717 0048 1B78     	 ldrb r3,[r3]
 3718 004a 1B01     	 lsl r3,r3,#4
 3719 004c D218     	 add r2,r2,r3
 3720 004e 7B68     	 ldr r3,[r7,#4]
 3721 0050 D318     	 add r3,r2,r3
 761:../samuel/samuel_io.c ****  }
 3722              	 .loc 3 761 0
 3723 0052 181C     	 mov r0,r3
 3724 0054 BD46     	 mov sp,r7
 3725 0056 02B0     	 add sp,sp,#8
 3726              	 
 3727 0058 80BD     	 pop {r7,pc}
 3728              	.L154:
 3729 005a C046     	 .align 2
 3730              	.L153:
 3731 005c 00000000 	 .word resultB
 3732 0060 00000000 	 .word EEprom_status
 3733 0064 00000000 	 .word ReadBuffer2
 3734 0068 00000000 	 .word oper_status
 3735              	 .cfi_endproc
 3736              	.LFE323:
 3738              	 .section .text.sysiniValueB1,"ax",%progbits
 3739              	 .align 2
 3740              	 .global sysiniValueB1
 3741              	 .code 16
 3742              	 .thumb_func
 3744              	sysiniValueB1:
 3745              	.LFB324:
 762:../samuel/samuel_io.c **** 
 763:../samuel/samuel_io.c **** ///#############################################
 764:../samuel/samuel_io.c ****  //initialisierung
 765:../samuel/samuel_io.c **** 
 766:../samuel/samuel_io.c **** 
 767:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 768:../samuel/samuel_io.c ****  {
 3746              	 .loc 3 768 0
 3747              	 .cfi_startproc
 3748 0000 80B5     	 push {r7,lr}
 3749              	.LCFI85:
 3750              	 .cfi_def_cfa_offset 8
 3751              	 .cfi_offset 7,-8
 3752              	 .cfi_offset 14,-4
 3753 0002 00AF     	 add r7,sp,#0
 3754              	.LCFI86:
 3755              	 .cfi_def_cfa_register 7
 769:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 770:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 771:../samuel/samuel_io.c **** 
 772:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3756              	 .loc 3 772 0
 3757 0004 124B     	 ldr r3,.L156
 3758 0006 134A     	 ldr r2,.L156+4
 3759 0008 1A80     	 strh r2,[r3]
 773:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3760              	 .loc 3 773 0
 3761 000a 134B     	 ldr r3,.L156+8
 3762 000c 134A     	 ldr r2,.L156+12
 3763 000e 1A80     	 strh r2,[r3]
 774:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3764              	 .loc 3 774 0
 3765 0010 134B     	 ldr r3,.L156+16
 3766 0012 FA22     	 mov r2,#250
 3767 0014 9200     	 lsl r2,r2,#2
 3768 0016 1A80     	 strh r2,[r3]
 775:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3769              	 .loc 3 775 0
 3770 0018 124B     	 ldr r3,.L156+20
 3771 001a FA22     	 mov r2,#250
 3772 001c 9200     	 lsl r2,r2,#2
 3773 001e 1A80     	 strh r2,[r3]
 776:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3774              	 .loc 3 776 0
 3775 0020 114B     	 ldr r3,.L156+24
 3776 0022 FA22     	 mov r2,#250
 3777 0024 9200     	 lsl r2,r2,#2
 3778 0026 1A80     	 strh r2,[r3]
 777:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3779              	 .loc 3 777 0
 3780 0028 104B     	 ldr r3,.L156+28
 3781 002a FA22     	 mov r2,#250
 3782 002c 9200     	 lsl r2,r2,#2
 3783 002e 1A80     	 strh r2,[r3]
 778:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3784              	 .loc 3 778 0
 3785 0030 0F4B     	 ldr r3,.L156+32
 3786 0032 FA22     	 mov r2,#250
 3787 0034 9200     	 lsl r2,r2,#2
 3788 0036 1A80     	 strh r2,[r3]
 779:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3789              	 .loc 3 779 0
 3790 0038 0E4B     	 ldr r3,.L156+36
 3791 003a FA22     	 mov r2,#250
 3792 003c 9200     	 lsl r2,r2,#2
 3793 003e 1A80     	 strh r2,[r3]
 780:../samuel/samuel_io.c **** 
 781:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3794              	 .loc 3 781 0
 3795 0040 0D4B     	 ldr r3,.L156+40
 3796 0042 0022     	 mov r2,#0
 3797 0044 1A80     	 strh r2,[r3]
 782:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3798              	 .loc 3 782 0
 3799 0046 0D4B     	 ldr r3,.L156+44
 3800 0048 0022     	 mov r2,#0
 3801 004a 1A80     	 strh r2,[r3]
 783:../samuel/samuel_io.c **** 
 784:../samuel/samuel_io.c ****  }
 3802              	 .loc 3 784 0
 3803 004c BD46     	 mov sp,r7
 3804              	 
 3805 004e 80BD     	 pop {r7,pc}
 3806              	.L157:
 3807              	 .align 2
 3808              	.L156:
 3809 0050 00000000 	 .word Ser_NrH
 3810 0054 7A7B0000 	 .word 31610
 3811 0058 00000000 	 .word Ser_NrL
 3812 005c 59580000 	 .word 22617
 3813 0060 00000000 	 .word Hard_Vers
 3814 0064 00000000 	 .word Soft_Vers
 3815 0068 00000000 	 .word GEH_Vers
 3816 006c 00000000 	 .word Mon_Vers
 3817 0070 00000000 	 .word LED_WW_Vers
 3818 0074 00000000 	 .word LED_CW_Vers
 3819 0078 00000000 	 .word neu_Ser_NrH
 3820 007c 00000000 	 .word neu_Ser_NrL
 3821              	 .cfi_endproc
 3822              	.LFE324:
 3824              	 .section .text.sysiniValueB2,"ax",%progbits
 3825              	 .align 2
 3826              	 .global sysiniValueB2
 3827              	 .code 16
 3828              	 .thumb_func
 3830              	sysiniValueB2:
 3831              	.LFB325:
 785:../samuel/samuel_io.c **** 
 786:../samuel/samuel_io.c **** 
 787:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 788:../samuel/samuel_io.c ****  {
 3832              	 .loc 3 788 0
 3833              	 .cfi_startproc
 3834 0000 80B5     	 push {r7,lr}
 3835              	.LCFI87:
 3836              	 .cfi_def_cfa_offset 8
 3837              	 .cfi_offset 7,-8
 3838              	 .cfi_offset 14,-4
 3839 0002 00AF     	 add r7,sp,#0
 3840              	.LCFI88:
 3841              	 .cfi_def_cfa_register 7
 789:../samuel/samuel_io.c ****            node_id = 1;
 3842              	 .loc 3 789 0
 3843 0004 114B     	 ldr r3,.L159
 3844 0006 0122     	 mov r2,#1
 3845 0008 1A70     	 strb r2,[r3]
 790:../samuel/samuel_io.c ****            node_id_alt = 1;
 3846              	 .loc 3 790 0
 3847 000a 114B     	 ldr r3,.L159+4
 3848 000c 0122     	 mov r2,#1
 3849 000e 1A70     	 strb r2,[r3]
 791:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3850              	 .loc 3 791 0
 3851 0010 104B     	 ldr r3,.L159+8
 3852 0012 114A     	 ldr r2,.L159+12
 3853 0014 1A80     	 strh r2,[r3]
 792:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3854              	 .loc 3 792 0
 3855 0016 114B     	 ldr r3,.L159+16
 3856 0018 FA22     	 mov r2,#250
 3857 001a D200     	 lsl r2,r2,#3
 3858 001c 1A80     	 strh r2,[r3]
 793:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3859              	 .loc 3 793 0
 3860 001e 104B     	 ldr r3,.L159+20
 3861 0020 FA22     	 mov r2,#250
 3862 0022 D200     	 lsl r2,r2,#3
 3863 0024 1A80     	 strh r2,[r3]
 794:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3864              	 .loc 3 794 0
 3865 0026 0F4B     	 ldr r3,.L159+24
 3866 0028 E122     	 mov r2,#225
 3867 002a 1201     	 lsl r2,r2,#4
 3868 002c 1A80     	 strh r2,[r3]
 795:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3869              	 .loc 3 795 0
 3870 002e 0E4B     	 ldr r3,.L159+28
 3871 0030 0E4A     	 ldr r2,.L159+32
 3872 0032 1A80     	 strh r2,[r3]
 796:../samuel/samuel_io.c **** 		   led_grupp=10;
 3873              	 .loc 3 796 0
 3874 0034 0E4B     	 ldr r3,.L159+36
 3875 0036 0A22     	 mov r2,#10
 3876 0038 1A80     	 strh r2,[r3]
 797:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3877              	 .loc 3 797 0
 3878 003a 0E4B     	 ldr r3,.L159+40
 3879 003c 3522     	 mov r2,#53
 3880 003e 1A80     	 strh r2,[r3]
 798:../samuel/samuel_io.c **** 
 799:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3881              	 .loc 3 799 0
 3882 0040 0D4B     	 ldr r3,.L159+44
 3883 0042 0122     	 mov r2,#1
 3884 0044 1A70     	 strb r2,[r3]
 800:../samuel/samuel_io.c ****  }
 3885              	 .loc 3 800 0
 3886 0046 BD46     	 mov sp,r7
 3887              	 
 3888 0048 80BD     	 pop {r7,pc}
 3889              	.L160:
 3890 004a C046     	 .align 2
 3891              	.L159:
 3892 004c 00000000 	 .word node_id
 3893 0050 00000000 	 .word node_id_alt
 3894 0054 00000000 	 .word node_id_16bit
 3895 0058 34120000 	 .word 4660
 3896 005c 00000000 	 .word val_Pow_Nom
 3897 0060 00000000 	 .word val_Pow_max
 3898 0064 00000000 	 .word val_Spannung_min
 3899 0068 00000000 	 .word val_Spannung_max
 3900 006c 68100000 	 .word 4200
 3901 0070 00000000 	 .word led_grupp
 3902 0074 00000000 	 .word led_Strom
 3903 0078 00000000 	 .word node_id_neu
 3904              	 .cfi_endproc
 3905              	.LFE325:
 3907              	 .section .text.sysiniValueB4,"ax",%progbits
 3908              	 .align 2
 3909              	 .global sysiniValueB4
 3910              	 .code 16
 3911              	 .thumb_func
 3913              	sysiniValueB4:
 3914              	.LFB326:
 801:../samuel/samuel_io.c **** 
 802:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 803:../samuel/samuel_io.c ****  {
 3915              	 .loc 3 803 0
 3916              	 .cfi_startproc
 3917 0000 80B5     	 push {r7,lr}
 3918              	.LCFI89:
 3919              	 .cfi_def_cfa_offset 8
 3920              	 .cfi_offset 7,-8
 3921              	 .cfi_offset 14,-4
 3922 0002 00AF     	 add r7,sp,#0
 3923              	.LCFI90:
 3924              	 .cfi_def_cfa_register 7
 804:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3925              	 .loc 3 804 0
 3926 0004 264B     	 ldr r3,.L162
 3927 0006 0A22     	 mov r2,#10
 3928 0008 1A70     	 strb r2,[r3]
 805:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3929              	 .loc 3 805 0
 3930 000a 264B     	 ldr r3,.L162+4
 3931 000c 0A22     	 mov r2,#10
 3932 000e 1A70     	 strb r2,[r3]
 806:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3933              	 .loc 3 806 0
 3934 0010 254B     	 ldr r3,.L162+8
 3935 0012 0A22     	 mov r2,#10
 3936 0014 1A70     	 strb r2,[r3]
 807:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3937              	 .loc 3 807 0
 3938 0016 254B     	 ldr r3,.L162+12
 3939 0018 0A22     	 mov r2,#10
 3940 001a 1A70     	 strb r2,[r3]
 808:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3941              	 .loc 3 808 0
 3942 001c 244B     	 ldr r3,.L162+16
 3943 001e 0A22     	 mov r2,#10
 3944 0020 1A80     	 strh r2,[r3]
 809:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3945              	 .loc 3 809 0
 3946 0022 244B     	 ldr r3,.L162+20
 3947 0024 B022     	 mov r2,#176
 3948 0026 1A80     	 strh r2,[r3]
 810:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3949              	 .loc 3 810 0
 3950 0028 234B     	 ldr r3,.L162+24
 3951 002a 0122     	 mov r2,#1
 3952 002c 5242     	 neg r2,r2
 3953 002e 1A80     	 strh r2,[r3]
 811:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3954              	 .loc 3 811 0
 3955 0030 224B     	 ldr r3,.L162+28
 3956 0032 0022     	 mov r2,#0
 3957 0034 1A80     	 strh r2,[r3]
 812:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3958              	 .loc 3 812 0
 3959 0036 224B     	 ldr r3,.L162+32
 3960 0038 FA22     	 mov r2,#250
 3961 003a 9200     	 lsl r2,r2,#2
 3962 003c 1A80     	 strh r2,[r3]
 813:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3963              	 .loc 3 813 0
 3964 003e 214B     	 ldr r3,.L162+36
 3965 0040 FA22     	 mov r2,#250
 3966 0042 9200     	 lsl r2,r2,#2
 3967 0044 1A80     	 strh r2,[r3]
 814:../samuel/samuel_io.c **** 
 815:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3968              	 .loc 3 815 0
 3969 0046 1B4B     	 ldr r3,.L162+20
 3970 0048 1A88     	 ldrh r2,[r3]
 3971 004a 1F4B     	 ldr r3,.L162+40
 3972 004c 1A80     	 strh r2,[r3]
 816:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3973              	 .loc 3 816 0
 3974 004e 194B     	 ldr r3,.L162+20
 3975 0050 1A88     	 ldrh r2,[r3]
 3976 0052 1E4B     	 ldr r3,.L162+44
 3977 0054 1A80     	 strh r2,[r3]
 817:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3978              	 .loc 3 817 0
 3979 0056 174B     	 ldr r3,.L162+20
 3980 0058 1A88     	 ldrh r2,[r3]
 3981 005a 1D4B     	 ldr r3,.L162+48
 3982 005c 1A80     	 strh r2,[r3]
 818:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3983              	 .loc 3 818 0
 3984 005e 154B     	 ldr r3,.L162+20
 3985 0060 1A88     	 ldrh r2,[r3]
 3986 0062 1C4B     	 ldr r3,.L162+52
 3987 0064 1A80     	 strh r2,[r3]
 819:../samuel/samuel_io.c **** 
 820:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3988              	 .loc 3 820 0
 3989 0066 144B     	 ldr r3,.L162+24
 3990 0068 1B88     	 ldrh r3,[r3]
 3991 006a 1B0A     	 lsr r3,r3,#8
 3992 006c 9AB2     	 uxth r2,r3
 3993 006e 1A4B     	 ldr r3,.L162+56
 3994 0070 1A80     	 strh r2,[r3]
 821:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3995              	 .loc 3 821 0
 3996 0072 114B     	 ldr r3,.L162+24
 3997 0074 1B88     	 ldrh r3,[r3]
 3998 0076 1B0A     	 lsr r3,r3,#8
 3999 0078 9AB2     	 uxth r2,r3
 4000 007a 184B     	 ldr r3,.L162+60
 4001 007c 1A80     	 strh r2,[r3]
 822:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 4002              	 .loc 3 822 0
 4003 007e 0E4B     	 ldr r3,.L162+24
 4004 0080 1B88     	 ldrh r3,[r3]
 4005 0082 FF22     	 mov r2,#255
 4006 0084 1340     	 and r3,r2
 4007 0086 9AB2     	 uxth r2,r3
 4008 0088 154B     	 ldr r3,.L162+64
 4009 008a 1A80     	 strh r2,[r3]
 823:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 4010              	 .loc 3 823 0
 4011 008c 0A4B     	 ldr r3,.L162+24
 4012 008e 1B88     	 ldrh r3,[r3]
 4013 0090 FF22     	 mov r2,#255
 4014 0092 1340     	 and r3,r2
 4015 0094 9AB2     	 uxth r2,r3
 4016 0096 134B     	 ldr r3,.L162+68
 4017 0098 1A80     	 strh r2,[r3]
 824:../samuel/samuel_io.c ****  }
 4018              	 .loc 3 824 0
 4019 009a BD46     	 mov sp,r7
 4020              	 
 4021 009c 80BD     	 pop {r7,pc}
 4022              	.L163:
 4023 009e C046     	 .align 2
 4024              	.L162:
 4025 00a0 00000000 	 .word Dimm_Gamma
 4026 00a4 00000000 	 .word Dimm_Stufen
 4027 00a8 00000000 	 .word Dimm_StufenGR
 4028 00ac 00000000 	 .word Dimm_Valu
 4029 00b0 00000000 	 .word Smooth_Value
 4030 00b4 00000000 	 .word linearwalk_gen
 4031 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 4032 00bc 00000000 	 .word Reserve_1
 4033 00c0 00000000 	 .word Dimm_Max_WW
 4034 00c4 00000000 	 .word Dimm_Max_CW
 4035 00c8 00000000 	 .word linearwalk_ww1
 4036 00cc 00000000 	 .word linearwalk_ww2
 4037 00d0 00000000 	 .word linearwalk_cw1
 4038 00d4 00000000 	 .word linearwalk_cw2
 4039 00d8 00000000 	 .word Farbe_ww1_Quot
 4040 00dc 00000000 	 .word Farbe_cw1_Quot
 4041 00e0 00000000 	 .word Farbe_ww2_Quot
 4042 00e4 00000000 	 .word Farbe_cw2_Quot
 4043              	 .cfi_endproc
 4044              	.LFE326:
 4046              	 .section .text.sysiniValueB5,"ax",%progbits
 4047              	 .align 2
 4048              	 .global sysiniValueB5
 4049              	 .code 16
 4050              	 .thumb_func
 4052              	sysiniValueB5:
 4053              	.LFB327:
 825:../samuel/samuel_io.c **** 
 826:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 827:../samuel/samuel_io.c ****  {
 4054              	 .loc 3 827 0
 4055              	 .cfi_startproc
 4056 0000 80B5     	 push {r7,lr}
 4057              	.LCFI91:
 4058              	 .cfi_def_cfa_offset 8
 4059              	 .cfi_offset 7,-8
 4060              	 .cfi_offset 14,-4
 4061 0002 00AF     	 add r7,sp,#0
 4062              	.LCFI92:
 4063              	 .cfi_def_cfa_register 7
 828:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 4064              	 .loc 3 828 0
 4065 0004 0E4B     	 ldr r3,.L165
 4066 0006 0522     	 mov r2,#5
 4067 0008 1A70     	 strb r2,[r3]
 829:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 4068              	 .loc 3 829 0
 4069 000a 0E4B     	 ldr r3,.L165+4
 4070 000c 0022     	 mov r2,#0
 4071 000e 1A70     	 strb r2,[r3]
 830:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 4072              	 .loc 3 830 0
 4073 0010 0D4B     	 ldr r3,.L165+8
 4074 0012 0022     	 mov r2,#0
 4075 0014 1A80     	 strh r2,[r3]
 831:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 4076              	 .loc 3 831 0
 4077 0016 0D4B     	 ldr r3,.L165+12
 4078 0018 0D4A     	 ldr r2,.L165+16
 4079 001a 1A80     	 strh r2,[r3]
 832:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 4080              	 .loc 3 832 0
 4081 001c 0D4B     	 ldr r3,.L165+20
 4082 001e 0C4A     	 ldr r2,.L165+16
 4083 0020 1A80     	 strh r2,[r3]
 833:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 4084              	 .loc 3 833 0
 4085 0022 0D4B     	 ldr r3,.L165+24
 4086 0024 0D4A     	 ldr r2,.L165+28
 4087 0026 1A80     	 strh r2,[r3]
 834:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 4088              	 .loc 3 834 0
 4089 0028 0D4B     	 ldr r3,.L165+32
 4090 002a 0C4A     	 ldr r2,.L165+28
 4091 002c 1A80     	 strh r2,[r3]
 835:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 4092              	 .loc 3 835 0
 4093 002e 0D4B     	 ldr r3,.L165+36
 4094 0030 0D4A     	 ldr r2,.L165+40
 4095 0032 1A80     	 strh r2,[r3]
 836:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 4096              	 .loc 3 836 0
 4097 0034 0D4B     	 ldr r3,.L165+44
 4098 0036 0C4A     	 ldr r2,.L165+40
 4099 0038 1A80     	 strh r2,[r3]
 837:../samuel/samuel_io.c ****  }
 4100              	 .loc 3 837 0
 4101 003a BD46     	 mov sp,r7
 4102              	 
 4103 003c 80BD     	 pop {r7,pc}
 4104              	.L166:
 4105 003e C046     	 .align 2
 4106              	.L165:
 4107 0040 00000000 	 .word RegOnOff
 4108 0044 00000000 	 .word RegOnOff2
 4109 0048 00000000 	 .word Reserve_2
 4110 004c 00000000 	 .word dimOff_Ww
 4111 0050 FF0F0000 	 .word 4095
 4112 0054 00000000 	 .word dimOff_Cw
 4113 0058 00000000 	 .word dimNorm1_Ww
 4114 005c FF010000 	 .word 511
 4115 0060 00000000 	 .word dimNorm1_Cw
 4116 0064 00000000 	 .word dimNorm2_Ww
 4117 0068 FF020000 	 .word 767
 4118 006c 00000000 	 .word dimNorm2_Cw
 4119              	 .cfi_endproc
 4120              	.LFE327:
 4122              	 .section .text.bcuInit,"ax",%progbits
 4123              	 .align 2
 4124              	 .global bcuInit
 4125              	 .code 16
 4126              	 .thumb_func
 4128              	bcuInit:
 4129              	.LFB328:
 838:../samuel/samuel_io.c **** 
 839:../samuel/samuel_io.c ****  //-----------------------------------------------
 840:../samuel/samuel_io.c ****  // BCCU Vorgaben
 841:../samuel/samuel_io.c **** 
 842:../samuel/samuel_io.c ****  void bcuInit(void)
 843:../samuel/samuel_io.c ****  {
 4130              	 .loc 3 843 0
 4131              	 .cfi_startproc
 4132 0000 80B5     	 push {r7,lr}
 4133              	.LCFI93:
 4134              	 .cfi_def_cfa_offset 8
 4135              	 .cfi_offset 7,-8
 4136              	 .cfi_offset 14,-4
 4137 0002 00AF     	 add r7,sp,#0
 4138              	.LCFI94:
 4139              	 .cfi_def_cfa_register 7
 844:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 4140              	 .loc 3 844 0
 4141 0004 194B     	 ldr r3,.L177
 4142 0006 1B78     	 ldrb r3,[r3]
 4143 0008 052B     	 cmp r3,#5
 4144 000a 2CD8     	 bhi .L176
 4145 000c 9A00     	 lsl r2,r3,#2
 4146 000e 184B     	 ldr r3,.L177+4
 4147 0010 D318     	 add r3,r2,r3
 4148 0012 1B68     	 ldr r3,[r3]
 4149 0014 9F46     	 mov pc,r3
 4150              	 .section .rodata.bcuInit,"a",%progbits
 4151              	 .align 2
 4152              	.L170:
 4153 0000 66000000 	 .word .L176
 4154 0004 16000000 	 .word .L169
 4155 0008 24000000 	 .word .L171
 4156 000c 32000000 	 .word .L172
 4157 0010 42000000 	 .word .L173
 4158 0014 54000000 	 .word .L174
 4159              	 .section .text.bcuInit
 4160              	.L169:
 845:../samuel/samuel_io.c **** 		{
 846:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 4161              	 .loc 3 846 0
 4162 0016 174B     	 ldr r3,.L177+8
 4163 0018 0022     	 mov r2,#0
 4164 001a 1A80     	 strh r2,[r3]
 847:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 4165              	 .loc 3 847 0
 4166 001c 164B     	 ldr r3,.L177+12
 4167 001e 0022     	 mov r2,#0
 4168 0020 1A80     	 strh r2,[r3]
 848:../samuel/samuel_io.c **** 									break;
 4169              	 .loc 3 848 0
 4170 0022 21E0     	 b .L167
 4171              	.L171:
 849:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 4172              	 .loc 3 849 0
 4173 0024 134B     	 ldr r3,.L177+8
 4174 0026 154A     	 ldr r2,.L177+16
 4175 0028 1A80     	 strh r2,[r3]
 850:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 4176              	 .loc 3 850 0
 4177 002a 134B     	 ldr r3,.L177+12
 4178 002c 134A     	 ldr r2,.L177+16
 4179 002e 1A80     	 strh r2,[r3]
 851:../samuel/samuel_io.c **** 									break;
 4180              	 .loc 3 851 0
 4181 0030 1AE0     	 b .L167
 4182              	.L172:
 852:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 4183              	 .loc 3 852 0
 4184 0032 134B     	 ldr r3,.L177+20
 4185 0034 1A88     	 ldrh r2,[r3]
 4186 0036 0F4B     	 ldr r3,.L177+8
 4187 0038 1A80     	 strh r2,[r3]
 853:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 4188              	 .loc 3 853 0
 4189 003a 124B     	 ldr r3,.L177+24
 4190 003c 1A88     	 ldrh r2,[r3]
 4191 003e 0E4B     	 ldr r3,.L177+12
 4192 0040 1A80     	 strh r2,[r3]
 4193              	.L173:
 854:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 4194              	 .loc 3 854 0
 4195 0042 114B     	 ldr r3,.L177+28
 4196 0044 1A88     	 ldrh r2,[r3]
 4197 0046 0B4B     	 ldr r3,.L177+8
 4198 0048 1A80     	 strh r2,[r3]
 855:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 4199              	 .loc 3 855 0
 4200 004a 104B     	 ldr r3,.L177+32
 4201 004c 1A88     	 ldrh r2,[r3]
 4202 004e 0A4B     	 ldr r3,.L177+12
 4203 0050 1A80     	 strh r2,[r3]
 856:../samuel/samuel_io.c **** 									break;
 4204              	 .loc 3 856 0
 4205 0052 09E0     	 b .L167
 4206              	.L174:
 857:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 4207              	 .loc 3 857 0
 4208 0054 0E4B     	 ldr r3,.L177+36
 4209 0056 1A88     	 ldrh r2,[r3]
 4210 0058 064B     	 ldr r3,.L177+8
 4211 005a 1A80     	 strh r2,[r3]
 858:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 4212              	 .loc 3 858 0
 4213 005c 0D4B     	 ldr r3,.L177+40
 4214 005e 1A88     	 ldrh r2,[r3]
 4215 0060 054B     	 ldr r3,.L177+12
 4216 0062 1A80     	 strh r2,[r3]
 859:../samuel/samuel_io.c **** 									break;
 4217              	 .loc 3 859 0
 4218 0064 00E0     	 b .L167
 4219              	.L176:
 860:../samuel/samuel_io.c **** 		default:
 861:../samuel/samuel_io.c **** 									break;
 4220              	 .loc 3 861 0
 4221 0066 C046     	 mov r8,r8
 4222              	.L167:
 862:../samuel/samuel_io.c **** 		}
 863:../samuel/samuel_io.c **** 
 864:../samuel/samuel_io.c ****  }
 4223              	 .loc 3 864 0
 4224 0068 BD46     	 mov sp,r7
 4225              	 
 4226 006a 80BD     	 pop {r7,pc}
 4227              	.L178:
 4228              	 .align 2
 4229              	.L177:
 4230 006c 00000000 	 .word RegOnOff
 4231 0070 00000000 	 .word .L170
 4232 0074 00000000 	 .word dimAkt_Ww
 4233 0078 00000000 	 .word dimAkt_Cw
 4234 007c FF7F0000 	 .word 32767
 4235 0080 00000000 	 .word dimNorm1_Ww
 4236 0084 00000000 	 .word dimNorm1_Cw
 4237 0088 00000000 	 .word dimNorm2_Ww
 4238 008c 00000000 	 .word dimNorm2_Cw
 4239 0090 00000000 	 .word dimOff_Ww
 4240 0094 00000000 	 .word dimOff_Cw
 4241              	 .cfi_endproc
 4242              	.LFE328:
 4244              	 .section .text.bcuUebergabe,"ax",%progbits
 4245              	 .align 2
 4246              	 .global bcuUebergabe
 4247              	 .code 16
 4248              	 .thumb_func
 4250              	bcuUebergabe:
 4251              	.LFB329:
 865:../samuel/samuel_io.c ****  //----------------------------------
 866:../samuel/samuel_io.c **** 
 867:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 868:../samuel/samuel_io.c ****  {
 4252              	 .loc 3 868 0
 4253              	 .cfi_startproc
 4254 0000 80B5     	 push {r7,lr}
 4255              	.LCFI95:
 4256              	 .cfi_def_cfa_offset 8
 4257              	 .cfi_offset 7,-8
 4258              	 .cfi_offset 14,-4
 4259 0002 00AF     	 add r7,sp,#0
 4260              	.LCFI96:
 4261              	 .cfi_def_cfa_register 7
 869:../samuel/samuel_io.c **** 
 870:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 871:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 872:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 873:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 874:../samuel/samuel_io.c **** 
 875:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 4262              	 .loc 3 875 0
 4263 0004 204B     	 ldr r3,.L180
 4264 0006 1B88     	 ldrh r3,[r3]
 4265 0008 1A1C     	 mov r2,r3
 4266 000a 204B     	 ldr r3,.L180+4
 4267 000c 181C     	 mov r0,r3
 4268 000e 111C     	 mov r1,r2
 4269 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 876:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 4270              	 .loc 3 876 0
 4271 0014 1E4B     	 ldr r3,.L180+8
 4272 0016 1B88     	 ldrh r3,[r3]
 4273 0018 1A1C     	 mov r2,r3
 4274 001a 1E4B     	 ldr r3,.L180+12
 4275 001c 181C     	 mov r0,r3
 4276 001e 111C     	 mov r1,r2
 4277 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 877:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 4278              	 .loc 3 877 0
 4279 0024 1C4B     	 ldr r3,.L180+16
 4280 0026 1B88     	 ldrh r3,[r3]
 4281 0028 1A1C     	 mov r2,r3
 4282 002a 1C4B     	 ldr r3,.L180+20
 4283 002c 181C     	 mov r0,r3
 4284 002e 111C     	 mov r1,r2
 4285 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 878:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 4286              	 .loc 3 878 0
 4287 0034 1A4B     	 ldr r3,.L180+24
 4288 0036 1B88     	 ldrh r3,[r3]
 4289 0038 1A1C     	 mov r2,r3
 4290 003a 1A4B     	 ldr r3,.L180+28
 4291 003c 181C     	 mov r0,r3
 4292 003e 111C     	 mov r1,r2
 4293 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 879:../samuel/samuel_io.c **** 
 880:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 4294              	 .loc 3 880 0
 4295 0044 184B     	 ldr r3,.L180+32
 4296 0046 1B88     	 ldrh r3,[r3]
 4297 0048 1A1C     	 mov r2,r3
 4298 004a 104B     	 ldr r3,.L180+4
 4299 004c 181C     	 mov r0,r3
 4300 004e 111C     	 mov r1,r2
 4301 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 881:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 4302              	 .loc 3 881 0
 4303 0054 154B     	 ldr r3,.L180+36
 4304 0056 1B88     	 ldrh r3,[r3]
 4305 0058 1A1C     	 mov r2,r3
 4306 005a 0E4B     	 ldr r3,.L180+12
 4307 005c 181C     	 mov r0,r3
 4308 005e 111C     	 mov r1,r2
 4309 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 882:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 4310              	 .loc 3 882 0
 4311 0064 124B     	 ldr r3,.L180+40
 4312 0066 1B88     	 ldrh r3,[r3]
 4313 0068 1A1C     	 mov r2,r3
 4314 006a 0C4B     	 ldr r3,.L180+20
 4315 006c 181C     	 mov r0,r3
 4316 006e 111C     	 mov r1,r2
 4317 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 883:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 4318              	 .loc 3 883 0
 4319 0074 0F4B     	 ldr r3,.L180+44
 4320 0076 1B88     	 ldrh r3,[r3]
 4321 0078 1A1C     	 mov r2,r3
 4322 007a 0A4B     	 ldr r3,.L180+28
 4323 007c 181C     	 mov r0,r3
 4324 007e 111C     	 mov r1,r2
 4325 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 884:../samuel/samuel_io.c **** 
 885:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 886:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 887:../samuel/samuel_io.c **** 
 888:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 889:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 890:../samuel/samuel_io.c ****  }
 4326              	 .loc 3 890 0
 4327 0084 BD46     	 mov sp,r7
 4328              	 
 4329 0086 80BD     	 pop {r7,pc}
 4330              	.L181:
 4331              	 .align 2
 4332              	.L180:
 4333 0088 00000000 	 .word Farbe_ww2
 4334 008c 00000000 	 .word PDM_BCCU_0
 4335 0090 00000000 	 .word Farbe_cw2
 4336 0094 00000000 	 .word PDM_BCCU_1
 4337 0098 00000000 	 .word Farbe_ww1
 4338 009c 00000000 	 .word PDM_BCCU_2
 4339 00a0 00000000 	 .word Farbe_cw1
 4340 00a4 00000000 	 .word PDM_BCCU_3
 4341 00a8 00000000 	 .word linearwalk_ww2
 4342 00ac 00000000 	 .word linearwalk_cw2
 4343 00b0 00000000 	 .word linearwalk_ww1
 4344 00b4 00000000 	 .word linearwalk_cw1
 4345              	 .cfi_endproc
 4346              	.LFE329:
 4348              	 .section .text.bcuAktBerechnung,"ax",%progbits
 4349              	 .align 2
 4350              	 .global bcuAktBerechnung
 4351              	 .code 16
 4352              	 .thumb_func
 4354              	bcuAktBerechnung:
 4355              	.LFB330:
 891:../samuel/samuel_io.c ****  //----------------------------------
 892:../samuel/samuel_io.c **** 
 893:../samuel/samuel_io.c **** 
 894:../samuel/samuel_io.c ****  //----------------------------------
 895:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 896:../samuel/samuel_io.c ****   {
 4356              	 .loc 3 896 0
 4357              	 .cfi_startproc
 4358 0000 80B5     	 push {r7,lr}
 4359              	.LCFI97:
 4360              	 .cfi_def_cfa_offset 8
 4361              	 .cfi_offset 7,-8
 4362              	 .cfi_offset 14,-4
 4363 0002 82B0     	 sub sp,sp,#8
 4364              	.LCFI98:
 4365              	 .cfi_def_cfa_offset 16
 4366 0004 00AF     	 add r7,sp,#0
 4367              	.LCFI99:
 4368              	 .cfi_def_cfa_register 7
 897:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 898:../samuel/samuel_io.c **** 
 899:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4369              	 .loc 3 899 0
 4370 0006 284B     	 ldr r3,.L183
 4371 0008 1B88     	 ldrh r3,[r3]
 4372 000a 1B0A     	 lsr r3,r3,#8
 4373 000c 9AB2     	 uxth r2,r3
 4374 000e 274B     	 ldr r3,.L183+4
 4375 0010 1A80     	 strh r2,[r3]
 900:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4376              	 .loc 3 900 0
 4377 0012 254B     	 ldr r3,.L183
 4378 0014 1B88     	 ldrh r3,[r3]
 4379 0016 1B0A     	 lsr r3,r3,#8
 4380 0018 9AB2     	 uxth r2,r3
 4381 001a 254B     	 ldr r3,.L183+8
 4382 001c 1A80     	 strh r2,[r3]
 901:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4383              	 .loc 3 901 0
 4384 001e 224B     	 ldr r3,.L183
 4385 0020 1B88     	 ldrh r3,[r3]
 4386 0022 FF22     	 mov r2,#255
 4387 0024 1340     	 and r3,r2
 4388 0026 9AB2     	 uxth r2,r3
 4389 0028 224B     	 ldr r3,.L183+12
 4390 002a 1A80     	 strh r2,[r3]
 902:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4391              	 .loc 3 902 0
 4392 002c 1E4B     	 ldr r3,.L183
 4393 002e 1B88     	 ldrh r3,[r3]
 4394 0030 FF22     	 mov r2,#255
 4395 0032 1340     	 and r3,r2
 4396 0034 9AB2     	 uxth r2,r3
 4397 0036 204B     	 ldr r3,.L183+16
 4398 0038 1A80     	 strh r2,[r3]
 903:../samuel/samuel_io.c **** 
 904:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4399              	 .loc 3 904 0
 4400 003a 204B     	 ldr r3,.L183+20
 4401 003c 1B88     	 ldrh r3,[r3]
 4402 003e 1A1C     	 mov r2,r3
 4403 0040 1A4B     	 ldr r3,.L183+4
 4404 0042 1B88     	 ldrh r3,[r3]
 4405 0044 5343     	 mul r3,r2
 4406 0046 7B60     	 str r3,[r7,#4]
 905:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4407              	 .loc 3 905 0
 4408 0048 7B68     	 ldr r3,[r7,#4]
 4409 004a 1B0A     	 lsr r3,r3,#8
 4410 004c 1B09     	 lsr r3,r3,#4
 4411 004e 9AB2     	 uxth r2,r3
 4412 0050 1B4B     	 ldr r3,.L183+24
 4413 0052 1A80     	 strh r2,[r3]
 906:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4414              	 .loc 3 906 0
 4415 0054 194B     	 ldr r3,.L183+20
 4416 0056 1B88     	 ldrh r3,[r3]
 4417 0058 1A1C     	 mov r2,r3
 4418 005a 164B     	 ldr r3,.L183+12
 4419 005c 1B88     	 ldrh r3,[r3]
 4420 005e 5343     	 mul r3,r2
 4421 0060 7B60     	 str r3,[r7,#4]
 907:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4422              	 .loc 3 907 0
 4423 0062 7B68     	 ldr r3,[r7,#4]
 4424 0064 1B0A     	 lsr r3,r3,#8
 4425 0066 1B09     	 lsr r3,r3,#4
 4426 0068 9AB2     	 uxth r2,r3
 4427 006a 164B     	 ldr r3,.L183+28
 4428 006c 1A80     	 strh r2,[r3]
 908:../samuel/samuel_io.c **** 
 909:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4429              	 .loc 3 909 0
 4430 006e 164B     	 ldr r3,.L183+32
 4431 0070 1B88     	 ldrh r3,[r3]
 4432 0072 1A1C     	 mov r2,r3
 4433 0074 0E4B     	 ldr r3,.L183+8
 4434 0076 1B88     	 ldrh r3,[r3]
 4435 0078 5343     	 mul r3,r2
 4436 007a 7B60     	 str r3,[r7,#4]
 910:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4437              	 .loc 3 910 0
 4438 007c 7B68     	 ldr r3,[r7,#4]
 4439 007e 1B0A     	 lsr r3,r3,#8
 4440 0080 1B09     	 lsr r3,r3,#4
 4441 0082 9AB2     	 uxth r2,r3
 4442 0084 114B     	 ldr r3,.L183+36
 4443 0086 1A80     	 strh r2,[r3]
 911:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4444              	 .loc 3 911 0
 4445 0088 0F4B     	 ldr r3,.L183+32
 4446 008a 1B88     	 ldrh r3,[r3]
 4447 008c 1A1C     	 mov r2,r3
 4448 008e 0A4B     	 ldr r3,.L183+16
 4449 0090 1B88     	 ldrh r3,[r3]
 4450 0092 5343     	 mul r3,r2
 4451 0094 7B60     	 str r3,[r7,#4]
 912:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4452              	 .loc 3 912 0
 4453 0096 7B68     	 ldr r3,[r7,#4]
 4454 0098 1B0A     	 lsr r3,r3,#8
 4455 009a 1B09     	 lsr r3,r3,#4
 4456 009c 9AB2     	 uxth r2,r3
 4457 009e 0C4B     	 ldr r3,.L183+40
 4458 00a0 1A80     	 strh r2,[r3]
 913:../samuel/samuel_io.c ****   }
 4459              	 .loc 3 913 0
 4460 00a2 BD46     	 mov sp,r7
 4461 00a4 02B0     	 add sp,sp,#8
 4462              	 
 4463 00a6 80BD     	 pop {r7,pc}
 4464              	.L184:
 4465              	 .align 2
 4466              	.L183:
 4467 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4468 00ac 00000000 	 .word Farbe_ww1_Quot
 4469 00b0 00000000 	 .word Farbe_cw1_Quot
 4470 00b4 00000000 	 .word Farbe_ww2_Quot
 4471 00b8 00000000 	 .word Farbe_cw2_Quot
 4472 00bc 00000000 	 .word dimAkt_Ww
 4473 00c0 00000000 	 .word Farbe_ww1
 4474 00c4 00000000 	 .word Farbe_ww2
 4475 00c8 00000000 	 .word dimAkt_Cw
 4476 00cc 00000000 	 .word Farbe_cw1
 4477 00d0 00000000 	 .word Farbe_cw2
 4478              	 .cfi_endproc
 4479              	.LFE330:
 4481              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4482              	 .align 2
 4483              	 .global bcudirAktBerechnung
 4484              	 .code 16
 4485              	 .thumb_func
 4487              	bcudirAktBerechnung:
 4488              	.LFB331:
 914:../samuel/samuel_io.c **** 
 915:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 916:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 917:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 918:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 919:../samuel/samuel_io.c **** 
 920:../samuel/samuel_io.c ****   {
 4489              	 .loc 3 920 0
 4490              	 .cfi_startproc
 4491 0000 80B5     	 push {r7,lr}
 4492              	.LCFI100:
 4493              	 .cfi_def_cfa_offset 8
 4494              	 .cfi_offset 7,-8
 4495              	 .cfi_offset 14,-4
 4496 0002 82B0     	 sub sp,sp,#8
 4497              	.LCFI101:
 4498              	 .cfi_def_cfa_offset 16
 4499 0004 00AF     	 add r7,sp,#0
 4500              	.LCFI102:
 4501              	 .cfi_def_cfa_register 7
 921:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 922:../samuel/samuel_io.c **** 
 923:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4502              	 .loc 3 923 0
 4503 0006 2A4B     	 ldr r3,.L186
 4504 0008 0122     	 mov r2,#1
 4505 000a 5242     	 neg r2,r2
 4506 000c 1A80     	 strh r2,[r3]
 924:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4507              	 .loc 3 924 0
 4508 000e 284B     	 ldr r3,.L186
 4509 0010 1B88     	 ldrh r3,[r3]
 4510 0012 1B0A     	 lsr r3,r3,#8
 4511 0014 9AB2     	 uxth r2,r3
 4512 0016 274B     	 ldr r3,.L186+4
 4513 0018 1A80     	 strh r2,[r3]
 925:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4514              	 .loc 3 925 0
 4515 001a 254B     	 ldr r3,.L186
 4516 001c 1B88     	 ldrh r3,[r3]
 4517 001e 1B0A     	 lsr r3,r3,#8
 4518 0020 9AB2     	 uxth r2,r3
 4519 0022 254B     	 ldr r3,.L186+8
 4520 0024 1A80     	 strh r2,[r3]
 926:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4521              	 .loc 3 926 0
 4522 0026 224B     	 ldr r3,.L186
 4523 0028 1B88     	 ldrh r3,[r3]
 4524 002a FF22     	 mov r2,#255
 4525 002c 1340     	 and r3,r2
 4526 002e 9AB2     	 uxth r2,r3
 4527 0030 224B     	 ldr r3,.L186+12
 4528 0032 1A80     	 strh r2,[r3]
 927:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4529              	 .loc 3 927 0
 4530 0034 1E4B     	 ldr r3,.L186
 4531 0036 1B88     	 ldrh r3,[r3]
 4532 0038 FF22     	 mov r2,#255
 4533 003a 1340     	 and r3,r2
 4534 003c 9AB2     	 uxth r2,r3
 4535 003e 204B     	 ldr r3,.L186+16
 4536 0040 1A80     	 strh r2,[r3]
 928:../samuel/samuel_io.c **** 
 929:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4537              	 .loc 3 929 0
 4538 0042 204B     	 ldr r3,.L186+20
 4539 0044 1B88     	 ldrh r3,[r3]
 4540 0046 1A1C     	 mov r2,r3
 4541 0048 1A4B     	 ldr r3,.L186+4
 4542 004a 1B88     	 ldrh r3,[r3]
 4543 004c 5343     	 mul r3,r2
 4544 004e 7B60     	 str r3,[r7,#4]
 930:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4545              	 .loc 3 930 0
 4546 0050 7B68     	 ldr r3,[r7,#4]
 4547 0052 1B0A     	 lsr r3,r3,#8
 4548 0054 1B09     	 lsr r3,r3,#4
 4549 0056 9AB2     	 uxth r2,r3
 4550 0058 1B4B     	 ldr r3,.L186+24
 4551 005a 1A80     	 strh r2,[r3]
 931:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4552              	 .loc 3 931 0
 4553 005c 194B     	 ldr r3,.L186+20
 4554 005e 1B88     	 ldrh r3,[r3]
 4555 0060 1A1C     	 mov r2,r3
 4556 0062 164B     	 ldr r3,.L186+12
 4557 0064 1B88     	 ldrh r3,[r3]
 4558 0066 5343     	 mul r3,r2
 4559 0068 7B60     	 str r3,[r7,#4]
 932:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4560              	 .loc 3 932 0
 4561 006a 7B68     	 ldr r3,[r7,#4]
 4562 006c 1B0A     	 lsr r3,r3,#8
 4563 006e 1B09     	 lsr r3,r3,#4
 4564 0070 9AB2     	 uxth r2,r3
 4565 0072 164B     	 ldr r3,.L186+28
 4566 0074 1A80     	 strh r2,[r3]
 933:../samuel/samuel_io.c **** 
 934:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4567              	 .loc 3 934 0
 4568 0076 164B     	 ldr r3,.L186+32
 4569 0078 1B88     	 ldrh r3,[r3]
 4570 007a 1A1C     	 mov r2,r3
 4571 007c 0E4B     	 ldr r3,.L186+8
 4572 007e 1B88     	 ldrh r3,[r3]
 4573 0080 5343     	 mul r3,r2
 4574 0082 7B60     	 str r3,[r7,#4]
 935:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4575              	 .loc 3 935 0
 4576 0084 7B68     	 ldr r3,[r7,#4]
 4577 0086 1B0A     	 lsr r3,r3,#8
 4578 0088 1B09     	 lsr r3,r3,#4
 4579 008a 9AB2     	 uxth r2,r3
 4580 008c 114B     	 ldr r3,.L186+36
 4581 008e 1A80     	 strh r2,[r3]
 936:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4582              	 .loc 3 936 0
 4583 0090 0F4B     	 ldr r3,.L186+32
 4584 0092 1B88     	 ldrh r3,[r3]
 4585 0094 1A1C     	 mov r2,r3
 4586 0096 0A4B     	 ldr r3,.L186+16
 4587 0098 1B88     	 ldrh r3,[r3]
 4588 009a 5343     	 mul r3,r2
 4589 009c 7B60     	 str r3,[r7,#4]
 937:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4590              	 .loc 3 937 0
 4591 009e 7B68     	 ldr r3,[r7,#4]
 4592 00a0 1B0A     	 lsr r3,r3,#8
 4593 00a2 1B09     	 lsr r3,r3,#4
 4594 00a4 9AB2     	 uxth r2,r3
 4595 00a6 0C4B     	 ldr r3,.L186+40
 4596 00a8 1A80     	 strh r2,[r3]
 938:../samuel/samuel_io.c ****   }
 4597              	 .loc 3 938 0
 4598 00aa BD46     	 mov sp,r7
 4599 00ac 02B0     	 add sp,sp,#8
 4600              	 
 4601 00ae 80BD     	 pop {r7,pc}
 4602              	.L187:
 4603              	 .align 2
 4604              	.L186:
 4605 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4606 00b4 00000000 	 .word Farbe_ww1_Quot
 4607 00b8 00000000 	 .word Farbe_cw1_Quot
 4608 00bc 00000000 	 .word Farbe_ww2_Quot
 4609 00c0 00000000 	 .word Farbe_cw2_Quot
 4610 00c4 00000000 	 .word dimAkt_Ww
 4611 00c8 00000000 	 .word Farbe_ww1
 4612 00cc 00000000 	 .word Farbe_ww2
 4613 00d0 00000000 	 .word dimAkt_Cw
 4614 00d4 00000000 	 .word Farbe_cw1
 4615 00d8 00000000 	 .word Farbe_cw2
 4616              	 .cfi_endproc
 4617              	.LFE331:
 4619              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4620              	 .align 2
 4621              	 .global bcuColorBerechnung
 4622              	 .code 16
 4623              	 .thumb_func
 4625              	bcuColorBerechnung:
 4626              	.LFB332:
 939:../samuel/samuel_io.c ****  //----------------------------------
 940:../samuel/samuel_io.c **** 
 941:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 942:../samuel/samuel_io.c ****   {
 4627              	 .loc 3 942 0
 4628              	 .cfi_startproc
 4629 0000 80B5     	 push {r7,lr}
 4630              	.LCFI103:
 4631              	 .cfi_def_cfa_offset 8
 4632              	 .cfi_offset 7,-8
 4633              	 .cfi_offset 14,-4
 4634 0002 82B0     	 sub sp,sp,#8
 4635              	.LCFI104:
 4636              	 .cfi_def_cfa_offset 16
 4637 0004 00AF     	 add r7,sp,#0
 4638              	.LCFI105:
 4639              	 .cfi_def_cfa_register 7
 943:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 944:../samuel/samuel_io.c **** 
 945:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4640              	 .loc 3 945 0
 4641 0006 1E4B     	 ldr r3,.L189
 4642 0008 0122     	 mov r2,#1
 4643 000a 5242     	 neg r2,r2
 4644 000c 1A80     	 strh r2,[r3]
 946:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4645              	 .loc 3 946 0
 4646 000e 1C4B     	 ldr r3,.L189
 4647 0010 1B88     	 ldrh r3,[r3]
 4648 0012 1A1C     	 mov r2,r3
 4649 0014 1B4B     	 ldr r3,.L189+4
 4650 0016 1B88     	 ldrh r3,[r3]
 4651 0018 5343     	 mul r3,r2
 4652 001a 7B60     	 str r3,[r7,#4]
 947:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4653              	 .loc 3 947 0
 4654 001c 7B68     	 ldr r3,[r7,#4]
 4655 001e 1B0C     	 lsr r3,r3,#16
 4656 0020 7B60     	 str r3,[r7,#4]
 948:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4657              	 .loc 3 948 0
 4658 0022 194B     	 ldr r3,.L189+8
 4659 0024 1B88     	 ldrh r3,[r3]
 4660 0026 1A1C     	 mov r2,r3
 4661 0028 184B     	 ldr r3,.L189+12
 4662 002a 9B1A     	 sub r3,r3,r2
 4663 002c 1A1C     	 mov r2,r3
 4664 002e 7B68     	 ldr r3,[r7,#4]
 4665 0030 5343     	 mul r3,r2
 4666 0032 7B60     	 str r3,[r7,#4]
 949:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4667              	 .loc 3 949 0
 4668 0034 7B68     	 ldr r3,[r7,#4]
 4669 0036 1B0C     	 lsr r3,r3,#16
 4670 0038 7B60     	 str r3,[r7,#4]
 950:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4671              	 .loc 3 950 0
 4672 003a 7B68     	 ldr r3,[r7,#4]
 4673 003c 9AB2     	 uxth r2,r3
 4674 003e 104B     	 ldr r3,.L189
 4675 0040 1A80     	 strh r2,[r3]
 951:../samuel/samuel_io.c **** 
 952:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4676              	 .loc 3 952 0
 4677 0042 134B     	 ldr r3,.L189+16
 4678 0044 0122     	 mov r2,#1
 4679 0046 5242     	 neg r2,r2
 4680 0048 1A80     	 strh r2,[r3]
 953:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4681              	 .loc 3 953 0
 4682 004a 114B     	 ldr r3,.L189+16
 4683 004c 1B88     	 ldrh r3,[r3]
 4684 004e 1A1C     	 mov r2,r3
 4685 0050 0C4B     	 ldr r3,.L189+4
 4686 0052 1B88     	 ldrh r3,[r3]
 4687 0054 5343     	 mul r3,r2
 4688 0056 7B60     	 str r3,[r7,#4]
 954:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4689              	 .loc 3 954 0
 4690 0058 7B68     	 ldr r3,[r7,#4]
 4691 005a 1B0C     	 lsr r3,r3,#16
 4692 005c 7B60     	 str r3,[r7,#4]
 955:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4693              	 .loc 3 955 0
 4694 005e 0A4B     	 ldr r3,.L189+8
 4695 0060 1B88     	 ldrh r3,[r3]
 4696 0062 1A1C     	 mov r2,r3
 4697 0064 7B68     	 ldr r3,[r7,#4]
 4698 0066 5343     	 mul r3,r2
 4699 0068 7B60     	 str r3,[r7,#4]
 956:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4700              	 .loc 3 956 0
 4701 006a 7B68     	 ldr r3,[r7,#4]
 4702 006c 1B0C     	 lsr r3,r3,#16
 4703 006e 7B60     	 str r3,[r7,#4]
 957:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4704              	 .loc 3 957 0
 4705 0070 7B68     	 ldr r3,[r7,#4]
 4706 0072 9AB2     	 uxth r2,r3
 4707 0074 064B     	 ldr r3,.L189+16
 4708 0076 1A80     	 strh r2,[r3]
 958:../samuel/samuel_io.c ****   }
 4709              	 .loc 3 958 0
 4710 0078 BD46     	 mov sp,r7
 4711 007a 02B0     	 add sp,sp,#8
 4712              	 
 4713 007c 80BD     	 pop {r7,pc}
 4714              	.L190:
 4715 007e C046     	 .align 2
 4716              	.L189:
 4717 0080 00000000 	 .word dimAkt_Ww
 4718 0084 00000000 	 .word Brightness_Gen
 4719 0088 00000000 	 .word ColorQuot_Gen
 4720 008c FFFF0000 	 .word 65535
 4721 0090 00000000 	 .word dimAkt_Cw
 4722              	 .cfi_endproc
 4723              	.LFE332:
 4725              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4726              	 .align 2
 4727              	 .global Offlight_zahler_write
 4728              	 .code 16
 4729              	 .thumb_func
 4731              	Offlight_zahler_write:
 4732              	.LFB333:
 959:../samuel/samuel_io.c ****  //----------------------------------
 960:../samuel/samuel_io.c **** 
 961:../samuel/samuel_io.c **** 
 962:../samuel/samuel_io.c **** 
 963:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 964:../samuel/samuel_io.c ****  {
 4733              	 .loc 3 964 0
 4734              	 .cfi_startproc
 4735 0000 80B5     	 push {r7,lr}
 4736              	.LCFI106:
 4737              	 .cfi_def_cfa_offset 8
 4738              	 .cfi_offset 7,-8
 4739              	 .cfi_offset 14,-4
 4740 0002 82B0     	 sub sp,sp,#8
 4741              	.LCFI107:
 4742              	 .cfi_def_cfa_offset 16
 4743 0004 00AF     	 add r7,sp,#0
 4744              	.LCFI108:
 4745              	 .cfi_def_cfa_register 7
 965:../samuel/samuel_io.c ****      uint8_t a;
 966:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4746              	 .loc 3 966 0
 4747 0006 3B4B     	 ldr r3,.L197
 4748 0008 1B78     	 ldrb r3,[r3]
 4749 000a 052B     	 cmp r3,#5
 4750 000c 00D0     	 beq .LCB3953
 4751 000e 6EE0     	 b .L191
 4752              	.LCB3953:
 967:../samuel/samuel_io.c **** 	 {
 968:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4753              	 .loc 3 968 0
 4754 0010 394B     	 ldr r3,.L197+4
 4755 0012 1B88     	 ldrh r3,[r3]
 4756 0014 0133     	 add r3,r3,#1
 4757 0016 9AB2     	 uxth r2,r3
 4758 0018 374B     	 ldr r3,.L197+4
 4759 001a 1A80     	 strh r2,[r3]
 969:../samuel/samuel_io.c **** 
 970:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4760              	 .loc 3 970 0
 4761 001c 364B     	 ldr r3,.L197+4
 4762 001e 1B88     	 ldrh r3,[r3]
 4763 0020 3B2B     	 cmp r3,#59
 4764 0022 64D9     	 bls .L191
 971:../samuel/samuel_io.c **** 	  {
 972:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4765              	 .loc 3 972 0
 4766 0024 344B     	 ldr r3,.L197+4
 4767 0026 0022     	 mov r2,#0
 4768 0028 1A80     	 strh r2,[r3]
 973:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4769              	 .loc 3 973 0
 4770 002a FFF7FEFF 	 bl read_off_light_EEprom
 4771 002e 021C     	 mov r2,r0
 4772 0030 FB1D     	 add r3,r7,#7
 4773 0032 1A70     	 strb r2,[r3]
 974:../samuel/samuel_io.c **** 			if (a == 0x03)
 4774              	 .loc 3 974 0
 4775 0034 FB1D     	 add r3,r7,#7
 4776 0036 1B78     	 ldrb r3,[r3]
 4777 0038 032B     	 cmp r3,#3
 4778 003a 52D1     	 bne .L193
 975:../samuel/samuel_io.c **** 			{
 976:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4779              	 .loc 3 976 0
 4780 003c 2F4B     	 ldr r3,.L197+8
 4781 003e 1A88     	 ldrh r2,[r3]
 4782 0040 2F4B     	 ldr r3,.L197+12
 4783 0042 1A80     	 strh r2,[r3]
 977:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4784              	 .loc 3 977 0
 4785 0044 2F4B     	 ldr r3,.L197+16
 4786 0046 1A88     	 ldrh r2,[r3]
 4787 0048 2F4B     	 ldr r3,.L197+20
 4788 004a 1A80     	 strh r2,[r3]
 978:../samuel/samuel_io.c **** 
 979:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4789              	 .loc 3 979 0
 4790 004c 2F4B     	 ldr r3,.L197+24
 4791 004e 1B79     	 ldrb r3,[r3,#4]
 4792 0050 9AB2     	 uxth r2,r3
 4793 0052 2B4B     	 ldr r3,.L197+12
 4794 0054 1B88     	 ldrh r3,[r3]
 4795 0056 1B0A     	 lsr r3,r3,#8
 4796 0058 9BB2     	 uxth r3,r3
 4797 005a 9A42     	 cmp r2,r3
 4798 005c 20D1     	 bne .L194
 4799              	 .loc 3 979 0 is_stmt 0 discriminator 1
 4800 005e 2B4B     	 ldr r3,.L197+24
 4801 0060 5B79     	 ldrb r3,[r3,#5]
 4802 0062 1A1C     	 mov r2,r3
 4803 0064 264B     	 ldr r3,.L197+12
 4804 0066 1B88     	 ldrh r3,[r3]
 4805 0068 191C     	 mov r1,r3
 4806 006a FF23     	 mov r3,#255
 4807 006c 0B40     	 and r3,r1
 4808 006e 9A42     	 cmp r2,r3
 4809 0070 16D1     	 bne .L194
 4810              	 .loc 3 979 0 discriminator 2
 4811 0072 264B     	 ldr r3,.L197+24
 4812 0074 9B79     	 ldrb r3,[r3,#6]
 4813 0076 9AB2     	 uxth r2,r3
 4814 0078 234B     	 ldr r3,.L197+20
 4815 007a 1B88     	 ldrh r3,[r3]
 4816 007c 1B0A     	 lsr r3,r3,#8
 4817 007e 9BB2     	 uxth r3,r3
 4818 0080 9A42     	 cmp r2,r3
 4819 0082 0DD1     	 bne .L194
 4820              	 .loc 3 979 0 discriminator 3
 4821 0084 214B     	 ldr r3,.L197+24
 4822 0086 DB79     	 ldrb r3,[r3,#7]
 4823 0088 1A1C     	 mov r2,r3
 4824 008a 1F4B     	 ldr r3,.L197+20
 4825 008c 1B88     	 ldrh r3,[r3]
 4826 008e 191C     	 mov r1,r3
 4827 0090 FF23     	 mov r3,#255
 4828 0092 0B40     	 and r3,r1
 4829 0094 9A42     	 cmp r2,r3
 4830 0096 03D1     	 bne .L194
 980:../samuel/samuel_io.c **** 			 {
 981:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4831              	 .loc 3 981 0 is_stmt 1
 4832 0098 174B     	 ldr r3,.L197+4
 4833 009a 0022     	 mov r2,#0
 4834 009c 1A80     	 strh r2,[r3]
 4835 009e 23E0     	 b .L196
 4836              	.L194:
 982:../samuel/samuel_io.c **** 			 }
 983:../samuel/samuel_io.c **** 			 else{
 984:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4837              	 .loc 3 984 0
 4838 00a0 174B     	 ldr r3,.L197+12
 4839 00a2 1B88     	 ldrh r3,[r3]
 4840 00a4 1B0A     	 lsr r3,r3,#8
 4841 00a6 9BB2     	 uxth r3,r3
 4842 00a8 DAB2     	 uxtb r2,r3
 4843 00aa 184B     	 ldr r3,.L197+24
 4844 00ac 1A71     	 strb r2,[r3,#4]
 985:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4845              	 .loc 3 985 0
 4846 00ae 144B     	 ldr r3,.L197+12
 4847 00b0 1B88     	 ldrh r3,[r3]
 4848 00b2 DAB2     	 uxtb r2,r3
 4849 00b4 154B     	 ldr r3,.L197+24
 4850 00b6 5A71     	 strb r2,[r3,#5]
 986:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4851              	 .loc 3 986 0
 4852 00b8 134B     	 ldr r3,.L197+20
 4853 00ba 1B88     	 ldrh r3,[r3]
 4854 00bc 1B0A     	 lsr r3,r3,#8
 4855 00be 9BB2     	 uxth r3,r3
 4856 00c0 DAB2     	 uxtb r2,r3
 4857 00c2 124B     	 ldr r3,.L197+24
 4858 00c4 9A71     	 strb r2,[r3,#6]
 987:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4859              	 .loc 3 987 0
 4860 00c6 104B     	 ldr r3,.L197+20
 4861 00c8 1B88     	 ldrh r3,[r3]
 4862 00ca DAB2     	 uxtb r2,r3
 4863 00cc 0F4B     	 ldr r3,.L197+24
 4864 00ce DA71     	 strb r2,[r3,#7]
 988:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4865              	 .loc 3 988 0
 4866 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4867 00d4 021C     	 mov r2,r0
 4868 00d6 FB1D     	 add r3,r7,#7
 4869 00d8 1A70     	 strb r2,[r3]
 989:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4870              	 .loc 3 989 0
 4871 00da 074B     	 ldr r3,.L197+4
 4872 00dc 0022     	 mov r2,#0
 4873 00de 1A80     	 strh r2,[r3]
 4874 00e0 02E0     	 b .L196
 4875              	.L193:
 990:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 991:../samuel/samuel_io.c **** 			 }
 992:../samuel/samuel_io.c **** 			}
 993:../samuel/samuel_io.c **** 			else {
 994:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4876              	 .loc 3 994 0
 4877 00e2 054B     	 ldr r3,.L197+4
 4878 00e4 1E22     	 mov r2,#30
 4879 00e6 1A80     	 strh r2,[r3]
 4880              	.L196:
 995:../samuel/samuel_io.c **** 			}
 996:../samuel/samuel_io.c **** 
 997:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4881              	 .loc 3 997 0
 4882 00e8 034B     	 ldr r3,.L197+4
 4883 00ea 0022     	 mov r2,#0
 4884 00ec 1A80     	 strh r2,[r3]
 4885              	.L191:
 998:../samuel/samuel_io.c **** 	  }//zahler_offlight
 999:../samuel/samuel_io.c **** 	 }//regonoff
1000:../samuel/samuel_io.c ****  }
 4886              	 .loc 3 1000 0
 4887 00ee BD46     	 mov sp,r7
 4888 00f0 02B0     	 add sp,sp,#8
 4889              	 
 4890 00f2 80BD     	 pop {r7,pc}
 4891              	.L198:
 4892              	 .align 2
 4893              	.L197:
 4894 00f4 00000000 	 .word RegOnOff
 4895 00f8 00000000 	 .word zahler_offlight
 4896 00fc 00000000 	 .word dimAkt_Ww
 4897 0100 00000000 	 .word dimOff_Ww
 4898 0104 00000000 	 .word dimAkt_Cw
 4899 0108 00000000 	 .word dimOff_Cw
 4900 010c 00000000 	 .word ReadBuffer2
 4901              	 .cfi_endproc
 4902              	.LFE333:
 4904              	 .section .text.plus39V_stop,"ax",%progbits
 4905              	 .align 2
 4906              	 .global plus39V_stop
 4907              	 .code 16
 4908              	 .thumb_func
 4910              	plus39V_stop:
 4911              	.LFB334:
1001:../samuel/samuel_io.c **** 
1002:../samuel/samuel_io.c ****  //----------------------------------------------------
1003:../samuel/samuel_io.c **** 
1004:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
1005:../samuel/samuel_io.c ****   {
 4912              	 .loc 3 1005 0
 4913              	 .cfi_startproc
 4914 0000 80B5     	 push {r7,lr}
 4915              	.LCFI109:
 4916              	 .cfi_def_cfa_offset 8
 4917              	 .cfi_offset 7,-8
 4918              	 .cfi_offset 14,-4
 4919 0002 00AF     	 add r7,sp,#0
 4920              	.LCFI110:
 4921              	 .cfi_def_cfa_register 7
1006:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
1007:../samuel/samuel_io.c **** 
1008:../samuel/samuel_io.c **** 
1009:../samuel/samuel_io.c ****   }
 4922              	 .loc 3 1009 0
 4923 0004 BD46     	 mov sp,r7
 4924              	 
 4925 0006 80BD     	 pop {r7,pc}
 4926              	 .cfi_endproc
 4927              	.LFE334:
 4929              	 .section .text.plus39V_start,"ax",%progbits
 4930              	 .align 2
 4931              	 .global plus39V_start
 4932              	 .code 16
 4933              	 .thumb_func
 4935              	plus39V_start:
 4936              	.LFB335:
1010:../samuel/samuel_io.c **** 
1011:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
1012:../samuel/samuel_io.c ****   {
 4937              	 .loc 3 1012 0
 4938              	 .cfi_startproc
 4939 0000 80B5     	 push {r7,lr}
 4940              	.LCFI111:
 4941              	 .cfi_def_cfa_offset 8
 4942              	 .cfi_offset 7,-8
 4943              	 .cfi_offset 14,-4
 4944 0002 00AF     	 add r7,sp,#0
 4945              	.LCFI112:
 4946              	 .cfi_def_cfa_register 7
1013:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
1014:../samuel/samuel_io.c **** 
1015:../samuel/samuel_io.c ****   }
 4947              	 .loc 3 1015 0
 4948 0004 BD46     	 mov sp,r7
 4949              	 
 4950 0006 80BD     	 pop {r7,pc}
 4951              	 .cfi_endproc
 4952              	.LFE335:
 4954              	 .section .text.Time1msec,"ax",%progbits
 4955              	 .align 2
 4956              	 .global Time1msec
 4957              	 .code 16
 4958              	 .thumb_func
 4960              	Time1msec:
 4961              	.LFB336:
1016:../samuel/samuel_io.c **** 
1017:../samuel/samuel_io.c ****  //----------------------------------
1018:../samuel/samuel_io.c **** 
1019:../samuel/samuel_io.c ****   void Time1msec (void) //
1020:../samuel/samuel_io.c ****   {
 4962              	 .loc 3 1020 0
 4963              	 .cfi_startproc
 4964 0000 80B5     	 push {r7,lr}
 4965              	.LCFI113:
 4966              	 .cfi_def_cfa_offset 8
 4967              	 .cfi_offset 7,-8
 4968              	 .cfi_offset 14,-4
 4969 0002 00AF     	 add r7,sp,#0
 4970              	.LCFI114:
 4971              	 .cfi_def_cfa_register 7
1021:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4972              	 .loc 3 1021 0
 4973 0004 024B     	 ldr r3,.L202
 4974 0006 181C     	 mov r0,r3
 4975 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
1022:../samuel/samuel_io.c **** 
1023:../samuel/samuel_io.c ****   }
 4976              	 .loc 3 1023 0
 4977 000c BD46     	 mov sp,r7
 4978              	 
 4979 000e 80BD     	 pop {r7,pc}
 4980              	.L203:
 4981              	 .align 2
 4982              	.L202:
 4983 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4984              	 .cfi_endproc
 4985              	.LFE336:
 4987              	 .section .text.Time20msec,"ax",%progbits
 4988              	 .align 2
 4989              	 .global Time20msec
 4990              	 .code 16
 4991              	 .thumb_func
 4993              	Time20msec:
 4994              	.LFB337:
1024:../samuel/samuel_io.c ****   //----------------------------------
1025:../samuel/samuel_io.c **** 
1026:../samuel/samuel_io.c ****    void Time20msec (void) //
1027:../samuel/samuel_io.c ****    {
 4995              	 .loc 3 1027 0
 4996              	 .cfi_startproc
 4997 0000 80B5     	 push {r7,lr}
 4998              	.LCFI115:
 4999              	 .cfi_def_cfa_offset 8
 5000              	 .cfi_offset 7,-8
 5001              	 .cfi_offset 14,-4
 5002 0002 00AF     	 add r7,sp,#0
 5003              	.LCFI116:
 5004              	 .cfi_def_cfa_register 7
1028:../samuel/samuel_io.c **** 
1029:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
1030:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 5005              	 .loc 3 1030 0
 5006 0004 364B     	 ldr r3,.L211
 5007 0006 1B88     	 ldrh r3,[r3]
 5008 0008 1A1C     	 mov r2,r3
 5009 000a 131C     	 mov r3,r2
 5010 000c 5B00     	 lsl r3,r3,#1
 5011 000e 9B18     	 add r3,r3,r2
 5012 0010 344A     	 ldr r2,.L211+4
 5013 0012 1288     	 ldrh r2,[r2]
 5014 0014 9B18     	 add r3,r3,r2
 5015 0016 002B     	 cmp r3,#0
 5016 0018 00DA     	 bge .L205
 5017 001a 0333     	 add r3,r3,#3
 5018              	.L205:
 5019 001c 9B10     	 asr r3,r3,#2
 5020 001e 9AB2     	 uxth r2,r3
 5021 0020 2F4B     	 ldr r3,.L211
 5022 0022 1A80     	 strh r2,[r3]
1031:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 5023              	 .loc 3 1031 0
 5024 0024 304B     	 ldr r3,.L211+8
 5025 0026 1B88     	 ldrh r3,[r3]
 5026 0028 1A1C     	 mov r2,r3
 5027 002a 131C     	 mov r3,r2
 5028 002c 5B00     	 lsl r3,r3,#1
 5029 002e 9B18     	 add r3,r3,r2
 5030 0030 2E4A     	 ldr r2,.L211+12
 5031 0032 1288     	 ldrh r2,[r2]
 5032 0034 9B18     	 add r3,r3,r2
 5033 0036 002B     	 cmp r3,#0
 5034 0038 00DA     	 bge .L206
 5035 003a 0333     	 add r3,r3,#3
 5036              	.L206:
 5037 003c 9B10     	 asr r3,r3,#2
 5038 003e 9AB2     	 uxth r2,r3
 5039 0040 294B     	 ldr r3,.L211+8
 5040 0042 1A80     	 strh r2,[r3]
1032:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 5041              	 .loc 3 1032 0
 5042 0044 2A4B     	 ldr r3,.L211+16
 5043 0046 1B88     	 ldrh r3,[r3]
 5044 0048 1A1C     	 mov r2,r3
 5045 004a 131C     	 mov r3,r2
 5046 004c 5B00     	 lsl r3,r3,#1
 5047 004e 9B18     	 add r3,r3,r2
 5048 0050 284A     	 ldr r2,.L211+20
 5049 0052 1288     	 ldrh r2,[r2]
 5050 0054 9B18     	 add r3,r3,r2
 5051 0056 002B     	 cmp r3,#0
 5052 0058 00DA     	 bge .L207
 5053 005a 0333     	 add r3,r3,#3
 5054              	.L207:
 5055 005c 9B10     	 asr r3,r3,#2
 5056 005e 9AB2     	 uxth r2,r3
 5057 0060 234B     	 ldr r3,.L211+16
 5058 0062 1A80     	 strh r2,[r3]
1033:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 5059              	 .loc 3 1033 0
 5060 0064 244B     	 ldr r3,.L211+24
 5061 0066 1B88     	 ldrh r3,[r3]
 5062 0068 1A1C     	 mov r2,r3
 5063 006a 131C     	 mov r3,r2
 5064 006c 5B00     	 lsl r3,r3,#1
 5065 006e 9B18     	 add r3,r3,r2
 5066 0070 224A     	 ldr r2,.L211+28
 5067 0072 1288     	 ldrh r2,[r2]
 5068 0074 9B18     	 add r3,r3,r2
 5069 0076 002B     	 cmp r3,#0
 5070 0078 00DA     	 bge .L208
 5071 007a 0333     	 add r3,r3,#3
 5072              	.L208:
 5073 007c 9B10     	 asr r3,r3,#2
 5074 007e 9AB2     	 uxth r2,r3
 5075 0080 1D4B     	 ldr r3,.L211+24
 5076 0082 1A80     	 strh r2,[r3]
1034:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 5077              	 .loc 3 1034 0
 5078 0084 1E4B     	 ldr r3,.L211+32
 5079 0086 1B88     	 ldrh r3,[r3]
 5080 0088 0133     	 add r3,r3,#1
 5081 008a 9AB2     	 uxth r2,r3
 5082 008c 1C4B     	 ldr r3,.L211+32
 5083 008e 1A80     	 strh r2,[r3]
1035:../samuel/samuel_io.c **** 
1036:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 5084              	 .loc 3 1036 0
 5085 0090 1B4B     	 ldr r3,.L211+32
 5086 0092 1B88     	 ldrh r3,[r3]
 5087 0094 052B     	 cmp r3,#5
 5088 0096 21D9     	 bls .L204
1037:../samuel/samuel_io.c ****       {
1038:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
1039:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 5089              	 .loc 3 1039 0
 5090 0098 194B     	 ldr r3,.L211+32
 5091 009a 0022     	 mov r2,#0
 5092 009c 1A80     	 strh r2,[r3]
1040:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 5093              	 .loc 3 1040 0
 5094 009e 104B     	 ldr r3,.L211
 5095 00a0 1B88     	 ldrh r3,[r3]
 5096 00a2 184A     	 ldr r2,.L211+36
 5097 00a4 9342     	 cmp r3,r2
 5098 00a6 09D8     	 bhi .L210
1041:../samuel/samuel_io.c ****      	     {
1042:../samuel/samuel_io.c ****      	     plus39V_stop();
 5099              	 .loc 3 1042 0
 5100 00a8 FFF7FEFF 	 bl plus39V_stop
1043:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 5101              	 .loc 3 1043 0
 5102 00ac 164B     	 ldr r3,.L211+40
 5103 00ae 0022     	 mov r2,#0
 5104 00b0 1A70     	 strb r2,[r3]
1044:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 5105              	 .loc 3 1044 0
 5106 00b2 164B     	 ldr r3,.L211+44
 5107 00b4 181C     	 mov r0,r3
 5108 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 5109 00ba 0FE0     	 b .L204
 5110              	.L210:
1045:../samuel/samuel_io.c ****      	     }
1046:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 5111              	 .loc 3 1046 0
 5112 00bc 084B     	 ldr r3,.L211
 5113 00be 1A88     	 ldrh r2,[r3]
 5114 00c0 BF23     	 mov r3,#191
 5115 00c2 1B01     	 lsl r3,r3,#4
 5116 00c4 9A42     	 cmp r2,r3
 5117 00c6 09D9     	 bls .L204
1047:../samuel/samuel_io.c ****  			 {
1048:../samuel/samuel_io.c ****      	     plus39V_start();
 5118              	 .loc 3 1048 0
 5119 00c8 FFF7FEFF 	 bl plus39V_start
1049:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 5120              	 .loc 3 1049 0
 5121 00cc 0E4B     	 ldr r3,.L211+40
 5122 00ce 1B78     	 ldrb r3,[r3]
 5123 00d0 002B     	 cmp r3,#0
 5124 00d2 03D1     	 bne .L204
1050:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 5125              	 .loc 3 1050 0
 5126 00d4 0D4B     	 ldr r3,.L211+44
 5127 00d6 181C     	 mov r0,r3
 5128 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 5129              	.L204:
1051:../samuel/samuel_io.c ****  			 }
1052:../samuel/samuel_io.c ****       }
1053:../samuel/samuel_io.c **** 
1054:../samuel/samuel_io.c **** 
1055:../samuel/samuel_io.c ****    }
 5130              	 .loc 3 1055 0
 5131 00dc BD46     	 mov sp,r7
 5132              	 
 5133 00de 80BD     	 pop {r7,pc}
 5134              	.L212:
 5135              	 .align 2
 5136              	.L211:
 5137 00e0 00000000 	 .word resultA2
 5138 00e4 00000000 	 .word resultAalt
 5139 00e8 00000000 	 .word resultB2
 5140 00ec 00000000 	 .word resultBalt
 5141 00f0 00000000 	 .word resultC2
 5142 00f4 00000000 	 .word resultCalt
 5143 00f8 00000000 	 .word resultD2
 5144 00fc 00000000 	 .word resultDalt
 5145 0100 00000000 	 .word adc_ready20m
 5146 0104 9F0B0000 	 .word 2975
 5147 0108 00000000 	 .word B_nextLedOff
 5148 010c 00000000 	 .word VCC_LED_shtdwn
 5149              	 .cfi_endproc
 5150              	.LFE337:
 5152              	 .section .text.firstuartBack,"ax",%progbits
 5153              	 .align 2
 5154              	 .global firstuartBack
 5155              	 .code 16
 5156              	 .thumb_func
 5158              	firstuartBack:
 5159              	.LFB338:
1056:../samuel/samuel_io.c ****   //------------------------------
1057:../samuel/samuel_io.c **** 
1058:../samuel/samuel_io.c ****    void firstuartBack (void) //
1059:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 5160              	 .loc 3 1059 0
 5161              	 .cfi_startproc
 5162 0000 98B5     	 push {r3,r4,r7,lr}
 5163              	.LCFI117:
 5164              	 .cfi_def_cfa_offset 16
 5165              	 .cfi_offset 3,-16
 5166              	 .cfi_offset 4,-12
 5167              	 .cfi_offset 7,-8
 5168              	 .cfi_offset 14,-4
 5169 0002 00AF     	 add r7,sp,#0
 5170              	.LCFI118:
 5171              	 .cfi_def_cfa_register 7
 5172              	 .loc 3 1059 0
 5173 0004 174B     	 ldr r3,.L215
 5174 0006 1B78     	 ldrb r3,[r3]
 5175 0008 002B     	 cmp r3,#0
 5176 000a 29D1     	 bne .L213
1060:../samuel/samuel_io.c ****    	   {
1061:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 5177              	 .loc 3 1061 0
 5178 000c FFF7FEFF 	 bl new_data_HalloBack
1062:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 5179              	 .loc 3 1062 0
 5180 0010 154B     	 ldr r3,.L215+4
 5181 0012 3022     	 mov r2,#48
 5182 0014 5A71     	 strb r2,[r3,#5]
1063:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 5183              	 .loc 3 1063 0
 5184 0016 154B     	 ldr r3,.L215+8
 5185 0018 1B88     	 ldrh r3,[r3]
 5186 001a 1B0A     	 lsr r3,r3,#8
 5187 001c 9BB2     	 uxth r3,r3
 5188 001e DAB2     	 uxtb r2,r3
 5189 0020 114B     	 ldr r3,.L215+4
 5190 0022 9A71     	 strb r2,[r3,#6]
1064:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 5191              	 .loc 3 1064 0
 5192 0024 114B     	 ldr r3,.L215+8
 5193 0026 1B88     	 ldrh r3,[r3]
 5194 0028 DAB2     	 uxtb r2,r3
 5195 002a 0F4B     	 ldr r3,.L215+4
 5196 002c DA71     	 strb r2,[r3,#7]
1065:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 5197              	 .loc 3 1065 0
 5198 002e 104B     	 ldr r3,.L215+12
 5199 0030 1B88     	 ldrh r3,[r3]
 5200 0032 1B0A     	 lsr r3,r3,#8
 5201 0034 9BB2     	 uxth r3,r3
 5202 0036 DAB2     	 uxtb r2,r3
 5203 0038 0B4B     	 ldr r3,.L215+4
 5204 003a 1A72     	 strb r2,[r3,#8]
1066:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 5205              	 .loc 3 1066 0
 5206 003c 0C4B     	 ldr r3,.L215+12
 5207 003e 1B88     	 ldrh r3,[r3]
 5208 0040 DAB2     	 uxtb r2,r3
 5209 0042 094B     	 ldr r3,.L215+4
 5210 0044 5A72     	 strb r2,[r3,#9]
1067:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 5211              	 .loc 3 1067 0
 5212 0046 0B4B     	 ldr r3,.L215+16
 5213 0048 1B78     	 ldrb r3,[r3]
 5214 004a 1C1C     	 mov r4,r3
 5215 004c 0A4A     	 ldr r2,.L215+20
 5216 004e 064B     	 ldr r3,.L215+4
 5217 0050 101C     	 mov r0,r2
 5218 0052 191C     	 mov r1,r3
 5219 0054 221C     	 mov r2,r4
 5220 0056 FFF7FEFF 	 bl UART_Transmit
1068:../samuel/samuel_io.c ****    	   B_first_uart=1;
 5221              	 .loc 3 1068 0
 5222 005a 024B     	 ldr r3,.L215
 5223 005c 0122     	 mov r2,#1
 5224 005e 1A70     	 strb r2,[r3]
 5225              	.L213:
1069:../samuel/samuel_io.c ****    	   }
1070:../samuel/samuel_io.c ****    }
 5226              	 .loc 3 1070 0
 5227 0060 BD46     	 mov sp,r7
 5228              	 
 5229 0062 98BD     	 pop {r3,r4,r7,pc}
 5230              	.L216:
 5231              	 .align 2
 5232              	.L215:
 5233 0064 00000000 	 .word B_first_uart
 5234 0068 00000000 	 .word new_data
 5235 006c 00000000 	 .word Ser_NrH
 5236 0070 00000000 	 .word Ser_NrL
 5237 0074 00000000 	 .word transmit_buf_size
 5238 0078 00000000 	 .word UART_1
 5239              	 .cfi_endproc
 5240              	.LFE338:
 5242              	 .text
 5243              	.Letext0:
 5244              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5245              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5246              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 5247              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc/xmc1_gpio.h"
 5248              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc/xmc_usic.h"
 5249              	 .file 9 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc/xmc_uart.h"
 5250              	 .file 10 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/UART/uart.h"
 5251              	 .file 11 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 5252              	 .file 12 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc/xmc_vadc.h"
 5253              	 .file 13 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 5254              	 .file 14 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc/xmc_bccu.h"
 5255              	 .file 15 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 5256              	 .file 16 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIM_BCCU/dim_bccu.h"
 5257              	 .file 17 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 5258              	 .file 18 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 5259              	 .file 19 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 5260              	 .file 20 "../samuel/samuel_io.h"
 5261              	 .file 21 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5262              	 .file 22 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/UART/uart_extern.h"
 5263              	 .file 23 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 5264              	 .file 24 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 5265              	 .file 25 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 5266              	 .file 26 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4731   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:5158   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:962    .text.lightprog01:0000034c $d
    {standard input}:969    .text.light_aus:00000000 $t
    {standard input}:974    .text.light_aus:00000000 light_aus
    {standard input}:4487   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:4250   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:1028   .text.light_aus:00000048 $d
    {standard input}:1038   .text.analog_start:00000000 $t
    {standard input}:1043   .text.analog_start:00000000 analog_start
    {standard input}:1063   .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:1068   .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:1088   .text.new_data_fill:00000000 $t
    {standard input}:1093   .text.new_data_fill:00000000 new_data_fill
    {standard input}:1160   .text.new_data_fill:00000050 $d
    {standard input}:1166   .text.new_data_unbekanntBack:00000000 $t
    {standard input}:1171   .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:1240   .text.new_data_unbekanntBack:00000054 $d
    {standard input}:1247   .text.new_data_BroadcastBack:00000000 $t
    {standard input}:1252   .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:1333   .text.new_data_BroadcastBack:0000006c $d
    {standard input}:1342   .text.new_data_analog1Back:00000000 $t
    {standard input}:1347   .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1428   .text.new_data_analog1Back:0000006c $d
    {standard input}:1437   .text.new_data_analog2Back:00000000 $t
    {standard input}:1442   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1523   .text.new_data_analog2Back:0000006c $d
    {standard input}:1532   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1537   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1618   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1627   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1632   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1723   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1734   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1739   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1820   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1829   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1834   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1915   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1924   .text.new_data_HalloBack:00000000 $t
    {standard input}:1929   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1998   .text.new_data_HalloBack:00000054 $d
    {standard input}:2005   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:2010   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:2096   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:2106   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:2111   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:2220   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:2231   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:2236   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:2327   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:2337   .text.new_data_SerNrBack:00000000 $t
    {standard input}:2342   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2423   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2432   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2437   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2574   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2582   .text.clearEpromBuffer:00000000 $t
    {standard input}:2587   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2684   .text.clearEpromBuffer:00000080 $d
    {standard input}:2692   .text.fillEpromBuffer:00000000 $t
    {standard input}:2697   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2743   .text.fillEpromBuffer:00000034 $d
    {standard input}:2749   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2754   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2802   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2808   .text.readAllEEprom:00000000 $t
    {standard input}:2813   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:3053   .text.readAllEEprom:00000194 $d
    {standard input}:3077   .text.readSerNrEEprom:00000000 $t
    {standard input}:3082   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:3133   .text.readSerNrEEprom:00000044 $d
    {standard input}:3140   .text.readNodeIdEEprom:00000000 $t
    {standard input}:3145   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:3196   .text.readNodeIdEEprom:00000044 $d
    {standard input}:3203   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:3208   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:3259   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:3266   .text.read_off_light_EEprom:00000000 $t
    {standard input}:3271   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:3322   .text.read_off_light_EEprom:00000044 $d
    {standard input}:3329   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:3334   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3403   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3411   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3416   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3485   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3493   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3498   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3567   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3575   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3580   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3649   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3657   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3662   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3731   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3739   .text.sysiniValueB1:00000000 $t
    {standard input}:3744   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3809   .text.sysiniValueB1:00000050 $d
    {standard input}:3825   .text.sysiniValueB2:00000000 $t
    {standard input}:3830   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3892   .text.sysiniValueB2:0000004c $d
    {standard input}:3908   .text.sysiniValueB4:00000000 $t
    {standard input}:3913   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:4025   .text.sysiniValueB4:000000a0 $d
    {standard input}:4047   .text.sysiniValueB5:00000000 $t
    {standard input}:4052   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:4107   .text.sysiniValueB5:00000040 $d
    {standard input}:4123   .text.bcuInit:00000000 $t
    {standard input}:4128   .text.bcuInit:00000000 bcuInit
    {standard input}:4151   .rodata.bcuInit:00000000 $d
    {standard input}:4230   .text.bcuInit:0000006c $d
    {standard input}:4245   .text.bcuUebergabe:00000000 $t
    {standard input}:4333   .text.bcuUebergabe:00000088 $d
    {standard input}:4349   .text.bcuAktBerechnung:00000000 $t
    {standard input}:4354   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4467   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4482   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4605   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4620   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4625   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4717   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4726   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4894   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4905   .text.plus39V_stop:00000000 $t
    {standard input}:4910   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4930   .text.plus39V_start:00000000 $t
    {standard input}:4935   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4955   .text.Time1msec:00000000 $t
    {standard input}:4960   .text.Time1msec:00000000 Time1msec
    {standard input}:4983   .text.Time1msec:00000010 $d
    {standard input}:4988   .text.Time20msec:00000000 $t
    {standard input}:4993   .text.Time20msec:00000000 Time20msec
    {standard input}:5137   .text.Time20msec:000000e0 $d
    {standard input}:5153   .text.firstuartBack:00000000 $t
    {standard input}:5233   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
