   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "global_bccu.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_BCCU_EnableInterrupt,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_BCCU_EnableInterrupt:
  23              	.LFB48:
  24              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc/xmc_bccu.h"
   1:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @file xmc_bccu.h
   3:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * 2015-02-19:
  40:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * 2015-05-08:
  44:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - Minor bug fix in XMC_BCCU_ClearEventFlag().
  45:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - New APIs are added: XMC_BCCU_DIM_ReadDimDivider(), XMC_BCCU_DIM_GetDimCurve(), XMC_BCCU_Is
  46:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  47:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * 2015-06-20:
  48:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  50:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * <b>Detailed description of file:</b><br>
  51:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * APIs for the functional blocks of BCCU have been defined:<br>
  52:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -- GLOBAL configuration <br>
  53:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration <br>
  54:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #ifndef XMC_BCCU_H
  60:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #define XMC_BCCU_H
  61:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
  62:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
  63:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * HEADER FILES
  64:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
  65:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #include <xmc_common.h>
  66:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
  67:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
  68:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @addtogroup XMClib XMC Peripheral Library
  69:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @{
  70:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
  71:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
  72:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
  73:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @addtogroup BCCU
  74:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @brief Brightness and Color Control Unit (BCCU) driver for the XMC1 microcontroller family.
  75:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  76:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *   The Brightness and Color Control Unit (BCCU) is a dimming control peripheral for LED lighting 
  77:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * module can be used to control multiple LED channels. Every channel generates one-bit sigma-delta
  78:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * user adjustable 12-bit average value. The dimming engine changes the brightness gradually (expon
  79:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * natural to the human eye. It supports color control by adjusting the relative intensity of selec
  80:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * linear walk scheme for smooth color changes. It also supports high-power multi-channel LED lamps
  81:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * the bitstream. The optional packer which decreases the average rate of output switching by enfor
  82:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * The BCCU module generates two trigger signals to the ADC (BCCU_TRIGOUT0 and BCCU_TRIGOU1) to sta
  83:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * synchronized manner. The module can also be used as a multi-channel digital-analog converter wit
  84:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * outputs. The BCCU module supports 3 independent dimming engines, 9 independent channels, Trap fu
  85:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * triggering modes.
  86:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  87:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * The driver is divided into global control (BCCU), channel control (BCCU_CH) and dimming control 
  88:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * 
  89:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * BCCU features:
  90:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configuration structure XMC_BCCU_GLOBAL_CONFIG_t and initialization function XMC_BCCU_GlobalI
  91:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring of clock settings (Fast clock, Bit clock and Dimming clock). XMC_BCCU_SetF
  92:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# XMC_BCCU_SelectBitClock(), XMC_BCCU_SetDimClockPrescaler().
  93:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring global trigger settings. XMC_BCCU_ConfigGlobalTrigger()
  94:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows enabling multiple channels together. XMC_BCCU_ConcurrentEnableChannels()
  95:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows enabling single channel. XMC_BCCU_EnableChannel()
  96:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring global dimming level. XMC_BCCU_SetGlobalDimmingLevel()
  97:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Starts linear walk for multiple channels together. XMC_BCCU_ConcurrentStartLinearWalk().
  98:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Starts linear walk for single channel. XMC_BCCU_StartLinearWalk().
  99:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Starts dimming for multiple dimming engines together. XMC_BCCU_ConcurrentStartDimming().
 100:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Starts dimming for single dimming engine. XMC_BCCU_StartDimming().
 101:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 102:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * BCCU_CH features:
 103:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configuration structure (XMC_BCCU_CH_t and initialization function XMC_BCCU_CH_Init()
 104:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows selecting dimming engine. XMC_BCCU_CH_SelectDimEngine().
 105:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows setting target channel intensity. XMC_BCCU_CH_SetTargetIntensity().
 106:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows knowing the status of linear walk completion. XMC_BCCU_IsLinearWalkComplete()
 107:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows setting flicker watchdog. XMC_BCCU_CH_EnableFlickerWatchdog().
 108:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring packer settings. XMC_BCCU_CH_EnablePacker(), XMC_BCCU_CH_SetPackerThreshol
 109:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerOffCompare(), XMC_BCCU_CH_SetPackerOffCounte(), XMC_BCCU_CH_SetPackerOnCoun
 110:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows selecting dimming bypass. XMC_BCCU_CH_DisableDimmingBypass()
 111:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 112:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * BCCU_DIM features:
 113:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configuration structure (XMC_BCCU_DIM_t and initialization function XMC_BCCU_DIM_Init()
 114:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows setting target dimming engine intensity. XMC_BCCU_DIM_SetTargetDimmingLevel().
 115:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DIM_SetTargetDimmingLevel
 116:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows knowing the status of dimming completion. XMC_BCCU_IsDimmingFinished()
 117:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring dimming divider. XMC_BCCU_DIM_SetDimDivider()
 118:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring dimming curve. XMC_BCCU_DIM_ConfigDimCurve()
 119:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * 
 120:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * <b> Recommended programming sequence: </b>
 121:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Set output passive and active levels using XMC_BCCU_ConcurrentSetOutputPassiveLevel() or XMC_
 122:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Initializes global features using XMC_BCCU_GlobalInit()
 123:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Initializes channel features using XMC_BCCU_CH_Init()
 124:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Initializes dimming engine using XMC_BCCU_DIM_Init()
 125:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Enable channels using XMC_BCCU_ConcurrentEnableChannels() or XMC_BCCU_EnableChannel()
 126:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Enable dimming engines using XMC_BCCU_ConcurrentEnableDimmingEngine() or XMC_BCCU_EnableDimmi
 127:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configure channel linear walk prescaler using XMC_BCCU_CH_SetLinearWalkPrescaler()
 128:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configure dimming divider using XMC_BCCU_DIM_SetDimDivider()
 129:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Set target intensities of channels using XMC_BCCU_CH_SetTargetIntensity()
 130:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Set target dim levels of dimming engines using XMC_BCCU_DIM_SetTargetDimmingLevel()
 131:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Start linear walk of the channels using XMC_BCCU_ConcurrentStartLinearWalk() or XMC_BCCU_Star
 132:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Start dimming of the dimming engines using XMC_BCCU_ConcurrentStartDimming() or XMC_BCCU_Star
 133:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Check the status of linear walk completion using XMC_BCCU_IsLinearWalkComplete()
 134:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Check the status of dimming completion XMC_BCCU_IsDimmingFinished()
 135:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @{
 136:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 137:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #if defined (BCCU0)
 139:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
 141:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * MACROS
 142:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
 143:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 144:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
 145:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * ENUMS
 146:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 148:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Defines the status of BCCU driver, to verify the related API calls. Use type \a XMC_BCCU_STATUS_
 149:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 150:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  typedef enum {
 151:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_STATUS_SUCCESS = 0U, /**< Operation completed successfully */
 152:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_STATUS_ERROR = 1U, /**< Operation has some errors */
 153:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_STATUS_t;
 154:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  
 155:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select bit clock mode.
 157:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 158:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 159:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_BCLK_MODE_NORMAL = 0U, /**< Normal Mode: Bit clock runs at 1/4 of fast clock */
 160:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_BCLK_MODE_FAST = 1U, /**< Fast Mode: Bit clock runs at same as fast clock */
 161:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_BCLK_MODE_t;
 162:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 163:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 164:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trigger mode.
 165:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 166:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 167:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGMODE0 = 0U, /**< Mode0: Trigger on Any Channel using OR logic */
 168:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGMODE1 = 1U, /**< Mode1: Trigger on Active channel using round-robin*/
 169:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRIGMODE_t;
 170:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 171:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 172:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trigger delay, and only be used if Bit clock in Normal mode
 173:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 174:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 175:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGDELAY_NO_DELAY = 0U, /**< BCCU trigger occurs on channel trigger(without delay) */
 176:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGDELAY_QUARTER_BIT = 1U, /**< BCCU trigger occurs on 1/4 bit time delayed after channe
 177:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGDELAY_HALF_BIT = 2U, /**< BCCU trigger occurs on 1/2 bit time delayed after channel t
 178:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRIGDELAY_t;
 179:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 181:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select suspend mode
 182:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 184:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_SUSPEND_MODE_IGNORE = 0U, /**< Request ignored, and module cannot get suspended */
 185:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_SUSPEND_MODE_FREEZE = 1U, /**< All running channels gets stopped, and freeze into a last 
 186:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   */
 187:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_SUSPEND_MODE_SAFE_FREEZE = 2U, /**< All running channels gets stopped, and freeze into a 
 188:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   stop) */
 189:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_SUSPEND_MODE_t;
 190:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 191:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 192:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trap edge
 193:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 194:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 195:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAPEDGE_RISING = 0U, /**< Trap on rising edge of the BCCU.TRAPL signal */
 196:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAPEDGE_FALLING = 1U, /**< Trap on falling edge of the BCCU.TRAPL signal */
 197:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRAPEDGE_t;
 198:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 199:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 200:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to enable/disable the events.
 201:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * The members can be combined using 'OR' operator for multiple selection.<br>
 202:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 203:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 204:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_TRIGGER0 = 0x1U, /**< Trigger 0 event */
 205:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_TRIGGER1 = 0x2U, /**< Trigger 1 event */
 206:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_FIFOFULL = 0x4U, /**< FIFO Full event */
 207:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_FIFOEMPTY = 0x8U, /**< FIFO Empty event */
 208:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_TRAP = 0x10U, /**< Trap event */
 209:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_EVENT_t;
 210:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 211:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 212:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to know the status of the event flags.
 213:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * The members can be combined using 'OR' operator for multiple selection.<br>
 214:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 215:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 216:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_TRIGGER0 = 0x1U, /**< Trigger 0 Event flag status */
 217:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_TRIGGER1 = 0x2U, /**< Trigger 1 Event flag status */
 218:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_FIFOFULL = 0x4U, /**< FIFO Full Event flag status */
 219:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_FIFOEMPTY = 0x8U, /**< FIFO Empty Event flag status */
 220:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_TRAP = 0x10U, /**< Trap Event flag status (Without Trap Set) */
 221:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_TRAP_STATE = 0x40U, /**< Trap state flag status */
 222:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_EVENT_STATUS_t;
 223:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to know the status of trap occurrence
 226:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 228:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAP_STATUS_DEACTIVE = 0x0U, /**< BCCU module is not in a Trap State */
 229:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAP_STATUS_ACTIVE = 0x1U, /**< BCCU module is in a Trap State */
 230:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRAP_STATUS_t;
 231:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 232:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 233:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to know the current level of trap
 234:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 235:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 236:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAP_LEVEL_LOW = 0x0U, /**< BCCU.TRAPL is Low */
 237:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAP_LEVEL_HIGH = 0x1U, /**< BCCU.TRAPL is High */
 238:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRAP_LEVEL_t;
 239:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 240:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 241:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select flicker watchdog enable/disable
 242:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 243:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 244:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_FLICKER_WD_DS = 0U, /**< Disable: No control over a sigma-delta modulator output */
 245:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_FLICKER_WD_EN = 1U, /**< Enable: Limit consecutive zeros at sigma-delta modulator out
 246:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_FLICKER_WD_t;
 247:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 248:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 249:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select gating functionality enable/disable, and be used for peak-current
 250:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 251:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 252:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_GATING_FUNC_DISABLE = 0U, /**< Disable: No control over a BCCU module output  */
 253:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_GATING_FUNC_ENABLE = 1U, /**< Enable: External gating signal which controls BCCU modu
 254:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_GATING_FUNC_t;
 255:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 257:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to bypass dimming engine
 258:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 259:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 260:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_ENGINE_BYPASS_DISABLE = 0U, /**< Disable: Brightness = Dimming Level * Intens
 261:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_ENGINE_BYPASS_ENABLE = 1U,   /**< Enable: Brightness = Intensity */
 262:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_DIMMING_ENGINE_BYPASS_t;
 263:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 264:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 265:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select passive level of the channel output
 266:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 267:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum{
 268:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_ACTIVE_LEVEL_HIGH = 0U, /**< Default passive level of the channel is low */
 269:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_ACTIVE_LEVEL_LOW = 1U, /**< Default passive level of the channel is high */
 270:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_ACTIVE_LEVEL_t;
 271:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trigger edge
 274:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 275:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum
 276:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 277:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRIG_EDGE_PASS_TO_ACT = 0U,  /**< Trigger on output transition from passive to active
 278:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRIG_EDGE_ACT_TO_PASS = 1U,  /**< Trigger on output transition from active to passive
 279:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_TRIG_EDGE_t;
 280:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 281:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 282:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select source of trap input
 283:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 284:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum
 285:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 286:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INA = 0x0U,  /**< Trap INA */
 287:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INB = 0x1U,  /**< Trap INB */
 288:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INC = 0x2U,  /**< Trap INC */
 289:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_IND = 0x3U,  /**< Trap IND */
 290:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INE = 0x4U,  /**< Trap INE */
 291:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INF = 0x5U,  /**< Trap INF */
 292:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_ING = 0x6U,  /**< Trap ING */
 293:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INH = 0x7U,  /**< Trap INH */
 294:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INI = 0x8U,  /**< Trap INI */
 295:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INJ = 0x9U,  /**< Trap INJ */
 296:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INK = 0xAU, /**< Trap INK */
 297:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INL = 0xBU, /**< Trap INL */
 298:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INM = 0xCU, /**< Trap INM */
 299:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INN = 0xDU, /**< Trap INN */
 300:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INO = 0xEU, /**< Trap INO */
 301:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INP = 0xFU, /**< Trap INP */
 302:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_TRAP_IN_t;
 303:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 304:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 305:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select edge for trap occurrence
 306:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 307:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum
 308:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 309:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_EDGE_RISING = 0U, /**< Trap on rising edge of the BCCU.TRAPL signal */
 310:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_EDGE_FALLING = 1U  /**< Trap on falling edge of the BCCU.TRAPL signal */
 311:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_TRAP_EDGE_t;
 312:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 314:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trigger output, and only be used in XMC_BCCU_TRIGMODE1
 315:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 316:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 317:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRIGOUT0 = 0U, /**< Trigger occurrence on BCCU_TRIGOUT0 signal */
 318:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRIGOUT1 = 1U, /**< Trigger occurrence on BCCU_TRIGOUT1 signal */
 319:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_TRIGOUT_t;
 320:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 321:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 322:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select dimming source of the channel
 323:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 324:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 325:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_SOURCE_GLOBAL = 7U, /**< Global Dimming Engine */
 326:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_SOURCE_DE0 = 0U, /**< Dimming Engine 0 */
 327:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_SOURCE_DE1 = 1U, /**< Dimming Engine 1 */
 328:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_SOURCE_DE2 = 2U, /**< Dimming Engine 2 */
 329:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_DIMMING_SOURCE_t;
 330:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 331:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 332:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select exponential dimming curve
 333:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 334:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 335:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_DIM_CURVE_COARSE = 0U, /**< Coarse curve: Slope of the linear pieces doubles every time, 
 336:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   thresholds of 16, 32, 64, 128, 256, 512, 1024, 2048 */
 337:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_DIM_CURVE_FINE = 1U, /**< Fine Curve: More pieces and different line slopes */
 338:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_DIM_CURVE_t;
 339:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 340:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
 341:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * DATA STRUCTURES
 342:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
 343:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 344:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redefinition of BCCU module structure; pointer to bccu module base address
 345:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 346:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef BCCU_Type XMC_BCCU_t;
 347:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 348:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 349:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redefinition of BCCU module channel structure; pointer to bccu module channel Base address
 350:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 351:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef BCCU_CH_Type XMC_BCCU_CH_t;
 352:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 353:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 354:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redefinition of BCCU module dimming engine structure; pointer to bccu module dimming engine base
 355:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 356:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef BCCU_DE_Type XMC_BCCU_DIM_t;
 357:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 358:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /*Anonymous structure/union guard start*/
 359:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #if defined(__CC_ARM)
 360:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma push
 361:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma anon_unions
 362:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #elif defined(__TASKING__)
 363:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma warning 586
 364:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 365:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 366:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 367:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures a global setting of the BCCU module.
 368:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 369:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_GLOBAL_CONFIG
 370:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 371:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 372:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 373:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t trig_mode:1; /**< Selects trigger Mode. Use type @ref XMC_BCCU_TRIGMODE_t */
 374:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 1;
 375:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t trig_delay:2; /**< Selects trigger delay between channel & module trigger. \n Use ty
 376:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       XMC_BCCU_TRIGDELAY_t */
 377:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 12;
 378:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t maxzero_at_output:12; /**< Configures maximum 0's allowed at modulator output */
 379:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 380:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t globcon; /* Not to use */
 381:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 382:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 383:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 384:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t fclk_ps:12; /**< Configures the ratio between fast clock and module clock */
 385:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 3;
 386:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t bclk_sel:1; /**< Selects the bit clock. Use type @ref XMC_BCCU_BCLK_MODE_t */
 387:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dclk_ps:12; /**< Configures the ratio between dimmer clock and module clock */
 388:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 389:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t globclk; /* Not to use */
 390:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 391:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t global_dimlevel; /**< Configures global dimming engine dimming level */
 392:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_GLOBAL_CONFIG_t;
 393:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 394:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 395:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 396:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures global trigger settings of the BCCU module.
 397:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 398:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_TRIG_CONFIG
 399:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 400:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_TRIGMODE_t  mode; /**< Selects global trigger mode which decides when to occur BCCU trig
 401:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_TRIGDELAY_t delay; /**< Selects global trigger delay between channel trigger & BCCU trig
 402:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint16_t             mask_chans; /**< Channel mask to configure trigger settings for multiple cha
 403:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                         If channel 0 and 7, wants to configure then the channel mas
 404:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint16_t             mask_trig_lines; /**< Trigger line mask */
 405:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRIG_CONFIG_t;
 406:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 407:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 408:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures channel settings of the BCCU module.
 409:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 410:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #ifdef DOXYGEN 
 411:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_CH_CONFIG
 412:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 413:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_thresh:3; /**< Configures packer threshold value of FIFO */
 414:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_en:1; /**< Enables a packed output bitstream */
 415:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t dim_sel:3; /**< Selects a dimming engine source of the channel. \n Use type @ref XMC_BCC
 416:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t dim_bypass:1; /**< Selects dimming engine bypass enable. \n Use type @ref XMC_BCCU_CH_DI
 417:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t gate_en:1; /**< Selects gating enable. Use type @ref XMC_BCCU_CH_GATING_FUNC_t */
 418:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t flick_wd_en:1; /**< Selects flicker watchdog enable. Use type @ref XMC_BCCU_CH_FLICKER_W
 419:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t trig_edge:1; /**< Selects trigger edge. Use type @ref XMC_BCCU_CH_TRIG_EDGE_t */
 420:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t force_trig_en:1; /**< Selects force trigger enable; generates a trigger if modulator out
 421:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   256 bclk cycles */
 422:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_offcmp_lev:8; /**< Configures a packer off-time compare level. When the off-time co
 423:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   measured on & off time counters are stored into FIFO */
 424:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_oncmp_lev:8; /**< Configures a packer on-time compare level. When the on-time count
 425:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                         the measured on & off time counters are stored into FIFO */
 426:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_offcnt_val:8; /**< Configures an initial packer off-time counter level, only if cha
 427:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                         Controls phase shift of the modulator output */
 428:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_oncnt_val:8; /**< Configures an initial packer on-time counter level, only if chann
 429:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                         Controls phase shift of the modulator output */
 430:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }XMC_BCCU_CH_CONFIG_t;
 431:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 432:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  
 433:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_CH_CONFIG
 434:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 435:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 436:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 437:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_thresh:3; /**< Configures packer threshold value of FIFO */
 438:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_en:1; /**< Enables a packed output bitstream */
 439:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dim_sel:3; /**< Selects a dimming engine source of the channel. \n Use type @ref XMC
 440:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       */
 441:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dim_bypass:1; /**< Selects dimming engine bypass enable. \n Use type @ref XMC_BCCU_C
 442:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t gate_en:1; /**< Selects gating enable. Use type @ref XMC_BCCU_CH_GATING_FUNC_t */
 443:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t flick_wd_en:1; /**< Selects flicker watchdog enable. Use type @ref XMC_BCCU_CH_FLICK
 444:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t trig_edge:1; /**< Selects trigger edge. Use type @ref XMC_BCCU_CH_TRIG_EDGE_t */
 445:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t force_trig_en:1; /**< Selects force trigger enable; generates a trigger if modulator
 446:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       for 256 bclk cycles */
 447:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 448:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	uint32_t chconfig; /* Not to use */
 449:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 450:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 451:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 452:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_offcmp_lev:8; /**< Configures a packer off-time compare level. When the off-tim
 453:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                        this, the measured on & off time counters are stored into FI
 454:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 8;
 455:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_oncmp_lev:8; /**< Configures a packer on-time compare level. When the on-time c
 456:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                         the measured on & off time counters are stored into FIFO */
 457:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 458:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t pkcmp; /* Not to use */
 459:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 460:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 461:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 462:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_offcnt_val:8; /**< Configures an initial packer off-time counter level, only if
 463:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                         Controls phase shift of the modulator output */
 464:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 8;
 465:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_oncnt_val:8; /**< Configures an initial packer on-time counter level, only if c
 466:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                         Controls phase shift of the modulator output */
 467:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 468:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t pkcntr; /* Not to use */
 469:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 470:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }XMC_BCCU_CH_CONFIG_t;
 471:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 472:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 473:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures dimming engine settings of the BCCU module.
 474:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 475:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #ifdef DOXYGEN
 476:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_DIM_CONFIG
 477:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 478:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t dim_div:10; /**< Configures a dimming clock divider, used to adjust the fade rate. If 0,
 479:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                  as same as target dimming level on shadow transfer */
 480:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t dither_en:1; /**< Selects a dither enable. Dithering added for every dimming step if dim
 481:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t cur_sel:1; /**< Selects a type of exponential curve. Use type @ref XMC_BCCU_DIM_CURVE_t.
 482:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                 enabled, the configuration is being ignored */
 483:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }XMC_BCCU_DIM_CONFIG_t;
 484:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 485:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 486:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_DIM_CONFIG
 487:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 488:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 489:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 490:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dim_div:10; /**< Configures a dimming clock divider, used to adjust the fade rate. I
 491:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                  as same as target dimming level on shadow transfer */
 492:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 6;
 493:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dither_en:1; /**< Selects a dither enable. Dithering added for every dimming step if
 494:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t cur_sel:1; /**< Selects a type of exponential curve. Use type @ref XMC_BCCU_DIM_CURV
 495:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****                                 enabled, the configuration is being ignored */
 496:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 497:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t dtt; /* Not to use */
 498:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 499:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }XMC_BCCU_DIM_CONFIG_t;
 500:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 501:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /*Anonymous structure/union guard end*/
 502:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #if defined(__CC_ARM)
 503:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma pop
 504:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #elif defined(__TASKING__)
 505:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma warning restore
 506:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 507:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
 508:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * API PROTOTYPES
 509:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
 510:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #ifdef __cplusplus
 511:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** extern "C" {
 512:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 513:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 514:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 515:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 516:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 517:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param config Pointer to constant bccu global configuration data structure. Use type @ref XMC_BC
 518:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 519:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 520:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 521:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 522:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Initializes three main clocks (fast clock, bit clock, dimmer clock) by using \a fclk_ps \a bclk_
 523:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * and writing into a GLOBCLK register.\n
 524:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * And also configures a trigger mode, trigger delay, maximum 0's allowed at modulator output by wr
 525:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * register.\n\n
 526:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 527:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 528:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_Init(), XMC_BCCU_DIM_Init()\n\n\n
 529:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** */
 530:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_GlobalInit (XMC_BCCU_t *const bccu, const XMC_BCCU_GLOBAL_CONFIG_t *const config);
 531:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 532:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 533:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 534:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 535:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mode Trigger mode selection. \b Range: XMC_BCCU_TRIGMODE0, XMC_BCCU_TRIGMODE1.\n
 536:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                             1. XMC_BCCU_TRIGMODE0 - Trigger on Any Channel
 537:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                             2. XMC_BCCU_TRIGMODE1 - Trigger on Active channel
 538:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param delay Delay to avoid sampling during switching noise. Use type @ref XMC_BCCU_TRIGDELAY_t.
 539:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_NO_DELAY, XMC_BCCU_QUARTER_BIT_DELAY, XMC_BCCU_HALF_BIT_DELAY.
 540:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 541:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 542:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 543:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 544:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures trigger mode and trigger delay by writing register bits GLOBCON.TM, GLOBCON.TRDEL. \a
 545:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * parameters which decides when to trigger a conversion of vadc module for voltage measurement. \n
 546:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 547:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 548:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableChannelTrigger(), XMC_BCCU_ReadGlobalTrigger(), XMC_BCCU_ConcurrentConfigTrigger(
 549:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ReadLastTrigChanNr(), XMC_BCCU_GetChannelOutputLvlAtLastTrigger(), XMC_BCCU_CH_ConfigTr
 550:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 551:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConfigGlobalTrigger(XMC_BCCU_t *const bccu, XMC_BCCU_TRIGMODE_t mode, XMC_BCCU_TRIGDE
 552:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 553:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 554:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 555:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 556:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 557:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Source of Trigger mode. \b Range: 0 or 1 \n
 558:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *         0 - Trigger mode 0 (Trigger on Any Channel) \n
 559:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *         1 - Trigger mode 1 (Trigger on Active Channel)\n\n
 560:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 561:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves global trigger mode of the BCCU module by reading the register bit GLOBCON_TM. Use XMC
 562:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * validate a returned value.\n\n
 563:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 564:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 565:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_ConcurrentConfigTrigger(), XMC_BCCU_GlobalInit()\n\n\n
 566:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 567:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadGlobalTrigger (XMC_BCCU_t *const bccu)
 568:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 569:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	return (uint32_t)(bccu->GLOBCON & BCCU_GLOBCON_TM_Msk);
 570:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 571:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 572:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 573:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 574:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 575:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param input Trap input selection. Use type @ref XMC_BCCU_TRIGDELAY_t. 
 576:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_TRIGDELAY_NO_DELAY, XMC_BCCU_TRIGDELAY_QUARTER_BIT, XMC_BCCU_TRI
 577:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 578:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 579:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 580:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 581:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Selects input of trap functionality by writing register bit GLOBCON_TRAPIS. The trap functionali
 582:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * off the connected power devices when trap input becomes active.\n\n
 583:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 584:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 585:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetTrapEdge(), XMC_BCCU_ReadTrapInput(), XMC_BCCU_EnableTrap(), XMC_BCCU_ConcurrentEnab
 586:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 587:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SelectTrapInput (XMC_BCCU_t *const bccu, XMC_BCCU_CH_TRAP_IN_t input);
 588:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 589:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 590:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 591:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 592:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 593:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Source of trap input. \b Range: 0 to 15 \n
 594:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           0 - TRAPINA \n
 595:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           1 - TRAPINB and so on. \n
 596:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 597:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves trap input of the channel by reading the register bit GLOBCON_TRAPIS. Use XMC_BCCU_CH_
 598:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * validate a returned value.\n\n
 599:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 600:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 601:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SelectTrapInput()\n\n\n
 602:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 603:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadTrapInput (XMC_BCCU_t *const bccu)
 604:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 605:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	return (uint32_t)(( (bccu->GLOBCON) & BCCU_GLOBCON_TRAPIS_Msk) >> BCCU_GLOBCON_TRAPIS_Pos);
 606:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 607:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 608:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 609:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 610:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 611:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param edge Trap edge selection. Use type @ref XMC_BCCU_CH_TRAP_EDGE_t.  \n
 612:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_CH_TRAP_EDGE_RISING, XMC_BCCU_CH_TRAP_EDGE_FALLING.
 613:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 614:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 615:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 616:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 617:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Selects active edge which detects trap on TRAPL signal by writing register bit GLOBCON_TRAPED.\n
 618:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 619:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 620:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SelectTrapInput(), XMC_BCCU_ReadTrapEdge(), XMC_BCCU_EnableTrap(), XMC_BCCU_ConcurrentE
 621:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 622:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetTrapEdge (XMC_BCCU_t *const bccu, XMC_BCCU_CH_TRAP_EDGE_t edge);
 623:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 624:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 625:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 626:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 627:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 628:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Trap edge selection. \b Range: 0 or 1 \n
 629:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           0 - XMC_BCCU_CH_TRAP_EDGE_RISING \n
 630:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           1 - XMC_BCCU_CH_TRAP_EDGE_FALLING. \n
 631:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 632:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves trap edge by reading the register bit GLOBCON_TRAPED. Use XMC_BCCU_CH_TRAP_EDGE_t type
 633:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * validate a returned value.\n\n
 634:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 635:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 636:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetTrapEdge()\n\n\n
 637:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 638:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadTrapEdge (XMC_BCCU_t *const bccu)
 639:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 640:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	return (uint32_t)(( (bccu->GLOBCON) & BCCU_GLOBCON_TRAPED_Msk) >> BCCU_GLOBCON_TRAPED_Pos);
 641:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 642:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 643:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 644:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 645:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 646:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mode Suspend mode selection. Use type @ref XMC_BCCU_SUSPEND_MODE_t. \n
 647:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *             \b Range: XMC_BCCU_SUSPEND_MODE_IGNORE, XMC_BCCU_SUSPEND_MODE_FREEZE, XMC_BCCU_USPEN
 648:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 649:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 650:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 651:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 652:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures suspend mode by writing register bit GLOBCON_SUSCFG.\n\n
 653:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 654:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 655:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ReadSuspendMode()\n\n\n
 656:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 657:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConfigSuspendMode (XMC_BCCU_t *const bccu, XMC_BCCU_SUSPEND_MODE_t mode);
 658:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 659:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 660:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 661:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 662:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 663:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Trap edge selection. \b Range: 0, 1, 2 \n
 664:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              0 - XMC_BCCU_SUSPEND_MODE_IGNORE \n
 665:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              1 - XMC_BCCU_SUSPEND_MODE_FREEZE. \n
 666:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              2 - XMC_BCCU_USPEND_MODE_SAFE_FREEZE. \n
 667:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 668:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves the state of suspend mode by reading the register bit GLOBCON_TRAPIS. Use XMC_BCCU_SUS
 669:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * validate a returned value.\n\n
 670:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 671:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 672:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConfigSuspendMode()\n\n\n
 673:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 674:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadSuspendMode (XMC_BCCU_t *const bccu)
 675:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 676:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 	return (uint32_t)( ((bccu->GLOBCON) & BCCU_GLOBCON_SUSCFG_Msk) >> BCCU_GLOBCON_SUSCFG_Pos);
 677:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 678:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 679:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 680:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 681:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 682:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 683:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Last triggered channel number. \b Range: 0 to 8\n
 684:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              0 - BCCU Channel 0\n
 685:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              1 - BCCU Channel 1 and so on.\n
 686:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 687:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves last triggered channel number of a BCCU module by reading the register bit GLOBCON_LTR
 688:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 689:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 690:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_GetChannelOutputLvlAtLastTrigger(), XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_Concurrent
 691:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ReadGlobalTrigger(), XMC_BCCU_GlobalInit()\n\n\n
 692:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 693:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadLastTrigChanNr (XMC_BCCU_t *const bccu)
 694:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 695:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(( (bccu->GLOBCON) & BCCU_GLOBCON_LTRS_Msk) >> BCCU_GLOBCON_LTRS_Pos);
 696:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 697:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 698:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 699:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 700:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 701:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param threshold_no Number of consecutive zeroes at modulator output. \b Range: 0 to 4095.
 702:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 703:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 704:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 705:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 706:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures number of consecutive zeroes allowed at modulator output (flicker watch-dog number) b
 707:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * bit GLOBCON_WDMBN.\n\n
 708:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 709:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 710:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_EnableFlickerWatchdog(), XMC_BCCU_ReadFlickerWDThreshold(), XMC_BCCU_CH_Init(), XMC_
 711:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 712:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetFlickerWDThreshold (XMC_BCCU_t *const bccu, uint32_t threshold_no);
 713:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 714:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 715:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 716:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 717:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 718:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Number of consecutive zeroes at modulator output. \b Range: 0 to 4095 \n
 719:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 720:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves number of consecutive zeroes at modulator output (flicker watchdog number) by reading 
 721:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * GLOBCON_WDMBN.\n\n
 722:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 723:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 724:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetFlickerWDThreshold(), XMC_BCCU_CH_EnableFlickerWatchdog(), XMC_BCCU_CH_Init(), XMC_B
 725:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 726:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadFlickerWDThreshold (XMC_BCCU_t *const bccu)
 727:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 728:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(( (bccu->GLOBCON) & BCCU_GLOBCON_WDMBN_Msk) >> BCCU_GLOBCON_WDMBN_Pos);
 729:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 730:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 731:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 732:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 733:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 734:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param div Prescaler factor. \b Range: 0 to 4095.
 735:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 736:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 737:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 738:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 739:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures trigger functionality clock prescaler factor of a BCCU module by writing register bit
 740:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 741:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 742:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetDimClockPrescaler(), XMC_BCCU_SelectBitClock(), XMC_BCCU_ReadFastClock()\n\n\n
 743:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** */
 744:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetFastClockPrescaler (XMC_BCCU_t *const bccu, uint32_t div);
 745:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 746:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 747:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 748:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 749:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 750:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Prescaler factor. \b Range: 0 to 4095
 751:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 752:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves fast clock prescaler factor of a BCCU module by reading the register bit GLOBCLK_FCLK_
 753:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * derived from the bccu clock by prescaler factor i.e. fdclk = fbccu_clk / prescaler factor.\n\n
 754:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 755:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 756:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetFastClockPrescaler(), XMC_BCCU_ReadBitClock(), XMC_BCCU_ReadDimClock()\n\n\n
 757:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 758:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadFastClock (XMC_BCCU_t *const bccu)
 759:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 760:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(((bccu->GLOBCLK) & BCCU_GLOBCLK_FCLK_PS_Msk) >> BCCU_GLOBCLK_FCLK_PS_Pos);
 761:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 762:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 763:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 764:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 765:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 766:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param div Prescaler factor. \b Range: 0 to 4095.
 767:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 768:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 769:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 770:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 771:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures dimmer clock prescaler factor of a BCCU module by writing register bit GLOBCLK_DCLK_P
 772:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 773:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 774:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DIM_SetDimDivider(), XMC_BCCU_SetFastClockPrescaler(), XMC_BCCU_SelectBitClock(), XMC_B
 775:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 776:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetDimClockPrescaler (XMC_BCCU_t *const bccu, uint32_t div);
 777:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 778:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 779:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 780:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 781:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 782:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Prescaler factor. \b Range: 0 to 4095
 783:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 784:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves dimmer clock prescaler factor of a BCCU module by reading the register bit GLOBCLK_DCL
 785:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * derived from the bccu clock by prescaler factor. \n i.e. <b> fdclk = fbccu_clk / prescaler facto
 786:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 787:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 788:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetDimClockPrescaler(), XMC_BCCU_ReadBitClock(), XMC_BCCU_ReadFastClock()\n\n\n
 789:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 790:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadDimClock (XMC_BCCU_t *const bccu)
 791:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 792:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(((bccu->GLOBCLK) & BCCU_GLOBCLK_DCLK_PS_Msk) >> BCCU_GLOBCLK_DCLK_PS_Pos);
 793:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 794:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 795:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 796:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 797:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 798:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param div Prescaler factor. Use type @ref XMC_BCCU_BCLK_MODE_t.  \n
 799:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *            \b Range: XMC_BCCU_BCLK_MODE_NORMAL or XMC_BCCU_BCLK_MODE_FAST. \n
 800:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 801:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 802:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 803:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures modulator output (bit-time) clock prescaler factor of a BCCU module by writing regist
 804:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 805:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 806:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetFastClockPrescaler(), XMC_BCCU_SetDimClockPrescaler(), XMC_BCCU_ReadBitClock()\n\n\n
 807:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 808:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SelectBitClock (XMC_BCCU_t *const bccu, XMC_BCCU_BCLK_MODE_t div);
 809:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 810:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 811:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 812:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 813:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 814:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Prescaler factor. \b Range: 0 or 1 \n
 815:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           0 - XMC_BCCU_BCLK_MODE_NORMAL \n
 816:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           1 - XMC_BCCU_BCLK_MODE_FAST \n
 817:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 818:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves modulator output (bit-time) clock prescaler factor of a BCCU module by reading the reg
 819:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Use XMC_BCCU_BCLK_MODE_t type to validate a returned value.\n\n
 820:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 821:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 822:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SelectBitClock(), XMC_BCCU_ReadDimClock(), XMC_BCCU_ReadFastClock()\n\n\n
 823:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 824:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadBitClock (XMC_BCCU_t *const bccu)
 825:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 826:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(((bccu->GLOBCLK) & BCCU_GLOBCLK_BCS_Msk) >> BCCU_GLOBCLK_BCS_Pos);
 827:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 828:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 829:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 830:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 831:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 832:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to enable multiple channels.\n
 833:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to enable at a same time, \n
 834:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 835:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 836:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 837:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 838:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 839:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 840:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 841:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 842:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables multiple channels at a same time using \a mask by writing a register CHEN.\n\n
 843:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 844:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 845:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableChannel(), XMC_BCCU_ConcurrentDisableChannels()\n\n\n
 846:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 847:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentEnableChannels (XMC_BCCU_t *const bccu, uint32_t mask);
 848:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 849:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 850:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 851:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 852:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to disable multiple channels.\n
 853:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to disable at a same time, \
 854:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 855:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 856:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 857:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 858:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 859:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 860:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 861:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 862:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables multiple channels at a same time using \a mask by writing a register CHEN.\n\n
 863:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 864:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 865:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConcurrentEnableChannels(), XMC_BCCU_DisableChannel()\n\n\n
 866:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 867:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentDisableChannels (XMC_BCCU_t *const bccu, uint32_t mask);
 868:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 869:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 870:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 871:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 872:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_mask Channel mask to enable multiple channels.\n
 873:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to enable at a same time, \n
 874:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 875:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 876:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 877:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 878:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param level Passive level selection. Use type @ref XMC_BCCU_CH_ACTIVE_LEVEL_t.\n
 879:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_CH_ACTIVE_LEVEL_HIGH or XMC_BCCU_CH_ACTIVE_LEVEL_LOW
 880:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 881:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 882:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 883:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 884:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures passive levels of multiple channels at a same time using \a mask by writing a registe
 885:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 886:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 887:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetOutputPassiveLevel()\n\n\n
 888:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 889:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentSetOutputPassiveLevel(XMC_BCCU_t *const bccu, uint32_t chan_mask, XMC_BCCU_
 890:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 891:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 892:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 893:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 894:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to enable multiple channels trap functionality.\n
 895:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to enable a trap functionali
 896:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 897:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 898:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 899:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 900:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 901:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 902:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 903:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 904:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables multiple channels trap functionality at the same time using \a mask by writing a registe
 905:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 906:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 907:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableTrap(), XMC_BCCU_ConcurrentDisableTrap(), XMC_BCCU_SelectTrapInput(), XMC_BCCU_Se
 908:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 909:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentEnableTrap (XMC_BCCU_t *const bccu, uint32_t mask);
 910:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 911:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 912:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 913:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 914:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to disable multiple channels trap functionality.
 915:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to disable a trap functional
 916:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 917:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 918:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 919:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 920:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 921:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 922:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 923:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 924:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables multiple channels trap functionality at the same time using \a mask by writing a regist
 925:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 926:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 927:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DisableTrap(), XMC_BCCU_ConcurrentEnableTrap()\n\n\n
 928:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 929:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentDisableTrap (XMC_BCCU_t *const bccu, uint32_t mask);
 930:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 931:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 932:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 933:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 934:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param trig Pointer to a trigger configuration data structure. Use type @ref XMC_BCCU_TRIG_CONFI
 935:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 936:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 937:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 938:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 939:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures global trigger settings: trigger mode, trigger delay, individual trigger lines and ch
 940:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * registers GLOBCON and CHTRIG. Trigger mode decides when to generate a BCCU trigger, trigger dela
 941:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * trigger by 1/4, or 1/2 bclk cycles\n\n
 942:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 943:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 944:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_ReadLastTrigChanNr(), XMC_BCCU_ReadGlobalTrigger(), XMC
 945:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 946:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentConfigTrigger (XMC_BCCU_t *const bccu, XMC_BCCU_TRIG_CONFIG_t *trig);
 947:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 948:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 949:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 950:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 951:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to start a linear walk for multiple channels at a same time.\n
 952:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to start a linear walk at a 
 953:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 954:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 955:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 956:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 957:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 958:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 959:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 960:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 961:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * After channel initialization, the outcome of executing the API starts changing the color smoothl
 962:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * for multiple channels at a same time using \a mask by writing a register CHSTRCON.\n\n
 963:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 964:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 965:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_StartLinearWalk(), XMC_BCCU_ConcurrentAbortLinearWalk()\n\n\n
 966:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 967:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentStartLinearWalk (XMC_BCCU_t *const bccu, uint32_t mask);
 968:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 969:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 970:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 971:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 972:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to stop a linear walk for multiple channels at a same time.\n
 973:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to abort a linear walk at a 
 974:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 975:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 976:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 977:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 978:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 979:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 980:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 981:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 982:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * When the linear walk in progress, the outcome of executing the API is stopping the linear walk (
 983:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * immediately for multiple channels at a same time using \a mask by writing a register CHSTRCON.\n
 984:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 985:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 986:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_AbortLinearWalk(), XMC_BCCU_ConcurrentStartLinearWalk()\n\n\n
 987:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 988:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentAbortLinearWalk (XMC_BCCU_t *const bccu, uint32_t mask);
 989:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
 990:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 991:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 992:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 993:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Dimming engine mask to enable multiple dimming engine at a same time.\n
 994:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If dimming engine 0, channel 2 wants to enable a dimming at a same ti
 995:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then dimming engine mask is 0101 = 0x03\n
 996:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
 997:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | DE2 | DE1 | DE0 |\n
 998:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
 999:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1000:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1001:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1002:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1003:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables multiple dimming engines at a same time using \a mask by writing a register DEEN.\n\n
1004:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1005:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1006:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableDimmingEngine(), XMC_BCCU_ConcurrentDisableDimmingEngine()\n\n\n
1007:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1008:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentEnableDimmingEngine (XMC_BCCU_t *const bccu, uint32_t mask);
1009:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1010:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1011:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1012:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1013:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Dimming engine mask to disable multiple dimming engine at a same time.\n
1014:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If dimming engine 0, channel 2 wants to disable a dimming at a same t
1015:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then dimming engine mask is 0101 = 0x03\n
1016:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1017:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | DE2 | DE1 | DE0 |\n
1018:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1019:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1020:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1021:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1022:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1023:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables multiple dimming engines at a same time using \a mask by writing a register DEEN.\n\n
1024:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1025:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1026:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DisableDimmingEngine(), XMC_BCCU_ConcurrentEnableDimmingEngine()\n\n\n
1027:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1028:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentDisableDimmingEngine (XMC_BCCU_t *const bccu, uint32_t mask);
1029:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1030:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1031:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1032:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1033:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Dimming engine mask to start a dimming for multiple dimming engines at a same time.\
1034:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If dimming engine 0, channel 2 wants to start a dimming at a same tim
1035:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then dimming engine mask is 0101 = 0x03\n
1036:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1037:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | DE2 | DE1 | DE0 |\n
1038:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1039:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1040:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1041:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1042:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1043:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * After dimming engine initialization, the outcome of executing the API starts changing the bright
1044:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * for multiple dimming engines at a same time using \a mask by writing a register DESTRCON.\n\n
1045:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1046:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1047:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_StartDimming(), XMC_BCCU_ConcurrentAbortDimming()\n\n\n
1048:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1049:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentStartDimming (XMC_BCCU_t *const bccu, uint32_t mask);
1050:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1051:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1052:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1053:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1054:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Dimming engine mask to abort a dimming for multiple dimming engines at a same time.\
1055:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If dimming engine 0, channel 2 wants to abort a dimming at a same tim
1056:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then dimming engine mask is 0101 = 0x03\n
1057:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1058:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | DE2 | DE1 | DE0 |\n
1059:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1060:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1061:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1062:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1063:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1064:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * When the dimming in progress, the outcome of executing the API is stopping the dimming (i.e. fad
1065:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * immediately for specific dimming engine number \a dim_no by writing a register DESTRCON.\n\n
1066:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1067:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1068:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_AbortDimming(), XMC_BCCU_ConcurrentStartDimming()\n\n\n
1069:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1070:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentAbortDimming (XMC_BCCU_t *const bccu, uint32_t mask);
1071:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1072:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1073:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1074:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1075:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param level Dimming level of global dimming engine. \b Range: 0 to 4095\n
1076:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1077:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1078:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1079:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1080:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures a global dimming level by writing a register GLOBDIM. This is useful only if global d
1081:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Otherwise the configuration is ignored. \n\n
1082:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1083:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1084:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DIM_SetTargetDimmingLevel()\n\n\n
1085:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1086:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** void  XMC_BCCU_SetGlobalDimmingLevel (XMC_BCCU_t *const bccu, uint32_t level);
1087:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1088:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1089:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1090:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1091:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param event Event mask to enable multiple events at a time using ORed values of @ref XMC_BCCU_E
1092:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If XMC_BCCU_EVENT_TRIGGER0, XMC_BCCU_EVENT_TRIGGER1, XMC_BCCU_EVENT_F
1093:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        at a same time,\n then event mask is = <b>(XMC_BCCU_EVENT_TRIGGER0 | XMC_BCCU_EVENT_TRIGG
1094:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        XMC_BCCU_EVENT_FIFOEMPTY) </b> \n
1095:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1096:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1097:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1098:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1099:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables multiple interrupt events at a same time using ORed values of @ref XMC_BCCU_EVENT_t by w
1100:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1101:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1102:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DisableInterrupt()\n\n\n
1103:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1104:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_EnableInterrupt (XMC_BCCU_t *const bccu, uint32_t event)
1105:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
  25              	 .loc 1 1105 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 3960     	 str r1,[r7]
1106:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->EVIER |= event;
  40              	 .loc 1 1106 0
  41 000a 7B68     	 ldr r3,[r7,#4]
  42 000c DA6A     	 ldr r2,[r3,#44]
  43 000e 3B68     	 ldr r3,[r7]
  44 0010 1A43     	 orr r2,r3
  45 0012 7B68     	 ldr r3,[r7,#4]
  46 0014 DA62     	 str r2,[r3,#44]
1107:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
  47              	 .loc 1 1107 0
  48 0016 BD46     	 mov sp,r7
  49 0018 02B0     	 add sp,sp,#8
  50              	 
  51 001a 80BD     	 pop {r7,pc}
  52              	 .cfi_endproc
  53              	.LFE48:
  55              	 .section .text.XMC_BCCU_ReadEventFlag,"ax",%progbits
  56              	 .align 2
  57              	 .code 16
  58              	 .thumb_func
  60              	XMC_BCCU_ReadEventFlag:
  61              	.LFB50:
1108:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1109:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1110:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1111:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1112:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param event Event mask to disable multiple events at a time using ORed values of @ref XMC_BCCU_
1113:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If XMC_BCCU_EVENT_TRIGGER0, XMC_BCCU_EVENT_TRIGGER1, XMC_BCCU_EVENT_F
1114:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *         at a same time, then event mask is = <b>(XMC_BCCU_EVENT_TRIGGER0 | XMC_BCCU_EVENT_TRIGGE
1115:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *         XMC_BCCU_EVENT_FIFOEMPTY)</b> \n
1116:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1117:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1118:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1119:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1120:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables multiple interrupt events at a same time using ORed values of @ref XMC_BCCU_EVENT_t by 
1121:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1122:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1123:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableInterrupt()\n\n\n
1124:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1125:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_DisableInterrupt (XMC_BCCU_t *const bccu, uint32_t event)
1126:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
1127:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->EVIER &= (uint32_t)~(event);
1128:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
1129:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1130:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1131:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1132:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1133:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1134:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Interrupt events flags at a same time using ORed values of @ref XMC_BCCU_EVENT_t.
1135:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1136:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves interrupt event flags at the same time using ORed values of @ref XMC_BCCU_EVENT_t by r
1137:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * EVFR. \n\n
1138:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1139:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1140:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetEventFlag()\n\n\n
1141:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1142:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadEventFlag (XMC_BCCU_t *const bccu)
1143:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
  62              	 .loc 1 1143 0
  63              	 .cfi_startproc
  64 0000 80B5     	 push {r7,lr}
  65              	.LCFI3:
  66              	 .cfi_def_cfa_offset 8
  67              	 .cfi_offset 7,-8
  68              	 .cfi_offset 14,-4
  69 0002 82B0     	 sub sp,sp,#8
  70              	.LCFI4:
  71              	 .cfi_def_cfa_offset 16
  72 0004 00AF     	 add r7,sp,#0
  73              	.LCFI5:
  74              	 .cfi_def_cfa_register 7
  75 0006 7860     	 str r0,[r7,#4]
1144:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   return (bccu->EVFR);
  76              	 .loc 1 1144 0
  77 0008 7B68     	 ldr r3,[r7,#4]
  78 000a 1B6B     	 ldr r3,[r3,#48]
1145:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
  79              	 .loc 1 1145 0
  80 000c 181C     	 mov r0,r3
  81 000e BD46     	 mov sp,r7
  82 0010 02B0     	 add sp,sp,#8
  83              	 
  84 0012 80BD     	 pop {r7,pc}
  85              	 .cfi_endproc
  86              	.LFE50:
  88              	 .section .text.XMC_BCCU_SetEventFlag,"ax",%progbits
  89              	 .align 2
  90              	 .code 16
  91              	 .thumb_func
  93              	XMC_BCCU_SetEventFlag:
  94              	.LFB51:
1146:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1147:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1148:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1149:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1150:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param flag_type Event flag mask to configure multiple events at a time using ORed values of @re
1151:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EVENT_STATUS_t.\n
1152:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If XMC_BCCU_EVENT_STATUS_TRIGGER0, XMC_BCCU_EVENT_STATUS_TRIGGER1, XM
1153:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * wants to configure at a same time, then event mask is = <b>(XMC_BCCU_EVENT_STATUS_TRIGGER0 | XMC
1154:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EVENT_STATUS_FIFOEMPTY)</b> \n
1155:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1156:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1157:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1158:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1159:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures multiple interrupt event flags at a same time using ORed values of @ref XMC_BCCU_EVEN
1160:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1161:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1162:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ClearEventFlag(), XMC_BCCU_ReadEventFlag()\n\n\n
1163:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1164:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_SetEventFlag (XMC_BCCU_t *const bccu, uint32_t flag_type)
1165:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
  95              	 .loc 1 1165 0
  96              	 .cfi_startproc
  97 0000 80B5     	 push {r7,lr}
  98              	.LCFI6:
  99              	 .cfi_def_cfa_offset 8
 100              	 .cfi_offset 7,-8
 101              	 .cfi_offset 14,-4
 102 0002 82B0     	 sub sp,sp,#8
 103              	.LCFI7:
 104              	 .cfi_def_cfa_offset 16
 105 0004 00AF     	 add r7,sp,#0
 106              	.LCFI8:
 107              	 .cfi_def_cfa_register 7
 108 0006 7860     	 str r0,[r7,#4]
 109 0008 3960     	 str r1,[r7]
1166:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->EVFSR = flag_type;
 110              	 .loc 1 1166 0
 111 000a 7B68     	 ldr r3,[r7,#4]
 112 000c 3A68     	 ldr r2,[r7]
 113 000e 5A63     	 str r2,[r3,#52]
1167:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 114              	 .loc 1 1167 0
 115 0010 BD46     	 mov sp,r7
 116 0012 02B0     	 add sp,sp,#8
 117              	 
 118 0014 80BD     	 pop {r7,pc}
 119              	 .cfi_endproc
 120              	.LFE51:
 122 0016 C046     	 .section .text.XMC_BCCU_ClearEventFlag,"ax",%progbits
 123              	 .align 2
 124              	 .code 16
 125              	 .thumb_func
 127              	XMC_BCCU_ClearEventFlag:
 128              	.LFB52:
1168:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** 
1169:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1170:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1171:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1172:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param flag_type event flag mask to clear multiple events at a time using ORed values of @ref 
1173:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EVENT_STATUS_t.\n
1174:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If XMC_BCCU_EVENT_STATUS_TRIGGER0, XMC_BCCU_EVENT_STATUS_TRIGGER1, XM
1175:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * wants to clear at a same time, then event mask is = <b>(XMC_BCCU_EVENT_STATUS_TRIGGER0 | XMC_BCC
1176:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EVENT_STATUS_FIFOEMPTY)</b> \n
1177:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1178:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1179:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1180:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1181:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * Clears multiple interrupt event flags at a same time using ORed values of @ref XMC_BCCU_EVENT_ST
1182:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * register EVFSR.\n\n
1183:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1184:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1185:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetEventFlag()\n\n\n
1186:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1187:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_ClearEventFlag (XMC_BCCU_t *const bccu, uint32_t flag_type)
1188:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** {
 129              	 .loc 1 1188 0
 130              	 .cfi_startproc
 131 0000 80B5     	 push {r7,lr}
 132              	.LCFI9:
 133              	 .cfi_def_cfa_offset 8
 134              	 .cfi_offset 7,-8
 135              	 .cfi_offset 14,-4
 136 0002 82B0     	 sub sp,sp,#8
 137              	.LCFI10:
 138              	 .cfi_def_cfa_offset 16
 139 0004 00AF     	 add r7,sp,#0
 140              	.LCFI11:
 141              	 .cfi_def_cfa_register 7
 142 0006 7860     	 str r0,[r7,#4]
 143 0008 3960     	 str r1,[r7]
1189:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->EVFCR = flag_type;
 144              	 .loc 1 1189 0
 145 000a 7B68     	 ldr r3,[r7,#4]
 146 000c 3A68     	 ldr r2,[r7]
 147 000e 9A63     	 str r2,[r3,#56]
1190:C:/DAVEv4-64Bit/work/Demo_1/Libraries/XMCLib/inc\xmc_bccu.h **** }
 148              	 .loc 1 1190 0
 149 0010 BD46     	 mov sp,r7
 150 0012 02B0     	 add sp,sp,#8
 151              	 
 152 0014 80BD     	 pop {r7,pc}
 153              	 .cfi_endproc
 154              	.LFE52:
 156 0016 C046     	 .section .text.GLOBAL_BCCU_GetAppVersion,"ax",%progbits
 157              	 .align 2
 158              	 .global GLOBAL_BCCU_GetAppVersion
 159              	 .code 16
 160              	 .thumb_func
 162              	GLOBAL_BCCU_GetAppVersion:
 163              	.LFB79:
 164              	 .file 2 "../Dave/Generated/GLOBAL_BCCU/global_bccu.c"
   1:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**
   2:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * @file global_bccu.c
   3:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * @date 2016-07-15
   4:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
   5:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * NOTE:
   6:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
   8:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * @cond
   9:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  **************************************************************************************************
  10:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * GLOBAL_BCCU v4.1.6 - GLOBAL_BCCU APP configures the global registers of the Brightness and Color
  11:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *                      The configured parameters are clock frequencies, trap functionality, trigge
  12:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *                      passive levels and interrupts. The APP provides dynamic APIs to high level 
  13:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *                      event flag configuration, interrupt configuration and trap configuration.It
  14:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *                      dynamic APIs to high level APPs such as DALI_CG and LED_LAMP.
  15:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  16:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  17:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * All rights reserved.
  18:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  19:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  20:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * following conditions are met:
  21:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  22:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  23:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *   disclaimer.
  24:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  25:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  26:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  27:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  28:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  29:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *   products derived from this software without specific prior written permission.
  30:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  31:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  32:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  33:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  34:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  35:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  36:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  37:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  38:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  39:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  40:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * with Infineon Technologies AG (dave@infineon.com).
  41:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  **************************************************************************************************
  42:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  43:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * Change History
  44:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * --------------
  45:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  46:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * 2015-02-16
  47:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *     - Initial version.<br>
  48:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  49:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * 2015-03-30
  50:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *     - GLOBAL_BCCU_ForceTrap, GLOBAL_BCCU_ExitTrap API's are modified to set/clear trap event.<br
  51:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *     - Comments are added for XMC_ASSERT().<br>
  52:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *     - Return type of GLOBAL_BCCU_GetTrapState() is corrected.<br>
  53:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *     - Trap input edge configuration added in initialization.<br>
  54:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *     - XMC_ASSERT check is added for all API's.<br>
  55:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  56:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * @endcond
  57:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  58:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  */
  59:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  60:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  61:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**************************************************************************************************
  62:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * HEADER FILES
  63:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  **************************************************************************************************
  64:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  65:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** #include "global_bccu.h"
  66:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  67:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**************************************************************************************************
  68:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * MACROS
  69:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  **************************************************************************************************
  70:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  71:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**************************************************************************************************
  72:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * LOCAL DATA
  73:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  **************************************************************************************************
  74:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  75:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**************************************************************************************************
  76:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * LOCAL ROUTINES
  77:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  **************************************************************************************************
  78:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  79:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  /*************************************************************************************************
  80:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * API IMPLEMENTATION
  81:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  **************************************************************************************************
  82:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  83:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /*
  84:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * @brief API to retrieve the version of the GLOBAL_BCCU
  85:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *
  86:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * @return DAVE_APP_VERSION_t Structure containing major version, minor version
  87:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *         and patch version.
  88:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  */
  89:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** DAVE_APP_VERSION_t GLOBAL_BCCU_GetAppVersion(void)
  90:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** {
 165              	 .loc 2 90 0
 166              	 .cfi_startproc
 167 0000 80B5     	 push {r7,lr}
 168              	.LCFI12:
 169              	 .cfi_def_cfa_offset 8
 170              	 .cfi_offset 7,-8
 171              	 .cfi_offset 14,-4
 172 0002 82B0     	 sub sp,sp,#8
 173              	.LCFI13:
 174              	 .cfi_def_cfa_offset 16
 175 0004 00AF     	 add r7,sp,#0
 176              	.LCFI14:
 177              	 .cfi_def_cfa_register 7
  91:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   DAVE_APP_VERSION_t version;
  92:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  93:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   version.major = (uint8_t)GLOBAL_BCCU_MAJOR_VERSION;
 178              	 .loc 2 93 0
 179 0006 3B1C     	 mov r3,r7
 180 0008 0422     	 mov r2,#4
 181 000a 1A70     	 strb r2,[r3]
  94:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   version.minor = (uint8_t)GLOBAL_BCCU_MINOR_VERSION;
 182              	 .loc 2 94 0
 183 000c 3B1C     	 mov r3,r7
 184 000e 0122     	 mov r2,#1
 185 0010 5A70     	 strb r2,[r3,#1]
  95:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   version.patch = (uint8_t)GLOBAL_BCCU_PATCH_VERSION;
 186              	 .loc 2 95 0
 187 0012 3B1C     	 mov r3,r7
 188 0014 0622     	 mov r2,#6
 189 0016 9A70     	 strb r2,[r3,#2]
  96:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
  97:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   return (version);
 190              	 .loc 2 97 0
 191 0018 3B1D     	 add r3,r7,#4
 192 001a 3A1C     	 mov r2,r7
 193 001c 1188     	 ldrh r1,[r2]
 194 001e 1980     	 strh r1,[r3]
 195 0020 9278     	 ldrb r2,[r2,#2]
 196 0022 9A70     	 strb r2,[r3,#2]
 197 0024 3A1D     	 add r2,r7,#4
 198 0026 0023     	 mov r3,#0
 199 0028 1178     	 ldrb r1,[r2]
 200 002a FF20     	 mov r0,#255
 201 002c 0140     	 and r1,r0
 202 002e FF20     	 mov r0,#255
 203 0030 8343     	 bic r3,r0
 204 0032 0B43     	 orr r3,r1
 205 0034 5178     	 ldrb r1,[r2,#1]
 206 0036 FF20     	 mov r0,#255
 207 0038 0140     	 and r1,r0
 208 003a 0902     	 lsl r1,r1,#8
 209 003c 0648     	 ldr r0,.L8
 210 003e 0340     	 and r3,r0
 211 0040 0B43     	 orr r3,r1
 212 0042 9278     	 ldrb r2,[r2,#2]
 213 0044 FF21     	 mov r1,#255
 214 0046 0A40     	 and r2,r1
 215 0048 1204     	 lsl r2,r2,#16
 216 004a 0449     	 ldr r1,.L8+4
 217 004c 0B40     	 and r3,r1
 218 004e 1343     	 orr r3,r2
  98:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** }
 219              	 .loc 2 98 0
 220 0050 181C     	 mov r0,r3
 221 0052 BD46     	 mov sp,r7
 222 0054 02B0     	 add sp,sp,#8
 223              	 
 224 0056 80BD     	 pop {r7,pc}
 225              	.L9:
 226              	 .align 2
 227              	.L8:
 228 0058 FF00FFFF 	 .word -65281
 229 005c FFFF00FF 	 .word -16711681
 230              	 .cfi_endproc
 231              	.LFE79:
 233              	 .section .text.GLOBAL_BCCU_Init,"ax",%progbits
 234              	 .align 2
 235              	 .global GLOBAL_BCCU_Init
 236              	 .code 16
 237              	 .thumb_func
 239              	GLOBAL_BCCU_Init:
 240              	.LFB80:
  99:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
 100:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**
 101:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  * @brief   This function Initializes a GLOBAL_BCCU APP instances based on
 102:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  *          user configuration.
 103:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****  */
 104:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** GLOBAL_BCCU_STATUS_t GLOBAL_BCCU_Init(GLOBAL_BCCU_t *handle)
 105:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** {
 241              	 .loc 2 105 0
 242              	 .cfi_startproc
 243 0000 80B5     	 push {r7,lr}
 244              	.LCFI15:
 245              	 .cfi_def_cfa_offset 8
 246              	 .cfi_offset 7,-8
 247              	 .cfi_offset 14,-4
 248 0002 84B0     	 sub sp,sp,#16
 249              	.LCFI16:
 250              	 .cfi_def_cfa_offset 24
 251 0004 00AF     	 add r7,sp,#0
 252              	.LCFI17:
 253              	 .cfi_def_cfa_register 7
 254 0006 7860     	 str r0,[r7,#4]
 106:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   GLOBAL_BCCU_STATUS_t status;
 107:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
 108:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   /* Checks input parameters when XMC_ASSERT is enabled. Useful for Debugging */
 109:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_ASSERT("GLOBAL_BCCU APP handle function pointer uninitialized", (((handle != NULL) &&
 110:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   			(handle->bccuregs != NULL)) && ((handle->config != NULL) && (handle->enable_events <= 31U) &&
 111:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   	        (handle->trap_source <= 15))));
 112:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
 113:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   /* Checking for initialization state of the instance */
 114:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   if (false == handle->init_status)
 255              	 .loc 2 114 0
 256 0008 7B68     	 ldr r3,[r7,#4]
 257 000a 9B7B     	 ldrb r3,[r3,#14]
 258 000c 0122     	 mov r2,#1
 259 000e 5340     	 eor r3,r2
 260 0010 DBB2     	 uxtb r3,r3
 261 0012 002B     	 cmp r3,#0
 262 0014 2BD0     	 beq .L11
 115:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   {
 116:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     /* Configure Trap input source */
 117:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     XMC_BCCU_SelectTrapInput(handle->bccuregs,handle->trap_source);
 263              	 .loc 2 117 0
 264 0016 7B68     	 ldr r3,[r7,#4]
 265 0018 1A68     	 ldr r2,[r3]
 266 001a 7B68     	 ldr r3,[r7,#4]
 267 001c 1B7B     	 ldrb r3,[r3,#12]
 268 001e 101C     	 mov r0,r2
 269 0020 191C     	 mov r1,r3
 270 0022 FFF7FEFF 	 bl XMC_BCCU_SelectTrapInput
 118:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     /* Configure Trap input edge*/
 119:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     XMC_BCCU_SetTrapEdge(handle->bccuregs,handle->trap_edge);
 271              	 .loc 2 119 0
 272 0026 7B68     	 ldr r3,[r7,#4]
 273 0028 1A68     	 ldr r2,[r3]
 274 002a 7B68     	 ldr r3,[r7,#4]
 275 002c 5B7B     	 ldrb r3,[r3,#13]
 276 002e 101C     	 mov r0,r2
 277 0030 191C     	 mov r1,r3
 278 0032 FFF7FEFF 	 bl XMC_BCCU_SetTrapEdge
 120:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     /* Hardware initialization based on UI */
 121:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     XMC_BCCU_GlobalInit(handle->bccuregs, handle->config);
 279              	 .loc 2 121 0
 280 0036 7B68     	 ldr r3,[r7,#4]
 281 0038 1A68     	 ldr r2,[r3]
 282 003a 7B68     	 ldr r3,[r7,#4]
 283 003c 5B68     	 ldr r3,[r3,#4]
 284 003e 101C     	 mov r0,r2
 285 0040 191C     	 mov r1,r3
 286 0042 FFF7FEFF 	 bl XMC_BCCU_GlobalInit
 122:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 	/**< Initialize all the interrupt configurations */
 123:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     if (0U != handle->enable_events)
 287              	 .loc 2 123 0
 288 0046 7B68     	 ldr r3,[r7,#4]
 289 0048 9B68     	 ldr r3,[r3,#8]
 290 004a 002B     	 cmp r3,#0
 291 004c 07D0     	 beq .L12
 124:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     {
 125:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****       XMC_BCCU_EnableInterrupt(handle->bccuregs, handle->enable_events);
 292              	 .loc 2 125 0
 293 004e 7B68     	 ldr r3,[r7,#4]
 294 0050 1A68     	 ldr r2,[r3]
 295 0052 7B68     	 ldr r3,[r7,#4]
 296 0054 9B68     	 ldr r3,[r3,#8]
 297 0056 101C     	 mov r0,r2
 298 0058 191C     	 mov r1,r3
 299 005a FFF7FEFF 	 bl XMC_BCCU_EnableInterrupt
 300              	.L12:
 126:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     }
 127:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     /* Return status after initialization */
 128:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     status = GLOBAL_BCCU_STATUS_SUCCESS;
 301              	 .loc 2 128 0
 302 005e 0F23     	 mov r3,#15
 303 0060 FB18     	 add r3,r7,r3
 304 0062 0022     	 mov r2,#0
 305 0064 1A70     	 strb r2,[r3]
 129:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
 130:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     /* Update the Initialization status of the GLOBAL_BCCU APP instance */
 131:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     handle->init_status = true;
 306              	 .loc 2 131 0
 307 0066 7B68     	 ldr r3,[r7,#4]
 308 0068 0122     	 mov r2,#1
 309 006a 9A73     	 strb r2,[r3,#14]
 310 006c 03E0     	 b .L13
 311              	.L11:
 132:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   }
 133:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   else
 134:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   {
 135:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     /* Return the status if instance is already initialized */
 136:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****     status = GLOBAL_BCCU_STATUS_SUCCESS;
 312              	 .loc 2 136 0
 313 006e 0F23     	 mov r3,#15
 314 0070 FB18     	 add r3,r7,r3
 315 0072 0022     	 mov r2,#0
 316 0074 1A70     	 strb r2,[r3]
 317              	.L13:
 137:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   }
 138:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   return (status);
 318              	 .loc 2 138 0
 319 0076 0F23     	 mov r3,#15
 320 0078 FB18     	 add r3,r7,r3
 321 007a 1B78     	 ldrb r3,[r3]
 139:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** }
 322              	 .loc 2 139 0
 323 007c 181C     	 mov r0,r3
 324 007e BD46     	 mov sp,r7
 325 0080 04B0     	 add sp,sp,#16
 326              	 
 327 0082 80BD     	 pop {r7,pc}
 328              	 .cfi_endproc
 329              	.LFE80:
 331              	 .section .text.GLOBAL_BCCU_SetGlobDimLevel,"ax",%progbits
 332              	 .align 2
 333              	 .global GLOBAL_BCCU_SetGlobDimLevel
 334              	 .code 16
 335              	 .thumb_func
 337              	GLOBAL_BCCU_SetGlobDimLevel:
 338              	.LFB81:
 140:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
 141:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**
 142:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @brief This function is used to configure Global Dimming Level.
 143:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** *
 144:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @param handle Instance handle
 145:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @param level  Global Dimming Level value
 146:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @return None
 147:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** */
 148:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** void GLOBAL_BCCU_SetGlobDimLevel(GLOBAL_BCCU_t *handle, uint32_t level)
 149:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** {
 339              	 .loc 2 149 0
 340              	 .cfi_startproc
 341 0000 80B5     	 push {r7,lr}
 342              	.LCFI18:
 343              	 .cfi_def_cfa_offset 8
 344              	 .cfi_offset 7,-8
 345              	 .cfi_offset 14,-4
 346 0002 82B0     	 sub sp,sp,#8
 347              	.LCFI19:
 348              	 .cfi_def_cfa_offset 16
 349 0004 00AF     	 add r7,sp,#0
 350              	.LCFI20:
 351              	 .cfi_def_cfa_register 7
 352 0006 7860     	 str r0,[r7,#4]
 353 0008 3960     	 str r1,[r7]
 150:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_ASSERT("GLOBAL_BCCU_SetGlobDimLevel: handler null pointer", handle != NULL);
 151:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_BCCU_SetGlobalDimmingLevel(handle->bccuregs, level);
 354              	 .loc 2 151 0
 355 000a 7B68     	 ldr r3,[r7,#4]
 356 000c 1A68     	 ldr r2,[r3]
 357 000e 3B68     	 ldr r3,[r7]
 358 0010 101C     	 mov r0,r2
 359 0012 191C     	 mov r1,r3
 360 0014 FFF7FEFF 	 bl XMC_BCCU_SetGlobalDimmingLevel
 152:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** }
 361              	 .loc 2 152 0
 362 0018 BD46     	 mov sp,r7
 363 001a 02B0     	 add sp,sp,#8
 364              	 
 365 001c 80BD     	 pop {r7,pc}
 366              	 .cfi_endproc
 367              	.LFE81:
 369 001e C046     	 .section .text.GLOBAL_BCCU_SetDimClkPS,"ax",%progbits
 370              	 .align 2
 371              	 .global GLOBAL_BCCU_SetDimClkPS
 372              	 .code 16
 373              	 .thumb_func
 375              	GLOBAL_BCCU_SetDimClkPS:
 376              	.LFB82:
 153:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
 154:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**
 155:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @brief This function is used to configure Dimming Clock Prescaler.
 156:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** *
 157:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @param handle Instance handle
 158:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @param dimclk_ps  Dimming Clock prescaler value
 159:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @return None
 160:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** */
 161:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** void GLOBAL_BCCU_SetDimClkPS(GLOBAL_BCCU_t *handle, uint32_t dimclk_ps)
 162:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** {
 377              	 .loc 2 162 0
 378              	 .cfi_startproc
 379 0000 80B5     	 push {r7,lr}
 380              	.LCFI21:
 381              	 .cfi_def_cfa_offset 8
 382              	 .cfi_offset 7,-8
 383              	 .cfi_offset 14,-4
 384 0002 82B0     	 sub sp,sp,#8
 385              	.LCFI22:
 386              	 .cfi_def_cfa_offset 16
 387 0004 00AF     	 add r7,sp,#0
 388              	.LCFI23:
 389              	 .cfi_def_cfa_register 7
 390 0006 7860     	 str r0,[r7,#4]
 391 0008 3960     	 str r1,[r7]
 163:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_ASSERT("GLOBAL_BCCU_SetDimClkPS: handler null pointer", handle != NULL);
 164:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_BCCU_SetDimClockPrescaler(handle->bccuregs, dimclk_ps);
 392              	 .loc 2 164 0
 393 000a 7B68     	 ldr r3,[r7,#4]
 394 000c 1A68     	 ldr r2,[r3]
 395 000e 3B68     	 ldr r3,[r7]
 396 0010 101C     	 mov r0,r2
 397 0012 191C     	 mov r1,r3
 398 0014 FFF7FEFF 	 bl XMC_BCCU_SetDimClockPrescaler
 165:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** }
 399              	 .loc 2 165 0
 400 0018 BD46     	 mov sp,r7
 401 001a 02B0     	 add sp,sp,#8
 402              	 
 403 001c 80BD     	 pop {r7,pc}
 404              	 .cfi_endproc
 405              	.LFE82:
 407 001e C046     	 .section .text.GLOBAL_BCCU_ForceTrap,"ax",%progbits
 408              	 .align 2
 409              	 .global GLOBAL_BCCU_ForceTrap
 410              	 .code 16
 411              	 .thumb_func
 413              	GLOBAL_BCCU_ForceTrap:
 414              	.LFB83:
 166:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
 167:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**
 168:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @brief This function is used to Generate the Trap Interrupt.
 169:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** *
 170:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @param handle Instance handle
 171:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @return None
 172:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** */
 173:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** void GLOBAL_BCCU_ForceTrap(GLOBAL_BCCU_t *handle)
 174:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** {
 415              	 .loc 2 174 0
 416              	 .cfi_startproc
 417 0000 80B5     	 push {r7,lr}
 418              	.LCFI24:
 419              	 .cfi_def_cfa_offset 8
 420              	 .cfi_offset 7,-8
 421              	 .cfi_offset 14,-4
 422 0002 82B0     	 sub sp,sp,#8
 423              	.LCFI25:
 424              	 .cfi_def_cfa_offset 16
 425 0004 00AF     	 add r7,sp,#0
 426              	.LCFI26:
 427              	 .cfi_def_cfa_register 7
 428 0006 7860     	 str r0,[r7,#4]
 175:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_ASSERT("GLOBAL_BCCU_ForceTrap: handler null pointer", handle != NULL);
 176:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_BCCU_SetEventFlag(handle->bccuregs, (uint32_t)(XMC_BCCU_EVENT_STATUS_TRAP | XMC_BCCU_EVENT_ST
 429              	 .loc 2 176 0
 430 0008 7B68     	 ldr r3,[r7,#4]
 431 000a 1B68     	 ldr r3,[r3]
 432 000c 181C     	 mov r0,r3
 433 000e 5021     	 mov r1,#80
 434 0010 FFF7FEFF 	 bl XMC_BCCU_SetEventFlag
 177:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** }
 435              	 .loc 2 177 0
 436 0014 BD46     	 mov sp,r7
 437 0016 02B0     	 add sp,sp,#8
 438              	 
 439 0018 80BD     	 pop {r7,pc}
 440              	 .cfi_endproc
 441              	.LFE83:
 443 001a C046     	 .section .text.GLOBAL_BCCU_ExitTrap,"ax",%progbits
 444              	 .align 2
 445              	 .global GLOBAL_BCCU_ExitTrap
 446              	 .code 16
 447              	 .thumb_func
 449              	GLOBAL_BCCU_ExitTrap:
 450              	.LFB84:
 178:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**
 179:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @brief This function is used to exit from the Trap State.
 180:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** *
 181:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @param handle Instance handle
 182:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @return None
 183:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** */
 184:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** void GLOBAL_BCCU_ExitTrap(GLOBAL_BCCU_t *handle)
 185:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** {
 451              	 .loc 2 185 0
 452              	 .cfi_startproc
 453 0000 80B5     	 push {r7,lr}
 454              	.LCFI27:
 455              	 .cfi_def_cfa_offset 8
 456              	 .cfi_offset 7,-8
 457              	 .cfi_offset 14,-4
 458 0002 82B0     	 sub sp,sp,#8
 459              	.LCFI28:
 460              	 .cfi_def_cfa_offset 16
 461 0004 00AF     	 add r7,sp,#0
 462              	.LCFI29:
 463              	 .cfi_def_cfa_register 7
 464 0006 7860     	 str r0,[r7,#4]
 186:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_ASSERT("GLOBAL_BCCU_ExitTrap: handler null pointer", handle != NULL);
 187:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_BCCU_ClearEventFlag(handle->bccuregs, (uint32_t)(XMC_BCCU_EVENT_STATUS_TRAP | XMC_BCCU_EVENT_
 465              	 .loc 2 187 0
 466 0008 7B68     	 ldr r3,[r7,#4]
 467 000a 1B68     	 ldr r3,[r3]
 468 000c 181C     	 mov r0,r3
 469 000e 5021     	 mov r1,#80
 470 0010 FFF7FEFF 	 bl XMC_BCCU_ClearEventFlag
 188:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** }
 471              	 .loc 2 188 0
 472 0014 BD46     	 mov sp,r7
 473 0016 02B0     	 add sp,sp,#8
 474              	 
 475 0018 80BD     	 pop {r7,pc}
 476              	 .cfi_endproc
 477              	.LFE84:
 479 001a C046     	 .section .text.GLOBAL_BCCU_GetTrapState,"ax",%progbits
 480              	 .align 2
 481              	 .global GLOBAL_BCCU_GetTrapState
 482              	 .code 16
 483              	 .thumb_func
 485              	GLOBAL_BCCU_GetTrapState:
 486              	.LFB85:
 189:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** 
 190:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**
 191:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @brief This function is used to check the current trap state.
 192:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** *
 193:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @param handle Instance handle
 194:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @return XMC_BCCU_CH_TRAP_EDGE_t Trap state
 195:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** */
 196:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** XMC_BCCU_TRAP_STATUS_t GLOBAL_BCCU_GetTrapState(GLOBAL_BCCU_t *handle)
 197:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** {
 487              	 .loc 2 197 0
 488              	 .cfi_startproc
 489 0000 80B5     	 push {r7,lr}
 490              	.LCFI30:
 491              	 .cfi_def_cfa_offset 8
 492              	 .cfi_offset 7,-8
 493              	 .cfi_offset 14,-4
 494 0002 82B0     	 sub sp,sp,#8
 495              	.LCFI31:
 496              	 .cfi_def_cfa_offset 16
 497 0004 00AF     	 add r7,sp,#0
 498              	.LCFI32:
 499              	 .cfi_def_cfa_register 7
 500 0006 7860     	 str r0,[r7,#4]
 198:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_ASSERT("GLOBAL_BCCU_GetTrapState: handler null pointer", handle != NULL);
 199:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   return ((XMC_BCCU_TRAP_STATUS_t )((XMC_BCCU_ReadEventFlag(handle->bccuregs) & BCCU_EVFR_TPSF_Msk)
 501              	 .loc 2 199 0
 502 0008 7B68     	 ldr r3,[r7,#4]
 503 000a 1B68     	 ldr r3,[r3]
 504 000c 181C     	 mov r0,r3
 505 000e FFF7FEFF 	 bl XMC_BCCU_ReadEventFlag
 506 0012 021C     	 mov r2,r0
 507 0014 4023     	 mov r3,#64
 508 0016 1340     	 and r3,r2
 509 0018 9B09     	 lsr r3,r3,#6
 510 001a DBB2     	 uxtb r3,r3
 200:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****           BCCU_EVFR_TPSF_Pos));
 201:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** }
 511              	 .loc 2 201 0
 512 001c 181C     	 mov r0,r3
 513 001e BD46     	 mov sp,r7
 514 0020 02B0     	 add sp,sp,#8
 515              	 
 516 0022 80BD     	 pop {r7,pc}
 517              	 .cfi_endproc
 518              	.LFE85:
 520              	 .section .text.GLOBAL_BCCU_GetTrapInputLvl,"ax",%progbits
 521              	 .align 2
 522              	 .global GLOBAL_BCCU_GetTrapInputLvl
 523              	 .code 16
 524              	 .thumb_func
 526              	GLOBAL_BCCU_GetTrapInputLvl:
 527              	.LFB86:
 202:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** /**
 203:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @brief This function is used to get the Trap input level.
 204:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** *
 205:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @param handle Instance handle
 206:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** * @return XMC_BCCU_TRAP_LEVEL_t Trap input level
 207:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** */
 208:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** XMC_BCCU_TRAP_LEVEL_t GLOBAL_BCCU_GetTrapInputLvl(GLOBAL_BCCU_t *handle)
 209:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** {
 528              	 .loc 2 209 0
 529              	 .cfi_startproc
 530 0000 80B5     	 push {r7,lr}
 531              	.LCFI33:
 532              	 .cfi_def_cfa_offset 8
 533              	 .cfi_offset 7,-8
 534              	 .cfi_offset 14,-4
 535 0002 82B0     	 sub sp,sp,#8
 536              	.LCFI34:
 537              	 .cfi_def_cfa_offset 16
 538 0004 00AF     	 add r7,sp,#0
 539              	.LCFI35:
 540              	 .cfi_def_cfa_register 7
 541 0006 7860     	 str r0,[r7,#4]
 210:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   XMC_ASSERT("GLOBAL_BCCU_GetTrapInputLvl: handler null pointer", handle != NULL);
 211:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****   return ((XMC_BCCU_TRAP_LEVEL_t )((XMC_BCCU_ReadEventFlag(handle->bccuregs) & BCCU_EVFR_TPINL_Msk)
 542              	 .loc 2 211 0
 543 0008 7B68     	 ldr r3,[r7,#4]
 544 000a 1B68     	 ldr r3,[r3]
 545 000c 181C     	 mov r0,r3
 546 000e FFF7FEFF 	 bl XMC_BCCU_ReadEventFlag
 547 0012 021C     	 mov r2,r0
 548 0014 8023     	 mov r3,#128
 549 0016 1340     	 and r3,r2
 550 0018 DB09     	 lsr r3,r3,#7
 551 001a DBB2     	 uxtb r3,r3
 212:../Dave/Generated/GLOBAL_BCCU/global_bccu.c ****           BCCU_EVFR_TPINL_Pos));
 213:../Dave/Generated/GLOBAL_BCCU/global_bccu.c **** }
 552              	 .loc 2 213 0
 553 001c 181C     	 mov r0,r3
 554 001e BD46     	 mov sp,r7
 555 0020 02B0     	 add sp,sp,#8
 556              	 
 557 0022 80BD     	 pop {r7,pc}
 558              	 .cfi_endproc
 559              	.LFE86:
 561              	 .text
 562              	.Letext0:
 563              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 564              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 565              	 .file 5 "C:/DAVEv4-64Bit/work/Demo_1/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 566              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_1/Dave/Generated/DAVE_common.h"
 567              	 .file 7 "../Dave/Generated/GLOBAL_BCCU/global_bccu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 global_bccu.c
    {standard input}:18     .text.XMC_BCCU_EnableInterrupt:00000000 $t
    {standard input}:22     .text.XMC_BCCU_EnableInterrupt:00000000 XMC_BCCU_EnableInterrupt
    {standard input}:56     .text.XMC_BCCU_ReadEventFlag:00000000 $t
    {standard input}:60     .text.XMC_BCCU_ReadEventFlag:00000000 XMC_BCCU_ReadEventFlag
    {standard input}:89     .text.XMC_BCCU_SetEventFlag:00000000 $t
    {standard input}:93     .text.XMC_BCCU_SetEventFlag:00000000 XMC_BCCU_SetEventFlag
    {standard input}:123    .text.XMC_BCCU_ClearEventFlag:00000000 $t
    {standard input}:127    .text.XMC_BCCU_ClearEventFlag:00000000 XMC_BCCU_ClearEventFlag
    {standard input}:157    .text.GLOBAL_BCCU_GetAppVersion:00000000 $t
    {standard input}:162    .text.GLOBAL_BCCU_GetAppVersion:00000000 GLOBAL_BCCU_GetAppVersion
    {standard input}:228    .text.GLOBAL_BCCU_GetAppVersion:00000058 $d
    {standard input}:234    .text.GLOBAL_BCCU_Init:00000000 $t
    {standard input}:239    .text.GLOBAL_BCCU_Init:00000000 GLOBAL_BCCU_Init
    {standard input}:332    .text.GLOBAL_BCCU_SetGlobDimLevel:00000000 $t
    {standard input}:337    .text.GLOBAL_BCCU_SetGlobDimLevel:00000000 GLOBAL_BCCU_SetGlobDimLevel
    {standard input}:370    .text.GLOBAL_BCCU_SetDimClkPS:00000000 $t
    {standard input}:375    .text.GLOBAL_BCCU_SetDimClkPS:00000000 GLOBAL_BCCU_SetDimClkPS
    {standard input}:408    .text.GLOBAL_BCCU_ForceTrap:00000000 $t
    {standard input}:413    .text.GLOBAL_BCCU_ForceTrap:00000000 GLOBAL_BCCU_ForceTrap
    {standard input}:444    .text.GLOBAL_BCCU_ExitTrap:00000000 $t
    {standard input}:449    .text.GLOBAL_BCCU_ExitTrap:00000000 GLOBAL_BCCU_ExitTrap
    {standard input}:480    .text.GLOBAL_BCCU_GetTrapState:00000000 $t
    {standard input}:485    .text.GLOBAL_BCCU_GetTrapState:00000000 GLOBAL_BCCU_GetTrapState
    {standard input}:521    .text.GLOBAL_BCCU_GetTrapInputLvl:00000000 $t
    {standard input}:526    .text.GLOBAL_BCCU_GetTrapInputLvl:00000000 GLOBAL_BCCU_GetTrapInputLvl
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_BCCU_SelectTrapInput
XMC_BCCU_SetTrapEdge
XMC_BCCU_GlobalInit
XMC_BCCU_SetGlobalDimmingLevel
XMC_BCCU_SetDimClockPrescaler
