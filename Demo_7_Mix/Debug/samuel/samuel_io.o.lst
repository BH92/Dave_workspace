   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 854B     	 ldr r3,.L21
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c 834B     	 ldr r3,.L21
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 121 )  //ende
 469              	 .loc 3 119 0
 470 0010 824B     	 ldr r3,.L21
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 792B     	 cmp r3,#121
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 804B     	 ldr r3,.L21
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e FBE0     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 7E4B     	 ldr r3,.L21
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 20D1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 4000;
 485              	 .loc 3 125 0
 486 0028 7D4B     	 ldr r3,.L21+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c FA22     	 mov r2,#250
 489 002e 1201     	 lsl r2,r2,#4
 490 0030 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 500;
 491              	 .loc 3 126 0
 492 0032 7B4B     	 ldr r3,.L21+4
 493 0034 DB6A     	 ldr r3,[r3,#44]
 494 0036 FA22     	 mov r2,#250
 495 0038 5200     	 lsl r2,r2,#1
 496 003a 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 4000;
 497              	 .loc 3 127 0
 498 003c 784B     	 ldr r3,.L21+4
 499 003e DB6A     	 ldr r3,[r3,#44]
 500 0040 FA22     	 mov r2,#250
 501 0042 1201     	 lsl r2,r2,#4
 502 0044 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 500;
 503              	 .loc 3 128 0
 504 0046 764B     	 ldr r3,.L21+4
 505 0048 DB6A     	 ldr r3,[r3,#44]
 506 004a FA22     	 mov r2,#250
 507 004c 5200     	 lsl r2,r2,#1
 508 004e DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 509              	 .loc 3 129 0
 510 0050 734B     	 ldr r3,.L21+4
 511 0052 181C     	 mov r0,r3
 512 0054 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 513              	 .loc 3 130 0
 514 0058 714A     	 ldr r2,.L21+4
 515 005a E523     	 mov r3,#229
 516 005c 9B00     	 lsl r3,r3,#2
 517 005e 101C     	 mov r0,r2
 518 0060 0021     	 mov r1,#0
 519 0062 1A1C     	 mov r2,r3
 520 0064 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 521 0068 D6E0     	 b .L12
 522              	.L15:
 131:../samuel/samuel_io.c **** 	 			 }
 132:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 40 )
 523              	 .loc 3 132 0
 524 006a 6C4B     	 ldr r3,.L21
 525 006c 1B88     	 ldrh r3,[r3]
 526 006e 282B     	 cmp r3,#40
 527 0070 1ED1     	 bne .L16
 133:../samuel/samuel_io.c **** 	 			 {
 134:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 500;
 528              	 .loc 3 134 0
 529 0072 6B4B     	 ldr r3,.L21+4
 530 0074 DB6A     	 ldr r3,[r3,#44]
 531 0076 FA22     	 mov r2,#250
 532 0078 5200     	 lsl r2,r2,#1
 533 007a 1A80     	 strh r2,[r3]
 135:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 1500;
 534              	 .loc 3 135 0
 535 007c 684B     	 ldr r3,.L21+4
 536 007e DB6A     	 ldr r3,[r3,#44]
 537 0080 684A     	 ldr r2,.L21+8
 538 0082 5A80     	 strh r2,[r3,#2]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 500;
 539              	 .loc 3 136 0
 540 0084 664B     	 ldr r3,.L21+4
 541 0086 DB6A     	 ldr r3,[r3,#44]
 542 0088 FA22     	 mov r2,#250
 543 008a 5200     	 lsl r2,r2,#1
 544 008c 9A80     	 strh r2,[r3,#4]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 1500;
 545              	 .loc 3 137 0
 546 008e 644B     	 ldr r3,.L21+4
 547 0090 DB6A     	 ldr r3,[r3,#44]
 548 0092 644A     	 ldr r2,.L21+8
 549 0094 DA80     	 strh r2,[r3,#6]
 138:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 550              	 .loc 3 138 0
 551 0096 624B     	 ldr r3,.L21+4
 552 0098 181C     	 mov r0,r3
 553 009a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 139:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 554              	 .loc 3 139 0
 555 009e 604A     	 ldr r2,.L21+4
 556 00a0 E523     	 mov r3,#229
 557 00a2 9B00     	 lsl r3,r3,#2
 558 00a4 101C     	 mov r0,r2
 559 00a6 0021     	 mov r1,#0
 560 00a8 1A1C     	 mov r2,r3
 561 00aa FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 562 00ae B3E0     	 b .L12
 563              	.L16:
 140:../samuel/samuel_io.c **** 	 			 }
 141:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 60 )
 564              	 .loc 3 141 0
 565 00b0 5A4B     	 ldr r3,.L21
 566 00b2 1B88     	 ldrh r3,[r3]
 567 00b4 3C2B     	 cmp r3,#60
 568 00b6 20D1     	 bne .L17
 142:../samuel/samuel_io.c **** 	 			 {
 143:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 2000;
 569              	 .loc 3 143 0
 570 00b8 594B     	 ldr r3,.L21+4
 571 00ba DB6A     	 ldr r3,[r3,#44]
 572 00bc FA22     	 mov r2,#250
 573 00be D200     	 lsl r2,r2,#3
 574 00c0 1A80     	 strh r2,[r3]
 144:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4000;
 575              	 .loc 3 144 0
 576 00c2 574B     	 ldr r3,.L21+4
 577 00c4 DB6A     	 ldr r3,[r3,#44]
 578 00c6 FA22     	 mov r2,#250
 579 00c8 1201     	 lsl r2,r2,#4
 580 00ca 5A80     	 strh r2,[r3,#2]
 145:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 2000;
 581              	 .loc 3 145 0
 582 00cc 544B     	 ldr r3,.L21+4
 583 00ce DB6A     	 ldr r3,[r3,#44]
 584 00d0 FA22     	 mov r2,#250
 585 00d2 D200     	 lsl r2,r2,#3
 586 00d4 9A80     	 strh r2,[r3,#4]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4000;
 587              	 .loc 3 146 0
 588 00d6 524B     	 ldr r3,.L21+4
 589 00d8 DB6A     	 ldr r3,[r3,#44]
 590 00da FA22     	 mov r2,#250
 591 00dc 1201     	 lsl r2,r2,#4
 592 00de DA80     	 strh r2,[r3,#6]
 147:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 593              	 .loc 3 147 0
 594 00e0 4F4B     	 ldr r3,.L21+4
 595 00e2 181C     	 mov r0,r3
 596 00e4 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 148:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 597              	 .loc 3 148 0
 598 00e8 4D4A     	 ldr r2,.L21+4
 599 00ea E523     	 mov r3,#229
 600 00ec 9B00     	 lsl r3,r3,#2
 601 00ee 101C     	 mov r0,r2
 602 00f0 0021     	 mov r1,#0
 603 00f2 1A1C     	 mov r2,r3
 604 00f4 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 605 00f8 8EE0     	 b .L12
 606              	.L17:
 149:../samuel/samuel_io.c **** 	 			 }
 150:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 80 )
 607              	 .loc 3 150 0
 608 00fa 484B     	 ldr r3,.L21
 609 00fc 1B88     	 ldrh r3,[r3]
 610 00fe 502B     	 cmp r3,#80
 611 0100 20D1     	 bne .L18
 151:../samuel/samuel_io.c **** 	 			 {
 152:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 300;
 612              	 .loc 3 152 0
 613 0102 474B     	 ldr r3,.L21+4
 614 0104 DB6A     	 ldr r3,[r3,#44]
 615 0106 9622     	 mov r2,#150
 616 0108 5200     	 lsl r2,r2,#1
 617 010a 1A80     	 strh r2,[r3]
 153:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 300;
 618              	 .loc 3 153 0
 619 010c 444B     	 ldr r3,.L21+4
 620 010e DB6A     	 ldr r3,[r3,#44]
 621 0110 9622     	 mov r2,#150
 622 0112 5200     	 lsl r2,r2,#1
 623 0114 5A80     	 strh r2,[r3,#2]
 154:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 300;
 624              	 .loc 3 154 0
 625 0116 424B     	 ldr r3,.L21+4
 626 0118 DB6A     	 ldr r3,[r3,#44]
 627 011a 9622     	 mov r2,#150
 628 011c 5200     	 lsl r2,r2,#1
 629 011e 9A80     	 strh r2,[r3,#4]
 155:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 300;
 630              	 .loc 3 155 0
 631 0120 3F4B     	 ldr r3,.L21+4
 632 0122 DB6A     	 ldr r3,[r3,#44]
 633 0124 9622     	 mov r2,#150
 634 0126 5200     	 lsl r2,r2,#1
 635 0128 DA80     	 strh r2,[r3,#6]
 156:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 636              	 .loc 3 156 0
 637 012a 3D4B     	 ldr r3,.L21+4
 638 012c 181C     	 mov r0,r3
 639 012e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 157:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 640              	 .loc 3 157 0
 641 0132 3B4A     	 ldr r2,.L21+4
 642 0134 E523     	 mov r3,#229
 643 0136 9B00     	 lsl r3,r3,#2
 644 0138 101C     	 mov r0,r2
 645 013a 0021     	 mov r1,#0
 646 013c 1A1C     	 mov r2,r3
 647 013e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 648 0142 69E0     	 b .L12
 649              	.L18:
 158:../samuel/samuel_io.c **** 	 			 }
 159:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 100 )
 650              	 .loc 3 159 0
 651 0144 354B     	 ldr r3,.L21
 652 0146 1B88     	 ldrh r3,[r3]
 653 0148 642B     	 cmp r3,#100
 654 014a 1ED1     	 bne .L19
 160:../samuel/samuel_io.c **** 	 			 {
 161:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 1500;
 655              	 .loc 3 161 0
 656 014c 344B     	 ldr r3,.L21+4
 657 014e DB6A     	 ldr r3,[r3,#44]
 658 0150 344A     	 ldr r2,.L21+8
 659 0152 1A80     	 strh r2,[r3]
 162:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4000;
 660              	 .loc 3 162 0
 661 0154 324B     	 ldr r3,.L21+4
 662 0156 DB6A     	 ldr r3,[r3,#44]
 663 0158 FA22     	 mov r2,#250
 664 015a 1201     	 lsl r2,r2,#4
 665 015c 5A80     	 strh r2,[r3,#2]
 163:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 1500;
 666              	 .loc 3 163 0
 667 015e 304B     	 ldr r3,.L21+4
 668 0160 DB6A     	 ldr r3,[r3,#44]
 669 0162 304A     	 ldr r2,.L21+8
 670 0164 9A80     	 strh r2,[r3,#4]
 164:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4000;
 671              	 .loc 3 164 0
 672 0166 2E4B     	 ldr r3,.L21+4
 673 0168 DB6A     	 ldr r3,[r3,#44]
 674 016a FA22     	 mov r2,#250
 675 016c 1201     	 lsl r2,r2,#4
 676 016e DA80     	 strh r2,[r3,#6]
 165:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 677              	 .loc 3 165 0
 678 0170 2B4B     	 ldr r3,.L21+4
 679 0172 181C     	 mov r0,r3
 680 0174 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 166:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 681              	 .loc 3 166 0
 682 0178 294A     	 ldr r2,.L21+4
 683 017a E523     	 mov r3,#229
 684 017c 9B00     	 lsl r3,r3,#2
 685 017e 101C     	 mov r0,r2
 686 0180 0021     	 mov r1,#0
 687 0182 1A1C     	 mov r2,r3
 688 0184 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 689 0188 46E0     	 b .L12
 690              	.L19:
 167:../samuel/samuel_io.c **** 	 			 }
 168:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 120 )
 691              	 .loc 3 168 0
 692 018a 244B     	 ldr r3,.L21
 693 018c 1B88     	 ldrh r3,[r3]
 694 018e 782B     	 cmp r3,#120
 695 0190 1ED1     	 bne .L20
 169:../samuel/samuel_io.c **** 	 			 {
 170:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 3500;
 696              	 .loc 3 170 0
 697 0192 234B     	 ldr r3,.L21+4
 698 0194 DB6A     	 ldr r3,[r3,#44]
 699 0196 244A     	 ldr r2,.L21+12
 700 0198 1A80     	 strh r2,[r3]
 171:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 300;
 701              	 .loc 3 171 0
 702 019a 214B     	 ldr r3,.L21+4
 703 019c DB6A     	 ldr r3,[r3,#44]
 704 019e 9622     	 mov r2,#150
 705 01a0 5200     	 lsl r2,r2,#1
 706 01a2 5A80     	 strh r2,[r3,#2]
 172:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 3500;
 707              	 .loc 3 172 0
 708 01a4 1E4B     	 ldr r3,.L21+4
 709 01a6 DB6A     	 ldr r3,[r3,#44]
 710 01a8 1F4A     	 ldr r2,.L21+12
 711 01aa 9A80     	 strh r2,[r3,#4]
 173:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 300;
 712              	 .loc 3 173 0
 713 01ac 1C4B     	 ldr r3,.L21+4
 714 01ae DB6A     	 ldr r3,[r3,#44]
 715 01b0 9622     	 mov r2,#150
 716 01b2 5200     	 lsl r2,r2,#1
 717 01b4 DA80     	 strh r2,[r3,#6]
 174:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 718              	 .loc 3 174 0
 719 01b6 1A4B     	 ldr r3,.L21+4
 720 01b8 181C     	 mov r0,r3
 721 01ba FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 175:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 722              	 .loc 3 175 0
 723 01be 184A     	 ldr r2,.L21+4
 724 01c0 E523     	 mov r3,#229
 725 01c2 9B00     	 lsl r3,r3,#2
 726 01c4 101C     	 mov r0,r2
 727 01c6 0021     	 mov r1,#0
 728 01c8 1A1C     	 mov r2,r3
 729 01ca FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 730 01ce 23E0     	 b .L12
 731              	.L20:
 176:../samuel/samuel_io.c **** 	 			 }
 177:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 140 )
 732              	 .loc 3 177 0
 733 01d0 124B     	 ldr r3,.L21
 734 01d2 1B88     	 ldrh r3,[r3]
 735 01d4 8C2B     	 cmp r3,#140
 736 01d6 1FD1     	 bne .L12
 178:../samuel/samuel_io.c **** 	 			 {
 179:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 600;
 737              	 .loc 3 179 0
 738 01d8 114B     	 ldr r3,.L21+4
 739 01da DB6A     	 ldr r3,[r3,#44]
 740 01dc 9622     	 mov r2,#150
 741 01de 9200     	 lsl r2,r2,#2
 742 01e0 1A80     	 strh r2,[r3]
 180:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 300;
 743              	 .loc 3 180 0
 744 01e2 0F4B     	 ldr r3,.L21+4
 745 01e4 DB6A     	 ldr r3,[r3,#44]
 746 01e6 9622     	 mov r2,#150
 747 01e8 5200     	 lsl r2,r2,#1
 748 01ea 5A80     	 strh r2,[r3,#2]
 181:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 500;
 749              	 .loc 3 181 0
 750 01ec 0C4B     	 ldr r3,.L21+4
 751 01ee DB6A     	 ldr r3,[r3,#44]
 752 01f0 FA22     	 mov r2,#250
 753 01f2 5200     	 lsl r2,r2,#1
 754 01f4 9A80     	 strh r2,[r3,#4]
 182:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 600;
 755              	 .loc 3 182 0
 756 01f6 0A4B     	 ldr r3,.L21+4
 757 01f8 DB6A     	 ldr r3,[r3,#44]
 758 01fa 9622     	 mov r2,#150
 759 01fc 9200     	 lsl r2,r2,#2
 760 01fe DA80     	 strh r2,[r3,#6]
 183:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 761              	 .loc 3 183 0
 762 0200 074B     	 ldr r3,.L21+4
 763 0202 181C     	 mov r0,r3
 764 0204 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 184:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 765              	 .loc 3 184 0
 766 0208 054A     	 ldr r2,.L21+4
 767 020a E523     	 mov r3,#229
 768 020c 9B00     	 lsl r3,r3,#2
 769 020e 101C     	 mov r0,r2
 770 0210 0021     	 mov r1,#0
 771 0212 1A1C     	 mov r2,r3
 772 0214 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 773              	.L12:
 185:../samuel/samuel_io.c **** 	 			 }
 186:../samuel/samuel_io.c **** 				 else
 187:../samuel/samuel_io.c **** 
 188:../samuel/samuel_io.c **** 				 {
 189:../samuel/samuel_io.c **** 
 190:../samuel/samuel_io.c **** 				 }
 191:../samuel/samuel_io.c **** 
 192:../samuel/samuel_io.c ****    }
 774              	 .loc 3 192 0
 775 0218 BD46     	 mov sp,r7
 776              	 
 777 021a 80BD     	 pop {r7,pc}
 778              	.L22:
 779              	 .align 2
 780              	.L21:
 781 021c 00000000 	 .word zahler_lightprog01
 782 0220 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 783 0224 DC050000 	 .word 1500
 784 0228 AC0D0000 	 .word 3500
 785              	 .cfi_endproc
 786              	.LFE292:
 788              	 .section .text.light_aus,"ax",%progbits
 789              	 .align 2
 790              	 .global light_aus
 791              	 .code 16
 792              	 .thumb_func
 794              	light_aus:
 795              	.LFB293:
 193:../samuel/samuel_io.c ****   //------------------------------------------
 194:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 195:../samuel/samuel_io.c ****    {
 796              	 .loc 3 195 0
 797              	 .cfi_startproc
 798 0000 80B5     	 push {r7,lr}
 799              	.LCFI18:
 800              	 .cfi_def_cfa_offset 8
 801              	 .cfi_offset 7,-8
 802              	 .cfi_offset 14,-4
 803 0002 00AF     	 add r7,sp,#0
 804              	.LCFI19:
 805              	 .cfi_def_cfa_register 7
 196:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 806              	 .loc 3 196 0
 807 0004 104B     	 ldr r3,.L24
 808 0006 1A88     	 ldrh r2,[r3]
 809 0008 104B     	 ldr r3,.L24+4
 810 000a 1A80     	 strh r2,[r3]
 197:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 811              	 .loc 3 197 0
 812 000c 0E4B     	 ldr r3,.L24
 813 000e 1A88     	 ldrh r2,[r3]
 814 0010 0F4B     	 ldr r3,.L24+8
 815 0012 1A80     	 strh r2,[r3]
 198:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 816              	 .loc 3 198 0
 817 0014 0C4B     	 ldr r3,.L24
 818 0016 1A88     	 ldrh r2,[r3]
 819 0018 0E4B     	 ldr r3,.L24+12
 820 001a 1A80     	 strh r2,[r3]
 199:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 821              	 .loc 3 199 0
 822 001c 0A4B     	 ldr r3,.L24
 823 001e 1A88     	 ldrh r2,[r3]
 824 0020 0D4B     	 ldr r3,.L24+16
 825 0022 1A80     	 strh r2,[r3]
 200:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 826              	 .loc 3 200 0
 827 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 201:../samuel/samuel_io.c **** 	  bcuUebergabe();
 828              	 .loc 3 201 0
 829 0028 FFF7FEFF 	 bl bcuUebergabe
 202:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 203:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 830              	 .loc 3 203 0
 831 002c 0B4A     	 ldr r2,.L24+20
 832 002e 8023     	 mov r3,#128
 833 0030 1B01     	 lsl r3,r3,#4
 834 0032 101C     	 mov r0,r2
 835 0034 191C     	 mov r1,r3
 836 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 204:../samuel/samuel_io.c **** 	     // Start Dimming
 205:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 837              	 .loc 3 205 0
 838 003a 084B     	 ldr r3,.L24+20
 839 003c 181C     	 mov r0,r3
 840 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 206:../samuel/samuel_io.c **** 
 207:../samuel/samuel_io.c ****    }
 841              	 .loc 3 207 0
 842 0042 BD46     	 mov sp,r7
 843              	 
 844 0044 80BD     	 pop {r7,pc}
 845              	.L25:
 846 0046 C046     	 .align 2
 847              	.L24:
 848 0048 00000000 	 .word linearwalk_gen
 849 004c 00000000 	 .word linearwalk_ww1
 850 0050 00000000 	 .word linearwalk_ww2
 851 0054 00000000 	 .word linearwalk_cw1
 852 0058 00000000 	 .word linearwalk_cw2
 853 005c 00000000 	 .word DIM_BCCU_0
 854              	 .cfi_endproc
 855              	.LFE293:
 857              	 .section .text.analog_start,"ax",%progbits
 858              	 .align 2
 859              	 .global analog_start
 860              	 .code 16
 861              	 .thumb_func
 863              	analog_start:
 864              	.LFB294:
 208:../samuel/samuel_io.c ****   //------------------------------------------
 209:../samuel/samuel_io.c **** 
 210:../samuel/samuel_io.c **** 
 211:../samuel/samuel_io.c **** 
 212:../samuel/samuel_io.c ****  void analog_start (void)
 213:../samuel/samuel_io.c ****   {
 865              	 .loc 3 213 0
 866              	 .cfi_startproc
 867 0000 80B5     	 push {r7,lr}
 868              	.LCFI20:
 869              	 .cfi_def_cfa_offset 8
 870              	 .cfi_offset 7,-8
 871              	 .cfi_offset 14,-4
 872 0002 00AF     	 add r7,sp,#0
 873              	.LCFI21:
 874              	 .cfi_def_cfa_register 7
 214:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 215:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 216:../samuel/samuel_io.c **** 
 217:../samuel/samuel_io.c ****   }
 875              	 .loc 3 217 0
 876 0004 BD46     	 mov sp,r7
 877              	 
 878 0006 80BD     	 pop {r7,pc}
 879              	 .cfi_endproc
 880              	.LFE294:
 882              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 883              	 .align 2
 884              	 .global SCU_0_IRQHandler
 885              	 .code 16
 886              	 .thumb_func
 888              	SCU_0_IRQHandler:
 889              	.LFB295:
 218:../samuel/samuel_io.c **** 
 219:../samuel/samuel_io.c **** 
 220:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 221:../samuel/samuel_io.c ****   {
 890              	 .loc 3 221 0
 891              	 .cfi_startproc
 892 0000 80B5     	 push {r7,lr}
 893              	.LCFI22:
 894              	 .cfi_def_cfa_offset 8
 895              	 .cfi_offset 7,-8
 896              	 .cfi_offset 14,-4
 897 0002 00AF     	 add r7,sp,#0
 898              	.LCFI23:
 899              	 .cfi_def_cfa_register 7
 222:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 223:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 224:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 225:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 226:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 227:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 228:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 229:../samuel/samuel_io.c ****   }
 900              	 .loc 3 229 0
 901 0004 BD46     	 mov sp,r7
 902              	 
 903 0006 80BD     	 pop {r7,pc}
 904              	 .cfi_endproc
 905              	.LFE295:
 907              	 .section .text.new_data_fill,"ax",%progbits
 908              	 .align 2
 909              	 .global new_data_fill
 910              	 .code 16
 911              	 .thumb_func
 913              	new_data_fill:
 914              	.LFB296:
 230:../samuel/samuel_io.c **** 
 231:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 232:../samuel/samuel_io.c ****  {
 915              	 .loc 3 232 0
 916              	 .cfi_startproc
 917 0000 80B5     	 push {r7,lr}
 918              	.LCFI24:
 919              	 .cfi_def_cfa_offset 8
 920              	 .cfi_offset 7,-8
 921              	 .cfi_offset 14,-4
 922 0002 00AF     	 add r7,sp,#0
 923              	.LCFI25:
 924              	 .cfi_def_cfa_register 7
 233:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 925              	 .loc 3 233 0
 926 0004 124B     	 ldr r3,.L29
 927 0006 0B22     	 mov r2,#11
 928 0008 1A70     	 strb r2,[r3]
 234:../samuel/samuel_io.c **** 	 new_data[0]=1;
 929              	 .loc 3 234 0
 930 000a 124B     	 ldr r3,.L29+4
 931 000c 0122     	 mov r2,#1
 932 000e 1A70     	 strb r2,[r3]
 235:../samuel/samuel_io.c **** 	 new_data[1]=2;
 933              	 .loc 3 235 0
 934 0010 104B     	 ldr r3,.L29+4
 935 0012 0222     	 mov r2,#2
 936 0014 5A70     	 strb r2,[r3,#1]
 236:../samuel/samuel_io.c **** 	 new_data[2]=3;
 937              	 .loc 3 236 0
 938 0016 0F4B     	 ldr r3,.L29+4
 939 0018 0322     	 mov r2,#3
 940 001a 9A70     	 strb r2,[r3,#2]
 237:../samuel/samuel_io.c **** 	 new_data[3]=4;
 941              	 .loc 3 237 0
 942 001c 0D4B     	 ldr r3,.L29+4
 943 001e 0422     	 mov r2,#4
 944 0020 DA70     	 strb r2,[r3,#3]
 238:../samuel/samuel_io.c **** 	 new_data[4]=5;
 945              	 .loc 3 238 0
 946 0022 0C4B     	 ldr r3,.L29+4
 947 0024 0522     	 mov r2,#5
 948 0026 1A71     	 strb r2,[r3,#4]
 239:../samuel/samuel_io.c **** 	 new_data[5]=6;
 949              	 .loc 3 239 0
 950 0028 0A4B     	 ldr r3,.L29+4
 951 002a 0622     	 mov r2,#6
 952 002c 5A71     	 strb r2,[r3,#5]
 240:../samuel/samuel_io.c ****  	 new_data[6]=7;
 953              	 .loc 3 240 0
 954 002e 094B     	 ldr r3,.L29+4
 955 0030 0722     	 mov r2,#7
 956 0032 9A71     	 strb r2,[r3,#6]
 241:../samuel/samuel_io.c ****  	 new_data[7]=8;
 957              	 .loc 3 241 0
 958 0034 074B     	 ldr r3,.L29+4
 959 0036 0822     	 mov r2,#8
 960 0038 DA71     	 strb r2,[r3,#7]
 242:../samuel/samuel_io.c ****  	 new_data[8]=9;
 961              	 .loc 3 242 0
 962 003a 064B     	 ldr r3,.L29+4
 963 003c 0922     	 mov r2,#9
 964 003e 1A72     	 strb r2,[r3,#8]
 243:../samuel/samuel_io.c ****  	 new_data[9]='a';
 965              	 .loc 3 243 0
 966 0040 044B     	 ldr r3,.L29+4
 967 0042 6122     	 mov r2,#97
 968 0044 5A72     	 strb r2,[r3,#9]
 244:../samuel/samuel_io.c **** 	 new_data[10]='b';
 969              	 .loc 3 244 0
 970 0046 034B     	 ldr r3,.L29+4
 971 0048 6222     	 mov r2,#98
 972 004a 9A72     	 strb r2,[r3,#10]
 245:../samuel/samuel_io.c ****  }
 973              	 .loc 3 245 0
 974 004c BD46     	 mov sp,r7
 975              	 
 976 004e 80BD     	 pop {r7,pc}
 977              	.L30:
 978              	 .align 2
 979              	.L29:
 980 0050 00000000 	 .word transmit_buf_size
 981 0054 00000000 	 .word new_data
 982              	 .cfi_endproc
 983              	.LFE296:
 985              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 986              	 .align 2
 987              	 .global new_data_unbekanntBack
 988              	 .code 16
 989              	 .thumb_func
 991              	new_data_unbekanntBack:
 992              	.LFB297:
 246:../samuel/samuel_io.c **** 
 247:../samuel/samuel_io.c **** 
 248:../samuel/samuel_io.c **** 
 249:../samuel/samuel_io.c **** 
 250:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 251:../samuel/samuel_io.c ****  {
 993              	 .loc 3 251 0
 994              	 .cfi_startproc
 995 0000 80B5     	 push {r7,lr}
 996              	.LCFI26:
 997              	 .cfi_def_cfa_offset 8
 998              	 .cfi_offset 7,-8
 999              	 .cfi_offset 14,-4
 1000 0002 00AF     	 add r7,sp,#0
 1001              	.LCFI27:
 1002              	 .cfi_def_cfa_register 7
 252:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1003              	 .loc 3 252 0
 1004 0004 134B     	 ldr r3,.L32
 1005 0006 0B22     	 mov r2,#11
 1006 0008 1A70     	 strb r2,[r3]
 253:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1007              	 .loc 3 253 0
 1008 000a 134B     	 ldr r3,.L32+4
 1009 000c 4C22     	 mov r2,#76
 1010 000e 1A70     	 strb r2,[r3]
 254:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1011              	 .loc 3 254 0
 1012 0010 114B     	 ldr r3,.L32+4
 1013 0012 4922     	 mov r2,#73
 1014 0014 5A70     	 strb r2,[r3,#1]
 255:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1015              	 .loc 3 255 0
 1016 0016 104B     	 ldr r3,.L32+4
 1017 0018 4E22     	 mov r2,#78
 1018 001a 9A70     	 strb r2,[r3,#2]
 256:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1019              	 .loc 3 256 0
 1020 001c 0F4B     	 ldr r3,.L32+8
 1021 001e 1A78     	 ldrb r2,[r3]
 1022 0020 0D4B     	 ldr r3,.L32+4
 1023 0022 DA70     	 strb r2,[r3,#3]
 257:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1024              	 .loc 3 257 0
 1025 0024 0B4B     	 ldr r3,.L32
 1026 0026 1A78     	 ldrb r2,[r3]
 1027 0028 0B4B     	 ldr r3,.L32+4
 1028 002a 1A71     	 strb r2,[r3,#4]
 258:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 1029              	 .loc 3 258 0
 1030 002c 0A4B     	 ldr r3,.L32+4
 1031 002e 3122     	 mov r2,#49
 1032 0030 5A71     	 strb r2,[r3,#5]
 259:../samuel/samuel_io.c **** 	 new_data[6]='n';
 1033              	 .loc 3 259 0
 1034 0032 094B     	 ldr r3,.L32+4
 1035 0034 6E22     	 mov r2,#110
 1036 0036 9A71     	 strb r2,[r3,#6]
 260:../samuel/samuel_io.c **** 	 new_data[7]='o';
 1037              	 .loc 3 260 0
 1038 0038 074B     	 ldr r3,.L32+4
 1039 003a 6F22     	 mov r2,#111
 1040 003c DA71     	 strb r2,[r3,#7]
 261:../samuel/samuel_io.c **** 	 new_data[8]='n';
 1041              	 .loc 3 261 0
 1042 003e 064B     	 ldr r3,.L32+4
 1043 0040 6E22     	 mov r2,#110
 1044 0042 1A72     	 strb r2,[r3,#8]
 262:../samuel/samuel_io.c **** 	 new_data[9]='o';
 1045              	 .loc 3 262 0
 1046 0044 044B     	 ldr r3,.L32+4
 1047 0046 6F22     	 mov r2,#111
 1048 0048 5A72     	 strb r2,[r3,#9]
 263:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1049              	 .loc 3 263 0
 1050 004a 034B     	 ldr r3,.L32+4
 1051 004c FF22     	 mov r2,#255
 1052 004e 9A72     	 strb r2,[r3,#10]
 264:../samuel/samuel_io.c ****  }
 1053              	 .loc 3 264 0
 1054 0050 BD46     	 mov sp,r7
 1055              	 
 1056 0052 80BD     	 pop {r7,pc}
 1057              	.L33:
 1058              	 .align 2
 1059              	.L32:
 1060 0054 00000000 	 .word transmit_buf_size
 1061 0058 00000000 	 .word new_data
 1062 005c 00000000 	 .word node_id
 1063              	 .cfi_endproc
 1064              	.LFE297:
 1066              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 1067              	 .align 2
 1068              	 .global new_data_BroadcastBack
 1069              	 .code 16
 1070              	 .thumb_func
 1072              	new_data_BroadcastBack:
 1073              	.LFB298:
 265:../samuel/samuel_io.c **** 
 266:../samuel/samuel_io.c **** //------------------------------------------
 267:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 268:../samuel/samuel_io.c ****  {
 1074              	 .loc 3 268 0
 1075              	 .cfi_startproc
 1076 0000 80B5     	 push {r7,lr}
 1077              	.LCFI28:
 1078              	 .cfi_def_cfa_offset 8
 1079              	 .cfi_offset 7,-8
 1080              	 .cfi_offset 14,-4
 1081 0002 00AF     	 add r7,sp,#0
 1082              	.LCFI29:
 1083              	 .cfi_def_cfa_register 7
 269:../samuel/samuel_io.c **** 
 270:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1084              	 .loc 3 270 0
 1085 0004 194B     	 ldr r3,.L35
 1086 0006 0B22     	 mov r2,#11
 1087 0008 1A70     	 strb r2,[r3]
 271:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1088              	 .loc 3 271 0
 1089 000a 194B     	 ldr r3,.L35+4
 1090 000c 4C22     	 mov r2,#76
 1091 000e 1A70     	 strb r2,[r3]
 272:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1092              	 .loc 3 272 0
 1093 0010 174B     	 ldr r3,.L35+4
 1094 0012 4922     	 mov r2,#73
 1095 0014 5A70     	 strb r2,[r3,#1]
 273:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1096              	 .loc 3 273 0
 1097 0016 164B     	 ldr r3,.L35+4
 1098 0018 4E22     	 mov r2,#78
 1099 001a 9A70     	 strb r2,[r3,#2]
 274:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1100              	 .loc 3 274 0
 1101 001c 154B     	 ldr r3,.L35+8
 1102 001e 1A78     	 ldrb r2,[r3]
 1103 0020 134B     	 ldr r3,.L35+4
 1104 0022 DA70     	 strb r2,[r3,#3]
 275:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1105              	 .loc 3 275 0
 1106 0024 114B     	 ldr r3,.L35
 1107 0026 1A78     	 ldrb r2,[r3]
 1108 0028 114B     	 ldr r3,.L35+4
 1109 002a 1A71     	 strb r2,[r3,#4]
 276:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 1110              	 .loc 3 276 0
 1111 002c 104B     	 ldr r3,.L35+4
 1112 002e 6F22     	 mov r2,#111
 1113 0030 5A71     	 strb r2,[r3,#5]
 277:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 1114              	 .loc 3 277 0
 1115 0032 114B     	 ldr r3,.L35+12
 1116 0034 1B88     	 ldrh r3,[r3]
 1117 0036 1B0A     	 lsr r3,r3,#8
 1118 0038 9BB2     	 uxth r3,r3
 1119 003a DAB2     	 uxtb r2,r3
 1120 003c 0C4B     	 ldr r3,.L35+4
 1121 003e 9A71     	 strb r2,[r3,#6]
 278:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 1122              	 .loc 3 278 0
 1123 0040 0D4B     	 ldr r3,.L35+12
 1124 0042 1B88     	 ldrh r3,[r3]
 1125 0044 DAB2     	 uxtb r2,r3
 1126 0046 0A4B     	 ldr r3,.L35+4
 1127 0048 DA71     	 strb r2,[r3,#7]
 279:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 1128              	 .loc 3 279 0
 1129 004a 0C4B     	 ldr r3,.L35+16
 1130 004c 1B88     	 ldrh r3,[r3]
 1131 004e 1B0A     	 lsr r3,r3,#8
 1132 0050 9BB2     	 uxth r3,r3
 1133 0052 DAB2     	 uxtb r2,r3
 1134 0054 064B     	 ldr r3,.L35+4
 1135 0056 1A72     	 strb r2,[r3,#8]
 280:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 1136              	 .loc 3 280 0
 1137 0058 084B     	 ldr r3,.L35+16
 1138 005a 1B88     	 ldrh r3,[r3]
 1139 005c DAB2     	 uxtb r2,r3
 1140 005e 044B     	 ldr r3,.L35+4
 1141 0060 5A72     	 strb r2,[r3,#9]
 281:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1142              	 .loc 3 281 0
 1143 0062 034B     	 ldr r3,.L35+4
 1144 0064 FF22     	 mov r2,#255
 1145 0066 9A72     	 strb r2,[r3,#10]
 282:../samuel/samuel_io.c ****  }
 1146              	 .loc 3 282 0
 1147 0068 BD46     	 mov sp,r7
 1148              	 
 1149 006a 80BD     	 pop {r7,pc}
 1150              	.L36:
 1151              	 .align 2
 1152              	.L35:
 1153 006c 00000000 	 .word transmit_buf_size
 1154 0070 00000000 	 .word new_data
 1155 0074 00000000 	 .word node_id
 1156 0078 00000000 	 .word Ser_NrH
 1157 007c 00000000 	 .word Ser_NrL
 1158              	 .cfi_endproc
 1159              	.LFE298:
 1161              	 .section .text.new_data_analog1Back,"ax",%progbits
 1162              	 .align 2
 1163              	 .global new_data_analog1Back
 1164              	 .code 16
 1165              	 .thumb_func
 1167              	new_data_analog1Back:
 1168              	.LFB299:
 283:../samuel/samuel_io.c ****  //------------------------------------------
 284:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 285:../samuel/samuel_io.c ****  {
 1169              	 .loc 3 285 0
 1170              	 .cfi_startproc
 1171 0000 80B5     	 push {r7,lr}
 1172              	.LCFI30:
 1173              	 .cfi_def_cfa_offset 8
 1174              	 .cfi_offset 7,-8
 1175              	 .cfi_offset 14,-4
 1176 0002 00AF     	 add r7,sp,#0
 1177              	.LCFI31:
 1178              	 .cfi_def_cfa_register 7
 286:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1179              	 .loc 3 286 0
 1180 0004 194B     	 ldr r3,.L38
 1181 0006 0B22     	 mov r2,#11
 1182 0008 1A70     	 strb r2,[r3]
 287:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1183              	 .loc 3 287 0
 1184 000a 194B     	 ldr r3,.L38+4
 1185 000c 4C22     	 mov r2,#76
 1186 000e 1A70     	 strb r2,[r3]
 288:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1187              	 .loc 3 288 0
 1188 0010 174B     	 ldr r3,.L38+4
 1189 0012 4922     	 mov r2,#73
 1190 0014 5A70     	 strb r2,[r3,#1]
 289:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1191              	 .loc 3 289 0
 1192 0016 164B     	 ldr r3,.L38+4
 1193 0018 4E22     	 mov r2,#78
 1194 001a 9A70     	 strb r2,[r3,#2]
 290:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1195              	 .loc 3 290 0
 1196 001c 154B     	 ldr r3,.L38+8
 1197 001e 1A78     	 ldrb r2,[r3]
 1198 0020 134B     	 ldr r3,.L38+4
 1199 0022 DA70     	 strb r2,[r3,#3]
 291:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1200              	 .loc 3 291 0
 1201 0024 114B     	 ldr r3,.L38
 1202 0026 1A78     	 ldrb r2,[r3]
 1203 0028 114B     	 ldr r3,.L38+4
 1204 002a 1A71     	 strb r2,[r3,#4]
 292:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1205              	 .loc 3 292 0
 1206 002c 104B     	 ldr r3,.L38+4
 1207 002e 6122     	 mov r2,#97
 1208 0030 5A71     	 strb r2,[r3,#5]
 293:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1209              	 .loc 3 293 0
 1210 0032 114B     	 ldr r3,.L38+12
 1211 0034 1B88     	 ldrh r3,[r3]
 1212 0036 1B0A     	 lsr r3,r3,#8
 1213 0038 9BB2     	 uxth r3,r3
 1214 003a DAB2     	 uxtb r2,r3
 1215 003c 0C4B     	 ldr r3,.L38+4
 1216 003e 9A71     	 strb r2,[r3,#6]
 294:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1217              	 .loc 3 294 0
 1218 0040 0D4B     	 ldr r3,.L38+12
 1219 0042 1B88     	 ldrh r3,[r3]
 1220 0044 DAB2     	 uxtb r2,r3
 1221 0046 0A4B     	 ldr r3,.L38+4
 1222 0048 DA71     	 strb r2,[r3,#7]
 295:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1223              	 .loc 3 295 0
 1224 004a 0C4B     	 ldr r3,.L38+16
 1225 004c 1B88     	 ldrh r3,[r3]
 1226 004e 1B0A     	 lsr r3,r3,#8
 1227 0050 9BB2     	 uxth r3,r3
 1228 0052 DAB2     	 uxtb r2,r3
 1229 0054 064B     	 ldr r3,.L38+4
 1230 0056 1A72     	 strb r2,[r3,#8]
 296:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1231              	 .loc 3 296 0
 1232 0058 084B     	 ldr r3,.L38+16
 1233 005a 1B88     	 ldrh r3,[r3]
 1234 005c DAB2     	 uxtb r2,r3
 1235 005e 044B     	 ldr r3,.L38+4
 1236 0060 5A72     	 strb r2,[r3,#9]
 297:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1237              	 .loc 3 297 0
 1238 0062 034B     	 ldr r3,.L38+4
 1239 0064 FF22     	 mov r2,#255
 1240 0066 9A72     	 strb r2,[r3,#10]
 298:../samuel/samuel_io.c ****  }
 1241              	 .loc 3 298 0
 1242 0068 BD46     	 mov sp,r7
 1243              	 
 1244 006a 80BD     	 pop {r7,pc}
 1245              	.L39:
 1246              	 .align 2
 1247              	.L38:
 1248 006c 00000000 	 .word transmit_buf_size
 1249 0070 00000000 	 .word new_data
 1250 0074 00000000 	 .word node_id
 1251 0078 00000000 	 .word resultA2
 1252 007c 00000000 	 .word resultB2
 1253              	 .cfi_endproc
 1254              	.LFE299:
 1256              	 .section .text.new_data_analog2Back,"ax",%progbits
 1257              	 .align 2
 1258              	 .global new_data_analog2Back
 1259              	 .code 16
 1260              	 .thumb_func
 1262              	new_data_analog2Back:
 1263              	.LFB300:
 299:../samuel/samuel_io.c ****  //------------------------------------------------------
 300:../samuel/samuel_io.c **** 
 301:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 302:../samuel/samuel_io.c ****  {
 1264              	 .loc 3 302 0
 1265              	 .cfi_startproc
 1266 0000 80B5     	 push {r7,lr}
 1267              	.LCFI32:
 1268              	 .cfi_def_cfa_offset 8
 1269              	 .cfi_offset 7,-8
 1270              	 .cfi_offset 14,-4
 1271 0002 00AF     	 add r7,sp,#0
 1272              	.LCFI33:
 1273              	 .cfi_def_cfa_register 7
 303:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1274              	 .loc 3 303 0
 1275 0004 194B     	 ldr r3,.L41
 1276 0006 0B22     	 mov r2,#11
 1277 0008 1A70     	 strb r2,[r3]
 304:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1278              	 .loc 3 304 0
 1279 000a 194B     	 ldr r3,.L41+4
 1280 000c 4C22     	 mov r2,#76
 1281 000e 1A70     	 strb r2,[r3]
 305:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1282              	 .loc 3 305 0
 1283 0010 174B     	 ldr r3,.L41+4
 1284 0012 4922     	 mov r2,#73
 1285 0014 5A70     	 strb r2,[r3,#1]
 306:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1286              	 .loc 3 306 0
 1287 0016 164B     	 ldr r3,.L41+4
 1288 0018 4E22     	 mov r2,#78
 1289 001a 9A70     	 strb r2,[r3,#2]
 307:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1290              	 .loc 3 307 0
 1291 001c 154B     	 ldr r3,.L41+8
 1292 001e 1A78     	 ldrb r2,[r3]
 1293 0020 134B     	 ldr r3,.L41+4
 1294 0022 DA70     	 strb r2,[r3,#3]
 308:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1295              	 .loc 3 308 0
 1296 0024 114B     	 ldr r3,.L41
 1297 0026 1A78     	 ldrb r2,[r3]
 1298 0028 114B     	 ldr r3,.L41+4
 1299 002a 1A71     	 strb r2,[r3,#4]
 309:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1300              	 .loc 3 309 0
 1301 002c 104B     	 ldr r3,.L41+4
 1302 002e 6222     	 mov r2,#98
 1303 0030 5A71     	 strb r2,[r3,#5]
 310:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1304              	 .loc 3 310 0
 1305 0032 114B     	 ldr r3,.L41+12
 1306 0034 1B88     	 ldrh r3,[r3]
 1307 0036 1B0A     	 lsr r3,r3,#8
 1308 0038 9BB2     	 uxth r3,r3
 1309 003a DAB2     	 uxtb r2,r3
 1310 003c 0C4B     	 ldr r3,.L41+4
 1311 003e 9A71     	 strb r2,[r3,#6]
 311:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1312              	 .loc 3 311 0
 1313 0040 0D4B     	 ldr r3,.L41+12
 1314 0042 1B88     	 ldrh r3,[r3]
 1315 0044 DAB2     	 uxtb r2,r3
 1316 0046 0A4B     	 ldr r3,.L41+4
 1317 0048 DA71     	 strb r2,[r3,#7]
 312:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1318              	 .loc 3 312 0
 1319 004a 0C4B     	 ldr r3,.L41+16
 1320 004c 1B88     	 ldrh r3,[r3]
 1321 004e 1B0A     	 lsr r3,r3,#8
 1322 0050 9BB2     	 uxth r3,r3
 1323 0052 DAB2     	 uxtb r2,r3
 1324 0054 064B     	 ldr r3,.L41+4
 1325 0056 1A72     	 strb r2,[r3,#8]
 313:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1326              	 .loc 3 313 0
 1327 0058 084B     	 ldr r3,.L41+16
 1328 005a 1B88     	 ldrh r3,[r3]
 1329 005c DAB2     	 uxtb r2,r3
 1330 005e 044B     	 ldr r3,.L41+4
 1331 0060 5A72     	 strb r2,[r3,#9]
 314:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1332              	 .loc 3 314 0
 1333 0062 034B     	 ldr r3,.L41+4
 1334 0064 FF22     	 mov r2,#255
 1335 0066 9A72     	 strb r2,[r3,#10]
 315:../samuel/samuel_io.c ****  }
 1336              	 .loc 3 315 0
 1337 0068 BD46     	 mov sp,r7
 1338              	 
 1339 006a 80BD     	 pop {r7,pc}
 1340              	.L42:
 1341              	 .align 2
 1342              	.L41:
 1343 006c 00000000 	 .word transmit_buf_size
 1344 0070 00000000 	 .word new_data
 1345 0074 00000000 	 .word node_id
 1346 0078 00000000 	 .word resultC2
 1347 007c 00000000 	 .word resultD2
 1348              	 .cfi_endproc
 1349              	.LFE300:
 1351              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1352              	 .align 2
 1353              	 .global new_data_aktLichtBack
 1354              	 .code 16
 1355              	 .thumb_func
 1357              	new_data_aktLichtBack:
 1358              	.LFB301:
 316:../samuel/samuel_io.c ****  //------------------------------------------------------
 317:../samuel/samuel_io.c **** 
 318:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 319:../samuel/samuel_io.c ****  {
 1359              	 .loc 3 319 0
 1360              	 .cfi_startproc
 1361 0000 80B5     	 push {r7,lr}
 1362              	.LCFI34:
 1363              	 .cfi_def_cfa_offset 8
 1364              	 .cfi_offset 7,-8
 1365              	 .cfi_offset 14,-4
 1366 0002 00AF     	 add r7,sp,#0
 1367              	.LCFI35:
 1368              	 .cfi_def_cfa_register 7
 320:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1369              	 .loc 3 320 0
 1370 0004 194B     	 ldr r3,.L44
 1371 0006 0B22     	 mov r2,#11
 1372 0008 1A70     	 strb r2,[r3]
 321:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1373              	 .loc 3 321 0
 1374 000a 194B     	 ldr r3,.L44+4
 1375 000c 4C22     	 mov r2,#76
 1376 000e 1A70     	 strb r2,[r3]
 322:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1377              	 .loc 3 322 0
 1378 0010 174B     	 ldr r3,.L44+4
 1379 0012 4922     	 mov r2,#73
 1380 0014 5A70     	 strb r2,[r3,#1]
 323:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1381              	 .loc 3 323 0
 1382 0016 164B     	 ldr r3,.L44+4
 1383 0018 4E22     	 mov r2,#78
 1384 001a 9A70     	 strb r2,[r3,#2]
 324:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1385              	 .loc 3 324 0
 1386 001c 154B     	 ldr r3,.L44+8
 1387 001e 1A78     	 ldrb r2,[r3]
 1388 0020 134B     	 ldr r3,.L44+4
 1389 0022 DA70     	 strb r2,[r3,#3]
 325:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1390              	 .loc 3 325 0
 1391 0024 114B     	 ldr r3,.L44
 1392 0026 1A78     	 ldrb r2,[r3]
 1393 0028 114B     	 ldr r3,.L44+4
 1394 002a 1A71     	 strb r2,[r3,#4]
 326:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1395              	 .loc 3 326 0
 1396 002c 104B     	 ldr r3,.L44+4
 1397 002e 6622     	 mov r2,#102
 1398 0030 5A71     	 strb r2,[r3,#5]
 327:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1399              	 .loc 3 327 0
 1400 0032 114B     	 ldr r3,.L44+12
 1401 0034 1B88     	 ldrh r3,[r3]
 1402 0036 1B0A     	 lsr r3,r3,#8
 1403 0038 9BB2     	 uxth r3,r3
 1404 003a DAB2     	 uxtb r2,r3
 1405 003c 0C4B     	 ldr r3,.L44+4
 1406 003e 9A71     	 strb r2,[r3,#6]
 328:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1407              	 .loc 3 328 0
 1408 0040 0D4B     	 ldr r3,.L44+12
 1409 0042 1B88     	 ldrh r3,[r3]
 1410 0044 DAB2     	 uxtb r2,r3
 1411 0046 0A4B     	 ldr r3,.L44+4
 1412 0048 DA71     	 strb r2,[r3,#7]
 329:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1413              	 .loc 3 329 0
 1414 004a 0C4B     	 ldr r3,.L44+16
 1415 004c 1B88     	 ldrh r3,[r3]
 1416 004e 1B0A     	 lsr r3,r3,#8
 1417 0050 9BB2     	 uxth r3,r3
 1418 0052 DAB2     	 uxtb r2,r3
 1419 0054 064B     	 ldr r3,.L44+4
 1420 0056 1A72     	 strb r2,[r3,#8]
 330:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1421              	 .loc 3 330 0
 1422 0058 084B     	 ldr r3,.L44+16
 1423 005a 1B88     	 ldrh r3,[r3]
 1424 005c DAB2     	 uxtb r2,r3
 1425 005e 044B     	 ldr r3,.L44+4
 1426 0060 5A72     	 strb r2,[r3,#9]
 331:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1427              	 .loc 3 331 0
 1428 0062 034B     	 ldr r3,.L44+4
 1429 0064 FF22     	 mov r2,#255
 1430 0066 9A72     	 strb r2,[r3,#10]
 332:../samuel/samuel_io.c ****  }
 1431              	 .loc 3 332 0
 1432 0068 BD46     	 mov sp,r7
 1433              	 
 1434 006a 80BD     	 pop {r7,pc}
 1435              	.L45:
 1436              	 .align 2
 1437              	.L44:
 1438 006c 00000000 	 .word transmit_buf_size
 1439 0070 00000000 	 .word new_data
 1440 0074 00000000 	 .word node_id
 1441 0078 00000000 	 .word dimAkt_Ww
 1442 007c 00000000 	 .word dimAkt_Cw
 1443              	 .cfi_endproc
 1444              	.LFE301:
 1446              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1447              	 .align 2
 1448              	 .global new_data_offLichtBack
 1449              	 .code 16
 1450              	 .thumb_func
 1452              	new_data_offLichtBack:
 1453              	.LFB302:
 333:../samuel/samuel_io.c ****  //------------------------------------------------------
 334:../samuel/samuel_io.c **** 
 335:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 336:../samuel/samuel_io.c ****  {
 1454              	 .loc 3 336 0
 1455              	 .cfi_startproc
 1456 0000 80B5     	 push {r7,lr}
 1457              	.LCFI36:
 1458              	 .cfi_def_cfa_offset 8
 1459              	 .cfi_offset 7,-8
 1460              	 .cfi_offset 14,-4
 1461 0002 00AF     	 add r7,sp,#0
 1462              	.LCFI37:
 1463              	 .cfi_def_cfa_register 7
 337:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1464              	 .loc 3 337 0
 1465 0004 1D4B     	 ldr r3,.L47
 1466 0006 0D22     	 mov r2,#13
 1467 0008 1A70     	 strb r2,[r3]
 338:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1468              	 .loc 3 338 0
 1469 000a 1D4B     	 ldr r3,.L47+4
 1470 000c 4C22     	 mov r2,#76
 1471 000e 1A70     	 strb r2,[r3]
 339:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1472              	 .loc 3 339 0
 1473 0010 1B4B     	 ldr r3,.L47+4
 1474 0012 4922     	 mov r2,#73
 1475 0014 5A70     	 strb r2,[r3,#1]
 340:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1476              	 .loc 3 340 0
 1477 0016 1A4B     	 ldr r3,.L47+4
 1478 0018 4E22     	 mov r2,#78
 1479 001a 9A70     	 strb r2,[r3,#2]
 341:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1480              	 .loc 3 341 0
 1481 001c 194B     	 ldr r3,.L47+8
 1482 001e 1A78     	 ldrb r2,[r3]
 1483 0020 174B     	 ldr r3,.L47+4
 1484 0022 DA70     	 strb r2,[r3,#3]
 342:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1485              	 .loc 3 342 0
 1486 0024 154B     	 ldr r3,.L47
 1487 0026 1A78     	 ldrb r2,[r3]
 1488 0028 154B     	 ldr r3,.L47+4
 1489 002a 1A71     	 strb r2,[r3,#4]
 343:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1490              	 .loc 3 343 0
 1491 002c 144B     	 ldr r3,.L47+4
 1492 002e 6722     	 mov r2,#103
 1493 0030 5A71     	 strb r2,[r3,#5]
 344:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1494              	 .loc 3 344 0
 1495 0032 154B     	 ldr r3,.L47+12
 1496 0034 1B88     	 ldrh r3,[r3]
 1497 0036 1B0A     	 lsr r3,r3,#8
 1498 0038 9BB2     	 uxth r3,r3
 1499 003a DAB2     	 uxtb r2,r3
 1500 003c 104B     	 ldr r3,.L47+4
 1501 003e 9A71     	 strb r2,[r3,#6]
 345:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1502              	 .loc 3 345 0
 1503 0040 114B     	 ldr r3,.L47+12
 1504 0042 1B88     	 ldrh r3,[r3]
 1505 0044 DAB2     	 uxtb r2,r3
 1506 0046 0E4B     	 ldr r3,.L47+4
 1507 0048 DA71     	 strb r2,[r3,#7]
 346:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1508              	 .loc 3 346 0
 1509 004a 104B     	 ldr r3,.L47+16
 1510 004c 1B88     	 ldrh r3,[r3]
 1511 004e 1B0A     	 lsr r3,r3,#8
 1512 0050 9BB2     	 uxth r3,r3
 1513 0052 DAB2     	 uxtb r2,r3
 1514 0054 0A4B     	 ldr r3,.L47+4
 1515 0056 1A72     	 strb r2,[r3,#8]
 347:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1516              	 .loc 3 347 0
 1517 0058 0C4B     	 ldr r3,.L47+16
 1518 005a 1B88     	 ldrh r3,[r3]
 1519 005c DAB2     	 uxtb r2,r3
 1520 005e 084B     	 ldr r3,.L47+4
 1521 0060 5A72     	 strb r2,[r3,#9]
 348:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1522              	 .loc 3 348 0
 1523 0062 0B4B     	 ldr r3,.L47+20
 1524 0064 1A78     	 ldrb r2,[r3]
 1525 0066 064B     	 ldr r3,.L47+4
 1526 0068 9A72     	 strb r2,[r3,#10]
 349:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1527              	 .loc 3 349 0
 1528 006a 0A4B     	 ldr r3,.L47+24
 1529 006c 1A78     	 ldrb r2,[r3]
 1530 006e 044B     	 ldr r3,.L47+4
 1531 0070 DA72     	 strb r2,[r3,#11]
 350:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1532              	 .loc 3 350 0
 1533 0072 034B     	 ldr r3,.L47+4
 1534 0074 FF22     	 mov r2,#255
 1535 0076 1A73     	 strb r2,[r3,#12]
 351:../samuel/samuel_io.c ****  }
 1536              	 .loc 3 351 0
 1537 0078 BD46     	 mov sp,r7
 1538              	 
 1539 007a 80BD     	 pop {r7,pc}
 1540              	.L48:
 1541              	 .align 2
 1542              	.L47:
 1543 007c 00000000 	 .word transmit_buf_size
 1544 0080 00000000 	 .word new_data
 1545 0084 00000000 	 .word node_id
 1546 0088 00000000 	 .word dimOff_Ww
 1547 008c 00000000 	 .word dimOff_Cw
 1548 0090 00000000 	 .word RegOnOff
 1549 0094 00000000 	 .word RegOnOff2
 1550              	 .cfi_endproc
 1551              	.LFE302:
 1553              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1554              	 .align 2
 1555              	 .global new_data_Bright_Color_Back
 1556              	 .code 16
 1557              	 .thumb_func
 1559              	new_data_Bright_Color_Back:
 1560              	.LFB303:
 352:../samuel/samuel_io.c ****  //------------------------------------------------------
 353:../samuel/samuel_io.c **** 
 354:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 355:../samuel/samuel_io.c ****   {
 1561              	 .loc 3 355 0
 1562              	 .cfi_startproc
 1563 0000 80B5     	 push {r7,lr}
 1564              	.LCFI38:
 1565              	 .cfi_def_cfa_offset 8
 1566              	 .cfi_offset 7,-8
 1567              	 .cfi_offset 14,-4
 1568 0002 00AF     	 add r7,sp,#0
 1569              	.LCFI39:
 1570              	 .cfi_def_cfa_register 7
 356:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1571              	 .loc 3 356 0
 1572 0004 194B     	 ldr r3,.L50
 1573 0006 0B22     	 mov r2,#11
 1574 0008 1A70     	 strb r2,[r3]
 357:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1575              	 .loc 3 357 0
 1576 000a 194B     	 ldr r3,.L50+4
 1577 000c 4C22     	 mov r2,#76
 1578 000e 1A70     	 strb r2,[r3]
 358:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1579              	 .loc 3 358 0
 1580 0010 174B     	 ldr r3,.L50+4
 1581 0012 4922     	 mov r2,#73
 1582 0014 5A70     	 strb r2,[r3,#1]
 359:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1583              	 .loc 3 359 0
 1584 0016 164B     	 ldr r3,.L50+4
 1585 0018 4E22     	 mov r2,#78
 1586 001a 9A70     	 strb r2,[r3,#2]
 360:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1587              	 .loc 3 360 0
 1588 001c 154B     	 ldr r3,.L50+8
 1589 001e 1A78     	 ldrb r2,[r3]
 1590 0020 134B     	 ldr r3,.L50+4
 1591 0022 DA70     	 strb r2,[r3,#3]
 361:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1592              	 .loc 3 361 0
 1593 0024 114B     	 ldr r3,.L50
 1594 0026 1A78     	 ldrb r2,[r3]
 1595 0028 114B     	 ldr r3,.L50+4
 1596 002a 1A71     	 strb r2,[r3,#4]
 362:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1597              	 .loc 3 362 0
 1598 002c 104B     	 ldr r3,.L50+4
 1599 002e 6822     	 mov r2,#104
 1600 0030 5A71     	 strb r2,[r3,#5]
 363:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1601              	 .loc 3 363 0
 1602 0032 114B     	 ldr r3,.L50+12
 1603 0034 1B88     	 ldrh r3,[r3]
 1604 0036 1B0A     	 lsr r3,r3,#8
 1605 0038 9BB2     	 uxth r3,r3
 1606 003a DAB2     	 uxtb r2,r3
 1607 003c 0C4B     	 ldr r3,.L50+4
 1608 003e 9A71     	 strb r2,[r3,#6]
 364:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1609              	 .loc 3 364 0
 1610 0040 0D4B     	 ldr r3,.L50+12
 1611 0042 1B88     	 ldrh r3,[r3]
 1612 0044 DAB2     	 uxtb r2,r3
 1613 0046 0A4B     	 ldr r3,.L50+4
 1614 0048 DA71     	 strb r2,[r3,#7]
 365:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1615              	 .loc 3 365 0
 1616 004a 0C4B     	 ldr r3,.L50+16
 1617 004c 1B88     	 ldrh r3,[r3]
 1618 004e 1B0A     	 lsr r3,r3,#8
 1619 0050 9BB2     	 uxth r3,r3
 1620 0052 DAB2     	 uxtb r2,r3
 1621 0054 064B     	 ldr r3,.L50+4
 1622 0056 1A72     	 strb r2,[r3,#8]
 366:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1623              	 .loc 3 366 0
 1624 0058 084B     	 ldr r3,.L50+16
 1625 005a 1B88     	 ldrh r3,[r3]
 1626 005c DAB2     	 uxtb r2,r3
 1627 005e 044B     	 ldr r3,.L50+4
 1628 0060 5A72     	 strb r2,[r3,#9]
 367:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1629              	 .loc 3 367 0
 1630 0062 034B     	 ldr r3,.L50+4
 1631 0064 FF22     	 mov r2,#255
 1632 0066 9A72     	 strb r2,[r3,#10]
 368:../samuel/samuel_io.c ****   }
 1633              	 .loc 3 368 0
 1634 0068 BD46     	 mov sp,r7
 1635              	 
 1636 006a 80BD     	 pop {r7,pc}
 1637              	.L51:
 1638              	 .align 2
 1639              	.L50:
 1640 006c 00000000 	 .word transmit_buf_size
 1641 0070 00000000 	 .word new_data
 1642 0074 00000000 	 .word node_id
 1643 0078 00000000 	 .word Brightness_Gen
 1644 007c 00000000 	 .word ColorQuot_Gen
 1645              	 .cfi_endproc
 1646              	.LFE303:
 1648              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1649              	 .align 2
 1650              	 .global new_data_Quot_Walk_Back
 1651              	 .code 16
 1652              	 .thumb_func
 1654              	new_data_Quot_Walk_Back:
 1655              	.LFB304:
 369:../samuel/samuel_io.c ****   //------------------------------------------------------
 370:../samuel/samuel_io.c **** 
 371:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 372:../samuel/samuel_io.c ****   {
 1656              	 .loc 3 372 0
 1657              	 .cfi_startproc
 1658 0000 80B5     	 push {r7,lr}
 1659              	.LCFI40:
 1660              	 .cfi_def_cfa_offset 8
 1661              	 .cfi_offset 7,-8
 1662              	 .cfi_offset 14,-4
 1663 0002 00AF     	 add r7,sp,#0
 1664              	.LCFI41:
 1665              	 .cfi_def_cfa_register 7
 373:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1666              	 .loc 3 373 0
 1667 0004 194B     	 ldr r3,.L53
 1668 0006 0B22     	 mov r2,#11
 1669 0008 1A70     	 strb r2,[r3]
 374:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1670              	 .loc 3 374 0
 1671 000a 194B     	 ldr r3,.L53+4
 1672 000c 4C22     	 mov r2,#76
 1673 000e 1A70     	 strb r2,[r3]
 375:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1674              	 .loc 3 375 0
 1675 0010 174B     	 ldr r3,.L53+4
 1676 0012 4922     	 mov r2,#73
 1677 0014 5A70     	 strb r2,[r3,#1]
 376:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1678              	 .loc 3 376 0
 1679 0016 164B     	 ldr r3,.L53+4
 1680 0018 4E22     	 mov r2,#78
 1681 001a 9A70     	 strb r2,[r3,#2]
 377:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1682              	 .loc 3 377 0
 1683 001c 154B     	 ldr r3,.L53+8
 1684 001e 1A78     	 ldrb r2,[r3]
 1685 0020 134B     	 ldr r3,.L53+4
 1686 0022 DA70     	 strb r2,[r3,#3]
 378:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1687              	 .loc 3 378 0
 1688 0024 114B     	 ldr r3,.L53
 1689 0026 1A78     	 ldrb r2,[r3]
 1690 0028 114B     	 ldr r3,.L53+4
 1691 002a 1A71     	 strb r2,[r3,#4]
 379:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1692              	 .loc 3 379 0
 1693 002c 104B     	 ldr r3,.L53+4
 1694 002e 6922     	 mov r2,#105
 1695 0030 5A71     	 strb r2,[r3,#5]
 380:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1696              	 .loc 3 380 0
 1697 0032 114B     	 ldr r3,.L53+12
 1698 0034 1B88     	 ldrh r3,[r3]
 1699 0036 1B0A     	 lsr r3,r3,#8
 1700 0038 9BB2     	 uxth r3,r3
 1701 003a DAB2     	 uxtb r2,r3
 1702 003c 0C4B     	 ldr r3,.L53+4
 1703 003e 9A71     	 strb r2,[r3,#6]
 381:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1704              	 .loc 3 381 0
 1705 0040 0D4B     	 ldr r3,.L53+12
 1706 0042 1B88     	 ldrh r3,[r3]
 1707 0044 DAB2     	 uxtb r2,r3
 1708 0046 0A4B     	 ldr r3,.L53+4
 1709 0048 DA71     	 strb r2,[r3,#7]
 382:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1710              	 .loc 3 382 0
 1711 004a 0C4B     	 ldr r3,.L53+16
 1712 004c 1B88     	 ldrh r3,[r3]
 1713 004e 1B0A     	 lsr r3,r3,#8
 1714 0050 9BB2     	 uxth r3,r3
 1715 0052 DAB2     	 uxtb r2,r3
 1716 0054 064B     	 ldr r3,.L53+4
 1717 0056 1A72     	 strb r2,[r3,#8]
 383:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1718              	 .loc 3 383 0
 1719 0058 084B     	 ldr r3,.L53+16
 1720 005a 1B88     	 ldrh r3,[r3]
 1721 005c DAB2     	 uxtb r2,r3
 1722 005e 044B     	 ldr r3,.L53+4
 1723 0060 5A72     	 strb r2,[r3,#9]
 384:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1724              	 .loc 3 384 0
 1725 0062 034B     	 ldr r3,.L53+4
 1726 0064 FF22     	 mov r2,#255
 1727 0066 9A72     	 strb r2,[r3,#10]
 385:../samuel/samuel_io.c ****   }
 1728              	 .loc 3 385 0
 1729 0068 BD46     	 mov sp,r7
 1730              	 
 1731 006a 80BD     	 pop {r7,pc}
 1732              	.L54:
 1733              	 .align 2
 1734              	.L53:
 1735 006c 00000000 	 .word transmit_buf_size
 1736 0070 00000000 	 .word new_data
 1737 0074 00000000 	 .word node_id
 1738 0078 00000000 	 .word linearwalk_gen
 1739 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1740              	 .cfi_endproc
 1741              	.LFE304:
 1743              	 .section .text.new_data_HalloBack,"ax",%progbits
 1744              	 .align 2
 1745              	 .global new_data_HalloBack
 1746              	 .code 16
 1747              	 .thumb_func
 1749              	new_data_HalloBack:
 1750              	.LFB305:
 386:../samuel/samuel_io.c ****  //------------------------------------------
 387:../samuel/samuel_io.c **** 
 388:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 389:../samuel/samuel_io.c ****   {
 1751              	 .loc 3 389 0
 1752              	 .cfi_startproc
 1753 0000 80B5     	 push {r7,lr}
 1754              	.LCFI42:
 1755              	 .cfi_def_cfa_offset 8
 1756              	 .cfi_offset 7,-8
 1757              	 .cfi_offset 14,-4
 1758 0002 00AF     	 add r7,sp,#0
 1759              	.LCFI43:
 1760              	 .cfi_def_cfa_register 7
 390:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1761              	 .loc 3 390 0
 1762 0004 134B     	 ldr r3,.L56
 1763 0006 0B22     	 mov r2,#11
 1764 0008 1A70     	 strb r2,[r3]
 391:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1765              	 .loc 3 391 0
 1766 000a 134B     	 ldr r3,.L56+4
 1767 000c 4C22     	 mov r2,#76
 1768 000e 1A70     	 strb r2,[r3]
 392:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1769              	 .loc 3 392 0
 1770 0010 114B     	 ldr r3,.L56+4
 1771 0012 4922     	 mov r2,#73
 1772 0014 5A70     	 strb r2,[r3,#1]
 393:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1773              	 .loc 3 393 0
 1774 0016 104B     	 ldr r3,.L56+4
 1775 0018 4E22     	 mov r2,#78
 1776 001a 9A70     	 strb r2,[r3,#2]
 394:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1777              	 .loc 3 394 0
 1778 001c 0F4B     	 ldr r3,.L56+8
 1779 001e 1A78     	 ldrb r2,[r3]
 1780 0020 0D4B     	 ldr r3,.L56+4
 1781 0022 DA70     	 strb r2,[r3,#3]
 395:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1782              	 .loc 3 395 0
 1783 0024 0B4B     	 ldr r3,.L56
 1784 0026 1A78     	 ldrb r2,[r3]
 1785 0028 0B4B     	 ldr r3,.L56+4
 1786 002a 1A71     	 strb r2,[r3,#4]
 396:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1787              	 .loc 3 396 0
 1788 002c 0A4B     	 ldr r3,.L56+4
 1789 002e 6A22     	 mov r2,#106
 1790 0030 5A71     	 strb r2,[r3,#5]
 397:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1791              	 .loc 3 397 0
 1792 0032 094B     	 ldr r3,.L56+4
 1793 0034 6F22     	 mov r2,#111
 1794 0036 9A71     	 strb r2,[r3,#6]
 398:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1795              	 .loc 3 398 0
 1796 0038 074B     	 ldr r3,.L56+4
 1797 003a 6B22     	 mov r2,#107
 1798 003c DA71     	 strb r2,[r3,#7]
 399:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1799              	 .loc 3 399 0
 1800 003e 064B     	 ldr r3,.L56+4
 1801 0040 6F22     	 mov r2,#111
 1802 0042 1A72     	 strb r2,[r3,#8]
 400:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1803              	 .loc 3 400 0
 1804 0044 044B     	 ldr r3,.L56+4
 1805 0046 6B22     	 mov r2,#107
 1806 0048 5A72     	 strb r2,[r3,#9]
 401:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1807              	 .loc 3 401 0
 1808 004a 034B     	 ldr r3,.L56+4
 1809 004c FF22     	 mov r2,#255
 1810 004e 9A72     	 strb r2,[r3,#10]
 402:../samuel/samuel_io.c ****   }
 1811              	 .loc 3 402 0
 1812 0050 BD46     	 mov sp,r7
 1813              	 
 1814 0052 80BD     	 pop {r7,pc}
 1815              	.L57:
 1816              	 .align 2
 1817              	.L56:
 1818 0054 00000000 	 .word transmit_buf_size
 1819 0058 00000000 	 .word new_data
 1820 005c 00000000 	 .word node_id
 1821              	 .cfi_endproc
 1822              	.LFE305:
 1824              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 1825              	 .align 2
 1826              	 .global new_data_neuNodeIdBack
 1827              	 .code 16
 1828              	 .thumb_func
 1830              	new_data_neuNodeIdBack:
 1831              	.LFB306:
 403:../samuel/samuel_io.c ****   //------------------------------------------------------
 404:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 405:../samuel/samuel_io.c ****    {
 1832              	 .loc 3 405 0
 1833              	 .cfi_startproc
 1834 0000 80B5     	 push {r7,lr}
 1835              	.LCFI44:
 1836              	 .cfi_def_cfa_offset 8
 1837              	 .cfi_offset 7,-8
 1838              	 .cfi_offset 14,-4
 1839 0002 00AF     	 add r7,sp,#0
 1840              	.LCFI45:
 1841              	 .cfi_def_cfa_register 7
 406:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 1842              	 .loc 3 406 0
 1843 0004 1B4B     	 ldr r3,.L59
 1844 0006 0C22     	 mov r2,#12
 1845 0008 1A70     	 strb r2,[r3]
 407:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1846              	 .loc 3 407 0
 1847 000a 1B4B     	 ldr r3,.L59+4
 1848 000c 4C22     	 mov r2,#76
 1849 000e 1A70     	 strb r2,[r3]
 408:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1850              	 .loc 3 408 0
 1851 0010 194B     	 ldr r3,.L59+4
 1852 0012 4922     	 mov r2,#73
 1853 0014 5A70     	 strb r2,[r3,#1]
 409:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1854              	 .loc 3 409 0
 1855 0016 184B     	 ldr r3,.L59+4
 1856 0018 4E22     	 mov r2,#78
 1857 001a 9A70     	 strb r2,[r3,#2]
 410:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1858              	 .loc 3 410 0
 1859 001c 174B     	 ldr r3,.L59+8
 1860 001e 1A78     	 ldrb r2,[r3]
 1861 0020 154B     	 ldr r3,.L59+4
 1862 0022 DA70     	 strb r2,[r3,#3]
 411:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1863              	 .loc 3 411 0
 1864 0024 134B     	 ldr r3,.L59
 1865 0026 1A78     	 ldrb r2,[r3]
 1866 0028 134B     	 ldr r3,.L59+4
 1867 002a 1A71     	 strb r2,[r3,#4]
 412:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 1868              	 .loc 3 412 0
 1869 002c 124B     	 ldr r3,.L59+4
 1870 002e 6B22     	 mov r2,#107
 1871 0030 5A71     	 strb r2,[r3,#5]
 413:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 1872              	 .loc 3 413 0
 1873 0032 134B     	 ldr r3,.L59+12
 1874 0034 1A78     	 ldrb r2,[r3]
 1875 0036 104B     	 ldr r3,.L59+4
 1876 0038 9A71     	 strb r2,[r3,#6]
 414:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 1877              	 .loc 3 414 0
 1878 003a 124B     	 ldr r3,.L59+16
 1879 003c 1B88     	 ldrh r3,[r3]
 1880 003e 1B0A     	 lsr r3,r3,#8
 1881 0040 9BB2     	 uxth r3,r3
 1882 0042 DAB2     	 uxtb r2,r3
 1883 0044 0C4B     	 ldr r3,.L59+4
 1884 0046 DA71     	 strb r2,[r3,#7]
 415:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 1885              	 .loc 3 415 0
 1886 0048 0E4B     	 ldr r3,.L59+16
 1887 004a 1B88     	 ldrh r3,[r3]
 1888 004c DAB2     	 uxtb r2,r3
 1889 004e 0A4B     	 ldr r3,.L59+4
 1890 0050 1A72     	 strb r2,[r3,#8]
 416:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 1891              	 .loc 3 416 0
 1892 0052 0D4B     	 ldr r3,.L59+20
 1893 0054 1B88     	 ldrh r3,[r3]
 1894 0056 1B0A     	 lsr r3,r3,#8
 1895 0058 9BB2     	 uxth r3,r3
 1896 005a DAB2     	 uxtb r2,r3
 1897 005c 064B     	 ldr r3,.L59+4
 1898 005e 5A72     	 strb r2,[r3,#9]
 417:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 1899              	 .loc 3 417 0
 1900 0060 094B     	 ldr r3,.L59+20
 1901 0062 1B88     	 ldrh r3,[r3]
 1902 0064 DAB2     	 uxtb r2,r3
 1903 0066 044B     	 ldr r3,.L59+4
 1904 0068 9A72     	 strb r2,[r3,#10]
 418:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 1905              	 .loc 3 418 0
 1906 006a 034B     	 ldr r3,.L59+4
 1907 006c FF22     	 mov r2,#255
 1908 006e DA72     	 strb r2,[r3,#11]
 419:../samuel/samuel_io.c ****    }
 1909              	 .loc 3 419 0
 1910 0070 BD46     	 mov sp,r7
 1911              	 
 1912 0072 80BD     	 pop {r7,pc}
 1913              	.L60:
 1914              	 .align 2
 1915              	.L59:
 1916 0074 00000000 	 .word transmit_buf_size
 1917 0078 00000000 	 .word new_data
 1918 007c 00000000 	 .word node_id
 1919 0080 00000000 	 .word node_id_neu
 1920 0084 00000000 	 .word Ser_NrH
 1921 0088 00000000 	 .word Ser_NrL
 1922              	 .cfi_endproc
 1923              	.LFE306:
 1925              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 1926              	 .align 2
 1927              	 .global new_data_neuSerNrBack
 1928              	 .code 16
 1929              	 .thumb_func
 1931              	new_data_neuSerNrBack:
 1932              	.LFB307:
 420:../samuel/samuel_io.c ****    //------------------------------------------------------
 421:../samuel/samuel_io.c **** 
 422:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 423:../samuel/samuel_io.c ****    {
 1933              	 .loc 3 423 0
 1934              	 .cfi_startproc
 1935 0000 80B5     	 push {r7,lr}
 1936              	.LCFI46:
 1937              	 .cfi_def_cfa_offset 8
 1938              	 .cfi_offset 7,-8
 1939              	 .cfi_offset 14,-4
 1940 0002 00AF     	 add r7,sp,#0
 1941              	.LCFI47:
 1942              	 .cfi_def_cfa_register 7
 424:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 1943              	 .loc 3 424 0
 1944 0004 254B     	 ldr r3,.L62
 1945 0006 0F22     	 mov r2,#15
 1946 0008 1A70     	 strb r2,[r3]
 425:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1947              	 .loc 3 425 0
 1948 000a 254B     	 ldr r3,.L62+4
 1949 000c 4C22     	 mov r2,#76
 1950 000e 1A70     	 strb r2,[r3]
 426:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1951              	 .loc 3 426 0
 1952 0010 234B     	 ldr r3,.L62+4
 1953 0012 4922     	 mov r2,#73
 1954 0014 5A70     	 strb r2,[r3,#1]
 427:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1955              	 .loc 3 427 0
 1956 0016 224B     	 ldr r3,.L62+4
 1957 0018 4E22     	 mov r2,#78
 1958 001a 9A70     	 strb r2,[r3,#2]
 428:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1959              	 .loc 3 428 0
 1960 001c 214B     	 ldr r3,.L62+8
 1961 001e 1A78     	 ldrb r2,[r3]
 1962 0020 1F4B     	 ldr r3,.L62+4
 1963 0022 DA70     	 strb r2,[r3,#3]
 429:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1964              	 .loc 3 429 0
 1965 0024 1D4B     	 ldr r3,.L62
 1966 0026 1A78     	 ldrb r2,[r3]
 1967 0028 1D4B     	 ldr r3,.L62+4
 1968 002a 1A71     	 strb r2,[r3,#4]
 430:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 1969              	 .loc 3 430 0
 1970 002c 1C4B     	 ldr r3,.L62+4
 1971 002e 6C22     	 mov r2,#108
 1972 0030 5A71     	 strb r2,[r3,#5]
 431:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 1973              	 .loc 3 431 0
 1974 0032 1D4B     	 ldr r3,.L62+12
 1975 0034 1B88     	 ldrh r3,[r3]
 1976 0036 1B0A     	 lsr r3,r3,#8
 1977 0038 9BB2     	 uxth r3,r3
 1978 003a DAB2     	 uxtb r2,r3
 1979 003c 184B     	 ldr r3,.L62+4
 1980 003e 9A71     	 strb r2,[r3,#6]
 432:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 1981              	 .loc 3 432 0
 1982 0040 194B     	 ldr r3,.L62+12
 1983 0042 1B88     	 ldrh r3,[r3]
 1984 0044 DAB2     	 uxtb r2,r3
 1985 0046 164B     	 ldr r3,.L62+4
 1986 0048 DA71     	 strb r2,[r3,#7]
 433:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 1987              	 .loc 3 433 0
 1988 004a 184B     	 ldr r3,.L62+16
 1989 004c 1B88     	 ldrh r3,[r3]
 1990 004e 1B0A     	 lsr r3,r3,#8
 1991 0050 9BB2     	 uxth r3,r3
 1992 0052 DAB2     	 uxtb r2,r3
 1993 0054 124B     	 ldr r3,.L62+4
 1994 0056 1A72     	 strb r2,[r3,#8]
 434:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 1995              	 .loc 3 434 0
 1996 0058 144B     	 ldr r3,.L62+16
 1997 005a 1B88     	 ldrh r3,[r3]
 1998 005c DAB2     	 uxtb r2,r3
 1999 005e 104B     	 ldr r3,.L62+4
 2000 0060 5A72     	 strb r2,[r3,#9]
 435:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 2001              	 .loc 3 435 0
 2002 0062 134B     	 ldr r3,.L62+20
 2003 0064 1B88     	 ldrh r3,[r3]
 2004 0066 1B0A     	 lsr r3,r3,#8
 2005 0068 9BB2     	 uxth r3,r3
 2006 006a DAB2     	 uxtb r2,r3
 2007 006c 0C4B     	 ldr r3,.L62+4
 2008 006e 9A72     	 strb r2,[r3,#10]
 436:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 2009              	 .loc 3 436 0
 2010 0070 0F4B     	 ldr r3,.L62+20
 2011 0072 1B88     	 ldrh r3,[r3]
 2012 0074 DAB2     	 uxtb r2,r3
 2013 0076 0A4B     	 ldr r3,.L62+4
 2014 0078 DA72     	 strb r2,[r3,#11]
 437:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 2015              	 .loc 3 437 0
 2016 007a 0E4B     	 ldr r3,.L62+24
 2017 007c 1B88     	 ldrh r3,[r3]
 2018 007e 1B0A     	 lsr r3,r3,#8
 2019 0080 9BB2     	 uxth r3,r3
 2020 0082 DAB2     	 uxtb r2,r3
 2021 0084 064B     	 ldr r3,.L62+4
 2022 0086 1A73     	 strb r2,[r3,#12]
 438:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 2023              	 .loc 3 438 0
 2024 0088 0A4B     	 ldr r3,.L62+24
 2025 008a 1B88     	 ldrh r3,[r3]
 2026 008c DAB2     	 uxtb r2,r3
 2027 008e 044B     	 ldr r3,.L62+4
 2028 0090 5A73     	 strb r2,[r3,#13]
 439:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 2029              	 .loc 3 439 0
 2030 0092 034B     	 ldr r3,.L62+4
 2031 0094 FF22     	 mov r2,#255
 2032 0096 9A73     	 strb r2,[r3,#14]
 440:../samuel/samuel_io.c ****    }
 2033              	 .loc 3 440 0
 2034 0098 BD46     	 mov sp,r7
 2035              	 
 2036 009a 80BD     	 pop {r7,pc}
 2037              	.L63:
 2038              	 .align 2
 2039              	.L62:
 2040 009c 00000000 	 .word transmit_buf_size
 2041 00a0 00000000 	 .word new_data
 2042 00a4 00000000 	 .word node_id
 2043 00a8 00000000 	 .word neu_Ser_NrH
 2044 00ac 00000000 	 .word neu_Ser_NrL
 2045 00b0 00000000 	 .word Ser_NrH
 2046 00b4 00000000 	 .word Ser_NrL
 2047              	 .cfi_endproc
 2048              	.LFE307:
 2050              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 2051              	 .align 2
 2052              	 .global new_data_NodeIdBack
 2053              	 .code 16
 2054              	 .thumb_func
 2056              	new_data_NodeIdBack:
 2057              	.LFB308:
 441:../samuel/samuel_io.c ****    //------------------------------------------------------
 442:../samuel/samuel_io.c **** 
 443:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 444:../samuel/samuel_io.c ****    {
 2058              	 .loc 3 444 0
 2059              	 .cfi_startproc
 2060 0000 80B5     	 push {r7,lr}
 2061              	.LCFI48:
 2062              	 .cfi_def_cfa_offset 8
 2063              	 .cfi_offset 7,-8
 2064              	 .cfi_offset 14,-4
 2065 0002 00AF     	 add r7,sp,#0
 2066              	.LCFI49:
 2067              	 .cfi_def_cfa_register 7
 445:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 2068              	 .loc 3 445 0
 2069 0004 1D4B     	 ldr r3,.L65
 2070 0006 0D22     	 mov r2,#13
 2071 0008 1A70     	 strb r2,[r3]
 446:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2072              	 .loc 3 446 0
 2073 000a 1D4B     	 ldr r3,.L65+4
 2074 000c 4C22     	 mov r2,#76
 2075 000e 1A70     	 strb r2,[r3]
 447:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2076              	 .loc 3 447 0
 2077 0010 1B4B     	 ldr r3,.L65+4
 2078 0012 4922     	 mov r2,#73
 2079 0014 5A70     	 strb r2,[r3,#1]
 448:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2080              	 .loc 3 448 0
 2081 0016 1A4B     	 ldr r3,.L65+4
 2082 0018 4E22     	 mov r2,#78
 2083 001a 9A70     	 strb r2,[r3,#2]
 449:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2084              	 .loc 3 449 0
 2085 001c 194B     	 ldr r3,.L65+8
 2086 001e 1A78     	 ldrb r2,[r3]
 2087 0020 174B     	 ldr r3,.L65+4
 2088 0022 DA70     	 strb r2,[r3,#3]
 450:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2089              	 .loc 3 450 0
 2090 0024 154B     	 ldr r3,.L65
 2091 0026 1A78     	 ldrb r2,[r3]
 2092 0028 154B     	 ldr r3,.L65+4
 2093 002a 1A71     	 strb r2,[r3,#4]
 451:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 2094              	 .loc 3 451 0
 2095 002c 144B     	 ldr r3,.L65+4
 2096 002e 6D22     	 mov r2,#109
 2097 0030 5A71     	 strb r2,[r3,#5]
 452:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 2098              	 .loc 3 452 0
 2099 0032 154B     	 ldr r3,.L65+12
 2100 0034 1A78     	 ldrb r2,[r3]
 2101 0036 124B     	 ldr r3,.L65+4
 2102 0038 9A71     	 strb r2,[r3,#6]
 453:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 2103              	 .loc 3 453 0
 2104 003a 124B     	 ldr r3,.L65+8
 2105 003c 1A78     	 ldrb r2,[r3]
 2106 003e 104B     	 ldr r3,.L65+4
 2107 0040 DA71     	 strb r2,[r3,#7]
 454:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 2108              	 .loc 3 454 0
 2109 0042 124B     	 ldr r3,.L65+16
 2110 0044 1B88     	 ldrh r3,[r3]
 2111 0046 1B0A     	 lsr r3,r3,#8
 2112 0048 9BB2     	 uxth r3,r3
 2113 004a DAB2     	 uxtb r2,r3
 2114 004c 0C4B     	 ldr r3,.L65+4
 2115 004e 1A72     	 strb r2,[r3,#8]
 455:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 2116              	 .loc 3 455 0
 2117 0050 0E4B     	 ldr r3,.L65+16
 2118 0052 1B88     	 ldrh r3,[r3]
 2119 0054 DAB2     	 uxtb r2,r3
 2120 0056 0A4B     	 ldr r3,.L65+4
 2121 0058 5A72     	 strb r2,[r3,#9]
 456:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 2122              	 .loc 3 456 0
 2123 005a 0D4B     	 ldr r3,.L65+20
 2124 005c 1B88     	 ldrh r3,[r3]
 2125 005e 1B0A     	 lsr r3,r3,#8
 2126 0060 9BB2     	 uxth r3,r3
 2127 0062 DAB2     	 uxtb r2,r3
 2128 0064 064B     	 ldr r3,.L65+4
 2129 0066 9A72     	 strb r2,[r3,#10]
 457:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 2130              	 .loc 3 457 0
 2131 0068 094B     	 ldr r3,.L65+20
 2132 006a 1B88     	 ldrh r3,[r3]
 2133 006c DAB2     	 uxtb r2,r3
 2134 006e 044B     	 ldr r3,.L65+4
 2135 0070 DA72     	 strb r2,[r3,#11]
 458:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 2136              	 .loc 3 458 0
 2137 0072 034B     	 ldr r3,.L65+4
 2138 0074 FF22     	 mov r2,#255
 2139 0076 1A73     	 strb r2,[r3,#12]
 459:../samuel/samuel_io.c ****    }
 2140              	 .loc 3 459 0
 2141 0078 BD46     	 mov sp,r7
 2142              	 
 2143 007a 80BD     	 pop {r7,pc}
 2144              	.L66:
 2145              	 .align 2
 2146              	.L65:
 2147 007c 00000000 	 .word transmit_buf_size
 2148 0080 00000000 	 .word new_data
 2149 0084 00000000 	 .word node_id
 2150 0088 00000000 	 .word node_id_alt
 2151 008c 00000000 	 .word Ser_NrH
 2152 0090 00000000 	 .word Ser_NrL
 2153              	 .cfi_endproc
 2154              	.LFE308:
 2156              	 .section .text.new_data_SerNrBack,"ax",%progbits
 2157              	 .align 2
 2158              	 .global new_data_SerNrBack
 2159              	 .code 16
 2160              	 .thumb_func
 2162              	new_data_SerNrBack:
 2163              	.LFB309:
 460:../samuel/samuel_io.c **** 
 461:../samuel/samuel_io.c ****    //------------------------------------------------------
 462:../samuel/samuel_io.c **** 
 463:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 464:../samuel/samuel_io.c ****    {
 2164              	 .loc 3 464 0
 2165              	 .cfi_startproc
 2166 0000 80B5     	 push {r7,lr}
 2167              	.LCFI50:
 2168              	 .cfi_def_cfa_offset 8
 2169              	 .cfi_offset 7,-8
 2170              	 .cfi_offset 14,-4
 2171 0002 00AF     	 add r7,sp,#0
 2172              	.LCFI51:
 2173              	 .cfi_def_cfa_register 7
 465:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 2174              	 .loc 3 465 0
 2175 0004 194B     	 ldr r3,.L68
 2176 0006 0B22     	 mov r2,#11
 2177 0008 1A70     	 strb r2,[r3]
 466:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2178              	 .loc 3 466 0
 2179 000a 194B     	 ldr r3,.L68+4
 2180 000c 4C22     	 mov r2,#76
 2181 000e 1A70     	 strb r2,[r3]
 467:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2182              	 .loc 3 467 0
 2183 0010 174B     	 ldr r3,.L68+4
 2184 0012 4922     	 mov r2,#73
 2185 0014 5A70     	 strb r2,[r3,#1]
 468:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2186              	 .loc 3 468 0
 2187 0016 164B     	 ldr r3,.L68+4
 2188 0018 4E22     	 mov r2,#78
 2189 001a 9A70     	 strb r2,[r3,#2]
 469:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2190              	 .loc 3 469 0
 2191 001c 154B     	 ldr r3,.L68+8
 2192 001e 1A78     	 ldrb r2,[r3]
 2193 0020 134B     	 ldr r3,.L68+4
 2194 0022 DA70     	 strb r2,[r3,#3]
 470:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2195              	 .loc 3 470 0
 2196 0024 114B     	 ldr r3,.L68
 2197 0026 1A78     	 ldrb r2,[r3]
 2198 0028 114B     	 ldr r3,.L68+4
 2199 002a 1A71     	 strb r2,[r3,#4]
 471:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2200              	 .loc 3 471 0
 2201 002c 104B     	 ldr r3,.L68+4
 2202 002e 6E22     	 mov r2,#110
 2203 0030 5A71     	 strb r2,[r3,#5]
 472:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2204              	 .loc 3 472 0
 2205 0032 114B     	 ldr r3,.L68+12
 2206 0034 1B88     	 ldrh r3,[r3]
 2207 0036 1B0A     	 lsr r3,r3,#8
 2208 0038 9BB2     	 uxth r3,r3
 2209 003a DAB2     	 uxtb r2,r3
 2210 003c 0C4B     	 ldr r3,.L68+4
 2211 003e 9A71     	 strb r2,[r3,#6]
 473:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2212              	 .loc 3 473 0
 2213 0040 0D4B     	 ldr r3,.L68+12
 2214 0042 1B88     	 ldrh r3,[r3]
 2215 0044 DAB2     	 uxtb r2,r3
 2216 0046 0A4B     	 ldr r3,.L68+4
 2217 0048 DA71     	 strb r2,[r3,#7]
 474:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2218              	 .loc 3 474 0
 2219 004a 0C4B     	 ldr r3,.L68+16
 2220 004c 1B88     	 ldrh r3,[r3]
 2221 004e 1B0A     	 lsr r3,r3,#8
 2222 0050 9BB2     	 uxth r3,r3
 2223 0052 DAB2     	 uxtb r2,r3
 2224 0054 064B     	 ldr r3,.L68+4
 2225 0056 1A72     	 strb r2,[r3,#8]
 475:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2226              	 .loc 3 475 0
 2227 0058 084B     	 ldr r3,.L68+16
 2228 005a 1B88     	 ldrh r3,[r3]
 2229 005c DAB2     	 uxtb r2,r3
 2230 005e 044B     	 ldr r3,.L68+4
 2231 0060 5A72     	 strb r2,[r3,#9]
 476:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2232              	 .loc 3 476 0
 2233 0062 034B     	 ldr r3,.L68+4
 2234 0064 FF22     	 mov r2,#255
 2235 0066 9A72     	 strb r2,[r3,#10]
 477:../samuel/samuel_io.c ****    }
 2236              	 .loc 3 477 0
 2237 0068 BD46     	 mov sp,r7
 2238              	 
 2239 006a 80BD     	 pop {r7,pc}
 2240              	.L69:
 2241              	 .align 2
 2242              	.L68:
 2243 006c 00000000 	 .word transmit_buf_size
 2244 0070 00000000 	 .word new_data
 2245 0074 00000000 	 .word node_id
 2246 0078 00000000 	 .word Ser_NrH
 2247 007c 00000000 	 .word Ser_NrL
 2248              	 .cfi_endproc
 2249              	.LFE309:
 2251              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2252              	 .align 2
 2253              	 .global new_data_readbuff2Back
 2254              	 .code 16
 2255              	 .thumb_func
 2257              	new_data_readbuff2Back:
 2258              	.LFB310:
 478:../samuel/samuel_io.c ****    //-------------------------------------
 479:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 480:../samuel/samuel_io.c ****    {
 2259              	 .loc 3 480 0
 2260              	 .cfi_startproc
 2261 0000 80B5     	 push {r7,lr}
 2262              	.LCFI52:
 2263              	 .cfi_def_cfa_offset 8
 2264              	 .cfi_offset 7,-8
 2265              	 .cfi_offset 14,-4
 2266 0002 00AF     	 add r7,sp,#0
 2267              	.LCFI53:
 2268              	 .cfi_def_cfa_register 7
 481:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2269              	 .loc 3 481 0
 2270 0004 2F4B     	 ldr r3,.L71
 2271 0006 1822     	 mov r2,#24
 2272 0008 1A70     	 strb r2,[r3]
 482:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2273              	 .loc 3 482 0
 2274 000a 2F4B     	 ldr r3,.L71+4
 2275 000c 4C22     	 mov r2,#76
 2276 000e 1A70     	 strb r2,[r3]
 483:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2277              	 .loc 3 483 0
 2278 0010 2D4B     	 ldr r3,.L71+4
 2279 0012 4922     	 mov r2,#73
 2280 0014 5A70     	 strb r2,[r3,#1]
 484:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2281              	 .loc 3 484 0
 2282 0016 2C4B     	 ldr r3,.L71+4
 2283 0018 4E22     	 mov r2,#78
 2284 001a 9A70     	 strb r2,[r3,#2]
 485:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2285              	 .loc 3 485 0
 2286 001c 2B4B     	 ldr r3,.L71+8
 2287 001e 1A78     	 ldrb r2,[r3]
 2288 0020 294B     	 ldr r3,.L71+4
 2289 0022 DA70     	 strb r2,[r3,#3]
 486:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2290              	 .loc 3 486 0
 2291 0024 274B     	 ldr r3,.L71
 2292 0026 1A78     	 ldrb r2,[r3]
 2293 0028 274B     	 ldr r3,.L71+4
 2294 002a 1A71     	 strb r2,[r3,#4]
 487:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2295              	 .loc 3 487 0
 2296 002c 264B     	 ldr r3,.L71+4
 2297 002e 7022     	 mov r2,#112
 2298 0030 5A71     	 strb r2,[r3,#5]
 488:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2299              	 .loc 3 488 0
 2300 0032 254B     	 ldr r3,.L71+4
 2301 0034 0022     	 mov r2,#0
 2302 0036 9A71     	 strb r2,[r3,#6]
 489:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2303              	 .loc 3 489 0
 2304 0038 254B     	 ldr r3,.L71+12
 2305 003a 1A78     	 ldrb r2,[r3]
 2306 003c 224B     	 ldr r3,.L71+4
 2307 003e DA71     	 strb r2,[r3,#7]
 490:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2308              	 .loc 3 490 0
 2309 0040 234B     	 ldr r3,.L71+12
 2310 0042 5A78     	 ldrb r2,[r3,#1]
 2311 0044 204B     	 ldr r3,.L71+4
 2312 0046 1A72     	 strb r2,[r3,#8]
 491:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2313              	 .loc 3 491 0
 2314 0048 214B     	 ldr r3,.L71+12
 2315 004a 9A78     	 ldrb r2,[r3,#2]
 2316 004c 1E4B     	 ldr r3,.L71+4
 2317 004e 5A72     	 strb r2,[r3,#9]
 492:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2318              	 .loc 3 492 0
 2319 0050 1F4B     	 ldr r3,.L71+12
 2320 0052 DA78     	 ldrb r2,[r3,#3]
 2321 0054 1C4B     	 ldr r3,.L71+4
 2322 0056 9A72     	 strb r2,[r3,#10]
 493:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2323              	 .loc 3 493 0
 2324 0058 1D4B     	 ldr r3,.L71+12
 2325 005a 1A79     	 ldrb r2,[r3,#4]
 2326 005c 1A4B     	 ldr r3,.L71+4
 2327 005e DA72     	 strb r2,[r3,#11]
 494:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2328              	 .loc 3 494 0
 2329 0060 1B4B     	 ldr r3,.L71+12
 2330 0062 5A79     	 ldrb r2,[r3,#5]
 2331 0064 184B     	 ldr r3,.L71+4
 2332 0066 1A73     	 strb r2,[r3,#12]
 495:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2333              	 .loc 3 495 0
 2334 0068 194B     	 ldr r3,.L71+12
 2335 006a 9A79     	 ldrb r2,[r3,#6]
 2336 006c 164B     	 ldr r3,.L71+4
 2337 006e 5A73     	 strb r2,[r3,#13]
 496:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2338              	 .loc 3 496 0
 2339 0070 174B     	 ldr r3,.L71+12
 2340 0072 DA79     	 ldrb r2,[r3,#7]
 2341 0074 144B     	 ldr r3,.L71+4
 2342 0076 9A73     	 strb r2,[r3,#14]
 497:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2343              	 .loc 3 497 0
 2344 0078 154B     	 ldr r3,.L71+12
 2345 007a 1A7A     	 ldrb r2,[r3,#8]
 2346 007c 124B     	 ldr r3,.L71+4
 2347 007e DA73     	 strb r2,[r3,#15]
 498:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2348              	 .loc 3 498 0
 2349 0080 134B     	 ldr r3,.L71+12
 2350 0082 5A7A     	 ldrb r2,[r3,#9]
 2351 0084 104B     	 ldr r3,.L71+4
 2352 0086 1A74     	 strb r2,[r3,#16]
 499:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2353              	 .loc 3 499 0
 2354 0088 114B     	 ldr r3,.L71+12
 2355 008a 9A7A     	 ldrb r2,[r3,#10]
 2356 008c 0E4B     	 ldr r3,.L71+4
 2357 008e 5A74     	 strb r2,[r3,#17]
 500:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2358              	 .loc 3 500 0
 2359 0090 0F4B     	 ldr r3,.L71+12
 2360 0092 DA7A     	 ldrb r2,[r3,#11]
 2361 0094 0C4B     	 ldr r3,.L71+4
 2362 0096 9A74     	 strb r2,[r3,#18]
 501:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2363              	 .loc 3 501 0
 2364 0098 0D4B     	 ldr r3,.L71+12
 2365 009a 1A7B     	 ldrb r2,[r3,#12]
 2366 009c 0A4B     	 ldr r3,.L71+4
 2367 009e DA74     	 strb r2,[r3,#19]
 502:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2368              	 .loc 3 502 0
 2369 00a0 0B4B     	 ldr r3,.L71+12
 2370 00a2 5A7B     	 ldrb r2,[r3,#13]
 2371 00a4 084B     	 ldr r3,.L71+4
 2372 00a6 1A75     	 strb r2,[r3,#20]
 503:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2373              	 .loc 3 503 0
 2374 00a8 094B     	 ldr r3,.L71+12
 2375 00aa 9A7B     	 ldrb r2,[r3,#14]
 2376 00ac 064B     	 ldr r3,.L71+4
 2377 00ae 5A75     	 strb r2,[r3,#21]
 504:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2378              	 .loc 3 504 0
 2379 00b0 074B     	 ldr r3,.L71+12
 2380 00b2 DA7B     	 ldrb r2,[r3,#15]
 2381 00b4 044B     	 ldr r3,.L71+4
 2382 00b6 9A75     	 strb r2,[r3,#22]
 505:../samuel/samuel_io.c **** 
 506:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2383              	 .loc 3 506 0
 2384 00b8 034B     	 ldr r3,.L71+4
 2385 00ba FF22     	 mov r2,#255
 2386 00bc DA75     	 strb r2,[r3,#23]
 507:../samuel/samuel_io.c ****    }
 2387              	 .loc 3 507 0
 2388 00be BD46     	 mov sp,r7
 2389              	 
 2390 00c0 80BD     	 pop {r7,pc}
 2391              	.L72:
 2392 00c2 C046     	 .align 2
 2393              	.L71:
 2394 00c4 00000000 	 .word transmit_buf_size
 2395 00c8 00000000 	 .word new_data
 2396 00cc 00000000 	 .word node_id
 2397 00d0 00000000 	 .word ReadBuffer2
 2398              	 .cfi_endproc
 2399              	.LFE310:
 2401              	 .section .text.clearEpromBuffer,"ax",%progbits
 2402              	 .align 2
 2403              	 .global clearEpromBuffer
 2404              	 .code 16
 2405              	 .thumb_func
 2407              	clearEpromBuffer:
 2408              	.LFB311:
 508:../samuel/samuel_io.c **** 
 509:../samuel/samuel_io.c ****  //------------------------------------------------------
 510:../samuel/samuel_io.c **** 
 511:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 512:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 513:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 514:../samuel/samuel_io.c ****  {
 2409              	 .loc 3 514 0
 2410              	 .cfi_startproc
 2411 0000 80B5     	 push {r7,lr}
 2412              	.LCFI54:
 2413              	 .cfi_def_cfa_offset 8
 2414              	 .cfi_offset 7,-8
 2415              	 .cfi_offset 14,-4
 2416 0002 00AF     	 add r7,sp,#0
 2417              	.LCFI55:
 2418              	 .cfi_def_cfa_register 7
 515:../samuel/samuel_io.c **** 
 516:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 517:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2419              	 .loc 3 517 0
 2420 0004 1E4B     	 ldr r3,.L80
 2421 0006 0022     	 mov r2,#0
 2422 0008 1A70     	 strb r2,[r3]
 2423 000a 0BE0     	 b .L74
 2424              	.L75:
 518:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2425              	 .loc 3 518 0 discriminator 3
 2426 000c 1C4B     	 ldr r3,.L80
 2427 000e 1B78     	 ldrb r3,[r3]
 2428 0010 1A1C     	 mov r2,r3
 2429 0012 1C4B     	 ldr r3,.L80+4
 2430 0014 0021     	 mov r1,#0
 2431 0016 9954     	 strb r1,[r3,r2]
 517:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2432              	 .loc 3 517 0 discriminator 3
 2433 0018 194B     	 ldr r3,.L80
 2434 001a 1B78     	 ldrb r3,[r3]
 2435 001c 0133     	 add r3,r3,#1
 2436 001e DAB2     	 uxtb r2,r3
 2437 0020 174B     	 ldr r3,.L80
 2438 0022 1A70     	 strb r2,[r3]
 2439              	.L74:
 517:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2440              	 .loc 3 517 0 is_stmt 0 discriminator 1
 2441 0024 164B     	 ldr r3,.L80
 2442 0026 1B78     	 ldrb r3,[r3]
 2443 0028 0F2B     	 cmp r3,#15
 2444 002a EFD9     	 bls .L75
 519:../samuel/samuel_io.c **** 
 520:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 521:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2445              	 .loc 3 521 0 is_stmt 1
 2446 002c 144B     	 ldr r3,.L80
 2447 002e 0022     	 mov r2,#0
 2448 0030 1A70     	 strb r2,[r3]
 2449 0032 0BE0     	 b .L76
 2450              	.L77:
 522:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2451              	 .loc 3 522 0 discriminator 3
 2452 0034 124B     	 ldr r3,.L80
 2453 0036 1B78     	 ldrb r3,[r3]
 2454 0038 1A1C     	 mov r2,r3
 2455 003a 134B     	 ldr r3,.L80+8
 2456 003c 0021     	 mov r1,#0
 2457 003e 9954     	 strb r1,[r3,r2]
 521:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2458              	 .loc 3 521 0 discriminator 3
 2459 0040 0F4B     	 ldr r3,.L80
 2460 0042 1B78     	 ldrb r3,[r3]
 2461 0044 0133     	 add r3,r3,#1
 2462 0046 DAB2     	 uxtb r2,r3
 2463 0048 0D4B     	 ldr r3,.L80
 2464 004a 1A70     	 strb r2,[r3]
 2465              	.L76:
 521:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2466              	 .loc 3 521 0 is_stmt 0 discriminator 1
 2467 004c 0C4B     	 ldr r3,.L80
 2468 004e 1B78     	 ldrb r3,[r3]
 2469 0050 0F2B     	 cmp r3,#15
 2470 0052 EFD9     	 bls .L77
 523:../samuel/samuel_io.c **** 
 524:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 525:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2471              	 .loc 3 525 0 is_stmt 1
 2472 0054 0A4B     	 ldr r3,.L80
 2473 0056 0022     	 mov r2,#0
 2474 0058 1A70     	 strb r2,[r3]
 2475 005a 0BE0     	 b .L78
 2476              	.L79:
 526:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2477              	 .loc 3 526 0 discriminator 3
 2478 005c 084B     	 ldr r3,.L80
 2479 005e 1B78     	 ldrb r3,[r3]
 2480 0060 1A1C     	 mov r2,r3
 2481 0062 0A4B     	 ldr r3,.L80+12
 2482 0064 0021     	 mov r1,#0
 2483 0066 9954     	 strb r1,[r3,r2]
 525:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2484              	 .loc 3 525 0 discriminator 3
 2485 0068 054B     	 ldr r3,.L80
 2486 006a 1B78     	 ldrb r3,[r3]
 2487 006c 0133     	 add r3,r3,#1
 2488 006e DAB2     	 uxtb r2,r3
 2489 0070 034B     	 ldr r3,.L80
 2490 0072 1A70     	 strb r2,[r3]
 2491              	.L78:
 525:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2492              	 .loc 3 525 0 is_stmt 0 discriminator 1
 2493 0074 024B     	 ldr r3,.L80
 2494 0076 1B78     	 ldrb r3,[r3]
 2495 0078 1F2B     	 cmp r3,#31
 2496 007a EFD9     	 bls .L79
 527:../samuel/samuel_io.c ****  }
 2497              	 .loc 3 527 0 is_stmt 1
 2498 007c BD46     	 mov sp,r7
 2499              	 
 2500 007e 80BD     	 pop {r7,pc}
 2501              	.L81:
 2502              	 .align 2
 2503              	.L80:
 2504 0080 00000000 	 .word Index
 2505 0084 00000000 	 .word ReadBuffer1
 2506 0088 00000000 	 .word ReadBuffer2
 2507 008c 00000000 	 .word ReadBuffer3
 2508              	 .cfi_endproc
 2509              	.LFE311:
 2511              	 .section .text.fillEpromBuffer,"ax",%progbits
 2512              	 .align 2
 2513              	 .global fillEpromBuffer
 2514              	 .code 16
 2515              	 .thumb_func
 2517              	fillEpromBuffer:
 2518              	.LFB312:
 528:../samuel/samuel_io.c **** 
 529:../samuel/samuel_io.c ****  //---------------------------------
 530:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 531:../samuel/samuel_io.c ****  {
 2519              	 .loc 3 531 0
 2520              	 .cfi_startproc
 2521 0000 80B5     	 push {r7,lr}
 2522              	.LCFI56:
 2523              	 .cfi_def_cfa_offset 8
 2524              	 .cfi_offset 7,-8
 2525              	 .cfi_offset 14,-4
 2526 0002 00AF     	 add r7,sp,#0
 2527              	.LCFI57:
 2528              	 .cfi_def_cfa_register 7
 532:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 533:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2529              	 .loc 3 533 0
 2530 0004 0B4B     	 ldr r3,.L85
 2531 0006 0022     	 mov r2,#0
 2532 0008 1A70     	 strb r2,[r3]
 2533 000a 0CE0     	 b .L83
 2534              	.L84:
 534:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2535              	 .loc 3 534 0 discriminator 3
 2536 000c 094B     	 ldr r3,.L85
 2537 000e 1B78     	 ldrb r3,[r3]
 2538 0010 1A1C     	 mov r2,r3
 2539 0012 084B     	 ldr r3,.L85
 2540 0014 1978     	 ldrb r1,[r3]
 2541 0016 084B     	 ldr r3,.L85+4
 2542 0018 9954     	 strb r1,[r3,r2]
 533:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2543              	 .loc 3 533 0 discriminator 3
 2544 001a 064B     	 ldr r3,.L85
 2545 001c 1B78     	 ldrb r3,[r3]
 2546 001e 0133     	 add r3,r3,#1
 2547 0020 DAB2     	 uxtb r2,r3
 2548 0022 044B     	 ldr r3,.L85
 2549 0024 1A70     	 strb r2,[r3]
 2550              	.L83:
 533:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2551              	 .loc 3 533 0 is_stmt 0 discriminator 1
 2552 0026 034B     	 ldr r3,.L85
 2553 0028 1B78     	 ldrb r3,[r3]
 2554 002a 632B     	 cmp r3,#99
 2555 002c EED9     	 bls .L84
 535:../samuel/samuel_io.c ****  }
 2556              	 .loc 3 535 0 is_stmt 1
 2557 002e BD46     	 mov sp,r7
 2558              	 
 2559 0030 80BD     	 pop {r7,pc}
 2560              	.L86:
 2561 0032 C046     	 .align 2
 2562              	.L85:
 2563 0034 00000000 	 .word Index
 2564 0038 00000000 	 .word data_buffer
 2565              	 .cfi_endproc
 2566              	.LFE312:
 2568              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2569              	 .align 2
 2570              	 .global fill2EpromBuffer
 2571              	 .code 16
 2572              	 .thumb_func
 2574              	fill2EpromBuffer:
 2575              	.LFB313:
 536:../samuel/samuel_io.c **** 
 537:../samuel/samuel_io.c ****  //---------------------------------
 538:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 539:../samuel/samuel_io.c ****  {
 2576              	 .loc 3 539 0
 2577              	 .cfi_startproc
 2578 0000 80B5     	 push {r7,lr}
 2579              	.LCFI58:
 2580              	 .cfi_def_cfa_offset 8
 2581              	 .cfi_offset 7,-8
 2582              	 .cfi_offset 14,-4
 2583 0002 00AF     	 add r7,sp,#0
 2584              	.LCFI59:
 2585              	 .cfi_def_cfa_register 7
 540:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 541:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2586              	 .loc 3 541 0
 2587 0004 0C4B     	 ldr r3,.L90
 2588 0006 0022     	 mov r2,#0
 2589 0008 1A70     	 strb r2,[r3]
 2590 000a 0EE0     	 b .L88
 2591              	.L89:
 542:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2592              	 .loc 3 542 0 discriminator 3
 2593 000c 0A4B     	 ldr r3,.L90
 2594 000e 1B78     	 ldrb r3,[r3]
 2595 0010 1A1C     	 mov r2,r3
 2596 0012 094B     	 ldr r3,.L90
 2597 0014 1B78     	 ldrb r3,[r3]
 2598 0016 DB43     	 mvn r3,r3
 2599 0018 D9B2     	 uxtb r1,r3
 2600 001a 084B     	 ldr r3,.L90+4
 2601 001c 9954     	 strb r1,[r3,r2]
 541:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2602              	 .loc 3 541 0 discriminator 3
 2603 001e 064B     	 ldr r3,.L90
 2604 0020 1B78     	 ldrb r3,[r3]
 2605 0022 0133     	 add r3,r3,#1
 2606 0024 DAB2     	 uxtb r2,r3
 2607 0026 044B     	 ldr r3,.L90
 2608 0028 1A70     	 strb r2,[r3]
 2609              	.L88:
 541:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2610              	 .loc 3 541 0 is_stmt 0 discriminator 1
 2611 002a 034B     	 ldr r3,.L90
 2612 002c 1B78     	 ldrb r3,[r3]
 2613 002e 632B     	 cmp r3,#99
 2614 0030 ECD9     	 bls .L89
 543:../samuel/samuel_io.c ****  }
 2615              	 .loc 3 543 0 is_stmt 1
 2616 0032 BD46     	 mov sp,r7
 2617              	 
 2618 0034 80BD     	 pop {r7,pc}
 2619              	.L91:
 2620 0036 C046     	 .align 2
 2621              	.L90:
 2622 0038 00000000 	 .word Index
 2623 003c 00000000 	 .word data_buffer
 2624              	 .cfi_endproc
 2625              	.LFE313:
 2627              	 .section .text.readAllEEprom,"ax",%progbits
 2628              	 .align 2
 2629              	 .global readAllEEprom
 2630              	 .code 16
 2631              	 .thumb_func
 2633              	readAllEEprom:
 2634              	.LFB314:
 544:../samuel/samuel_io.c **** 
 545:../samuel/samuel_io.c **** 
 546:../samuel/samuel_io.c ****  //------------------------------------------------
 547:../samuel/samuel_io.c **** 
 548:../samuel/samuel_io.c **** 
 549:../samuel/samuel_io.c ****  //------------------------------------------------
 550:../samuel/samuel_io.c ****  int readAllEEprom(void)
 551:../samuel/samuel_io.c ****  {
 2635              	 .loc 3 551 0
 2636              	 .cfi_startproc
 2637 0000 80B5     	 push {r7,lr}
 2638              	.LCFI60:
 2639              	 .cfi_def_cfa_offset 8
 2640              	 .cfi_offset 7,-8
 2641              	 .cfi_offset 14,-4
 2642 0002 00AF     	 add r7,sp,#0
 2643              	.LCFI61:
 2644              	 .cfi_def_cfa_register 7
 552:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2645              	 .loc 3 552 0
 2646 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2647 0008 031C     	 mov r3,r0
 2648 000a 1A1C     	 mov r2,r3
 2649 000c 614B     	 ldr r3,.L98
 2650 000e 1A70     	 strb r2,[r3]
 553:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2651              	 .loc 3 553 0
 2652 0010 604B     	 ldr r3,.L98
 2653 0012 1B78     	 ldrb r3,[r3]
 2654 0014 032B     	 cmp r3,#3
 2655 0016 0AD1     	 bne .L93
 554:../samuel/samuel_io.c ****    {
 555:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2656              	 .loc 3 555 0
 2657 0018 5F4B     	 ldr r3,.L98+4
 2658 001a 0120     	 mov r0,#1
 2659 001c 0021     	 mov r1,#0
 2660 001e 1A1C     	 mov r2,r3
 2661 0020 1023     	 mov r3,#16
 2662 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2663 0026 031C     	 mov r3,r0
 2664 0028 1A1C     	 mov r2,r3
 2665 002a 5C4B     	 ldr r3,.L98+8
 2666 002c 1A70     	 strb r2,[r3]
 2667              	.L93:
 556:../samuel/samuel_io.c ****    }
 557:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2668              	 .loc 3 557 0
 2669 002e 5B4B     	 ldr r3,.L98+8
 2670 0030 1B78     	 ldrb r3,[r3]
 2671 0032 002B     	 cmp r3,#0
 2672 0034 14D1     	 bne .L94
 558:../samuel/samuel_io.c ****    {
 559:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2673              	 .loc 3 559 0
 2674 0036 584B     	 ldr r3,.L98+4
 2675 0038 5B78     	 ldrb r3,[r3,#1]
 2676 003a 9AB2     	 uxth r2,r3
 2677 003c 584B     	 ldr r3,.L98+12
 2678 003e 1A80     	 strh r2,[r3]
 560:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2679              	 .loc 3 560 0
 2680 0040 554B     	 ldr r3,.L98+4
 2681 0042 9B78     	 ldrb r3,[r3,#2]
 2682 0044 9AB2     	 uxth r2,r3
 2683 0046 574B     	 ldr r3,.L98+16
 2684 0048 1A80     	 strh r2,[r3]
 561:../samuel/samuel_io.c **** 
 562:../samuel/samuel_io.c **** 
 563:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2685              	 .loc 3 563 0
 2686 004a 574B     	 ldr r3,.L98+20
 2687 004c 0220     	 mov r0,#2
 2688 004e 0021     	 mov r1,#0
 2689 0050 1A1C     	 mov r2,r3
 2690 0052 1023     	 mov r3,#16
 2691 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2692 0058 031C     	 mov r3,r0
 2693 005a 1A1C     	 mov r2,r3
 2694 005c 4F4B     	 ldr r3,.L98+8
 2695 005e 1A70     	 strb r2,[r3]
 2696              	.L94:
 564:../samuel/samuel_io.c ****    }
 565:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2697              	 .loc 3 565 0
 2698 0060 4E4B     	 ldr r3,.L98+8
 2699 0062 1B78     	 ldrb r3,[r3]
 2700 0064 002B     	 cmp r3,#0
 2701 0066 1ED1     	 bne .L95
 566:../samuel/samuel_io.c ****    {
 567:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2702              	 .loc 3 567 0
 2703 0068 4F4B     	 ldr r3,.L98+20
 2704 006a 5A78     	 ldrb r2,[r3,#1]
 2705 006c 4F4B     	 ldr r3,.L98+24
 2706 006e 1A70     	 strb r2,[r3]
 568:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2707              	 .loc 3 568 0
 2708 0070 4D4B     	 ldr r3,.L98+20
 2709 0072 9A78     	 ldrb r2,[r3,#2]
 2710 0074 4E4B     	 ldr r3,.L98+28
 2711 0076 1A70     	 strb r2,[r3]
 569:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2712              	 .loc 3 569 0
 2713 0078 4B4B     	 ldr r3,.L98+20
 2714 007a DB78     	 ldrb r3,[r3,#3]
 2715 007c 9BB2     	 uxth r3,r3
 2716 007e 1B02     	 lsl r3,r3,#8
 2717 0080 9AB2     	 uxth r2,r3
 2718 0082 494B     	 ldr r3,.L98+20
 2719 0084 1B79     	 ldrb r3,[r3,#4]
 2720 0086 9BB2     	 uxth r3,r3
 2721 0088 D318     	 add r3,r2,r3
 2722 008a 9AB2     	 uxth r2,r3
 2723 008c 494B     	 ldr r3,.L98+32
 2724 008e 1A80     	 strh r2,[r3]
 570:../samuel/samuel_io.c **** 
 571:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2725              	 .loc 3 571 0
 2726 0090 494B     	 ldr r3,.L98+36
 2727 0092 0520     	 mov r0,#5
 2728 0094 0021     	 mov r1,#0
 2729 0096 1A1C     	 mov r2,r3
 2730 0098 2023     	 mov r3,#32
 2731 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2732 009e 031C     	 mov r3,r0
 2733 00a0 1A1C     	 mov r2,r3
 2734 00a2 3E4B     	 ldr r3,.L98+8
 2735 00a4 1A70     	 strb r2,[r3]
 2736              	.L95:
 572:../samuel/samuel_io.c ****    }
 573:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2737              	 .loc 3 573 0
 2738 00a6 3D4B     	 ldr r3,.L98+8
 2739 00a8 1B78     	 ldrb r3,[r3]
 2740 00aa 002B     	 cmp r3,#0
 2741 00ac 67D1     	 bne .L96
 574:../samuel/samuel_io.c ****    {
 575:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2742              	 .loc 3 575 0
 2743 00ae 424B     	 ldr r3,.L98+36
 2744 00b0 5A78     	 ldrb r2,[r3,#1]
 2745 00b2 424B     	 ldr r3,.L98+40
 2746 00b4 1A70     	 strb r2,[r3]
 576:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2747              	 .loc 3 576 0
 2748 00b6 404B     	 ldr r3,.L98+36
 2749 00b8 9A78     	 ldrb r2,[r3,#2]
 2750 00ba 414B     	 ldr r3,.L98+44
 2751 00bc 1A70     	 strb r2,[r3]
 577:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2752              	 .loc 3 577 0
 2753 00be 3E4B     	 ldr r3,.L98+36
 2754 00c0 DB78     	 ldrb r3,[r3,#3]
 2755 00c2 9BB2     	 uxth r3,r3
 2756 00c4 1B02     	 lsl r3,r3,#8
 2757 00c6 9AB2     	 uxth r2,r3
 2758 00c8 3B4B     	 ldr r3,.L98+36
 2759 00ca 1B79     	 ldrb r3,[r3,#4]
 2760 00cc 9BB2     	 uxth r3,r3
 2761 00ce D318     	 add r3,r2,r3
 2762 00d0 9AB2     	 uxth r2,r3
 2763 00d2 3C4B     	 ldr r3,.L98+48
 2764 00d4 1A80     	 strh r2,[r3]
 578:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2765              	 .loc 3 578 0
 2766 00d6 384B     	 ldr r3,.L98+36
 2767 00d8 5B79     	 ldrb r3,[r3,#5]
 2768 00da 9BB2     	 uxth r3,r3
 2769 00dc 1B02     	 lsl r3,r3,#8
 2770 00de 9AB2     	 uxth r2,r3
 2771 00e0 354B     	 ldr r3,.L98+36
 2772 00e2 9B79     	 ldrb r3,[r3,#6]
 2773 00e4 9BB2     	 uxth r3,r3
 2774 00e6 D318     	 add r3,r2,r3
 2775 00e8 9AB2     	 uxth r2,r3
 2776 00ea 374B     	 ldr r3,.L98+52
 2777 00ec 1A80     	 strh r2,[r3]
 579:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2778              	 .loc 3 579 0
 2779 00ee 324B     	 ldr r3,.L98+36
 2780 00f0 DB79     	 ldrb r3,[r3,#7]
 2781 00f2 9BB2     	 uxth r3,r3
 2782 00f4 1B02     	 lsl r3,r3,#8
 2783 00f6 9AB2     	 uxth r2,r3
 2784 00f8 2F4B     	 ldr r3,.L98+36
 2785 00fa 1B7A     	 ldrb r3,[r3,#8]
 2786 00fc 9BB2     	 uxth r3,r3
 2787 00fe D318     	 add r3,r2,r3
 2788 0100 9AB2     	 uxth r2,r3
 2789 0102 324B     	 ldr r3,.L98+56
 2790 0104 1A80     	 strh r2,[r3]
 580:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2791              	 .loc 3 580 0
 2792 0106 2C4B     	 ldr r3,.L98+36
 2793 0108 5B7A     	 ldrb r3,[r3,#9]
 2794 010a 9BB2     	 uxth r3,r3
 2795 010c 1B02     	 lsl r3,r3,#8
 2796 010e 9AB2     	 uxth r2,r3
 2797 0110 294B     	 ldr r3,.L98+36
 2798 0112 9B7A     	 ldrb r3,[r3,#10]
 2799 0114 9BB2     	 uxth r3,r3
 2800 0116 D318     	 add r3,r2,r3
 2801 0118 9AB2     	 uxth r2,r3
 2802 011a 2D4B     	 ldr r3,.L98+60
 2803 011c 1A80     	 strh r2,[r3]
 581:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2804              	 .loc 3 581 0
 2805 011e 264B     	 ldr r3,.L98+36
 2806 0120 DB7A     	 ldrb r3,[r3,#11]
 2807 0122 9BB2     	 uxth r3,r3
 2808 0124 1B02     	 lsl r3,r3,#8
 2809 0126 9AB2     	 uxth r2,r3
 2810 0128 234B     	 ldr r3,.L98+36
 2811 012a 1B7B     	 ldrb r3,[r3,#12]
 2812 012c 9BB2     	 uxth r3,r3
 2813 012e D318     	 add r3,r2,r3
 2814 0130 9AB2     	 uxth r2,r3
 2815 0132 284B     	 ldr r3,.L98+64
 2816 0134 1A80     	 strh r2,[r3]
 582:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2817              	 .loc 3 582 0
 2818 0136 204B     	 ldr r3,.L98+36
 2819 0138 5B7B     	 ldrb r3,[r3,#13]
 2820 013a 9BB2     	 uxth r3,r3
 2821 013c 1B02     	 lsl r3,r3,#8
 2822 013e 9AB2     	 uxth r2,r3
 2823 0140 1D4B     	 ldr r3,.L98+36
 2824 0142 9B7B     	 ldrb r3,[r3,#14]
 2825 0144 9BB2     	 uxth r3,r3
 2826 0146 D318     	 add r3,r2,r3
 2827 0148 9AB2     	 uxth r2,r3
 2828 014a 234B     	 ldr r3,.L98+68
 2829 014c 1A80     	 strh r2,[r3]
 583:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 2830              	 .loc 3 583 0
 2831 014e 1A4B     	 ldr r3,.L98+36
 2832 0150 DB7B     	 ldrb r3,[r3,#15]
 2833 0152 9BB2     	 uxth r3,r3
 2834 0154 1B02     	 lsl r3,r3,#8
 2835 0156 9AB2     	 uxth r2,r3
 2836 0158 174B     	 ldr r3,.L98+36
 2837 015a 1B7C     	 ldrb r3,[r3,#16]
 2838 015c 9BB2     	 uxth r3,r3
 2839 015e D318     	 add r3,r2,r3
 2840 0160 9AB2     	 uxth r2,r3
 2841 0162 1E4B     	 ldr r3,.L98+72
 2842 0164 1A80     	 strh r2,[r3]
 584:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 2843              	 .loc 3 584 0
 2844 0166 144B     	 ldr r3,.L98+36
 2845 0168 5B7C     	 ldrb r3,[r3,#17]
 2846 016a 9BB2     	 uxth r3,r3
 2847 016c 1B02     	 lsl r3,r3,#8
 2848 016e 9AB2     	 uxth r2,r3
 2849 0170 114B     	 ldr r3,.L98+36
 2850 0172 9B7C     	 ldrb r3,[r3,#18]
 2851 0174 9BB2     	 uxth r3,r3
 2852 0176 D318     	 add r3,r2,r3
 2853 0178 9AB2     	 uxth r2,r3
 2854 017a 194B     	 ldr r3,.L98+76
 2855 017c 1A80     	 strh r2,[r3]
 2856              	.L96:
 585:../samuel/samuel_io.c **** 
 586:../samuel/samuel_io.c ****    }
 587:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 2857              	 .loc 3 587 0
 2858 017e 054B     	 ldr r3,.L98
 2859 0180 1B78     	 ldrb r3,[r3]
 2860 0182 1A1C     	 mov r2,r3
 2861 0184 054B     	 ldr r3,.L98+8
 2862 0186 1B78     	 ldrb r3,[r3]
 2863 0188 1B01     	 lsl r3,r3,#4
 2864 018a D318     	 add r3,r2,r3
 588:../samuel/samuel_io.c ****  }
 2865              	 .loc 3 588 0
 2866 018c 181C     	 mov r0,r3
 2867 018e BD46     	 mov sp,r7
 2868              	 
 2869 0190 80BD     	 pop {r7,pc}
 2870              	.L99:
 2871 0192 C046     	 .align 2
 2872              	.L98:
 2873 0194 00000000 	 .word EEprom_status
 2874 0198 00000000 	 .word ReadBuffer1
 2875 019c 00000000 	 .word oper_status
 2876 01a0 00000000 	 .word Ser_NrH
 2877 01a4 00000000 	 .word Ser_NrL
 2878 01a8 00000000 	 .word ReadBuffer2
 2879 01ac 00000000 	 .word node_id_alt
 2880 01b0 00000000 	 .word node_id
 2881 01b4 00000000 	 .word node_id_16bit
 2882 01b8 00000000 	 .word ReadBuffer3
 2883 01bc 00000000 	 .word RegOnOff
 2884 01c0 00000000 	 .word RegOnOff2
 2885 01c4 00000000 	 .word dimAkt_Ww
 2886 01c8 00000000 	 .word dimAkt_Cw
 2887 01cc 00000000 	 .word dimOff_Ww
 2888 01d0 00000000 	 .word dimOff_Cw
 2889 01d4 00000000 	 .word dimNorm1_Ww
 2890 01d8 00000000 	 .word dimNorm1_Cw
 2891 01dc 00000000 	 .word dimNorm2_Ww
 2892 01e0 00000000 	 .word dimNorm2_Cw
 2893              	 .cfi_endproc
 2894              	.LFE314:
 2896              	 .section .text.readSerNrEEprom,"ax",%progbits
 2897              	 .align 2
 2898              	 .global readSerNrEEprom
 2899              	 .code 16
 2900              	 .thumb_func
 2902              	readSerNrEEprom:
 2903              	.LFB315:
 589:../samuel/samuel_io.c ****  //------------------------------------------------
 590:../samuel/samuel_io.c **** 
 591:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 592:../samuel/samuel_io.c ****  {
 2904              	 .loc 3 592 0
 2905              	 .cfi_startproc
 2906 0000 80B5     	 push {r7,lr}
 2907              	.LCFI62:
 2908              	 .cfi_def_cfa_offset 8
 2909              	 .cfi_offset 7,-8
 2910              	 .cfi_offset 14,-4
 2911 0002 00AF     	 add r7,sp,#0
 2912              	.LCFI63:
 2913              	 .cfi_def_cfa_register 7
 593:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2914              	 .loc 3 593 0
 2915 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2916 0008 031C     	 mov r3,r0
 2917 000a 1A1C     	 mov r2,r3
 2918 000c 0D4B     	 ldr r3,.L103
 2919 000e 1A70     	 strb r2,[r3]
 594:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2920              	 .loc 3 594 0
 2921 0010 0C4B     	 ldr r3,.L103
 2922 0012 1B78     	 ldrb r3,[r3]
 2923 0014 032B     	 cmp r3,#3
 2924 0016 0AD1     	 bne .L101
 595:../samuel/samuel_io.c **** 	 {
 596:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2925              	 .loc 3 596 0
 2926 0018 0B4B     	 ldr r3,.L103+4
 2927 001a 0120     	 mov r0,#1
 2928 001c 0021     	 mov r1,#0
 2929 001e 1A1C     	 mov r2,r3
 2930 0020 1023     	 mov r3,#16
 2931 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2932 0026 031C     	 mov r3,r0
 2933 0028 1A1C     	 mov r2,r3
 2934 002a 084B     	 ldr r3,.L103+8
 2935 002c 1A70     	 strb r2,[r3]
 2936              	.L101:
 597:../samuel/samuel_io.c ****      }
 598:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 2937              	 .loc 3 598 0
 2938 002e 054B     	 ldr r3,.L103
 2939 0030 1B78     	 ldrb r3,[r3]
 2940 0032 1A1C     	 mov r2,r3
 2941 0034 054B     	 ldr r3,.L103+8
 2942 0036 1B78     	 ldrb r3,[r3]
 2943 0038 1B01     	 lsl r3,r3,#4
 2944 003a D318     	 add r3,r2,r3
 599:../samuel/samuel_io.c ****  }
 2945              	 .loc 3 599 0
 2946 003c 181C     	 mov r0,r3
 2947 003e BD46     	 mov sp,r7
 2948              	 
 2949 0040 80BD     	 pop {r7,pc}
 2950              	.L104:
 2951 0042 C046     	 .align 2
 2952              	.L103:
 2953 0044 00000000 	 .word EEprom_status
 2954 0048 00000000 	 .word ReadBuffer1
 2955 004c 00000000 	 .word oper_status
 2956              	 .cfi_endproc
 2957              	.LFE315:
 2959              	 .section .text.readNodeIdEEprom,"ax",%progbits
 2960              	 .align 2
 2961              	 .global readNodeIdEEprom
 2962              	 .code 16
 2963              	 .thumb_func
 2965              	readNodeIdEEprom:
 2966              	.LFB316:
 600:../samuel/samuel_io.c ****  //------------------------------------------------
 601:../samuel/samuel_io.c **** 
 602:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 603:../samuel/samuel_io.c ****  {
 2967              	 .loc 3 603 0
 2968              	 .cfi_startproc
 2969 0000 80B5     	 push {r7,lr}
 2970              	.LCFI64:
 2971              	 .cfi_def_cfa_offset 8
 2972              	 .cfi_offset 7,-8
 2973              	 .cfi_offset 14,-4
 2974 0002 00AF     	 add r7,sp,#0
 2975              	.LCFI65:
 2976              	 .cfi_def_cfa_register 7
 604:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2977              	 .loc 3 604 0
 2978 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2979 0008 031C     	 mov r3,r0
 2980 000a 1A1C     	 mov r2,r3
 2981 000c 0D4B     	 ldr r3,.L108
 2982 000e 1A70     	 strb r2,[r3]
 605:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2983              	 .loc 3 605 0
 2984 0010 0C4B     	 ldr r3,.L108
 2985 0012 1B78     	 ldrb r3,[r3]
 2986 0014 032B     	 cmp r3,#3
 2987 0016 0AD1     	 bne .L106
 606:../samuel/samuel_io.c **** 	 {
 607:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2988              	 .loc 3 607 0
 2989 0018 0B4B     	 ldr r3,.L108+4
 2990 001a 0220     	 mov r0,#2
 2991 001c 0021     	 mov r1,#0
 2992 001e 1A1C     	 mov r2,r3
 2993 0020 1023     	 mov r3,#16
 2994 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2995 0026 031C     	 mov r3,r0
 2996 0028 1A1C     	 mov r2,r3
 2997 002a 084B     	 ldr r3,.L108+8
 2998 002c 1A70     	 strb r2,[r3]
 2999              	.L106:
 608:../samuel/samuel_io.c ****      }
 609:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3000              	 .loc 3 609 0
 3001 002e 054B     	 ldr r3,.L108
 3002 0030 1B78     	 ldrb r3,[r3]
 3003 0032 1A1C     	 mov r2,r3
 3004 0034 054B     	 ldr r3,.L108+8
 3005 0036 1B78     	 ldrb r3,[r3]
 3006 0038 1B01     	 lsl r3,r3,#4
 3007 003a D318     	 add r3,r2,r3
 610:../samuel/samuel_io.c ****  }
 3008              	 .loc 3 610 0
 3009 003c 181C     	 mov r0,r3
 3010 003e BD46     	 mov sp,r7
 3011              	 
 3012 0040 80BD     	 pop {r7,pc}
 3013              	.L109:
 3014 0042 C046     	 .align 2
 3015              	.L108:
 3016 0044 00000000 	 .word EEprom_status
 3017 0048 00000000 	 .word ReadBuffer2
 3018 004c 00000000 	 .word oper_status
 3019              	 .cfi_endproc
 3020              	.LFE316:
 3022              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 3023              	 .align 2
 3024              	 .global read_akt_light_EEprom
 3025              	 .code 16
 3026              	 .thumb_func
 3028              	read_akt_light_EEprom:
 3029              	.LFB317:
 611:../samuel/samuel_io.c **** 
 612:../samuel/samuel_io.c ****  //------------------------------------------------
 613:../samuel/samuel_io.c **** 
 614:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 615:../samuel/samuel_io.c ****  {
 3030              	 .loc 3 615 0
 3031              	 .cfi_startproc
 3032 0000 80B5     	 push {r7,lr}
 3033              	.LCFI66:
 3034              	 .cfi_def_cfa_offset 8
 3035              	 .cfi_offset 7,-8
 3036              	 .cfi_offset 14,-4
 3037 0002 00AF     	 add r7,sp,#0
 3038              	.LCFI67:
 3039              	 .cfi_def_cfa_register 7
 616:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3040              	 .loc 3 616 0
 3041 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3042 0008 031C     	 mov r3,r0
 3043 000a 1A1C     	 mov r2,r3
 3044 000c 0D4B     	 ldr r3,.L113
 3045 000e 1A70     	 strb r2,[r3]
 617:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3046              	 .loc 3 617 0
 3047 0010 0C4B     	 ldr r3,.L113
 3048 0012 1B78     	 ldrb r3,[r3]
 3049 0014 032B     	 cmp r3,#3
 3050 0016 0AD1     	 bne .L111
 618:../samuel/samuel_io.c **** 	 {
 619:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 3051              	 .loc 3 619 0
 3052 0018 0B4B     	 ldr r3,.L113+4
 3053 001a 0420     	 mov r0,#4
 3054 001c 0021     	 mov r1,#0
 3055 001e 1A1C     	 mov r2,r3
 3056 0020 1023     	 mov r3,#16
 3057 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3058 0026 031C     	 mov r3,r0
 3059 0028 1A1C     	 mov r2,r3
 3060 002a 084B     	 ldr r3,.L113+8
 3061 002c 1A70     	 strb r2,[r3]
 3062              	.L111:
 620:../samuel/samuel_io.c ****      }
 621:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3063              	 .loc 3 621 0
 3064 002e 054B     	 ldr r3,.L113
 3065 0030 1B78     	 ldrb r3,[r3]
 3066 0032 1A1C     	 mov r2,r3
 3067 0034 054B     	 ldr r3,.L113+8
 3068 0036 1B78     	 ldrb r3,[r3]
 3069 0038 1B01     	 lsl r3,r3,#4
 3070 003a D318     	 add r3,r2,r3
 622:../samuel/samuel_io.c ****  }
 3071              	 .loc 3 622 0
 3072 003c 181C     	 mov r0,r3
 3073 003e BD46     	 mov sp,r7
 3074              	 
 3075 0040 80BD     	 pop {r7,pc}
 3076              	.L114:
 3077 0042 C046     	 .align 2
 3078              	.L113:
 3079 0044 00000000 	 .word EEprom_status
 3080 0048 00000000 	 .word ReadBuffer2
 3081 004c 00000000 	 .word oper_status
 3082              	 .cfi_endproc
 3083              	.LFE317:
 3085              	 .section .text.read_off_light_EEprom,"ax",%progbits
 3086              	 .align 2
 3087              	 .global read_off_light_EEprom
 3088              	 .code 16
 3089              	 .thumb_func
 3091              	read_off_light_EEprom:
 3092              	.LFB318:
 623:../samuel/samuel_io.c ****  //------------------------------------------------
 624:../samuel/samuel_io.c **** 
 625:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 626:../samuel/samuel_io.c ****  {
 3093              	 .loc 3 626 0
 3094              	 .cfi_startproc
 3095 0000 80B5     	 push {r7,lr}
 3096              	.LCFI68:
 3097              	 .cfi_def_cfa_offset 8
 3098              	 .cfi_offset 7,-8
 3099              	 .cfi_offset 14,-4
 3100 0002 00AF     	 add r7,sp,#0
 3101              	.LCFI69:
 3102              	 .cfi_def_cfa_register 7
 627:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3103              	 .loc 3 627 0
 3104 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3105 0008 031C     	 mov r3,r0
 3106 000a 1A1C     	 mov r2,r3
 3107 000c 0D4B     	 ldr r3,.L118
 3108 000e 1A70     	 strb r2,[r3]
 628:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3109              	 .loc 3 628 0
 3110 0010 0C4B     	 ldr r3,.L118
 3111 0012 1B78     	 ldrb r3,[r3]
 3112 0014 032B     	 cmp r3,#3
 3113 0016 0AD1     	 bne .L116
 629:../samuel/samuel_io.c **** 	 {
 630:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 3114              	 .loc 3 630 0
 3115 0018 0B4B     	 ldr r3,.L118+4
 3116 001a 0520     	 mov r0,#5
 3117 001c 0021     	 mov r1,#0
 3118 001e 1A1C     	 mov r2,r3
 3119 0020 1023     	 mov r3,#16
 3120 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3121 0026 031C     	 mov r3,r0
 3122 0028 1A1C     	 mov r2,r3
 3123 002a 084B     	 ldr r3,.L118+8
 3124 002c 1A70     	 strb r2,[r3]
 3125              	.L116:
 631:../samuel/samuel_io.c ****      }
 632:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3126              	 .loc 3 632 0
 3127 002e 054B     	 ldr r3,.L118
 3128 0030 1B78     	 ldrb r3,[r3]
 3129 0032 1A1C     	 mov r2,r3
 3130 0034 054B     	 ldr r3,.L118+8
 3131 0036 1B78     	 ldrb r3,[r3]
 3132 0038 1B01     	 lsl r3,r3,#4
 3133 003a D318     	 add r3,r2,r3
 633:../samuel/samuel_io.c ****  }
 3134              	 .loc 3 633 0
 3135 003c 181C     	 mov r0,r3
 3136 003e BD46     	 mov sp,r7
 3137              	 
 3138 0040 80BD     	 pop {r7,pc}
 3139              	.L119:
 3140 0042 C046     	 .align 2
 3141              	.L118:
 3142 0044 00000000 	 .word EEprom_status
 3143 0048 00000000 	 .word ReadBuffer2
 3144 004c 00000000 	 .word oper_status
 3145              	 .cfi_endproc
 3146              	.LFE318:
 3148              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 3149              	 .align 2
 3150              	 .global writeSernr_B1_EEprom
 3151              	 .code 16
 3152              	 .thumb_func
 3154              	writeSernr_B1_EEprom:
 3155              	.LFB319:
 634:../samuel/samuel_io.c **** 
 635:../samuel/samuel_io.c ****  //------------------------------------------------
 636:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 637:../samuel/samuel_io.c ****  {
 3156              	 .loc 3 637 0
 3157              	 .cfi_startproc
 3158 0000 80B5     	 push {r7,lr}
 3159              	.LCFI70:
 3160              	 .cfi_def_cfa_offset 8
 3161              	 .cfi_offset 7,-8
 3162              	 .cfi_offset 14,-4
 3163 0002 82B0     	 sub sp,sp,#8
 3164              	.LCFI71:
 3165              	 .cfi_def_cfa_offset 16
 3166 0004 00AF     	 add r7,sp,#0
 3167              	.LCFI72:
 3168              	 .cfi_def_cfa_register 7
 638:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3169              	 .loc 3 638 0
 3170 0006 8023     	 mov r3,#128
 3171 0008 7B60     	 str r3,[r7,#4]
 639:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3172              	 .loc 3 639 0
 3173 000a 144B     	 ldr r3,.L124
 3174 000c 1A88     	 ldrh r2,[r3]
 3175 000e BA23     	 mov r3,#186
 3176 0010 1B01     	 lsl r3,r3,#4
 3177 0012 9A42     	 cmp r2,r3
 3178 0014 14D9     	 bls .L121
 640:../samuel/samuel_io.c ****   {
 641:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3179              	 .loc 3 641 0
 3180 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3181 001a 031C     	 mov r3,r0
 3182 001c 1A1C     	 mov r2,r3
 3183 001e 104B     	 ldr r3,.L124+4
 3184 0020 1A70     	 strb r2,[r3]
 642:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3185              	 .loc 3 642 0
 3186 0022 0F4B     	 ldr r3,.L124+4
 3187 0024 1B78     	 ldrb r3,[r3]
 3188 0026 032B     	 cmp r3,#3
 3189 0028 08D1     	 bne .L122
 643:../samuel/samuel_io.c ****     {
 644:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3190              	 .loc 3 644 0
 3191 002a 0E4B     	 ldr r3,.L124+8
 3192 002c 0120     	 mov r0,#1
 3193 002e 191C     	 mov r1,r3
 3194 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3195 0034 031C     	 mov r3,r0
 3196 0036 1A1C     	 mov r2,r3
 3197 0038 0B4B     	 ldr r3,.L124+12
 3198 003a 1A70     	 strb r2,[r3]
 3199              	.L122:
 645:../samuel/samuel_io.c ****     }
 646:../samuel/samuel_io.c **** 	 a = 0;
 3200              	 .loc 3 646 0
 3201 003c 0023     	 mov r3,#0
 3202 003e 7B60     	 str r3,[r7,#4]
 3203              	.L121:
 647:../samuel/samuel_io.c ****   }
 648:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3204              	 .loc 3 648 0
 3205 0040 074B     	 ldr r3,.L124+4
 3206 0042 1B78     	 ldrb r3,[r3]
 3207 0044 1A1C     	 mov r2,r3
 3208 0046 084B     	 ldr r3,.L124+12
 3209 0048 1B78     	 ldrb r3,[r3]
 3210 004a 1B01     	 lsl r3,r3,#4
 3211 004c D218     	 add r2,r2,r3
 3212 004e 7B68     	 ldr r3,[r7,#4]
 3213 0050 D318     	 add r3,r2,r3
 649:../samuel/samuel_io.c ****  }
 3214              	 .loc 3 649 0
 3215 0052 181C     	 mov r0,r3
 3216 0054 BD46     	 mov sp,r7
 3217 0056 02B0     	 add sp,sp,#8
 3218              	 
 3219 0058 80BD     	 pop {r7,pc}
 3220              	.L125:
 3221 005a C046     	 .align 2
 3222              	.L124:
 3223 005c 00000000 	 .word resultB
 3224 0060 00000000 	 .word EEprom_status
 3225 0064 00000000 	 .word ReadBuffer1
 3226 0068 00000000 	 .word oper_status
 3227              	 .cfi_endproc
 3228              	.LFE319:
 3230              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3231              	 .align 2
 3232              	 .global writeNodeid_B2_EEprom
 3233              	 .code 16
 3234              	 .thumb_func
 3236              	writeNodeid_B2_EEprom:
 3237              	.LFB320:
 650:../samuel/samuel_io.c ****  //------------------------------------------------
 651:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 652:../samuel/samuel_io.c ****  {
 3238              	 .loc 3 652 0
 3239              	 .cfi_startproc
 3240 0000 80B5     	 push {r7,lr}
 3241              	.LCFI73:
 3242              	 .cfi_def_cfa_offset 8
 3243              	 .cfi_offset 7,-8
 3244              	 .cfi_offset 14,-4
 3245 0002 82B0     	 sub sp,sp,#8
 3246              	.LCFI74:
 3247              	 .cfi_def_cfa_offset 16
 3248 0004 00AF     	 add r7,sp,#0
 3249              	.LCFI75:
 3250              	 .cfi_def_cfa_register 7
 653:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3251              	 .loc 3 653 0
 3252 0006 8023     	 mov r3,#128
 3253 0008 7B60     	 str r3,[r7,#4]
 654:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3254              	 .loc 3 654 0
 3255 000a 144B     	 ldr r3,.L130
 3256 000c 1A88     	 ldrh r2,[r3]
 3257 000e BA23     	 mov r3,#186
 3258 0010 1B01     	 lsl r3,r3,#4
 3259 0012 9A42     	 cmp r2,r3
 3260 0014 14D9     	 bls .L127
 655:../samuel/samuel_io.c ****     {
 656:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3261              	 .loc 3 656 0
 3262 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3263 001a 031C     	 mov r3,r0
 3264 001c 1A1C     	 mov r2,r3
 3265 001e 104B     	 ldr r3,.L130+4
 3266 0020 1A70     	 strb r2,[r3]
 657:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3267              	 .loc 3 657 0
 3268 0022 0F4B     	 ldr r3,.L130+4
 3269 0024 1B78     	 ldrb r3,[r3]
 3270 0026 032B     	 cmp r3,#3
 3271 0028 08D1     	 bne .L128
 658:../samuel/samuel_io.c ****       {
 659:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3272              	 .loc 3 659 0
 3273 002a 0E4B     	 ldr r3,.L130+8
 3274 002c 0220     	 mov r0,#2
 3275 002e 191C     	 mov r1,r3
 3276 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3277 0034 031C     	 mov r3,r0
 3278 0036 1A1C     	 mov r2,r3
 3279 0038 0B4B     	 ldr r3,.L130+12
 3280 003a 1A70     	 strb r2,[r3]
 3281              	.L128:
 660:../samuel/samuel_io.c ****       }
 661:../samuel/samuel_io.c **** 	 a = 0;
 3282              	 .loc 3 661 0
 3283 003c 0023     	 mov r3,#0
 3284 003e 7B60     	 str r3,[r7,#4]
 3285              	.L127:
 662:../samuel/samuel_io.c ****     }
 663:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3286              	 .loc 3 663 0
 3287 0040 074B     	 ldr r3,.L130+4
 3288 0042 1B78     	 ldrb r3,[r3]
 3289 0044 1A1C     	 mov r2,r3
 3290 0046 084B     	 ldr r3,.L130+12
 3291 0048 1B78     	 ldrb r3,[r3]
 3292 004a 1B01     	 lsl r3,r3,#4
 3293 004c D218     	 add r2,r2,r3
 3294 004e 7B68     	 ldr r3,[r7,#4]
 3295 0050 D318     	 add r3,r2,r3
 664:../samuel/samuel_io.c ****  }
 3296              	 .loc 3 664 0
 3297 0052 181C     	 mov r0,r3
 3298 0054 BD46     	 mov sp,r7
 3299 0056 02B0     	 add sp,sp,#8
 3300              	 
 3301 0058 80BD     	 pop {r7,pc}
 3302              	.L131:
 3303 005a C046     	 .align 2
 3304              	.L130:
 3305 005c 00000000 	 .word resultB
 3306 0060 00000000 	 .word EEprom_status
 3307 0064 00000000 	 .word ReadBuffer2
 3308 0068 00000000 	 .word oper_status
 3309              	 .cfi_endproc
 3310              	.LFE320:
 3312              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3313              	 .align 2
 3314              	 .global writeLamp_data_B3_EEprom
 3315              	 .code 16
 3316              	 .thumb_func
 3318              	writeLamp_data_B3_EEprom:
 3319              	.LFB321:
 665:../samuel/samuel_io.c ****  //----------------------------
 666:../samuel/samuel_io.c **** 
 667:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 668:../samuel/samuel_io.c ****  {
 3320              	 .loc 3 668 0
 3321              	 .cfi_startproc
 3322 0000 80B5     	 push {r7,lr}
 3323              	.LCFI76:
 3324              	 .cfi_def_cfa_offset 8
 3325              	 .cfi_offset 7,-8
 3326              	 .cfi_offset 14,-4
 3327 0002 82B0     	 sub sp,sp,#8
 3328              	.LCFI77:
 3329              	 .cfi_def_cfa_offset 16
 3330 0004 00AF     	 add r7,sp,#0
 3331              	.LCFI78:
 3332              	 .cfi_def_cfa_register 7
 669:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3333              	 .loc 3 669 0
 3334 0006 8023     	 mov r3,#128
 3335 0008 7B60     	 str r3,[r7,#4]
 670:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3336              	 .loc 3 670 0
 3337 000a 144B     	 ldr r3,.L136
 3338 000c 1A88     	 ldrh r2,[r3]
 3339 000e BA23     	 mov r3,#186
 3340 0010 1B01     	 lsl r3,r3,#4
 3341 0012 9A42     	 cmp r2,r3
 3342 0014 14D9     	 bls .L133
 671:../samuel/samuel_io.c ****   {
 672:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3343              	 .loc 3 672 0
 3344 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3345 001a 031C     	 mov r3,r0
 3346 001c 1A1C     	 mov r2,r3
 3347 001e 104B     	 ldr r3,.L136+4
 3348 0020 1A70     	 strb r2,[r3]
 673:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3349              	 .loc 3 673 0
 3350 0022 0F4B     	 ldr r3,.L136+4
 3351 0024 1B78     	 ldrb r3,[r3]
 3352 0026 032B     	 cmp r3,#3
 3353 0028 08D1     	 bne .L134
 674:../samuel/samuel_io.c ****     {
 675:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3354              	 .loc 3 675 0
 3355 002a 0E4B     	 ldr r3,.L136+8
 3356 002c 0320     	 mov r0,#3
 3357 002e 191C     	 mov r1,r3
 3358 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3359 0034 031C     	 mov r3,r0
 3360 0036 1A1C     	 mov r2,r3
 3361 0038 0B4B     	 ldr r3,.L136+12
 3362 003a 1A70     	 strb r2,[r3]
 3363              	.L134:
 676:../samuel/samuel_io.c ****     }
 677:../samuel/samuel_io.c **** 	 a = 0;
 3364              	 .loc 3 677 0
 3365 003c 0023     	 mov r3,#0
 3366 003e 7B60     	 str r3,[r7,#4]
 3367              	.L133:
 678:../samuel/samuel_io.c ****   }
 679:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3368              	 .loc 3 679 0
 3369 0040 074B     	 ldr r3,.L136+4
 3370 0042 1B78     	 ldrb r3,[r3]
 3371 0044 1A1C     	 mov r2,r3
 3372 0046 084B     	 ldr r3,.L136+12
 3373 0048 1B78     	 ldrb r3,[r3]
 3374 004a 1B01     	 lsl r3,r3,#4
 3375 004c D218     	 add r2,r2,r3
 3376 004e 7B68     	 ldr r3,[r7,#4]
 3377 0050 D318     	 add r3,r2,r3
 680:../samuel/samuel_io.c ****  }
 3378              	 .loc 3 680 0
 3379 0052 181C     	 mov r0,r3
 3380 0054 BD46     	 mov sp,r7
 3381 0056 02B0     	 add sp,sp,#8
 3382              	 
 3383 0058 80BD     	 pop {r7,pc}
 3384              	.L137:
 3385 005a C046     	 .align 2
 3386              	.L136:
 3387 005c 00000000 	 .word resultB
 3388 0060 00000000 	 .word EEprom_status
 3389 0064 00000000 	 .word ReadBuffer3
 3390 0068 00000000 	 .word oper_status
 3391              	 .cfi_endproc
 3392              	.LFE321:
 3394              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3395              	 .align 2
 3396              	 .global writeakt_light_data_B4_EEprom
 3397              	 .code 16
 3398              	 .thumb_func
 3400              	writeakt_light_data_B4_EEprom:
 3401              	.LFB322:
 681:../samuel/samuel_io.c **** 
 682:../samuel/samuel_io.c ****  //------------------------------------------------
 683:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 684:../samuel/samuel_io.c ****  {
 3402              	 .loc 3 684 0
 3403              	 .cfi_startproc
 3404 0000 80B5     	 push {r7,lr}
 3405              	.LCFI79:
 3406              	 .cfi_def_cfa_offset 8
 3407              	 .cfi_offset 7,-8
 3408              	 .cfi_offset 14,-4
 3409 0002 82B0     	 sub sp,sp,#8
 3410              	.LCFI80:
 3411              	 .cfi_def_cfa_offset 16
 3412 0004 00AF     	 add r7,sp,#0
 3413              	.LCFI81:
 3414              	 .cfi_def_cfa_register 7
 685:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3415              	 .loc 3 685 0
 3416 0006 8023     	 mov r3,#128
 3417 0008 7B60     	 str r3,[r7,#4]
 686:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3418              	 .loc 3 686 0
 3419 000a 144B     	 ldr r3,.L142
 3420 000c 1A88     	 ldrh r2,[r3]
 3421 000e BA23     	 mov r3,#186
 3422 0010 1B01     	 lsl r3,r3,#4
 3423 0012 9A42     	 cmp r2,r3
 3424 0014 14D9     	 bls .L139
 687:../samuel/samuel_io.c ****     {
 688:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3425              	 .loc 3 688 0
 3426 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3427 001a 031C     	 mov r3,r0
 3428 001c 1A1C     	 mov r2,r3
 3429 001e 104B     	 ldr r3,.L142+4
 3430 0020 1A70     	 strb r2,[r3]
 689:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3431              	 .loc 3 689 0
 3432 0022 0F4B     	 ldr r3,.L142+4
 3433 0024 1B78     	 ldrb r3,[r3]
 3434 0026 032B     	 cmp r3,#3
 3435 0028 08D1     	 bne .L140
 690:../samuel/samuel_io.c ****       {
 691:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3436              	 .loc 3 691 0
 3437 002a 0E4B     	 ldr r3,.L142+8
 3438 002c 0420     	 mov r0,#4
 3439 002e 191C     	 mov r1,r3
 3440 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3441 0034 031C     	 mov r3,r0
 3442 0036 1A1C     	 mov r2,r3
 3443 0038 0B4B     	 ldr r3,.L142+12
 3444 003a 1A70     	 strb r2,[r3]
 3445              	.L140:
 692:../samuel/samuel_io.c ****       }
 693:../samuel/samuel_io.c **** 	 a = 0;
 3446              	 .loc 3 693 0
 3447 003c 0023     	 mov r3,#0
 3448 003e 7B60     	 str r3,[r7,#4]
 3449              	.L139:
 694:../samuel/samuel_io.c ****     }
 695:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3450              	 .loc 3 695 0
 3451 0040 074B     	 ldr r3,.L142+4
 3452 0042 1B78     	 ldrb r3,[r3]
 3453 0044 1A1C     	 mov r2,r3
 3454 0046 084B     	 ldr r3,.L142+12
 3455 0048 1B78     	 ldrb r3,[r3]
 3456 004a 1B01     	 lsl r3,r3,#4
 3457 004c D218     	 add r2,r2,r3
 3458 004e 7B68     	 ldr r3,[r7,#4]
 3459 0050 D318     	 add r3,r2,r3
 696:../samuel/samuel_io.c ****  }
 3460              	 .loc 3 696 0
 3461 0052 181C     	 mov r0,r3
 3462 0054 BD46     	 mov sp,r7
 3463 0056 02B0     	 add sp,sp,#8
 3464              	 
 3465 0058 80BD     	 pop {r7,pc}
 3466              	.L143:
 3467 005a C046     	 .align 2
 3468              	.L142:
 3469 005c 00000000 	 .word resultB
 3470 0060 00000000 	 .word EEprom_status
 3471 0064 00000000 	 .word ReadBuffer2
 3472 0068 00000000 	 .word oper_status
 3473              	 .cfi_endproc
 3474              	.LFE322:
 3476              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3477              	 .align 2
 3478              	 .global writeOff_light_B5_EEprom
 3479              	 .code 16
 3480              	 .thumb_func
 3482              	writeOff_light_B5_EEprom:
 3483              	.LFB323:
 697:../samuel/samuel_io.c ****  //----------------------------
 698:../samuel/samuel_io.c **** 
 699:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 700:../samuel/samuel_io.c ****  {
 3484              	 .loc 3 700 0
 3485              	 .cfi_startproc
 3486 0000 80B5     	 push {r7,lr}
 3487              	.LCFI82:
 3488              	 .cfi_def_cfa_offset 8
 3489              	 .cfi_offset 7,-8
 3490              	 .cfi_offset 14,-4
 3491 0002 82B0     	 sub sp,sp,#8
 3492              	.LCFI83:
 3493              	 .cfi_def_cfa_offset 16
 3494 0004 00AF     	 add r7,sp,#0
 3495              	.LCFI84:
 3496              	 .cfi_def_cfa_register 7
 701:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3497              	 .loc 3 701 0
 3498 0006 8023     	 mov r3,#128
 3499 0008 7B60     	 str r3,[r7,#4]
 702:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3500              	 .loc 3 702 0
 3501 000a 144B     	 ldr r3,.L148
 3502 000c 1A88     	 ldrh r2,[r3]
 3503 000e BA23     	 mov r3,#186
 3504 0010 1B01     	 lsl r3,r3,#4
 3505 0012 9A42     	 cmp r2,r3
 3506 0014 14D9     	 bls .L145
 703:../samuel/samuel_io.c ****   {
 704:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3507              	 .loc 3 704 0
 3508 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3509 001a 031C     	 mov r3,r0
 3510 001c 1A1C     	 mov r2,r3
 3511 001e 104B     	 ldr r3,.L148+4
 3512 0020 1A70     	 strb r2,[r3]
 705:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3513              	 .loc 3 705 0
 3514 0022 0F4B     	 ldr r3,.L148+4
 3515 0024 1B78     	 ldrb r3,[r3]
 3516 0026 032B     	 cmp r3,#3
 3517 0028 08D1     	 bne .L146
 706:../samuel/samuel_io.c ****     {
 707:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3518              	 .loc 3 707 0
 3519 002a 0E4B     	 ldr r3,.L148+8
 3520 002c 0520     	 mov r0,#5
 3521 002e 191C     	 mov r1,r3
 3522 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3523 0034 031C     	 mov r3,r0
 3524 0036 1A1C     	 mov r2,r3
 3525 0038 0B4B     	 ldr r3,.L148+12
 3526 003a 1A70     	 strb r2,[r3]
 3527              	.L146:
 708:../samuel/samuel_io.c **** 
 709:../samuel/samuel_io.c **** 
 710:../samuel/samuel_io.c **** 
 711:../samuel/samuel_io.c **** 
 712:../samuel/samuel_io.c ****     }
 713:../samuel/samuel_io.c **** 	 a = 0;
 3528              	 .loc 3 713 0
 3529 003c 0023     	 mov r3,#0
 3530 003e 7B60     	 str r3,[r7,#4]
 3531              	.L145:
 714:../samuel/samuel_io.c ****   }
 715:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3532              	 .loc 3 715 0
 3533 0040 074B     	 ldr r3,.L148+4
 3534 0042 1B78     	 ldrb r3,[r3]
 3535 0044 1A1C     	 mov r2,r3
 3536 0046 084B     	 ldr r3,.L148+12
 3537 0048 1B78     	 ldrb r3,[r3]
 3538 004a 1B01     	 lsl r3,r3,#4
 3539 004c D218     	 add r2,r2,r3
 3540 004e 7B68     	 ldr r3,[r7,#4]
 3541 0050 D318     	 add r3,r2,r3
 716:../samuel/samuel_io.c ****  }
 3542              	 .loc 3 716 0
 3543 0052 181C     	 mov r0,r3
 3544 0054 BD46     	 mov sp,r7
 3545 0056 02B0     	 add sp,sp,#8
 3546              	 
 3547 0058 80BD     	 pop {r7,pc}
 3548              	.L149:
 3549 005a C046     	 .align 2
 3550              	.L148:
 3551 005c 00000000 	 .word resultB
 3552 0060 00000000 	 .word EEprom_status
 3553 0064 00000000 	 .word ReadBuffer2
 3554 0068 00000000 	 .word oper_status
 3555              	 .cfi_endproc
 3556              	.LFE323:
 3558              	 .section .text.sysiniValueB1,"ax",%progbits
 3559              	 .align 2
 3560              	 .global sysiniValueB1
 3561              	 .code 16
 3562              	 .thumb_func
 3564              	sysiniValueB1:
 3565              	.LFB324:
 717:../samuel/samuel_io.c **** 
 718:../samuel/samuel_io.c **** ///#############################################
 719:../samuel/samuel_io.c ****  //initialisierung
 720:../samuel/samuel_io.c **** 
 721:../samuel/samuel_io.c **** 
 722:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 723:../samuel/samuel_io.c ****  {
 3566              	 .loc 3 723 0
 3567              	 .cfi_startproc
 3568 0000 80B5     	 push {r7,lr}
 3569              	.LCFI85:
 3570              	 .cfi_def_cfa_offset 8
 3571              	 .cfi_offset 7,-8
 3572              	 .cfi_offset 14,-4
 3573 0002 00AF     	 add r7,sp,#0
 3574              	.LCFI86:
 3575              	 .cfi_def_cfa_register 7
 724:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 725:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 726:../samuel/samuel_io.c **** 
 727:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3576              	 .loc 3 727 0
 3577 0004 124B     	 ldr r3,.L151
 3578 0006 134A     	 ldr r2,.L151+4
 3579 0008 1A80     	 strh r2,[r3]
 728:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3580              	 .loc 3 728 0
 3581 000a 134B     	 ldr r3,.L151+8
 3582 000c 134A     	 ldr r2,.L151+12
 3583 000e 1A80     	 strh r2,[r3]
 729:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3584              	 .loc 3 729 0
 3585 0010 134B     	 ldr r3,.L151+16
 3586 0012 FA22     	 mov r2,#250
 3587 0014 9200     	 lsl r2,r2,#2
 3588 0016 1A80     	 strh r2,[r3]
 730:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3589              	 .loc 3 730 0
 3590 0018 124B     	 ldr r3,.L151+20
 3591 001a FA22     	 mov r2,#250
 3592 001c 9200     	 lsl r2,r2,#2
 3593 001e 1A80     	 strh r2,[r3]
 731:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3594              	 .loc 3 731 0
 3595 0020 114B     	 ldr r3,.L151+24
 3596 0022 FA22     	 mov r2,#250
 3597 0024 9200     	 lsl r2,r2,#2
 3598 0026 1A80     	 strh r2,[r3]
 732:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3599              	 .loc 3 732 0
 3600 0028 104B     	 ldr r3,.L151+28
 3601 002a FA22     	 mov r2,#250
 3602 002c 9200     	 lsl r2,r2,#2
 3603 002e 1A80     	 strh r2,[r3]
 733:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3604              	 .loc 3 733 0
 3605 0030 0F4B     	 ldr r3,.L151+32
 3606 0032 FA22     	 mov r2,#250
 3607 0034 9200     	 lsl r2,r2,#2
 3608 0036 1A80     	 strh r2,[r3]
 734:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3609              	 .loc 3 734 0
 3610 0038 0E4B     	 ldr r3,.L151+36
 3611 003a FA22     	 mov r2,#250
 3612 003c 9200     	 lsl r2,r2,#2
 3613 003e 1A80     	 strh r2,[r3]
 735:../samuel/samuel_io.c **** 
 736:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3614              	 .loc 3 736 0
 3615 0040 0D4B     	 ldr r3,.L151+40
 3616 0042 0022     	 mov r2,#0
 3617 0044 1A80     	 strh r2,[r3]
 737:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3618              	 .loc 3 737 0
 3619 0046 0D4B     	 ldr r3,.L151+44
 3620 0048 0022     	 mov r2,#0
 3621 004a 1A80     	 strh r2,[r3]
 738:../samuel/samuel_io.c **** 
 739:../samuel/samuel_io.c ****  }
 3622              	 .loc 3 739 0
 3623 004c BD46     	 mov sp,r7
 3624              	 
 3625 004e 80BD     	 pop {r7,pc}
 3626              	.L152:
 3627              	 .align 2
 3628              	.L151:
 3629 0050 00000000 	 .word Ser_NrH
 3630 0054 7A7B0000 	 .word 31610
 3631 0058 00000000 	 .word Ser_NrL
 3632 005c 59580000 	 .word 22617
 3633 0060 00000000 	 .word Hard_Vers
 3634 0064 00000000 	 .word Soft_Vers
 3635 0068 00000000 	 .word GEH_Vers
 3636 006c 00000000 	 .word Mon_Vers
 3637 0070 00000000 	 .word LED_WW_Vers
 3638 0074 00000000 	 .word LED_CW_Vers
 3639 0078 00000000 	 .word neu_Ser_NrH
 3640 007c 00000000 	 .word neu_Ser_NrL
 3641              	 .cfi_endproc
 3642              	.LFE324:
 3644              	 .section .text.sysiniValueB2,"ax",%progbits
 3645              	 .align 2
 3646              	 .global sysiniValueB2
 3647              	 .code 16
 3648              	 .thumb_func
 3650              	sysiniValueB2:
 3651              	.LFB325:
 740:../samuel/samuel_io.c **** 
 741:../samuel/samuel_io.c **** 
 742:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 743:../samuel/samuel_io.c ****  {
 3652              	 .loc 3 743 0
 3653              	 .cfi_startproc
 3654 0000 80B5     	 push {r7,lr}
 3655              	.LCFI87:
 3656              	 .cfi_def_cfa_offset 8
 3657              	 .cfi_offset 7,-8
 3658              	 .cfi_offset 14,-4
 3659 0002 00AF     	 add r7,sp,#0
 3660              	.LCFI88:
 3661              	 .cfi_def_cfa_register 7
 744:../samuel/samuel_io.c ****            node_id = 1;
 3662              	 .loc 3 744 0
 3663 0004 114B     	 ldr r3,.L154
 3664 0006 0122     	 mov r2,#1
 3665 0008 1A70     	 strb r2,[r3]
 745:../samuel/samuel_io.c ****            node_id_alt = 1;
 3666              	 .loc 3 745 0
 3667 000a 114B     	 ldr r3,.L154+4
 3668 000c 0122     	 mov r2,#1
 3669 000e 1A70     	 strb r2,[r3]
 746:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3670              	 .loc 3 746 0
 3671 0010 104B     	 ldr r3,.L154+8
 3672 0012 114A     	 ldr r2,.L154+12
 3673 0014 1A80     	 strh r2,[r3]
 747:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3674              	 .loc 3 747 0
 3675 0016 114B     	 ldr r3,.L154+16
 3676 0018 FA22     	 mov r2,#250
 3677 001a D200     	 lsl r2,r2,#3
 3678 001c 1A80     	 strh r2,[r3]
 748:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3679              	 .loc 3 748 0
 3680 001e 104B     	 ldr r3,.L154+20
 3681 0020 FA22     	 mov r2,#250
 3682 0022 D200     	 lsl r2,r2,#3
 3683 0024 1A80     	 strh r2,[r3]
 749:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3684              	 .loc 3 749 0
 3685 0026 0F4B     	 ldr r3,.L154+24
 3686 0028 E122     	 mov r2,#225
 3687 002a 1201     	 lsl r2,r2,#4
 3688 002c 1A80     	 strh r2,[r3]
 750:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3689              	 .loc 3 750 0
 3690 002e 0E4B     	 ldr r3,.L154+28
 3691 0030 0E4A     	 ldr r2,.L154+32
 3692 0032 1A80     	 strh r2,[r3]
 751:../samuel/samuel_io.c **** 		   led_grupp=10;
 3693              	 .loc 3 751 0
 3694 0034 0E4B     	 ldr r3,.L154+36
 3695 0036 0A22     	 mov r2,#10
 3696 0038 1A80     	 strh r2,[r3]
 752:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3697              	 .loc 3 752 0
 3698 003a 0E4B     	 ldr r3,.L154+40
 3699 003c 3522     	 mov r2,#53
 3700 003e 1A80     	 strh r2,[r3]
 753:../samuel/samuel_io.c **** 
 754:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3701              	 .loc 3 754 0
 3702 0040 0D4B     	 ldr r3,.L154+44
 3703 0042 0122     	 mov r2,#1
 3704 0044 1A70     	 strb r2,[r3]
 755:../samuel/samuel_io.c ****  }
 3705              	 .loc 3 755 0
 3706 0046 BD46     	 mov sp,r7
 3707              	 
 3708 0048 80BD     	 pop {r7,pc}
 3709              	.L155:
 3710 004a C046     	 .align 2
 3711              	.L154:
 3712 004c 00000000 	 .word node_id
 3713 0050 00000000 	 .word node_id_alt
 3714 0054 00000000 	 .word node_id_16bit
 3715 0058 34120000 	 .word 4660
 3716 005c 00000000 	 .word val_Pow_Nom
 3717 0060 00000000 	 .word val_Pow_max
 3718 0064 00000000 	 .word val_Spannung_min
 3719 0068 00000000 	 .word val_Spannung_max
 3720 006c 68100000 	 .word 4200
 3721 0070 00000000 	 .word led_grupp
 3722 0074 00000000 	 .word led_Strom
 3723 0078 00000000 	 .word node_id_neu
 3724              	 .cfi_endproc
 3725              	.LFE325:
 3727              	 .section .text.sysiniValueB4,"ax",%progbits
 3728              	 .align 2
 3729              	 .global sysiniValueB4
 3730              	 .code 16
 3731              	 .thumb_func
 3733              	sysiniValueB4:
 3734              	.LFB326:
 756:../samuel/samuel_io.c **** 
 757:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 758:../samuel/samuel_io.c ****  {
 3735              	 .loc 3 758 0
 3736              	 .cfi_startproc
 3737 0000 80B5     	 push {r7,lr}
 3738              	.LCFI89:
 3739              	 .cfi_def_cfa_offset 8
 3740              	 .cfi_offset 7,-8
 3741              	 .cfi_offset 14,-4
 3742 0002 00AF     	 add r7,sp,#0
 3743              	.LCFI90:
 3744              	 .cfi_def_cfa_register 7
 759:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3745              	 .loc 3 759 0
 3746 0004 264B     	 ldr r3,.L157
 3747 0006 0A22     	 mov r2,#10
 3748 0008 1A70     	 strb r2,[r3]
 760:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3749              	 .loc 3 760 0
 3750 000a 264B     	 ldr r3,.L157+4
 3751 000c 0A22     	 mov r2,#10
 3752 000e 1A70     	 strb r2,[r3]
 761:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3753              	 .loc 3 761 0
 3754 0010 254B     	 ldr r3,.L157+8
 3755 0012 0A22     	 mov r2,#10
 3756 0014 1A70     	 strb r2,[r3]
 762:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3757              	 .loc 3 762 0
 3758 0016 254B     	 ldr r3,.L157+12
 3759 0018 0A22     	 mov r2,#10
 3760 001a 1A70     	 strb r2,[r3]
 763:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3761              	 .loc 3 763 0
 3762 001c 244B     	 ldr r3,.L157+16
 3763 001e 0A22     	 mov r2,#10
 3764 0020 1A80     	 strh r2,[r3]
 764:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3765              	 .loc 3 764 0
 3766 0022 244B     	 ldr r3,.L157+20
 3767 0024 B022     	 mov r2,#176
 3768 0026 1A80     	 strh r2,[r3]
 765:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3769              	 .loc 3 765 0
 3770 0028 234B     	 ldr r3,.L157+24
 3771 002a 0122     	 mov r2,#1
 3772 002c 5242     	 neg r2,r2
 3773 002e 1A80     	 strh r2,[r3]
 766:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3774              	 .loc 3 766 0
 3775 0030 224B     	 ldr r3,.L157+28
 3776 0032 0022     	 mov r2,#0
 3777 0034 1A80     	 strh r2,[r3]
 767:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3778              	 .loc 3 767 0
 3779 0036 224B     	 ldr r3,.L157+32
 3780 0038 FA22     	 mov r2,#250
 3781 003a 9200     	 lsl r2,r2,#2
 3782 003c 1A80     	 strh r2,[r3]
 768:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3783              	 .loc 3 768 0
 3784 003e 214B     	 ldr r3,.L157+36
 3785 0040 FA22     	 mov r2,#250
 3786 0042 9200     	 lsl r2,r2,#2
 3787 0044 1A80     	 strh r2,[r3]
 769:../samuel/samuel_io.c **** 
 770:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3788              	 .loc 3 770 0
 3789 0046 1B4B     	 ldr r3,.L157+20
 3790 0048 1A88     	 ldrh r2,[r3]
 3791 004a 1F4B     	 ldr r3,.L157+40
 3792 004c 1A80     	 strh r2,[r3]
 771:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3793              	 .loc 3 771 0
 3794 004e 194B     	 ldr r3,.L157+20
 3795 0050 1A88     	 ldrh r2,[r3]
 3796 0052 1E4B     	 ldr r3,.L157+44
 3797 0054 1A80     	 strh r2,[r3]
 772:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3798              	 .loc 3 772 0
 3799 0056 174B     	 ldr r3,.L157+20
 3800 0058 1A88     	 ldrh r2,[r3]
 3801 005a 1D4B     	 ldr r3,.L157+48
 3802 005c 1A80     	 strh r2,[r3]
 773:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3803              	 .loc 3 773 0
 3804 005e 154B     	 ldr r3,.L157+20
 3805 0060 1A88     	 ldrh r2,[r3]
 3806 0062 1C4B     	 ldr r3,.L157+52
 3807 0064 1A80     	 strh r2,[r3]
 774:../samuel/samuel_io.c **** 
 775:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3808              	 .loc 3 775 0
 3809 0066 144B     	 ldr r3,.L157+24
 3810 0068 1B88     	 ldrh r3,[r3]
 3811 006a 1B0A     	 lsr r3,r3,#8
 3812 006c 9AB2     	 uxth r2,r3
 3813 006e 1A4B     	 ldr r3,.L157+56
 3814 0070 1A80     	 strh r2,[r3]
 776:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3815              	 .loc 3 776 0
 3816 0072 114B     	 ldr r3,.L157+24
 3817 0074 1B88     	 ldrh r3,[r3]
 3818 0076 1B0A     	 lsr r3,r3,#8
 3819 0078 9AB2     	 uxth r2,r3
 3820 007a 184B     	 ldr r3,.L157+60
 3821 007c 1A80     	 strh r2,[r3]
 777:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3822              	 .loc 3 777 0
 3823 007e 0E4B     	 ldr r3,.L157+24
 3824 0080 1B88     	 ldrh r3,[r3]
 3825 0082 FF22     	 mov r2,#255
 3826 0084 1340     	 and r3,r2
 3827 0086 9AB2     	 uxth r2,r3
 3828 0088 154B     	 ldr r3,.L157+64
 3829 008a 1A80     	 strh r2,[r3]
 778:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3830              	 .loc 3 778 0
 3831 008c 0A4B     	 ldr r3,.L157+24
 3832 008e 1B88     	 ldrh r3,[r3]
 3833 0090 FF22     	 mov r2,#255
 3834 0092 1340     	 and r3,r2
 3835 0094 9AB2     	 uxth r2,r3
 3836 0096 134B     	 ldr r3,.L157+68
 3837 0098 1A80     	 strh r2,[r3]
 779:../samuel/samuel_io.c ****  }
 3838              	 .loc 3 779 0
 3839 009a BD46     	 mov sp,r7
 3840              	 
 3841 009c 80BD     	 pop {r7,pc}
 3842              	.L158:
 3843 009e C046     	 .align 2
 3844              	.L157:
 3845 00a0 00000000 	 .word Dimm_Gamma
 3846 00a4 00000000 	 .word Dimm_Stufen
 3847 00a8 00000000 	 .word Dimm_StufenGR
 3848 00ac 00000000 	 .word Dimm_Valu
 3849 00b0 00000000 	 .word Smooth_Value
 3850 00b4 00000000 	 .word linearwalk_gen
 3851 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 3852 00bc 00000000 	 .word Reserve_1
 3853 00c0 00000000 	 .word Dimm_Max_WW
 3854 00c4 00000000 	 .word Dimm_Max_CW
 3855 00c8 00000000 	 .word linearwalk_ww1
 3856 00cc 00000000 	 .word linearwalk_ww2
 3857 00d0 00000000 	 .word linearwalk_cw1
 3858 00d4 00000000 	 .word linearwalk_cw2
 3859 00d8 00000000 	 .word Farbe_ww1_Quot
 3860 00dc 00000000 	 .word Farbe_cw1_Quot
 3861 00e0 00000000 	 .word Farbe_ww2_Quot
 3862 00e4 00000000 	 .word Farbe_cw2_Quot
 3863              	 .cfi_endproc
 3864              	.LFE326:
 3866              	 .section .text.sysiniValueB5,"ax",%progbits
 3867              	 .align 2
 3868              	 .global sysiniValueB5
 3869              	 .code 16
 3870              	 .thumb_func
 3872              	sysiniValueB5:
 3873              	.LFB327:
 780:../samuel/samuel_io.c **** 
 781:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 782:../samuel/samuel_io.c ****  {
 3874              	 .loc 3 782 0
 3875              	 .cfi_startproc
 3876 0000 80B5     	 push {r7,lr}
 3877              	.LCFI91:
 3878              	 .cfi_def_cfa_offset 8
 3879              	 .cfi_offset 7,-8
 3880              	 .cfi_offset 14,-4
 3881 0002 00AF     	 add r7,sp,#0
 3882              	.LCFI92:
 3883              	 .cfi_def_cfa_register 7
 783:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 3884              	 .loc 3 783 0
 3885 0004 0E4B     	 ldr r3,.L160
 3886 0006 0522     	 mov r2,#5
 3887 0008 1A70     	 strb r2,[r3]
 784:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 3888              	 .loc 3 784 0
 3889 000a 0E4B     	 ldr r3,.L160+4
 3890 000c 0022     	 mov r2,#0
 3891 000e 1A70     	 strb r2,[r3]
 785:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 3892              	 .loc 3 785 0
 3893 0010 0D4B     	 ldr r3,.L160+8
 3894 0012 0022     	 mov r2,#0
 3895 0014 1A80     	 strh r2,[r3]
 786:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 3896              	 .loc 3 786 0
 3897 0016 0D4B     	 ldr r3,.L160+12
 3898 0018 0D4A     	 ldr r2,.L160+16
 3899 001a 1A80     	 strh r2,[r3]
 787:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 3900              	 .loc 3 787 0
 3901 001c 0D4B     	 ldr r3,.L160+20
 3902 001e 0C4A     	 ldr r2,.L160+16
 3903 0020 1A80     	 strh r2,[r3]
 788:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 3904              	 .loc 3 788 0
 3905 0022 0D4B     	 ldr r3,.L160+24
 3906 0024 0D4A     	 ldr r2,.L160+28
 3907 0026 1A80     	 strh r2,[r3]
 789:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 3908              	 .loc 3 789 0
 3909 0028 0D4B     	 ldr r3,.L160+32
 3910 002a 0C4A     	 ldr r2,.L160+28
 3911 002c 1A80     	 strh r2,[r3]
 790:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 3912              	 .loc 3 790 0
 3913 002e 0D4B     	 ldr r3,.L160+36
 3914 0030 0D4A     	 ldr r2,.L160+40
 3915 0032 1A80     	 strh r2,[r3]
 791:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 3916              	 .loc 3 791 0
 3917 0034 0D4B     	 ldr r3,.L160+44
 3918 0036 0C4A     	 ldr r2,.L160+40
 3919 0038 1A80     	 strh r2,[r3]
 792:../samuel/samuel_io.c ****  }
 3920              	 .loc 3 792 0
 3921 003a BD46     	 mov sp,r7
 3922              	 
 3923 003c 80BD     	 pop {r7,pc}
 3924              	.L161:
 3925 003e C046     	 .align 2
 3926              	.L160:
 3927 0040 00000000 	 .word RegOnOff
 3928 0044 00000000 	 .word RegOnOff2
 3929 0048 00000000 	 .word Reserve_2
 3930 004c 00000000 	 .word dimOff_Ww
 3931 0050 FF0F0000 	 .word 4095
 3932 0054 00000000 	 .word dimOff_Cw
 3933 0058 00000000 	 .word dimNorm1_Ww
 3934 005c FF010000 	 .word 511
 3935 0060 00000000 	 .word dimNorm1_Cw
 3936 0064 00000000 	 .word dimNorm2_Ww
 3937 0068 FF020000 	 .word 767
 3938 006c 00000000 	 .word dimNorm2_Cw
 3939              	 .cfi_endproc
 3940              	.LFE327:
 3942              	 .section .text.bcuInit,"ax",%progbits
 3943              	 .align 2
 3944              	 .global bcuInit
 3945              	 .code 16
 3946              	 .thumb_func
 3948              	bcuInit:
 3949              	.LFB328:
 793:../samuel/samuel_io.c **** 
 794:../samuel/samuel_io.c ****  //-----------------------------------------------
 795:../samuel/samuel_io.c ****  // BCCU Vorgaben
 796:../samuel/samuel_io.c **** 
 797:../samuel/samuel_io.c ****  void bcuInit(void)
 798:../samuel/samuel_io.c ****  {
 3950              	 .loc 3 798 0
 3951              	 .cfi_startproc
 3952 0000 80B5     	 push {r7,lr}
 3953              	.LCFI93:
 3954              	 .cfi_def_cfa_offset 8
 3955              	 .cfi_offset 7,-8
 3956              	 .cfi_offset 14,-4
 3957 0002 00AF     	 add r7,sp,#0
 3958              	.LCFI94:
 3959              	 .cfi_def_cfa_register 7
 799:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 3960              	 .loc 3 799 0
 3961 0004 194B     	 ldr r3,.L172
 3962 0006 1B78     	 ldrb r3,[r3]
 3963 0008 052B     	 cmp r3,#5
 3964 000a 2CD8     	 bhi .L171
 3965 000c 9A00     	 lsl r2,r3,#2
 3966 000e 184B     	 ldr r3,.L172+4
 3967 0010 D318     	 add r3,r2,r3
 3968 0012 1B68     	 ldr r3,[r3]
 3969 0014 9F46     	 mov pc,r3
 3970              	 .section .rodata.bcuInit,"a",%progbits
 3971              	 .align 2
 3972              	.L165:
 3973 0000 66000000 	 .word .L171
 3974 0004 16000000 	 .word .L164
 3975 0008 24000000 	 .word .L166
 3976 000c 32000000 	 .word .L167
 3977 0010 42000000 	 .word .L168
 3978 0014 54000000 	 .word .L169
 3979              	 .section .text.bcuInit
 3980              	.L164:
 800:../samuel/samuel_io.c **** 		{
 801:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 3981              	 .loc 3 801 0
 3982 0016 174B     	 ldr r3,.L172+8
 3983 0018 0022     	 mov r2,#0
 3984 001a 1A80     	 strh r2,[r3]
 802:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 3985              	 .loc 3 802 0
 3986 001c 164B     	 ldr r3,.L172+12
 3987 001e 0022     	 mov r2,#0
 3988 0020 1A80     	 strh r2,[r3]
 803:../samuel/samuel_io.c **** 									break;
 3989              	 .loc 3 803 0
 3990 0022 21E0     	 b .L162
 3991              	.L166:
 804:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 3992              	 .loc 3 804 0
 3993 0024 134B     	 ldr r3,.L172+8
 3994 0026 154A     	 ldr r2,.L172+16
 3995 0028 1A80     	 strh r2,[r3]
 805:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 3996              	 .loc 3 805 0
 3997 002a 134B     	 ldr r3,.L172+12
 3998 002c 134A     	 ldr r2,.L172+16
 3999 002e 1A80     	 strh r2,[r3]
 806:../samuel/samuel_io.c **** 									break;
 4000              	 .loc 3 806 0
 4001 0030 1AE0     	 b .L162
 4002              	.L167:
 807:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 4003              	 .loc 3 807 0
 4004 0032 134B     	 ldr r3,.L172+20
 4005 0034 1A88     	 ldrh r2,[r3]
 4006 0036 0F4B     	 ldr r3,.L172+8
 4007 0038 1A80     	 strh r2,[r3]
 808:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 4008              	 .loc 3 808 0
 4009 003a 124B     	 ldr r3,.L172+24
 4010 003c 1A88     	 ldrh r2,[r3]
 4011 003e 0E4B     	 ldr r3,.L172+12
 4012 0040 1A80     	 strh r2,[r3]
 4013              	.L168:
 809:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 4014              	 .loc 3 809 0
 4015 0042 114B     	 ldr r3,.L172+28
 4016 0044 1A88     	 ldrh r2,[r3]
 4017 0046 0B4B     	 ldr r3,.L172+8
 4018 0048 1A80     	 strh r2,[r3]
 810:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 4019              	 .loc 3 810 0
 4020 004a 104B     	 ldr r3,.L172+32
 4021 004c 1A88     	 ldrh r2,[r3]
 4022 004e 0A4B     	 ldr r3,.L172+12
 4023 0050 1A80     	 strh r2,[r3]
 811:../samuel/samuel_io.c **** 									break;
 4024              	 .loc 3 811 0
 4025 0052 09E0     	 b .L162
 4026              	.L169:
 812:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 4027              	 .loc 3 812 0
 4028 0054 0E4B     	 ldr r3,.L172+36
 4029 0056 1A88     	 ldrh r2,[r3]
 4030 0058 064B     	 ldr r3,.L172+8
 4031 005a 1A80     	 strh r2,[r3]
 813:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 4032              	 .loc 3 813 0
 4033 005c 0D4B     	 ldr r3,.L172+40
 4034 005e 1A88     	 ldrh r2,[r3]
 4035 0060 054B     	 ldr r3,.L172+12
 4036 0062 1A80     	 strh r2,[r3]
 814:../samuel/samuel_io.c **** 									break;
 4037              	 .loc 3 814 0
 4038 0064 00E0     	 b .L162
 4039              	.L171:
 815:../samuel/samuel_io.c **** 		default:
 816:../samuel/samuel_io.c **** 									break;
 4040              	 .loc 3 816 0
 4041 0066 C046     	 mov r8,r8
 4042              	.L162:
 817:../samuel/samuel_io.c **** 		}
 818:../samuel/samuel_io.c **** 
 819:../samuel/samuel_io.c ****  }
 4043              	 .loc 3 819 0
 4044 0068 BD46     	 mov sp,r7
 4045              	 
 4046 006a 80BD     	 pop {r7,pc}
 4047              	.L173:
 4048              	 .align 2
 4049              	.L172:
 4050 006c 00000000 	 .word RegOnOff
 4051 0070 00000000 	 .word .L165
 4052 0074 00000000 	 .word dimAkt_Ww
 4053 0078 00000000 	 .word dimAkt_Cw
 4054 007c FF7F0000 	 .word 32767
 4055 0080 00000000 	 .word dimNorm1_Ww
 4056 0084 00000000 	 .word dimNorm1_Cw
 4057 0088 00000000 	 .word dimNorm2_Ww
 4058 008c 00000000 	 .word dimNorm2_Cw
 4059 0090 00000000 	 .word dimOff_Ww
 4060 0094 00000000 	 .word dimOff_Cw
 4061              	 .cfi_endproc
 4062              	.LFE328:
 4064              	 .section .text.bcuUebergabe,"ax",%progbits
 4065              	 .align 2
 4066              	 .global bcuUebergabe
 4067              	 .code 16
 4068              	 .thumb_func
 4070              	bcuUebergabe:
 4071              	.LFB329:
 820:../samuel/samuel_io.c ****  //----------------------------------
 821:../samuel/samuel_io.c **** 
 822:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 823:../samuel/samuel_io.c ****  {
 4072              	 .loc 3 823 0
 4073              	 .cfi_startproc
 4074 0000 80B5     	 push {r7,lr}
 4075              	.LCFI95:
 4076              	 .cfi_def_cfa_offset 8
 4077              	 .cfi_offset 7,-8
 4078              	 .cfi_offset 14,-4
 4079 0002 00AF     	 add r7,sp,#0
 4080              	.LCFI96:
 4081              	 .cfi_def_cfa_register 7
 824:../samuel/samuel_io.c **** 
 825:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 826:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 827:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 828:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 829:../samuel/samuel_io.c **** 
 830:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 4082              	 .loc 3 830 0
 4083 0004 204B     	 ldr r3,.L175
 4084 0006 1B88     	 ldrh r3,[r3]
 4085 0008 1A1C     	 mov r2,r3
 4086 000a 204B     	 ldr r3,.L175+4
 4087 000c 181C     	 mov r0,r3
 4088 000e 111C     	 mov r1,r2
 4089 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 831:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 4090              	 .loc 3 831 0
 4091 0014 1E4B     	 ldr r3,.L175+8
 4092 0016 1B88     	 ldrh r3,[r3]
 4093 0018 1A1C     	 mov r2,r3
 4094 001a 1E4B     	 ldr r3,.L175+12
 4095 001c 181C     	 mov r0,r3
 4096 001e 111C     	 mov r1,r2
 4097 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 832:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 4098              	 .loc 3 832 0
 4099 0024 1C4B     	 ldr r3,.L175+16
 4100 0026 1B88     	 ldrh r3,[r3]
 4101 0028 1A1C     	 mov r2,r3
 4102 002a 1C4B     	 ldr r3,.L175+20
 4103 002c 181C     	 mov r0,r3
 4104 002e 111C     	 mov r1,r2
 4105 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 833:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 4106              	 .loc 3 833 0
 4107 0034 1A4B     	 ldr r3,.L175+24
 4108 0036 1B88     	 ldrh r3,[r3]
 4109 0038 1A1C     	 mov r2,r3
 4110 003a 1A4B     	 ldr r3,.L175+28
 4111 003c 181C     	 mov r0,r3
 4112 003e 111C     	 mov r1,r2
 4113 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 834:../samuel/samuel_io.c **** 
 835:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 4114              	 .loc 3 835 0
 4115 0044 184B     	 ldr r3,.L175+32
 4116 0046 1B88     	 ldrh r3,[r3]
 4117 0048 1A1C     	 mov r2,r3
 4118 004a 104B     	 ldr r3,.L175+4
 4119 004c 181C     	 mov r0,r3
 4120 004e 111C     	 mov r1,r2
 4121 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 836:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 4122              	 .loc 3 836 0
 4123 0054 154B     	 ldr r3,.L175+36
 4124 0056 1B88     	 ldrh r3,[r3]
 4125 0058 1A1C     	 mov r2,r3
 4126 005a 0E4B     	 ldr r3,.L175+12
 4127 005c 181C     	 mov r0,r3
 4128 005e 111C     	 mov r1,r2
 4129 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 837:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 4130              	 .loc 3 837 0
 4131 0064 124B     	 ldr r3,.L175+40
 4132 0066 1B88     	 ldrh r3,[r3]
 4133 0068 1A1C     	 mov r2,r3
 4134 006a 0C4B     	 ldr r3,.L175+20
 4135 006c 181C     	 mov r0,r3
 4136 006e 111C     	 mov r1,r2
 4137 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 838:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 4138              	 .loc 3 838 0
 4139 0074 0F4B     	 ldr r3,.L175+44
 4140 0076 1B88     	 ldrh r3,[r3]
 4141 0078 1A1C     	 mov r2,r3
 4142 007a 0A4B     	 ldr r3,.L175+28
 4143 007c 181C     	 mov r0,r3
 4144 007e 111C     	 mov r1,r2
 4145 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 839:../samuel/samuel_io.c **** 
 840:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 841:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 842:../samuel/samuel_io.c **** 
 843:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 844:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 845:../samuel/samuel_io.c ****  }
 4146              	 .loc 3 845 0
 4147 0084 BD46     	 mov sp,r7
 4148              	 
 4149 0086 80BD     	 pop {r7,pc}
 4150              	.L176:
 4151              	 .align 2
 4152              	.L175:
 4153 0088 00000000 	 .word Farbe_ww2
 4154 008c 00000000 	 .word PDM_BCCU_0
 4155 0090 00000000 	 .word Farbe_cw2
 4156 0094 00000000 	 .word PDM_BCCU_1
 4157 0098 00000000 	 .word Farbe_ww1
 4158 009c 00000000 	 .word PDM_BCCU_2
 4159 00a0 00000000 	 .word Farbe_cw1
 4160 00a4 00000000 	 .word PDM_BCCU_3
 4161 00a8 00000000 	 .word linearwalk_ww2
 4162 00ac 00000000 	 .word linearwalk_cw2
 4163 00b0 00000000 	 .word linearwalk_ww1
 4164 00b4 00000000 	 .word linearwalk_cw1
 4165              	 .cfi_endproc
 4166              	.LFE329:
 4168              	 .section .text.bcuAktBerechnung,"ax",%progbits
 4169              	 .align 2
 4170              	 .global bcuAktBerechnung
 4171              	 .code 16
 4172              	 .thumb_func
 4174              	bcuAktBerechnung:
 4175              	.LFB330:
 846:../samuel/samuel_io.c ****  //----------------------------------
 847:../samuel/samuel_io.c **** 
 848:../samuel/samuel_io.c **** 
 849:../samuel/samuel_io.c ****  //----------------------------------
 850:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 851:../samuel/samuel_io.c ****   {
 4176              	 .loc 3 851 0
 4177              	 .cfi_startproc
 4178 0000 80B5     	 push {r7,lr}
 4179              	.LCFI97:
 4180              	 .cfi_def_cfa_offset 8
 4181              	 .cfi_offset 7,-8
 4182              	 .cfi_offset 14,-4
 4183 0002 82B0     	 sub sp,sp,#8
 4184              	.LCFI98:
 4185              	 .cfi_def_cfa_offset 16
 4186 0004 00AF     	 add r7,sp,#0
 4187              	.LCFI99:
 4188              	 .cfi_def_cfa_register 7
 852:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 853:../samuel/samuel_io.c **** 
 854:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4189              	 .loc 3 854 0
 4190 0006 284B     	 ldr r3,.L178
 4191 0008 1B88     	 ldrh r3,[r3]
 4192 000a 1B0A     	 lsr r3,r3,#8
 4193 000c 9AB2     	 uxth r2,r3
 4194 000e 274B     	 ldr r3,.L178+4
 4195 0010 1A80     	 strh r2,[r3]
 855:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4196              	 .loc 3 855 0
 4197 0012 254B     	 ldr r3,.L178
 4198 0014 1B88     	 ldrh r3,[r3]
 4199 0016 1B0A     	 lsr r3,r3,#8
 4200 0018 9AB2     	 uxth r2,r3
 4201 001a 254B     	 ldr r3,.L178+8
 4202 001c 1A80     	 strh r2,[r3]
 856:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4203              	 .loc 3 856 0
 4204 001e 224B     	 ldr r3,.L178
 4205 0020 1B88     	 ldrh r3,[r3]
 4206 0022 FF22     	 mov r2,#255
 4207 0024 1340     	 and r3,r2
 4208 0026 9AB2     	 uxth r2,r3
 4209 0028 224B     	 ldr r3,.L178+12
 4210 002a 1A80     	 strh r2,[r3]
 857:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4211              	 .loc 3 857 0
 4212 002c 1E4B     	 ldr r3,.L178
 4213 002e 1B88     	 ldrh r3,[r3]
 4214 0030 FF22     	 mov r2,#255
 4215 0032 1340     	 and r3,r2
 4216 0034 9AB2     	 uxth r2,r3
 4217 0036 204B     	 ldr r3,.L178+16
 4218 0038 1A80     	 strh r2,[r3]
 858:../samuel/samuel_io.c **** 
 859:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4219              	 .loc 3 859 0
 4220 003a 204B     	 ldr r3,.L178+20
 4221 003c 1B88     	 ldrh r3,[r3]
 4222 003e 1A1C     	 mov r2,r3
 4223 0040 1A4B     	 ldr r3,.L178+4
 4224 0042 1B88     	 ldrh r3,[r3]
 4225 0044 5343     	 mul r3,r2
 4226 0046 7B60     	 str r3,[r7,#4]
 860:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4227              	 .loc 3 860 0
 4228 0048 7B68     	 ldr r3,[r7,#4]
 4229 004a 1B0A     	 lsr r3,r3,#8
 4230 004c 1B09     	 lsr r3,r3,#4
 4231 004e 9AB2     	 uxth r2,r3
 4232 0050 1B4B     	 ldr r3,.L178+24
 4233 0052 1A80     	 strh r2,[r3]
 861:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4234              	 .loc 3 861 0
 4235 0054 194B     	 ldr r3,.L178+20
 4236 0056 1B88     	 ldrh r3,[r3]
 4237 0058 1A1C     	 mov r2,r3
 4238 005a 164B     	 ldr r3,.L178+12
 4239 005c 1B88     	 ldrh r3,[r3]
 4240 005e 5343     	 mul r3,r2
 4241 0060 7B60     	 str r3,[r7,#4]
 862:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4242              	 .loc 3 862 0
 4243 0062 7B68     	 ldr r3,[r7,#4]
 4244 0064 1B0A     	 lsr r3,r3,#8
 4245 0066 1B09     	 lsr r3,r3,#4
 4246 0068 9AB2     	 uxth r2,r3
 4247 006a 164B     	 ldr r3,.L178+28
 4248 006c 1A80     	 strh r2,[r3]
 863:../samuel/samuel_io.c **** 
 864:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4249              	 .loc 3 864 0
 4250 006e 164B     	 ldr r3,.L178+32
 4251 0070 1B88     	 ldrh r3,[r3]
 4252 0072 1A1C     	 mov r2,r3
 4253 0074 0E4B     	 ldr r3,.L178+8
 4254 0076 1B88     	 ldrh r3,[r3]
 4255 0078 5343     	 mul r3,r2
 4256 007a 7B60     	 str r3,[r7,#4]
 865:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4257              	 .loc 3 865 0
 4258 007c 7B68     	 ldr r3,[r7,#4]
 4259 007e 1B0A     	 lsr r3,r3,#8
 4260 0080 1B09     	 lsr r3,r3,#4
 4261 0082 9AB2     	 uxth r2,r3
 4262 0084 114B     	 ldr r3,.L178+36
 4263 0086 1A80     	 strh r2,[r3]
 866:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4264              	 .loc 3 866 0
 4265 0088 0F4B     	 ldr r3,.L178+32
 4266 008a 1B88     	 ldrh r3,[r3]
 4267 008c 1A1C     	 mov r2,r3
 4268 008e 0A4B     	 ldr r3,.L178+16
 4269 0090 1B88     	 ldrh r3,[r3]
 4270 0092 5343     	 mul r3,r2
 4271 0094 7B60     	 str r3,[r7,#4]
 867:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4272              	 .loc 3 867 0
 4273 0096 7B68     	 ldr r3,[r7,#4]
 4274 0098 1B0A     	 lsr r3,r3,#8
 4275 009a 1B09     	 lsr r3,r3,#4
 4276 009c 9AB2     	 uxth r2,r3
 4277 009e 0C4B     	 ldr r3,.L178+40
 4278 00a0 1A80     	 strh r2,[r3]
 868:../samuel/samuel_io.c ****   }
 4279              	 .loc 3 868 0
 4280 00a2 BD46     	 mov sp,r7
 4281 00a4 02B0     	 add sp,sp,#8
 4282              	 
 4283 00a6 80BD     	 pop {r7,pc}
 4284              	.L179:
 4285              	 .align 2
 4286              	.L178:
 4287 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4288 00ac 00000000 	 .word Farbe_ww1_Quot
 4289 00b0 00000000 	 .word Farbe_cw1_Quot
 4290 00b4 00000000 	 .word Farbe_ww2_Quot
 4291 00b8 00000000 	 .word Farbe_cw2_Quot
 4292 00bc 00000000 	 .word dimAkt_Ww
 4293 00c0 00000000 	 .word Farbe_ww1
 4294 00c4 00000000 	 .word Farbe_ww2
 4295 00c8 00000000 	 .word dimAkt_Cw
 4296 00cc 00000000 	 .word Farbe_cw1
 4297 00d0 00000000 	 .word Farbe_cw2
 4298              	 .cfi_endproc
 4299              	.LFE330:
 4301              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4302              	 .align 2
 4303              	 .global bcudirAktBerechnung
 4304              	 .code 16
 4305              	 .thumb_func
 4307              	bcudirAktBerechnung:
 4308              	.LFB331:
 869:../samuel/samuel_io.c **** 
 870:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 871:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 872:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 873:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 874:../samuel/samuel_io.c **** 
 875:../samuel/samuel_io.c ****   {
 4309              	 .loc 3 875 0
 4310              	 .cfi_startproc
 4311 0000 80B5     	 push {r7,lr}
 4312              	.LCFI100:
 4313              	 .cfi_def_cfa_offset 8
 4314              	 .cfi_offset 7,-8
 4315              	 .cfi_offset 14,-4
 4316 0002 82B0     	 sub sp,sp,#8
 4317              	.LCFI101:
 4318              	 .cfi_def_cfa_offset 16
 4319 0004 00AF     	 add r7,sp,#0
 4320              	.LCFI102:
 4321              	 .cfi_def_cfa_register 7
 876:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 877:../samuel/samuel_io.c **** 
 878:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4322              	 .loc 3 878 0
 4323 0006 2A4B     	 ldr r3,.L181
 4324 0008 0122     	 mov r2,#1
 4325 000a 5242     	 neg r2,r2
 4326 000c 1A80     	 strh r2,[r3]
 879:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4327              	 .loc 3 879 0
 4328 000e 284B     	 ldr r3,.L181
 4329 0010 1B88     	 ldrh r3,[r3]
 4330 0012 1B0A     	 lsr r3,r3,#8
 4331 0014 9AB2     	 uxth r2,r3
 4332 0016 274B     	 ldr r3,.L181+4
 4333 0018 1A80     	 strh r2,[r3]
 880:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4334              	 .loc 3 880 0
 4335 001a 254B     	 ldr r3,.L181
 4336 001c 1B88     	 ldrh r3,[r3]
 4337 001e 1B0A     	 lsr r3,r3,#8
 4338 0020 9AB2     	 uxth r2,r3
 4339 0022 254B     	 ldr r3,.L181+8
 4340 0024 1A80     	 strh r2,[r3]
 881:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4341              	 .loc 3 881 0
 4342 0026 224B     	 ldr r3,.L181
 4343 0028 1B88     	 ldrh r3,[r3]
 4344 002a FF22     	 mov r2,#255
 4345 002c 1340     	 and r3,r2
 4346 002e 9AB2     	 uxth r2,r3
 4347 0030 224B     	 ldr r3,.L181+12
 4348 0032 1A80     	 strh r2,[r3]
 882:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4349              	 .loc 3 882 0
 4350 0034 1E4B     	 ldr r3,.L181
 4351 0036 1B88     	 ldrh r3,[r3]
 4352 0038 FF22     	 mov r2,#255
 4353 003a 1340     	 and r3,r2
 4354 003c 9AB2     	 uxth r2,r3
 4355 003e 204B     	 ldr r3,.L181+16
 4356 0040 1A80     	 strh r2,[r3]
 883:../samuel/samuel_io.c **** 
 884:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4357              	 .loc 3 884 0
 4358 0042 204B     	 ldr r3,.L181+20
 4359 0044 1B88     	 ldrh r3,[r3]
 4360 0046 1A1C     	 mov r2,r3
 4361 0048 1A4B     	 ldr r3,.L181+4
 4362 004a 1B88     	 ldrh r3,[r3]
 4363 004c 5343     	 mul r3,r2
 4364 004e 7B60     	 str r3,[r7,#4]
 885:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4365              	 .loc 3 885 0
 4366 0050 7B68     	 ldr r3,[r7,#4]
 4367 0052 1B0A     	 lsr r3,r3,#8
 4368 0054 1B09     	 lsr r3,r3,#4
 4369 0056 9AB2     	 uxth r2,r3
 4370 0058 1B4B     	 ldr r3,.L181+24
 4371 005a 1A80     	 strh r2,[r3]
 886:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4372              	 .loc 3 886 0
 4373 005c 194B     	 ldr r3,.L181+20
 4374 005e 1B88     	 ldrh r3,[r3]
 4375 0060 1A1C     	 mov r2,r3
 4376 0062 164B     	 ldr r3,.L181+12
 4377 0064 1B88     	 ldrh r3,[r3]
 4378 0066 5343     	 mul r3,r2
 4379 0068 7B60     	 str r3,[r7,#4]
 887:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4380              	 .loc 3 887 0
 4381 006a 7B68     	 ldr r3,[r7,#4]
 4382 006c 1B0A     	 lsr r3,r3,#8
 4383 006e 1B09     	 lsr r3,r3,#4
 4384 0070 9AB2     	 uxth r2,r3
 4385 0072 164B     	 ldr r3,.L181+28
 4386 0074 1A80     	 strh r2,[r3]
 888:../samuel/samuel_io.c **** 
 889:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4387              	 .loc 3 889 0
 4388 0076 164B     	 ldr r3,.L181+32
 4389 0078 1B88     	 ldrh r3,[r3]
 4390 007a 1A1C     	 mov r2,r3
 4391 007c 0E4B     	 ldr r3,.L181+8
 4392 007e 1B88     	 ldrh r3,[r3]
 4393 0080 5343     	 mul r3,r2
 4394 0082 7B60     	 str r3,[r7,#4]
 890:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4395              	 .loc 3 890 0
 4396 0084 7B68     	 ldr r3,[r7,#4]
 4397 0086 1B0A     	 lsr r3,r3,#8
 4398 0088 1B09     	 lsr r3,r3,#4
 4399 008a 9AB2     	 uxth r2,r3
 4400 008c 114B     	 ldr r3,.L181+36
 4401 008e 1A80     	 strh r2,[r3]
 891:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4402              	 .loc 3 891 0
 4403 0090 0F4B     	 ldr r3,.L181+32
 4404 0092 1B88     	 ldrh r3,[r3]
 4405 0094 1A1C     	 mov r2,r3
 4406 0096 0A4B     	 ldr r3,.L181+16
 4407 0098 1B88     	 ldrh r3,[r3]
 4408 009a 5343     	 mul r3,r2
 4409 009c 7B60     	 str r3,[r7,#4]
 892:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4410              	 .loc 3 892 0
 4411 009e 7B68     	 ldr r3,[r7,#4]
 4412 00a0 1B0A     	 lsr r3,r3,#8
 4413 00a2 1B09     	 lsr r3,r3,#4
 4414 00a4 9AB2     	 uxth r2,r3
 4415 00a6 0C4B     	 ldr r3,.L181+40
 4416 00a8 1A80     	 strh r2,[r3]
 893:../samuel/samuel_io.c ****   }
 4417              	 .loc 3 893 0
 4418 00aa BD46     	 mov sp,r7
 4419 00ac 02B0     	 add sp,sp,#8
 4420              	 
 4421 00ae 80BD     	 pop {r7,pc}
 4422              	.L182:
 4423              	 .align 2
 4424              	.L181:
 4425 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4426 00b4 00000000 	 .word Farbe_ww1_Quot
 4427 00b8 00000000 	 .word Farbe_cw1_Quot
 4428 00bc 00000000 	 .word Farbe_ww2_Quot
 4429 00c0 00000000 	 .word Farbe_cw2_Quot
 4430 00c4 00000000 	 .word dimAkt_Ww
 4431 00c8 00000000 	 .word Farbe_ww1
 4432 00cc 00000000 	 .word Farbe_ww2
 4433 00d0 00000000 	 .word dimAkt_Cw
 4434 00d4 00000000 	 .word Farbe_cw1
 4435 00d8 00000000 	 .word Farbe_cw2
 4436              	 .cfi_endproc
 4437              	.LFE331:
 4439              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4440              	 .align 2
 4441              	 .global bcuColorBerechnung
 4442              	 .code 16
 4443              	 .thumb_func
 4445              	bcuColorBerechnung:
 4446              	.LFB332:
 894:../samuel/samuel_io.c ****  //----------------------------------
 895:../samuel/samuel_io.c **** 
 896:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 897:../samuel/samuel_io.c ****   {
 4447              	 .loc 3 897 0
 4448              	 .cfi_startproc
 4449 0000 80B5     	 push {r7,lr}
 4450              	.LCFI103:
 4451              	 .cfi_def_cfa_offset 8
 4452              	 .cfi_offset 7,-8
 4453              	 .cfi_offset 14,-4
 4454 0002 82B0     	 sub sp,sp,#8
 4455              	.LCFI104:
 4456              	 .cfi_def_cfa_offset 16
 4457 0004 00AF     	 add r7,sp,#0
 4458              	.LCFI105:
 4459              	 .cfi_def_cfa_register 7
 898:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 899:../samuel/samuel_io.c **** 
 900:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4460              	 .loc 3 900 0
 4461 0006 1E4B     	 ldr r3,.L184
 4462 0008 0122     	 mov r2,#1
 4463 000a 5242     	 neg r2,r2
 4464 000c 1A80     	 strh r2,[r3]
 901:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4465              	 .loc 3 901 0
 4466 000e 1C4B     	 ldr r3,.L184
 4467 0010 1B88     	 ldrh r3,[r3]
 4468 0012 1A1C     	 mov r2,r3
 4469 0014 1B4B     	 ldr r3,.L184+4
 4470 0016 1B88     	 ldrh r3,[r3]
 4471 0018 5343     	 mul r3,r2
 4472 001a 7B60     	 str r3,[r7,#4]
 902:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4473              	 .loc 3 902 0
 4474 001c 7B68     	 ldr r3,[r7,#4]
 4475 001e 1B0C     	 lsr r3,r3,#16
 4476 0020 7B60     	 str r3,[r7,#4]
 903:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4477              	 .loc 3 903 0
 4478 0022 194B     	 ldr r3,.L184+8
 4479 0024 1B88     	 ldrh r3,[r3]
 4480 0026 1A1C     	 mov r2,r3
 4481 0028 184B     	 ldr r3,.L184+12
 4482 002a 9B1A     	 sub r3,r3,r2
 4483 002c 1A1C     	 mov r2,r3
 4484 002e 7B68     	 ldr r3,[r7,#4]
 4485 0030 5343     	 mul r3,r2
 4486 0032 7B60     	 str r3,[r7,#4]
 904:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4487              	 .loc 3 904 0
 4488 0034 7B68     	 ldr r3,[r7,#4]
 4489 0036 1B0C     	 lsr r3,r3,#16
 4490 0038 7B60     	 str r3,[r7,#4]
 905:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4491              	 .loc 3 905 0
 4492 003a 7B68     	 ldr r3,[r7,#4]
 4493 003c 9AB2     	 uxth r2,r3
 4494 003e 104B     	 ldr r3,.L184
 4495 0040 1A80     	 strh r2,[r3]
 906:../samuel/samuel_io.c **** 
 907:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4496              	 .loc 3 907 0
 4497 0042 134B     	 ldr r3,.L184+16
 4498 0044 0122     	 mov r2,#1
 4499 0046 5242     	 neg r2,r2
 4500 0048 1A80     	 strh r2,[r3]
 908:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4501              	 .loc 3 908 0
 4502 004a 114B     	 ldr r3,.L184+16
 4503 004c 1B88     	 ldrh r3,[r3]
 4504 004e 1A1C     	 mov r2,r3
 4505 0050 0C4B     	 ldr r3,.L184+4
 4506 0052 1B88     	 ldrh r3,[r3]
 4507 0054 5343     	 mul r3,r2
 4508 0056 7B60     	 str r3,[r7,#4]
 909:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4509              	 .loc 3 909 0
 4510 0058 7B68     	 ldr r3,[r7,#4]
 4511 005a 1B0C     	 lsr r3,r3,#16
 4512 005c 7B60     	 str r3,[r7,#4]
 910:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4513              	 .loc 3 910 0
 4514 005e 0A4B     	 ldr r3,.L184+8
 4515 0060 1B88     	 ldrh r3,[r3]
 4516 0062 1A1C     	 mov r2,r3
 4517 0064 7B68     	 ldr r3,[r7,#4]
 4518 0066 5343     	 mul r3,r2
 4519 0068 7B60     	 str r3,[r7,#4]
 911:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4520              	 .loc 3 911 0
 4521 006a 7B68     	 ldr r3,[r7,#4]
 4522 006c 1B0C     	 lsr r3,r3,#16
 4523 006e 7B60     	 str r3,[r7,#4]
 912:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4524              	 .loc 3 912 0
 4525 0070 7B68     	 ldr r3,[r7,#4]
 4526 0072 9AB2     	 uxth r2,r3
 4527 0074 064B     	 ldr r3,.L184+16
 4528 0076 1A80     	 strh r2,[r3]
 913:../samuel/samuel_io.c ****   }
 4529              	 .loc 3 913 0
 4530 0078 BD46     	 mov sp,r7
 4531 007a 02B0     	 add sp,sp,#8
 4532              	 
 4533 007c 80BD     	 pop {r7,pc}
 4534              	.L185:
 4535 007e C046     	 .align 2
 4536              	.L184:
 4537 0080 00000000 	 .word dimAkt_Ww
 4538 0084 00000000 	 .word Brightness_Gen
 4539 0088 00000000 	 .word ColorQuot_Gen
 4540 008c FFFF0000 	 .word 65535
 4541 0090 00000000 	 .word dimAkt_Cw
 4542              	 .cfi_endproc
 4543              	.LFE332:
 4545              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4546              	 .align 2
 4547              	 .global Offlight_zahler_write
 4548              	 .code 16
 4549              	 .thumb_func
 4551              	Offlight_zahler_write:
 4552              	.LFB333:
 914:../samuel/samuel_io.c ****  //----------------------------------
 915:../samuel/samuel_io.c **** 
 916:../samuel/samuel_io.c **** 
 917:../samuel/samuel_io.c **** 
 918:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 919:../samuel/samuel_io.c ****  {
 4553              	 .loc 3 919 0
 4554              	 .cfi_startproc
 4555 0000 80B5     	 push {r7,lr}
 4556              	.LCFI106:
 4557              	 .cfi_def_cfa_offset 8
 4558              	 .cfi_offset 7,-8
 4559              	 .cfi_offset 14,-4
 4560 0002 82B0     	 sub sp,sp,#8
 4561              	.LCFI107:
 4562              	 .cfi_def_cfa_offset 16
 4563 0004 00AF     	 add r7,sp,#0
 4564              	.LCFI108:
 4565              	 .cfi_def_cfa_register 7
 920:../samuel/samuel_io.c ****      uint8_t a;
 921:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4566              	 .loc 3 921 0
 4567 0006 3B4B     	 ldr r3,.L192
 4568 0008 1B78     	 ldrb r3,[r3]
 4569 000a 052B     	 cmp r3,#5
 4570 000c 00D0     	 beq .LCB3798
 4571 000e 6EE0     	 b .L186
 4572              	.LCB3798:
 922:../samuel/samuel_io.c **** 	 {
 923:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4573              	 .loc 3 923 0
 4574 0010 394B     	 ldr r3,.L192+4
 4575 0012 1B88     	 ldrh r3,[r3]
 4576 0014 0133     	 add r3,r3,#1
 4577 0016 9AB2     	 uxth r2,r3
 4578 0018 374B     	 ldr r3,.L192+4
 4579 001a 1A80     	 strh r2,[r3]
 924:../samuel/samuel_io.c **** 
 925:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4580              	 .loc 3 925 0
 4581 001c 364B     	 ldr r3,.L192+4
 4582 001e 1B88     	 ldrh r3,[r3]
 4583 0020 3B2B     	 cmp r3,#59
 4584 0022 64D9     	 bls .L186
 926:../samuel/samuel_io.c **** 	  {
 927:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4585              	 .loc 3 927 0
 4586 0024 344B     	 ldr r3,.L192+4
 4587 0026 0022     	 mov r2,#0
 4588 0028 1A80     	 strh r2,[r3]
 928:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4589              	 .loc 3 928 0
 4590 002a FFF7FEFF 	 bl read_off_light_EEprom
 4591 002e 021C     	 mov r2,r0
 4592 0030 FB1D     	 add r3,r7,#7
 4593 0032 1A70     	 strb r2,[r3]
 929:../samuel/samuel_io.c **** 			if (a == 0x03)
 4594              	 .loc 3 929 0
 4595 0034 FB1D     	 add r3,r7,#7
 4596 0036 1B78     	 ldrb r3,[r3]
 4597 0038 032B     	 cmp r3,#3
 4598 003a 52D1     	 bne .L188
 930:../samuel/samuel_io.c **** 			{
 931:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4599              	 .loc 3 931 0
 4600 003c 2F4B     	 ldr r3,.L192+8
 4601 003e 1A88     	 ldrh r2,[r3]
 4602 0040 2F4B     	 ldr r3,.L192+12
 4603 0042 1A80     	 strh r2,[r3]
 932:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4604              	 .loc 3 932 0
 4605 0044 2F4B     	 ldr r3,.L192+16
 4606 0046 1A88     	 ldrh r2,[r3]
 4607 0048 2F4B     	 ldr r3,.L192+20
 4608 004a 1A80     	 strh r2,[r3]
 933:../samuel/samuel_io.c **** 
 934:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4609              	 .loc 3 934 0
 4610 004c 2F4B     	 ldr r3,.L192+24
 4611 004e 1B79     	 ldrb r3,[r3,#4]
 4612 0050 9AB2     	 uxth r2,r3
 4613 0052 2B4B     	 ldr r3,.L192+12
 4614 0054 1B88     	 ldrh r3,[r3]
 4615 0056 1B0A     	 lsr r3,r3,#8
 4616 0058 9BB2     	 uxth r3,r3
 4617 005a 9A42     	 cmp r2,r3
 4618 005c 20D1     	 bne .L189
 4619              	 .loc 3 934 0 is_stmt 0 discriminator 1
 4620 005e 2B4B     	 ldr r3,.L192+24
 4621 0060 5B79     	 ldrb r3,[r3,#5]
 4622 0062 1A1C     	 mov r2,r3
 4623 0064 264B     	 ldr r3,.L192+12
 4624 0066 1B88     	 ldrh r3,[r3]
 4625 0068 191C     	 mov r1,r3
 4626 006a FF23     	 mov r3,#255
 4627 006c 0B40     	 and r3,r1
 4628 006e 9A42     	 cmp r2,r3
 4629 0070 16D1     	 bne .L189
 4630              	 .loc 3 934 0 discriminator 2
 4631 0072 264B     	 ldr r3,.L192+24
 4632 0074 9B79     	 ldrb r3,[r3,#6]
 4633 0076 9AB2     	 uxth r2,r3
 4634 0078 234B     	 ldr r3,.L192+20
 4635 007a 1B88     	 ldrh r3,[r3]
 4636 007c 1B0A     	 lsr r3,r3,#8
 4637 007e 9BB2     	 uxth r3,r3
 4638 0080 9A42     	 cmp r2,r3
 4639 0082 0DD1     	 bne .L189
 4640              	 .loc 3 934 0 discriminator 3
 4641 0084 214B     	 ldr r3,.L192+24
 4642 0086 DB79     	 ldrb r3,[r3,#7]
 4643 0088 1A1C     	 mov r2,r3
 4644 008a 1F4B     	 ldr r3,.L192+20
 4645 008c 1B88     	 ldrh r3,[r3]
 4646 008e 191C     	 mov r1,r3
 4647 0090 FF23     	 mov r3,#255
 4648 0092 0B40     	 and r3,r1
 4649 0094 9A42     	 cmp r2,r3
 4650 0096 03D1     	 bne .L189
 935:../samuel/samuel_io.c **** 			 {
 936:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4651              	 .loc 3 936 0 is_stmt 1
 4652 0098 174B     	 ldr r3,.L192+4
 4653 009a 0022     	 mov r2,#0
 4654 009c 1A80     	 strh r2,[r3]
 4655 009e 23E0     	 b .L191
 4656              	.L189:
 937:../samuel/samuel_io.c **** 			 }
 938:../samuel/samuel_io.c **** 			 else{
 939:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4657              	 .loc 3 939 0
 4658 00a0 174B     	 ldr r3,.L192+12
 4659 00a2 1B88     	 ldrh r3,[r3]
 4660 00a4 1B0A     	 lsr r3,r3,#8
 4661 00a6 9BB2     	 uxth r3,r3
 4662 00a8 DAB2     	 uxtb r2,r3
 4663 00aa 184B     	 ldr r3,.L192+24
 4664 00ac 1A71     	 strb r2,[r3,#4]
 940:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4665              	 .loc 3 940 0
 4666 00ae 144B     	 ldr r3,.L192+12
 4667 00b0 1B88     	 ldrh r3,[r3]
 4668 00b2 DAB2     	 uxtb r2,r3
 4669 00b4 154B     	 ldr r3,.L192+24
 4670 00b6 5A71     	 strb r2,[r3,#5]
 941:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4671              	 .loc 3 941 0
 4672 00b8 134B     	 ldr r3,.L192+20
 4673 00ba 1B88     	 ldrh r3,[r3]
 4674 00bc 1B0A     	 lsr r3,r3,#8
 4675 00be 9BB2     	 uxth r3,r3
 4676 00c0 DAB2     	 uxtb r2,r3
 4677 00c2 124B     	 ldr r3,.L192+24
 4678 00c4 9A71     	 strb r2,[r3,#6]
 942:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4679              	 .loc 3 942 0
 4680 00c6 104B     	 ldr r3,.L192+20
 4681 00c8 1B88     	 ldrh r3,[r3]
 4682 00ca DAB2     	 uxtb r2,r3
 4683 00cc 0F4B     	 ldr r3,.L192+24
 4684 00ce DA71     	 strb r2,[r3,#7]
 943:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4685              	 .loc 3 943 0
 4686 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4687 00d4 021C     	 mov r2,r0
 4688 00d6 FB1D     	 add r3,r7,#7
 4689 00d8 1A70     	 strb r2,[r3]
 944:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4690              	 .loc 3 944 0
 4691 00da 074B     	 ldr r3,.L192+4
 4692 00dc 0022     	 mov r2,#0
 4693 00de 1A80     	 strh r2,[r3]
 4694 00e0 02E0     	 b .L191
 4695              	.L188:
 945:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 946:../samuel/samuel_io.c **** 			 }
 947:../samuel/samuel_io.c **** 			}
 948:../samuel/samuel_io.c **** 			else {
 949:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4696              	 .loc 3 949 0
 4697 00e2 054B     	 ldr r3,.L192+4
 4698 00e4 1E22     	 mov r2,#30
 4699 00e6 1A80     	 strh r2,[r3]
 4700              	.L191:
 950:../samuel/samuel_io.c **** 			}
 951:../samuel/samuel_io.c **** 
 952:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4701              	 .loc 3 952 0
 4702 00e8 034B     	 ldr r3,.L192+4
 4703 00ea 0022     	 mov r2,#0
 4704 00ec 1A80     	 strh r2,[r3]
 4705              	.L186:
 953:../samuel/samuel_io.c **** 	  }//zahler_offlight
 954:../samuel/samuel_io.c **** 	 }//regonoff
 955:../samuel/samuel_io.c ****  }
 4706              	 .loc 3 955 0
 4707 00ee BD46     	 mov sp,r7
 4708 00f0 02B0     	 add sp,sp,#8
 4709              	 
 4710 00f2 80BD     	 pop {r7,pc}
 4711              	.L193:
 4712              	 .align 2
 4713              	.L192:
 4714 00f4 00000000 	 .word RegOnOff
 4715 00f8 00000000 	 .word zahler_offlight
 4716 00fc 00000000 	 .word dimAkt_Ww
 4717 0100 00000000 	 .word dimOff_Ww
 4718 0104 00000000 	 .word dimAkt_Cw
 4719 0108 00000000 	 .word dimOff_Cw
 4720 010c 00000000 	 .word ReadBuffer2
 4721              	 .cfi_endproc
 4722              	.LFE333:
 4724              	 .section .text.plus39V_stop,"ax",%progbits
 4725              	 .align 2
 4726              	 .global plus39V_stop
 4727              	 .code 16
 4728              	 .thumb_func
 4730              	plus39V_stop:
 4731              	.LFB334:
 956:../samuel/samuel_io.c **** 
 957:../samuel/samuel_io.c ****  //----------------------------------------------------
 958:../samuel/samuel_io.c **** 
 959:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
 960:../samuel/samuel_io.c ****   {
 4732              	 .loc 3 960 0
 4733              	 .cfi_startproc
 4734 0000 80B5     	 push {r7,lr}
 4735              	.LCFI109:
 4736              	 .cfi_def_cfa_offset 8
 4737              	 .cfi_offset 7,-8
 4738              	 .cfi_offset 14,-4
 4739 0002 00AF     	 add r7,sp,#0
 4740              	.LCFI110:
 4741              	 .cfi_def_cfa_register 7
 961:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 962:../samuel/samuel_io.c **** 
 963:../samuel/samuel_io.c **** 
 964:../samuel/samuel_io.c ****   }
 4742              	 .loc 3 964 0
 4743 0004 BD46     	 mov sp,r7
 4744              	 
 4745 0006 80BD     	 pop {r7,pc}
 4746              	 .cfi_endproc
 4747              	.LFE334:
 4749              	 .section .text.plus39V_start,"ax",%progbits
 4750              	 .align 2
 4751              	 .global plus39V_start
 4752              	 .code 16
 4753              	 .thumb_func
 4755              	plus39V_start:
 4756              	.LFB335:
 965:../samuel/samuel_io.c **** 
 966:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
 967:../samuel/samuel_io.c ****   {
 4757              	 .loc 3 967 0
 4758              	 .cfi_startproc
 4759 0000 80B5     	 push {r7,lr}
 4760              	.LCFI111:
 4761              	 .cfi_def_cfa_offset 8
 4762              	 .cfi_offset 7,-8
 4763              	 .cfi_offset 14,-4
 4764 0002 00AF     	 add r7,sp,#0
 4765              	.LCFI112:
 4766              	 .cfi_def_cfa_register 7
 968:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 969:../samuel/samuel_io.c **** 
 970:../samuel/samuel_io.c ****   }
 4767              	 .loc 3 970 0
 4768 0004 BD46     	 mov sp,r7
 4769              	 
 4770 0006 80BD     	 pop {r7,pc}
 4771              	 .cfi_endproc
 4772              	.LFE335:
 4774              	 .section .text.Time1msec,"ax",%progbits
 4775              	 .align 2
 4776              	 .global Time1msec
 4777              	 .code 16
 4778              	 .thumb_func
 4780              	Time1msec:
 4781              	.LFB336:
 971:../samuel/samuel_io.c **** 
 972:../samuel/samuel_io.c ****  //----------------------------------
 973:../samuel/samuel_io.c **** 
 974:../samuel/samuel_io.c ****   void Time1msec (void) //
 975:../samuel/samuel_io.c ****   {
 4782              	 .loc 3 975 0
 4783              	 .cfi_startproc
 4784 0000 80B5     	 push {r7,lr}
 4785              	.LCFI113:
 4786              	 .cfi_def_cfa_offset 8
 4787              	 .cfi_offset 7,-8
 4788              	 .cfi_offset 14,-4
 4789 0002 00AF     	 add r7,sp,#0
 4790              	.LCFI114:
 4791              	 .cfi_def_cfa_register 7
 976:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4792              	 .loc 3 976 0
 4793 0004 024B     	 ldr r3,.L197
 4794 0006 181C     	 mov r0,r3
 4795 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
 977:../samuel/samuel_io.c **** 
 978:../samuel/samuel_io.c ****   }
 4796              	 .loc 3 978 0
 4797 000c BD46     	 mov sp,r7
 4798              	 
 4799 000e 80BD     	 pop {r7,pc}
 4800              	.L198:
 4801              	 .align 2
 4802              	.L197:
 4803 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4804              	 .cfi_endproc
 4805              	.LFE336:
 4807              	 .section .text.Time20msec,"ax",%progbits
 4808              	 .align 2
 4809              	 .global Time20msec
 4810              	 .code 16
 4811              	 .thumb_func
 4813              	Time20msec:
 4814              	.LFB337:
 979:../samuel/samuel_io.c ****   //----------------------------------
 980:../samuel/samuel_io.c **** 
 981:../samuel/samuel_io.c ****    void Time20msec (void) //
 982:../samuel/samuel_io.c ****    {
 4815              	 .loc 3 982 0
 4816              	 .cfi_startproc
 4817 0000 80B5     	 push {r7,lr}
 4818              	.LCFI115:
 4819              	 .cfi_def_cfa_offset 8
 4820              	 .cfi_offset 7,-8
 4821              	 .cfi_offset 14,-4
 4822 0002 00AF     	 add r7,sp,#0
 4823              	.LCFI116:
 4824              	 .cfi_def_cfa_register 7
 983:../samuel/samuel_io.c **** 
 984:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 985:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 4825              	 .loc 3 985 0
 4826 0004 364B     	 ldr r3,.L206
 4827 0006 1B88     	 ldrh r3,[r3]
 4828 0008 1A1C     	 mov r2,r3
 4829 000a 131C     	 mov r3,r2
 4830 000c 5B00     	 lsl r3,r3,#1
 4831 000e 9B18     	 add r3,r3,r2
 4832 0010 344A     	 ldr r2,.L206+4
 4833 0012 1288     	 ldrh r2,[r2]
 4834 0014 9B18     	 add r3,r3,r2
 4835 0016 002B     	 cmp r3,#0
 4836 0018 00DA     	 bge .L200
 4837 001a 0333     	 add r3,r3,#3
 4838              	.L200:
 4839 001c 9B10     	 asr r3,r3,#2
 4840 001e 9AB2     	 uxth r2,r3
 4841 0020 2F4B     	 ldr r3,.L206
 4842 0022 1A80     	 strh r2,[r3]
 986:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 4843              	 .loc 3 986 0
 4844 0024 304B     	 ldr r3,.L206+8
 4845 0026 1B88     	 ldrh r3,[r3]
 4846 0028 1A1C     	 mov r2,r3
 4847 002a 131C     	 mov r3,r2
 4848 002c 5B00     	 lsl r3,r3,#1
 4849 002e 9B18     	 add r3,r3,r2
 4850 0030 2E4A     	 ldr r2,.L206+12
 4851 0032 1288     	 ldrh r2,[r2]
 4852 0034 9B18     	 add r3,r3,r2
 4853 0036 002B     	 cmp r3,#0
 4854 0038 00DA     	 bge .L201
 4855 003a 0333     	 add r3,r3,#3
 4856              	.L201:
 4857 003c 9B10     	 asr r3,r3,#2
 4858 003e 9AB2     	 uxth r2,r3
 4859 0040 294B     	 ldr r3,.L206+8
 4860 0042 1A80     	 strh r2,[r3]
 987:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 4861              	 .loc 3 987 0
 4862 0044 2A4B     	 ldr r3,.L206+16
 4863 0046 1B88     	 ldrh r3,[r3]
 4864 0048 1A1C     	 mov r2,r3
 4865 004a 131C     	 mov r3,r2
 4866 004c 5B00     	 lsl r3,r3,#1
 4867 004e 9B18     	 add r3,r3,r2
 4868 0050 284A     	 ldr r2,.L206+20
 4869 0052 1288     	 ldrh r2,[r2]
 4870 0054 9B18     	 add r3,r3,r2
 4871 0056 002B     	 cmp r3,#0
 4872 0058 00DA     	 bge .L202
 4873 005a 0333     	 add r3,r3,#3
 4874              	.L202:
 4875 005c 9B10     	 asr r3,r3,#2
 4876 005e 9AB2     	 uxth r2,r3
 4877 0060 234B     	 ldr r3,.L206+16
 4878 0062 1A80     	 strh r2,[r3]
 988:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 4879              	 .loc 3 988 0
 4880 0064 244B     	 ldr r3,.L206+24
 4881 0066 1B88     	 ldrh r3,[r3]
 4882 0068 1A1C     	 mov r2,r3
 4883 006a 131C     	 mov r3,r2
 4884 006c 5B00     	 lsl r3,r3,#1
 4885 006e 9B18     	 add r3,r3,r2
 4886 0070 224A     	 ldr r2,.L206+28
 4887 0072 1288     	 ldrh r2,[r2]
 4888 0074 9B18     	 add r3,r3,r2
 4889 0076 002B     	 cmp r3,#0
 4890 0078 00DA     	 bge .L203
 4891 007a 0333     	 add r3,r3,#3
 4892              	.L203:
 4893 007c 9B10     	 asr r3,r3,#2
 4894 007e 9AB2     	 uxth r2,r3
 4895 0080 1D4B     	 ldr r3,.L206+24
 4896 0082 1A80     	 strh r2,[r3]
 989:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 4897              	 .loc 3 989 0
 4898 0084 1E4B     	 ldr r3,.L206+32
 4899 0086 1B88     	 ldrh r3,[r3]
 4900 0088 0133     	 add r3,r3,#1
 4901 008a 9AB2     	 uxth r2,r3
 4902 008c 1C4B     	 ldr r3,.L206+32
 4903 008e 1A80     	 strh r2,[r3]
 990:../samuel/samuel_io.c **** 
 991:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 4904              	 .loc 3 991 0
 4905 0090 1B4B     	 ldr r3,.L206+32
 4906 0092 1B88     	 ldrh r3,[r3]
 4907 0094 052B     	 cmp r3,#5
 4908 0096 21D9     	 bls .L199
 992:../samuel/samuel_io.c ****       {
 993:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
 994:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 4909              	 .loc 3 994 0
 4910 0098 194B     	 ldr r3,.L206+32
 4911 009a 0022     	 mov r2,#0
 4912 009c 1A80     	 strh r2,[r3]
 995:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 4913              	 .loc 3 995 0
 4914 009e 104B     	 ldr r3,.L206
 4915 00a0 1B88     	 ldrh r3,[r3]
 4916 00a2 184A     	 ldr r2,.L206+36
 4917 00a4 9342     	 cmp r3,r2
 4918 00a6 09D8     	 bhi .L205
 996:../samuel/samuel_io.c ****      	     {
 997:../samuel/samuel_io.c ****      	     plus39V_stop();
 4919              	 .loc 3 997 0
 4920 00a8 FFF7FEFF 	 bl plus39V_stop
 998:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 4921              	 .loc 3 998 0
 4922 00ac 164B     	 ldr r3,.L206+40
 4923 00ae 0022     	 mov r2,#0
 4924 00b0 1A70     	 strb r2,[r3]
 999:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 4925              	 .loc 3 999 0
 4926 00b2 164B     	 ldr r3,.L206+44
 4927 00b4 181C     	 mov r0,r3
 4928 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4929 00ba 0FE0     	 b .L199
 4930              	.L205:
1000:../samuel/samuel_io.c ****      	     }
1001:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 4931              	 .loc 3 1001 0
 4932 00bc 084B     	 ldr r3,.L206
 4933 00be 1A88     	 ldrh r2,[r3]
 4934 00c0 BF23     	 mov r3,#191
 4935 00c2 1B01     	 lsl r3,r3,#4
 4936 00c4 9A42     	 cmp r2,r3
 4937 00c6 09D9     	 bls .L199
1002:../samuel/samuel_io.c ****  			 {
1003:../samuel/samuel_io.c ****      	     plus39V_start();
 4938              	 .loc 3 1003 0
 4939 00c8 FFF7FEFF 	 bl plus39V_start
1004:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 4940              	 .loc 3 1004 0
 4941 00cc 0E4B     	 ldr r3,.L206+40
 4942 00ce 1B78     	 ldrb r3,[r3]
 4943 00d0 002B     	 cmp r3,#0
 4944 00d2 03D1     	 bne .L199
1005:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 4945              	 .loc 3 1005 0
 4946 00d4 0D4B     	 ldr r3,.L206+44
 4947 00d6 181C     	 mov r0,r3
 4948 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4949              	.L199:
1006:../samuel/samuel_io.c ****  			 }
1007:../samuel/samuel_io.c ****       }
1008:../samuel/samuel_io.c **** 
1009:../samuel/samuel_io.c **** 
1010:../samuel/samuel_io.c ****    }
 4950              	 .loc 3 1010 0
 4951 00dc BD46     	 mov sp,r7
 4952              	 
 4953 00de 80BD     	 pop {r7,pc}
 4954              	.L207:
 4955              	 .align 2
 4956              	.L206:
 4957 00e0 00000000 	 .word resultA2
 4958 00e4 00000000 	 .word resultAalt
 4959 00e8 00000000 	 .word resultB2
 4960 00ec 00000000 	 .word resultBalt
 4961 00f0 00000000 	 .word resultC2
 4962 00f4 00000000 	 .word resultCalt
 4963 00f8 00000000 	 .word resultD2
 4964 00fc 00000000 	 .word resultDalt
 4965 0100 00000000 	 .word adc_ready20m
 4966 0104 9F0B0000 	 .word 2975
 4967 0108 00000000 	 .word B_nextLedOff
 4968 010c 00000000 	 .word VCC_LED_shtdwn
 4969              	 .cfi_endproc
 4970              	.LFE337:
 4972              	 .section .text.firstuartBack,"ax",%progbits
 4973              	 .align 2
 4974              	 .global firstuartBack
 4975              	 .code 16
 4976              	 .thumb_func
 4978              	firstuartBack:
 4979              	.LFB338:
1011:../samuel/samuel_io.c ****   //------------------------------
1012:../samuel/samuel_io.c **** 
1013:../samuel/samuel_io.c ****    void firstuartBack (void) //
1014:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 4980              	 .loc 3 1014 0
 4981              	 .cfi_startproc
 4982 0000 98B5     	 push {r3,r4,r7,lr}
 4983              	.LCFI117:
 4984              	 .cfi_def_cfa_offset 16
 4985              	 .cfi_offset 3,-16
 4986              	 .cfi_offset 4,-12
 4987              	 .cfi_offset 7,-8
 4988              	 .cfi_offset 14,-4
 4989 0002 00AF     	 add r7,sp,#0
 4990              	.LCFI118:
 4991              	 .cfi_def_cfa_register 7
 4992              	 .loc 3 1014 0
 4993 0004 174B     	 ldr r3,.L210
 4994 0006 1B78     	 ldrb r3,[r3]
 4995 0008 002B     	 cmp r3,#0
 4996 000a 29D1     	 bne .L208
1015:../samuel/samuel_io.c ****    	   {
1016:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 4997              	 .loc 3 1016 0
 4998 000c FFF7FEFF 	 bl new_data_HalloBack
1017:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 4999              	 .loc 3 1017 0
 5000 0010 154B     	 ldr r3,.L210+4
 5001 0012 3022     	 mov r2,#48
 5002 0014 5A71     	 strb r2,[r3,#5]
1018:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 5003              	 .loc 3 1018 0
 5004 0016 154B     	 ldr r3,.L210+8
 5005 0018 1B88     	 ldrh r3,[r3]
 5006 001a 1B0A     	 lsr r3,r3,#8
 5007 001c 9BB2     	 uxth r3,r3
 5008 001e DAB2     	 uxtb r2,r3
 5009 0020 114B     	 ldr r3,.L210+4
 5010 0022 9A71     	 strb r2,[r3,#6]
1019:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 5011              	 .loc 3 1019 0
 5012 0024 114B     	 ldr r3,.L210+8
 5013 0026 1B88     	 ldrh r3,[r3]
 5014 0028 DAB2     	 uxtb r2,r3
 5015 002a 0F4B     	 ldr r3,.L210+4
 5016 002c DA71     	 strb r2,[r3,#7]
1020:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 5017              	 .loc 3 1020 0
 5018 002e 104B     	 ldr r3,.L210+12
 5019 0030 1B88     	 ldrh r3,[r3]
 5020 0032 1B0A     	 lsr r3,r3,#8
 5021 0034 9BB2     	 uxth r3,r3
 5022 0036 DAB2     	 uxtb r2,r3
 5023 0038 0B4B     	 ldr r3,.L210+4
 5024 003a 1A72     	 strb r2,[r3,#8]
1021:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 5025              	 .loc 3 1021 0
 5026 003c 0C4B     	 ldr r3,.L210+12
 5027 003e 1B88     	 ldrh r3,[r3]
 5028 0040 DAB2     	 uxtb r2,r3
 5029 0042 094B     	 ldr r3,.L210+4
 5030 0044 5A72     	 strb r2,[r3,#9]
1022:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 5031              	 .loc 3 1022 0
 5032 0046 0B4B     	 ldr r3,.L210+16
 5033 0048 1B78     	 ldrb r3,[r3]
 5034 004a 1C1C     	 mov r4,r3
 5035 004c 0A4A     	 ldr r2,.L210+20
 5036 004e 064B     	 ldr r3,.L210+4
 5037 0050 101C     	 mov r0,r2
 5038 0052 191C     	 mov r1,r3
 5039 0054 221C     	 mov r2,r4
 5040 0056 FFF7FEFF 	 bl UART_Transmit
1023:../samuel/samuel_io.c ****    	   B_first_uart=1;
 5041              	 .loc 3 1023 0
 5042 005a 024B     	 ldr r3,.L210
 5043 005c 0122     	 mov r2,#1
 5044 005e 1A70     	 strb r2,[r3]
 5045              	.L208:
1024:../samuel/samuel_io.c ****    	   }
1025:../samuel/samuel_io.c ****    }
 5046              	 .loc 3 1025 0
 5047 0060 BD46     	 mov sp,r7
 5048              	 
 5049 0062 98BD     	 pop {r3,r4,r7,pc}
 5050              	.L211:
 5051              	 .align 2
 5052              	.L210:
 5053 0064 00000000 	 .word B_first_uart
 5054 0068 00000000 	 .word new_data
 5055 006c 00000000 	 .word Ser_NrH
 5056 0070 00000000 	 .word Ser_NrL
 5057 0074 00000000 	 .word transmit_buf_size
 5058 0078 00000000 	 .word UART_1
 5059              	 .cfi_endproc
 5060              	.LFE338:
 5062              	 .text
 5063              	.Letext0:
 5064              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5065              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5066              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 5067              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc/xmc1_gpio.h"
 5068              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc/xmc_usic.h"
 5069              	 .file 9 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc/xmc_uart.h"
 5070              	 .file 10 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/UART/uart.h"
 5071              	 .file 11 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 5072              	 .file 12 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc/xmc_vadc.h"
 5073              	 .file 13 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 5074              	 .file 14 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/XMCLib/inc/xmc_bccu.h"
 5075              	 .file 15 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 5076              	 .file 16 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIM_BCCU/dim_bccu.h"
 5077              	 .file 17 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 5078              	 .file 18 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 5079              	 .file 19 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 5080              	 .file 20 "../samuel/samuel_io.h"
 5081              	 .file 21 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5082              	 .file 22 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/UART/uart_extern.h"
 5083              	 .file 23 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 5084              	 .file 24 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 5085              	 .file 25 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 5086              	 .file 26 "C:/DAVEv4-64Bit/work/Demo_7_Mix/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4551   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:4978   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:781    .text.lightprog01:0000021c $d
    {standard input}:789    .text.light_aus:00000000 $t
    {standard input}:794    .text.light_aus:00000000 light_aus
    {standard input}:4307   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:4070   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:848    .text.light_aus:00000048 $d
    {standard input}:858    .text.analog_start:00000000 $t
    {standard input}:863    .text.analog_start:00000000 analog_start
    {standard input}:883    .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:888    .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:908    .text.new_data_fill:00000000 $t
    {standard input}:913    .text.new_data_fill:00000000 new_data_fill
    {standard input}:980    .text.new_data_fill:00000050 $d
    {standard input}:986    .text.new_data_unbekanntBack:00000000 $t
    {standard input}:991    .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:1060   .text.new_data_unbekanntBack:00000054 $d
    {standard input}:1067   .text.new_data_BroadcastBack:00000000 $t
    {standard input}:1072   .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:1153   .text.new_data_BroadcastBack:0000006c $d
    {standard input}:1162   .text.new_data_analog1Back:00000000 $t
    {standard input}:1167   .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1248   .text.new_data_analog1Back:0000006c $d
    {standard input}:1257   .text.new_data_analog2Back:00000000 $t
    {standard input}:1262   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1343   .text.new_data_analog2Back:0000006c $d
    {standard input}:1352   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1357   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1438   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1447   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1452   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1543   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1554   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1559   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1640   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1649   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1654   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1735   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1744   .text.new_data_HalloBack:00000000 $t
    {standard input}:1749   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1818   .text.new_data_HalloBack:00000054 $d
    {standard input}:1825   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:1830   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:1916   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:1926   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:1931   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:2040   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:2051   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:2056   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:2147   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:2157   .text.new_data_SerNrBack:00000000 $t
    {standard input}:2162   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2243   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2252   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2257   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2394   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2402   .text.clearEpromBuffer:00000000 $t
    {standard input}:2407   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2504   .text.clearEpromBuffer:00000080 $d
    {standard input}:2512   .text.fillEpromBuffer:00000000 $t
    {standard input}:2517   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2563   .text.fillEpromBuffer:00000034 $d
    {standard input}:2569   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2574   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2622   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2628   .text.readAllEEprom:00000000 $t
    {standard input}:2633   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:2873   .text.readAllEEprom:00000194 $d
    {standard input}:2897   .text.readSerNrEEprom:00000000 $t
    {standard input}:2902   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:2953   .text.readSerNrEEprom:00000044 $d
    {standard input}:2960   .text.readNodeIdEEprom:00000000 $t
    {standard input}:2965   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:3016   .text.readNodeIdEEprom:00000044 $d
    {standard input}:3023   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:3028   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:3079   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:3086   .text.read_off_light_EEprom:00000000 $t
    {standard input}:3091   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:3142   .text.read_off_light_EEprom:00000044 $d
    {standard input}:3149   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:3154   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3223   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3231   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3236   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3305   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3313   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3318   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3387   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3395   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3400   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3469   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3477   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3482   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3551   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3559   .text.sysiniValueB1:00000000 $t
    {standard input}:3564   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3629   .text.sysiniValueB1:00000050 $d
    {standard input}:3645   .text.sysiniValueB2:00000000 $t
    {standard input}:3650   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3712   .text.sysiniValueB2:0000004c $d
    {standard input}:3728   .text.sysiniValueB4:00000000 $t
    {standard input}:3733   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:3845   .text.sysiniValueB4:000000a0 $d
    {standard input}:3867   .text.sysiniValueB5:00000000 $t
    {standard input}:3872   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:3927   .text.sysiniValueB5:00000040 $d
    {standard input}:3943   .text.bcuInit:00000000 $t
    {standard input}:3948   .text.bcuInit:00000000 bcuInit
    {standard input}:3971   .rodata.bcuInit:00000000 $d
    {standard input}:4050   .text.bcuInit:0000006c $d
    {standard input}:4065   .text.bcuUebergabe:00000000 $t
    {standard input}:4153   .text.bcuUebergabe:00000088 $d
    {standard input}:4169   .text.bcuAktBerechnung:00000000 $t
    {standard input}:4174   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4287   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4302   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4425   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4440   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4445   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4537   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4546   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4714   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4725   .text.plus39V_stop:00000000 $t
    {standard input}:4730   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4750   .text.plus39V_start:00000000 $t
    {standard input}:4755   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4775   .text.Time1msec:00000000 $t
    {standard input}:4780   .text.Time1msec:00000000 Time1msec
    {standard input}:4803   .text.Time1msec:00000010 $d
    {standard input}:4808   .text.Time20msec:00000000 $t
    {standard input}:4813   .text.Time20msec:00000000 Time20msec
    {standard input}:4957   .text.Time20msec:000000e0 $d
    {standard input}:4973   .text.firstuartBack:00000000 $t
    {standard input}:5053   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
