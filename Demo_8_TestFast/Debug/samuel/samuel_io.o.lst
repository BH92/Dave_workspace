   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 5C4B     	 ldr r3,.L19
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c 5A4B     	 ldr r3,.L19
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 46 )  //ende
 469              	 .loc 3 119 0
 470 0010 594B     	 ldr r3,.L19
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 2E2B     	 cmp r3,#46
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 574B     	 ldr r3,.L19
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e A9E0     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 554B     	 ldr r3,.L19
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 1CD1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 485              	 .loc 3 125 0
 486 0028 544B     	 ldr r3,.L19+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c 0022     	 mov r2,#0
 489 002e 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 490              	 .loc 3 126 0
 491 0030 524B     	 ldr r3,.L19+4
 492 0032 DB6A     	 ldr r3,[r3,#44]
 493 0034 0022     	 mov r2,#0
 494 0036 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 495              	 .loc 3 127 0
 496 0038 504B     	 ldr r3,.L19+4
 497 003a DB6A     	 ldr r3,[r3,#44]
 498 003c 0022     	 mov r2,#0
 499 003e 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 500              	 .loc 3 128 0
 501 0040 4E4B     	 ldr r3,.L19+4
 502 0042 DB6A     	 ldr r3,[r3,#44]
 503 0044 0022     	 mov r2,#0
 504 0046 DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 505              	 .loc 3 129 0
 506 0048 4C4B     	 ldr r3,.L19+4
 507 004a 181C     	 mov r0,r3
 508 004c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394); //394 
 509              	 .loc 3 130 0
 510 0050 4A4A     	 ldr r2,.L19+4
 511 0052 E523     	 mov r3,#229
 512 0054 9B00     	 lsl r3,r3,#2
 513 0056 101C     	 mov r0,r2
 514 0058 0021     	 mov r1,#0
 515 005a 1A1C     	 mov r2,r3
 516 005c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 517 0060 88E0     	 b .L12
 518              	.L15:
 131:../samuel/samuel_io.c **** 	 			 }
 132:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 30 )
 519              	 .loc 3 132 0
 520 0062 454B     	 ldr r3,.L19
 521 0064 1B88     	 ldrh r3,[r3]
 522 0066 1E2B     	 cmp r3,#30
 523 0068 20D1     	 bne .L16
 133:../samuel/samuel_io.c **** 	 			 {
 134:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 4000;
 524              	 .loc 3 134 0
 525 006a 444B     	 ldr r3,.L19+4
 526 006c DB6A     	 ldr r3,[r3,#44]
 527 006e FA22     	 mov r2,#250
 528 0070 1201     	 lsl r2,r2,#4
 529 0072 1A80     	 strh r2,[r3]
 135:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4000;
 530              	 .loc 3 135 0
 531 0074 414B     	 ldr r3,.L19+4
 532 0076 DB6A     	 ldr r3,[r3,#44]
 533 0078 FA22     	 mov r2,#250
 534 007a 1201     	 lsl r2,r2,#4
 535 007c 5A80     	 strh r2,[r3,#2]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 4000;
 536              	 .loc 3 136 0
 537 007e 3F4B     	 ldr r3,.L19+4
 538 0080 DB6A     	 ldr r3,[r3,#44]
 539 0082 FA22     	 mov r2,#250
 540 0084 1201     	 lsl r2,r2,#4
 541 0086 9A80     	 strh r2,[r3,#4]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4000;
 542              	 .loc 3 137 0
 543 0088 3C4B     	 ldr r3,.L19+4
 544 008a DB6A     	 ldr r3,[r3,#44]
 545 008c FA22     	 mov r2,#250
 546 008e 1201     	 lsl r2,r2,#4
 547 0090 DA80     	 strh r2,[r3,#6]
 138:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 548              	 .loc 3 138 0
 549 0092 3A4B     	 ldr r3,.L19+4
 550 0094 181C     	 mov r0,r3
 551 0096 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 139:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x1E8); //1E8 = 8
 552              	 .loc 3 139 0
 553 009a 384A     	 ldr r2,.L19+4
 554 009c F423     	 mov r3,#244
 555 009e 5B00     	 lsl r3,r3,#1
 556 00a0 101C     	 mov r0,r2
 557 00a2 0021     	 mov r1,#0
 558 00a4 1A1C     	 mov r2,r3
 559 00a6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 560 00aa 63E0     	 b .L12
 561              	.L16:
 140:../samuel/samuel_io.c **** 	 			 }
 141:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 35 )
 562              	 .loc 3 141 0
 563 00ac 324B     	 ldr r3,.L19
 564 00ae 1B88     	 ldrh r3,[r3]
 565 00b0 232B     	 cmp r3,#35
 566 00b2 1CD1     	 bne .L17
 142:../samuel/samuel_io.c **** 	 			 {
 143:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 2000;
 567              	 .loc 3 143 0
 568 00b4 314B     	 ldr r3,.L19+4
 569 00b6 DB6A     	 ldr r3,[r3,#44]
 570 00b8 FA22     	 mov r2,#250
 571 00ba D200     	 lsl r2,r2,#3
 572 00bc 1A80     	 strh r2,[r3]
 144:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 573              	 .loc 3 144 0
 574 00be 2F4B     	 ldr r3,.L19+4
 575 00c0 DB6A     	 ldr r3,[r3,#44]
 576 00c2 0022     	 mov r2,#0
 577 00c4 5A80     	 strh r2,[r3,#2]
 145:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 2000;
 578              	 .loc 3 145 0
 579 00c6 2D4B     	 ldr r3,.L19+4
 580 00c8 DB6A     	 ldr r3,[r3,#44]
 581 00ca FA22     	 mov r2,#250
 582 00cc D200     	 lsl r2,r2,#3
 583 00ce 9A80     	 strh r2,[r3,#4]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 584              	 .loc 3 146 0
 585 00d0 2A4B     	 ldr r3,.L19+4
 586 00d2 DB6A     	 ldr r3,[r3,#44]
 587 00d4 0022     	 mov r2,#0
 588 00d6 DA80     	 strh r2,[r3,#6]
 147:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 589              	 .loc 3 147 0
 590 00d8 284B     	 ldr r3,.L19+4
 591 00da 181C     	 mov r0,r3
 592 00dc FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 148:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0xB7); //B7 = 3se
 593              	 .loc 3 148 0
 594 00e0 264B     	 ldr r3,.L19+4
 595 00e2 181C     	 mov r0,r3
 596 00e4 0021     	 mov r1,#0
 597 00e6 B722     	 mov r2,#183
 598 00e8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 599 00ec 42E0     	 b .L12
 600              	.L17:
 149:../samuel/samuel_io.c **** 	 			 }
 150:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 40 )
 601              	 .loc 3 150 0
 602 00ee 224B     	 ldr r3,.L19
 603 00f0 1B88     	 ldrh r3,[r3]
 604 00f2 282B     	 cmp r3,#40
 605 00f4 1CD1     	 bne .L18
 151:../samuel/samuel_io.c **** 	 			 {
 152:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 606              	 .loc 3 152 0
 607 00f6 214B     	 ldr r3,.L19+4
 608 00f8 DB6A     	 ldr r3,[r3,#44]
 609 00fa 0022     	 mov r2,#0
 610 00fc 1A80     	 strh r2,[r3]
 153:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 2000;
 611              	 .loc 3 153 0
 612 00fe 1F4B     	 ldr r3,.L19+4
 613 0100 DB6A     	 ldr r3,[r3,#44]
 614 0102 FA22     	 mov r2,#250
 615 0104 D200     	 lsl r2,r2,#3
 616 0106 5A80     	 strh r2,[r3,#2]
 154:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 617              	 .loc 3 154 0
 618 0108 1C4B     	 ldr r3,.L19+4
 619 010a DB6A     	 ldr r3,[r3,#44]
 620 010c 0022     	 mov r2,#0
 621 010e 9A80     	 strh r2,[r3,#4]
 155:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 2000;
 622              	 .loc 3 155 0
 623 0110 1A4B     	 ldr r3,.L19+4
 624 0112 DB6A     	 ldr r3,[r3,#44]
 625 0114 FA22     	 mov r2,#250
 626 0116 D200     	 lsl r2,r2,#3
 627 0118 DA80     	 strh r2,[r3,#6]
 156:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 628              	 .loc 3 156 0
 629 011a 184B     	 ldr r3,.L19+4
 630 011c 181C     	 mov r0,r3
 631 011e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 157:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0xB7); //B7 = 3se
 632              	 .loc 3 157 0
 633 0122 164B     	 ldr r3,.L19+4
 634 0124 181C     	 mov r0,r3
 635 0126 0021     	 mov r1,#0
 636 0128 B722     	 mov r2,#183
 637 012a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 638 012e 21E0     	 b .L12
 639              	.L18:
 158:../samuel/samuel_io.c **** 	 			 }
 159:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 45 )
 640              	 .loc 3 159 0
 641 0130 114B     	 ldr r3,.L19
 642 0132 1B88     	 ldrh r3,[r3]
 643 0134 2D2B     	 cmp r3,#45
 644 0136 1DD1     	 bne .L12
 160:../samuel/samuel_io.c **** 	 			 {
 161:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 2000;
 645              	 .loc 3 161 0
 646 0138 104B     	 ldr r3,.L19+4
 647 013a DB6A     	 ldr r3,[r3,#44]
 648 013c FA22     	 mov r2,#250
 649 013e D200     	 lsl r2,r2,#3
 650 0140 1A80     	 strh r2,[r3]
 162:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 2000;
 651              	 .loc 3 162 0
 652 0142 0E4B     	 ldr r3,.L19+4
 653 0144 DB6A     	 ldr r3,[r3,#44]
 654 0146 FA22     	 mov r2,#250
 655 0148 D200     	 lsl r2,r2,#3
 656 014a 5A80     	 strh r2,[r3,#2]
 163:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 2000;
 657              	 .loc 3 163 0
 658 014c 0B4B     	 ldr r3,.L19+4
 659 014e DB6A     	 ldr r3,[r3,#44]
 660 0150 FA22     	 mov r2,#250
 661 0152 D200     	 lsl r2,r2,#3
 662 0154 9A80     	 strh r2,[r3,#4]
 164:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 2000;
 663              	 .loc 3 164 0
 664 0156 094B     	 ldr r3,.L19+4
 665 0158 DB6A     	 ldr r3,[r3,#44]
 666 015a FA22     	 mov r2,#250
 667 015c D200     	 lsl r2,r2,#3
 668 015e DA80     	 strh r2,[r3,#6]
 165:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 669              	 .loc 3 165 0
 670 0160 064B     	 ldr r3,.L19+4
 671 0162 181C     	 mov r0,r3
 672 0164 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 166:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0xB7); //B7 = 3se
 673              	 .loc 3 166 0
 674 0168 044B     	 ldr r3,.L19+4
 675 016a 181C     	 mov r0,r3
 676 016c 0021     	 mov r1,#0
 677 016e B722     	 mov r2,#183
 678 0170 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 679              	.L12:
 167:../samuel/samuel_io.c **** 	 			 }
 168:../samuel/samuel_io.c **** 				 else
 169:../samuel/samuel_io.c **** 
 170:../samuel/samuel_io.c **** 				 {
 171:../samuel/samuel_io.c **** 
 172:../samuel/samuel_io.c **** 				 }
 173:../samuel/samuel_io.c **** 
 174:../samuel/samuel_io.c ****    }
 680              	 .loc 3 174 0
 681 0174 BD46     	 mov sp,r7
 682              	 
 683 0176 80BD     	 pop {r7,pc}
 684              	.L20:
 685              	 .align 2
 686              	.L19:
 687 0178 00000000 	 .word zahler_lightprog01
 688 017c 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 689              	 .cfi_endproc
 690              	.LFE292:
 692              	 .section .text.light_aus,"ax",%progbits
 693              	 .align 2
 694              	 .global light_aus
 695              	 .code 16
 696              	 .thumb_func
 698              	light_aus:
 699              	.LFB293:
 175:../samuel/samuel_io.c ****   //------------------------------------------
 176:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 177:../samuel/samuel_io.c ****    {
 700              	 .loc 3 177 0
 701              	 .cfi_startproc
 702 0000 80B5     	 push {r7,lr}
 703              	.LCFI18:
 704              	 .cfi_def_cfa_offset 8
 705              	 .cfi_offset 7,-8
 706              	 .cfi_offset 14,-4
 707 0002 00AF     	 add r7,sp,#0
 708              	.LCFI19:
 709              	 .cfi_def_cfa_register 7
 178:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 710              	 .loc 3 178 0
 711 0004 104B     	 ldr r3,.L22
 712 0006 1A88     	 ldrh r2,[r3]
 713 0008 104B     	 ldr r3,.L22+4
 714 000a 1A80     	 strh r2,[r3]
 179:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 715              	 .loc 3 179 0
 716 000c 0E4B     	 ldr r3,.L22
 717 000e 1A88     	 ldrh r2,[r3]
 718 0010 0F4B     	 ldr r3,.L22+8
 719 0012 1A80     	 strh r2,[r3]
 180:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 720              	 .loc 3 180 0
 721 0014 0C4B     	 ldr r3,.L22
 722 0016 1A88     	 ldrh r2,[r3]
 723 0018 0E4B     	 ldr r3,.L22+12
 724 001a 1A80     	 strh r2,[r3]
 181:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 725              	 .loc 3 181 0
 726 001c 0A4B     	 ldr r3,.L22
 727 001e 1A88     	 ldrh r2,[r3]
 728 0020 0D4B     	 ldr r3,.L22+16
 729 0022 1A80     	 strh r2,[r3]
 182:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 730              	 .loc 3 182 0
 731 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 183:../samuel/samuel_io.c **** 	  bcuUebergabe();
 732              	 .loc 3 183 0
 733 0028 FFF7FEFF 	 bl bcuUebergabe
 184:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 185:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 734              	 .loc 3 185 0
 735 002c 0B4A     	 ldr r2,.L22+20
 736 002e 8023     	 mov r3,#128
 737 0030 1B01     	 lsl r3,r3,#4
 738 0032 101C     	 mov r0,r2
 739 0034 191C     	 mov r1,r3
 740 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 186:../samuel/samuel_io.c **** 	     // Start Dimming
 187:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 741              	 .loc 3 187 0
 742 003a 084B     	 ldr r3,.L22+20
 743 003c 181C     	 mov r0,r3
 744 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 188:../samuel/samuel_io.c **** 
 189:../samuel/samuel_io.c ****    }
 745              	 .loc 3 189 0
 746 0042 BD46     	 mov sp,r7
 747              	 
 748 0044 80BD     	 pop {r7,pc}
 749              	.L23:
 750 0046 C046     	 .align 2
 751              	.L22:
 752 0048 00000000 	 .word linearwalk_gen
 753 004c 00000000 	 .word linearwalk_ww1
 754 0050 00000000 	 .word linearwalk_ww2
 755 0054 00000000 	 .word linearwalk_cw1
 756 0058 00000000 	 .word linearwalk_cw2
 757 005c 00000000 	 .word DIM_BCCU_0
 758              	 .cfi_endproc
 759              	.LFE293:
 761              	 .section .text.analog_start,"ax",%progbits
 762              	 .align 2
 763              	 .global analog_start
 764              	 .code 16
 765              	 .thumb_func
 767              	analog_start:
 768              	.LFB294:
 190:../samuel/samuel_io.c ****   //------------------------------------------
 191:../samuel/samuel_io.c **** 
 192:../samuel/samuel_io.c **** 
 193:../samuel/samuel_io.c **** 
 194:../samuel/samuel_io.c ****  void analog_start (void)
 195:../samuel/samuel_io.c ****   {
 769              	 .loc 3 195 0
 770              	 .cfi_startproc
 771 0000 80B5     	 push {r7,lr}
 772              	.LCFI20:
 773              	 .cfi_def_cfa_offset 8
 774              	 .cfi_offset 7,-8
 775              	 .cfi_offset 14,-4
 776 0002 00AF     	 add r7,sp,#0
 777              	.LCFI21:
 778              	 .cfi_def_cfa_register 7
 196:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 197:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 198:../samuel/samuel_io.c **** 
 199:../samuel/samuel_io.c ****   }
 779              	 .loc 3 199 0
 780 0004 BD46     	 mov sp,r7
 781              	 
 782 0006 80BD     	 pop {r7,pc}
 783              	 .cfi_endproc
 784              	.LFE294:
 786              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 787              	 .align 2
 788              	 .global SCU_0_IRQHandler
 789              	 .code 16
 790              	 .thumb_func
 792              	SCU_0_IRQHandler:
 793              	.LFB295:
 200:../samuel/samuel_io.c **** 
 201:../samuel/samuel_io.c **** 
 202:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 203:../samuel/samuel_io.c ****   {
 794              	 .loc 3 203 0
 795              	 .cfi_startproc
 796 0000 80B5     	 push {r7,lr}
 797              	.LCFI22:
 798              	 .cfi_def_cfa_offset 8
 799              	 .cfi_offset 7,-8
 800              	 .cfi_offset 14,-4
 801 0002 00AF     	 add r7,sp,#0
 802              	.LCFI23:
 803              	 .cfi_def_cfa_register 7
 204:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 205:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 206:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 207:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 208:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 209:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 210:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 211:../samuel/samuel_io.c ****   }
 804              	 .loc 3 211 0
 805 0004 BD46     	 mov sp,r7
 806              	 
 807 0006 80BD     	 pop {r7,pc}
 808              	 .cfi_endproc
 809              	.LFE295:
 811              	 .section .text.new_data_fill,"ax",%progbits
 812              	 .align 2
 813              	 .global new_data_fill
 814              	 .code 16
 815              	 .thumb_func
 817              	new_data_fill:
 818              	.LFB296:
 212:../samuel/samuel_io.c **** 
 213:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 214:../samuel/samuel_io.c ****  {
 819              	 .loc 3 214 0
 820              	 .cfi_startproc
 821 0000 80B5     	 push {r7,lr}
 822              	.LCFI24:
 823              	 .cfi_def_cfa_offset 8
 824              	 .cfi_offset 7,-8
 825              	 .cfi_offset 14,-4
 826 0002 00AF     	 add r7,sp,#0
 827              	.LCFI25:
 828              	 .cfi_def_cfa_register 7
 215:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 829              	 .loc 3 215 0
 830 0004 124B     	 ldr r3,.L27
 831 0006 0B22     	 mov r2,#11
 832 0008 1A70     	 strb r2,[r3]
 216:../samuel/samuel_io.c **** 	 new_data[0]=1;
 833              	 .loc 3 216 0
 834 000a 124B     	 ldr r3,.L27+4
 835 000c 0122     	 mov r2,#1
 836 000e 1A70     	 strb r2,[r3]
 217:../samuel/samuel_io.c **** 	 new_data[1]=2;
 837              	 .loc 3 217 0
 838 0010 104B     	 ldr r3,.L27+4
 839 0012 0222     	 mov r2,#2
 840 0014 5A70     	 strb r2,[r3,#1]
 218:../samuel/samuel_io.c **** 	 new_data[2]=3;
 841              	 .loc 3 218 0
 842 0016 0F4B     	 ldr r3,.L27+4
 843 0018 0322     	 mov r2,#3
 844 001a 9A70     	 strb r2,[r3,#2]
 219:../samuel/samuel_io.c **** 	 new_data[3]=4;
 845              	 .loc 3 219 0
 846 001c 0D4B     	 ldr r3,.L27+4
 847 001e 0422     	 mov r2,#4
 848 0020 DA70     	 strb r2,[r3,#3]
 220:../samuel/samuel_io.c **** 	 new_data[4]=5;
 849              	 .loc 3 220 0
 850 0022 0C4B     	 ldr r3,.L27+4
 851 0024 0522     	 mov r2,#5
 852 0026 1A71     	 strb r2,[r3,#4]
 221:../samuel/samuel_io.c **** 	 new_data[5]=6;
 853              	 .loc 3 221 0
 854 0028 0A4B     	 ldr r3,.L27+4
 855 002a 0622     	 mov r2,#6
 856 002c 5A71     	 strb r2,[r3,#5]
 222:../samuel/samuel_io.c ****  	 new_data[6]=7;
 857              	 .loc 3 222 0
 858 002e 094B     	 ldr r3,.L27+4
 859 0030 0722     	 mov r2,#7
 860 0032 9A71     	 strb r2,[r3,#6]
 223:../samuel/samuel_io.c ****  	 new_data[7]=8;
 861              	 .loc 3 223 0
 862 0034 074B     	 ldr r3,.L27+4
 863 0036 0822     	 mov r2,#8
 864 0038 DA71     	 strb r2,[r3,#7]
 224:../samuel/samuel_io.c ****  	 new_data[8]=9;
 865              	 .loc 3 224 0
 866 003a 064B     	 ldr r3,.L27+4
 867 003c 0922     	 mov r2,#9
 868 003e 1A72     	 strb r2,[r3,#8]
 225:../samuel/samuel_io.c ****  	 new_data[9]='a';
 869              	 .loc 3 225 0
 870 0040 044B     	 ldr r3,.L27+4
 871 0042 6122     	 mov r2,#97
 872 0044 5A72     	 strb r2,[r3,#9]
 226:../samuel/samuel_io.c **** 	 new_data[10]='b';
 873              	 .loc 3 226 0
 874 0046 034B     	 ldr r3,.L27+4
 875 0048 6222     	 mov r2,#98
 876 004a 9A72     	 strb r2,[r3,#10]
 227:../samuel/samuel_io.c ****  }
 877              	 .loc 3 227 0
 878 004c BD46     	 mov sp,r7
 879              	 
 880 004e 80BD     	 pop {r7,pc}
 881              	.L28:
 882              	 .align 2
 883              	.L27:
 884 0050 00000000 	 .word transmit_buf_size
 885 0054 00000000 	 .word new_data
 886              	 .cfi_endproc
 887              	.LFE296:
 889              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 890              	 .align 2
 891              	 .global new_data_unbekanntBack
 892              	 .code 16
 893              	 .thumb_func
 895              	new_data_unbekanntBack:
 896              	.LFB297:
 228:../samuel/samuel_io.c **** 
 229:../samuel/samuel_io.c **** 
 230:../samuel/samuel_io.c **** 
 231:../samuel/samuel_io.c **** 
 232:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 233:../samuel/samuel_io.c ****  {
 897              	 .loc 3 233 0
 898              	 .cfi_startproc
 899 0000 80B5     	 push {r7,lr}
 900              	.LCFI26:
 901              	 .cfi_def_cfa_offset 8
 902              	 .cfi_offset 7,-8
 903              	 .cfi_offset 14,-4
 904 0002 00AF     	 add r7,sp,#0
 905              	.LCFI27:
 906              	 .cfi_def_cfa_register 7
 234:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 907              	 .loc 3 234 0
 908 0004 134B     	 ldr r3,.L30
 909 0006 0B22     	 mov r2,#11
 910 0008 1A70     	 strb r2,[r3]
 235:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 911              	 .loc 3 235 0
 912 000a 134B     	 ldr r3,.L30+4
 913 000c 4C22     	 mov r2,#76
 914 000e 1A70     	 strb r2,[r3]
 236:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 915              	 .loc 3 236 0
 916 0010 114B     	 ldr r3,.L30+4
 917 0012 4922     	 mov r2,#73
 918 0014 5A70     	 strb r2,[r3,#1]
 237:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 919              	 .loc 3 237 0
 920 0016 104B     	 ldr r3,.L30+4
 921 0018 4E22     	 mov r2,#78
 922 001a 9A70     	 strb r2,[r3,#2]
 238:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 923              	 .loc 3 238 0
 924 001c 0F4B     	 ldr r3,.L30+8
 925 001e 1A78     	 ldrb r2,[r3]
 926 0020 0D4B     	 ldr r3,.L30+4
 927 0022 DA70     	 strb r2,[r3,#3]
 239:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 928              	 .loc 3 239 0
 929 0024 0B4B     	 ldr r3,.L30
 930 0026 1A78     	 ldrb r2,[r3]
 931 0028 0B4B     	 ldr r3,.L30+4
 932 002a 1A71     	 strb r2,[r3,#4]
 240:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 933              	 .loc 3 240 0
 934 002c 0A4B     	 ldr r3,.L30+4
 935 002e 3122     	 mov r2,#49
 936 0030 5A71     	 strb r2,[r3,#5]
 241:../samuel/samuel_io.c **** 	 new_data[6]='n';
 937              	 .loc 3 241 0
 938 0032 094B     	 ldr r3,.L30+4
 939 0034 6E22     	 mov r2,#110
 940 0036 9A71     	 strb r2,[r3,#6]
 242:../samuel/samuel_io.c **** 	 new_data[7]='o';
 941              	 .loc 3 242 0
 942 0038 074B     	 ldr r3,.L30+4
 943 003a 6F22     	 mov r2,#111
 944 003c DA71     	 strb r2,[r3,#7]
 243:../samuel/samuel_io.c **** 	 new_data[8]='n';
 945              	 .loc 3 243 0
 946 003e 064B     	 ldr r3,.L30+4
 947 0040 6E22     	 mov r2,#110
 948 0042 1A72     	 strb r2,[r3,#8]
 244:../samuel/samuel_io.c **** 	 new_data[9]='o';
 949              	 .loc 3 244 0
 950 0044 044B     	 ldr r3,.L30+4
 951 0046 6F22     	 mov r2,#111
 952 0048 5A72     	 strb r2,[r3,#9]
 245:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 953              	 .loc 3 245 0
 954 004a 034B     	 ldr r3,.L30+4
 955 004c FF22     	 mov r2,#255
 956 004e 9A72     	 strb r2,[r3,#10]
 246:../samuel/samuel_io.c ****  }
 957              	 .loc 3 246 0
 958 0050 BD46     	 mov sp,r7
 959              	 
 960 0052 80BD     	 pop {r7,pc}
 961              	.L31:
 962              	 .align 2
 963              	.L30:
 964 0054 00000000 	 .word transmit_buf_size
 965 0058 00000000 	 .word new_data
 966 005c 00000000 	 .word node_id
 967              	 .cfi_endproc
 968              	.LFE297:
 970              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 971              	 .align 2
 972              	 .global new_data_BroadcastBack
 973              	 .code 16
 974              	 .thumb_func
 976              	new_data_BroadcastBack:
 977              	.LFB298:
 247:../samuel/samuel_io.c **** 
 248:../samuel/samuel_io.c **** //------------------------------------------
 249:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 250:../samuel/samuel_io.c ****  {
 978              	 .loc 3 250 0
 979              	 .cfi_startproc
 980 0000 80B5     	 push {r7,lr}
 981              	.LCFI28:
 982              	 .cfi_def_cfa_offset 8
 983              	 .cfi_offset 7,-8
 984              	 .cfi_offset 14,-4
 985 0002 00AF     	 add r7,sp,#0
 986              	.LCFI29:
 987              	 .cfi_def_cfa_register 7
 251:../samuel/samuel_io.c **** 
 252:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 988              	 .loc 3 252 0
 989 0004 194B     	 ldr r3,.L33
 990 0006 0B22     	 mov r2,#11
 991 0008 1A70     	 strb r2,[r3]
 253:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 992              	 .loc 3 253 0
 993 000a 194B     	 ldr r3,.L33+4
 994 000c 4C22     	 mov r2,#76
 995 000e 1A70     	 strb r2,[r3]
 254:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 996              	 .loc 3 254 0
 997 0010 174B     	 ldr r3,.L33+4
 998 0012 4922     	 mov r2,#73
 999 0014 5A70     	 strb r2,[r3,#1]
 255:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1000              	 .loc 3 255 0
 1001 0016 164B     	 ldr r3,.L33+4
 1002 0018 4E22     	 mov r2,#78
 1003 001a 9A70     	 strb r2,[r3,#2]
 256:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1004              	 .loc 3 256 0
 1005 001c 154B     	 ldr r3,.L33+8
 1006 001e 1A78     	 ldrb r2,[r3]
 1007 0020 134B     	 ldr r3,.L33+4
 1008 0022 DA70     	 strb r2,[r3,#3]
 257:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1009              	 .loc 3 257 0
 1010 0024 114B     	 ldr r3,.L33
 1011 0026 1A78     	 ldrb r2,[r3]
 1012 0028 114B     	 ldr r3,.L33+4
 1013 002a 1A71     	 strb r2,[r3,#4]
 258:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 1014              	 .loc 3 258 0
 1015 002c 104B     	 ldr r3,.L33+4
 1016 002e 6F22     	 mov r2,#111
 1017 0030 5A71     	 strb r2,[r3,#5]
 259:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 1018              	 .loc 3 259 0
 1019 0032 114B     	 ldr r3,.L33+12
 1020 0034 1B88     	 ldrh r3,[r3]
 1021 0036 1B0A     	 lsr r3,r3,#8
 1022 0038 9BB2     	 uxth r3,r3
 1023 003a DAB2     	 uxtb r2,r3
 1024 003c 0C4B     	 ldr r3,.L33+4
 1025 003e 9A71     	 strb r2,[r3,#6]
 260:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 1026              	 .loc 3 260 0
 1027 0040 0D4B     	 ldr r3,.L33+12
 1028 0042 1B88     	 ldrh r3,[r3]
 1029 0044 DAB2     	 uxtb r2,r3
 1030 0046 0A4B     	 ldr r3,.L33+4
 1031 0048 DA71     	 strb r2,[r3,#7]
 261:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 1032              	 .loc 3 261 0
 1033 004a 0C4B     	 ldr r3,.L33+16
 1034 004c 1B88     	 ldrh r3,[r3]
 1035 004e 1B0A     	 lsr r3,r3,#8
 1036 0050 9BB2     	 uxth r3,r3
 1037 0052 DAB2     	 uxtb r2,r3
 1038 0054 064B     	 ldr r3,.L33+4
 1039 0056 1A72     	 strb r2,[r3,#8]
 262:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 1040              	 .loc 3 262 0
 1041 0058 084B     	 ldr r3,.L33+16
 1042 005a 1B88     	 ldrh r3,[r3]
 1043 005c DAB2     	 uxtb r2,r3
 1044 005e 044B     	 ldr r3,.L33+4
 1045 0060 5A72     	 strb r2,[r3,#9]
 263:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1046              	 .loc 3 263 0
 1047 0062 034B     	 ldr r3,.L33+4
 1048 0064 FF22     	 mov r2,#255
 1049 0066 9A72     	 strb r2,[r3,#10]
 264:../samuel/samuel_io.c ****  }
 1050              	 .loc 3 264 0
 1051 0068 BD46     	 mov sp,r7
 1052              	 
 1053 006a 80BD     	 pop {r7,pc}
 1054              	.L34:
 1055              	 .align 2
 1056              	.L33:
 1057 006c 00000000 	 .word transmit_buf_size
 1058 0070 00000000 	 .word new_data
 1059 0074 00000000 	 .word node_id
 1060 0078 00000000 	 .word Ser_NrH
 1061 007c 00000000 	 .word Ser_NrL
 1062              	 .cfi_endproc
 1063              	.LFE298:
 1065              	 .section .text.new_data_analog1Back,"ax",%progbits
 1066              	 .align 2
 1067              	 .global new_data_analog1Back
 1068              	 .code 16
 1069              	 .thumb_func
 1071              	new_data_analog1Back:
 1072              	.LFB299:
 265:../samuel/samuel_io.c ****  //------------------------------------------
 266:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 267:../samuel/samuel_io.c ****  {
 1073              	 .loc 3 267 0
 1074              	 .cfi_startproc
 1075 0000 80B5     	 push {r7,lr}
 1076              	.LCFI30:
 1077              	 .cfi_def_cfa_offset 8
 1078              	 .cfi_offset 7,-8
 1079              	 .cfi_offset 14,-4
 1080 0002 00AF     	 add r7,sp,#0
 1081              	.LCFI31:
 1082              	 .cfi_def_cfa_register 7
 268:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1083              	 .loc 3 268 0
 1084 0004 194B     	 ldr r3,.L36
 1085 0006 0B22     	 mov r2,#11
 1086 0008 1A70     	 strb r2,[r3]
 269:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1087              	 .loc 3 269 0
 1088 000a 194B     	 ldr r3,.L36+4
 1089 000c 4C22     	 mov r2,#76
 1090 000e 1A70     	 strb r2,[r3]
 270:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1091              	 .loc 3 270 0
 1092 0010 174B     	 ldr r3,.L36+4
 1093 0012 4922     	 mov r2,#73
 1094 0014 5A70     	 strb r2,[r3,#1]
 271:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1095              	 .loc 3 271 0
 1096 0016 164B     	 ldr r3,.L36+4
 1097 0018 4E22     	 mov r2,#78
 1098 001a 9A70     	 strb r2,[r3,#2]
 272:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1099              	 .loc 3 272 0
 1100 001c 154B     	 ldr r3,.L36+8
 1101 001e 1A78     	 ldrb r2,[r3]
 1102 0020 134B     	 ldr r3,.L36+4
 1103 0022 DA70     	 strb r2,[r3,#3]
 273:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1104              	 .loc 3 273 0
 1105 0024 114B     	 ldr r3,.L36
 1106 0026 1A78     	 ldrb r2,[r3]
 1107 0028 114B     	 ldr r3,.L36+4
 1108 002a 1A71     	 strb r2,[r3,#4]
 274:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1109              	 .loc 3 274 0
 1110 002c 104B     	 ldr r3,.L36+4
 1111 002e 6122     	 mov r2,#97
 1112 0030 5A71     	 strb r2,[r3,#5]
 275:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1113              	 .loc 3 275 0
 1114 0032 114B     	 ldr r3,.L36+12
 1115 0034 1B88     	 ldrh r3,[r3]
 1116 0036 1B0A     	 lsr r3,r3,#8
 1117 0038 9BB2     	 uxth r3,r3
 1118 003a DAB2     	 uxtb r2,r3
 1119 003c 0C4B     	 ldr r3,.L36+4
 1120 003e 9A71     	 strb r2,[r3,#6]
 276:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1121              	 .loc 3 276 0
 1122 0040 0D4B     	 ldr r3,.L36+12
 1123 0042 1B88     	 ldrh r3,[r3]
 1124 0044 DAB2     	 uxtb r2,r3
 1125 0046 0A4B     	 ldr r3,.L36+4
 1126 0048 DA71     	 strb r2,[r3,#7]
 277:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1127              	 .loc 3 277 0
 1128 004a 0C4B     	 ldr r3,.L36+16
 1129 004c 1B88     	 ldrh r3,[r3]
 1130 004e 1B0A     	 lsr r3,r3,#8
 1131 0050 9BB2     	 uxth r3,r3
 1132 0052 DAB2     	 uxtb r2,r3
 1133 0054 064B     	 ldr r3,.L36+4
 1134 0056 1A72     	 strb r2,[r3,#8]
 278:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1135              	 .loc 3 278 0
 1136 0058 084B     	 ldr r3,.L36+16
 1137 005a 1B88     	 ldrh r3,[r3]
 1138 005c DAB2     	 uxtb r2,r3
 1139 005e 044B     	 ldr r3,.L36+4
 1140 0060 5A72     	 strb r2,[r3,#9]
 279:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1141              	 .loc 3 279 0
 1142 0062 034B     	 ldr r3,.L36+4
 1143 0064 FF22     	 mov r2,#255
 1144 0066 9A72     	 strb r2,[r3,#10]
 280:../samuel/samuel_io.c ****  }
 1145              	 .loc 3 280 0
 1146 0068 BD46     	 mov sp,r7
 1147              	 
 1148 006a 80BD     	 pop {r7,pc}
 1149              	.L37:
 1150              	 .align 2
 1151              	.L36:
 1152 006c 00000000 	 .word transmit_buf_size
 1153 0070 00000000 	 .word new_data
 1154 0074 00000000 	 .word node_id
 1155 0078 00000000 	 .word resultA2
 1156 007c 00000000 	 .word resultB2
 1157              	 .cfi_endproc
 1158              	.LFE299:
 1160              	 .section .text.new_data_analog2Back,"ax",%progbits
 1161              	 .align 2
 1162              	 .global new_data_analog2Back
 1163              	 .code 16
 1164              	 .thumb_func
 1166              	new_data_analog2Back:
 1167              	.LFB300:
 281:../samuel/samuel_io.c ****  //------------------------------------------------------
 282:../samuel/samuel_io.c **** 
 283:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 284:../samuel/samuel_io.c ****  {
 1168              	 .loc 3 284 0
 1169              	 .cfi_startproc
 1170 0000 80B5     	 push {r7,lr}
 1171              	.LCFI32:
 1172              	 .cfi_def_cfa_offset 8
 1173              	 .cfi_offset 7,-8
 1174              	 .cfi_offset 14,-4
 1175 0002 00AF     	 add r7,sp,#0
 1176              	.LCFI33:
 1177              	 .cfi_def_cfa_register 7
 285:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1178              	 .loc 3 285 0
 1179 0004 194B     	 ldr r3,.L39
 1180 0006 0B22     	 mov r2,#11
 1181 0008 1A70     	 strb r2,[r3]
 286:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1182              	 .loc 3 286 0
 1183 000a 194B     	 ldr r3,.L39+4
 1184 000c 4C22     	 mov r2,#76
 1185 000e 1A70     	 strb r2,[r3]
 287:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1186              	 .loc 3 287 0
 1187 0010 174B     	 ldr r3,.L39+4
 1188 0012 4922     	 mov r2,#73
 1189 0014 5A70     	 strb r2,[r3,#1]
 288:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1190              	 .loc 3 288 0
 1191 0016 164B     	 ldr r3,.L39+4
 1192 0018 4E22     	 mov r2,#78
 1193 001a 9A70     	 strb r2,[r3,#2]
 289:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1194              	 .loc 3 289 0
 1195 001c 154B     	 ldr r3,.L39+8
 1196 001e 1A78     	 ldrb r2,[r3]
 1197 0020 134B     	 ldr r3,.L39+4
 1198 0022 DA70     	 strb r2,[r3,#3]
 290:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1199              	 .loc 3 290 0
 1200 0024 114B     	 ldr r3,.L39
 1201 0026 1A78     	 ldrb r2,[r3]
 1202 0028 114B     	 ldr r3,.L39+4
 1203 002a 1A71     	 strb r2,[r3,#4]
 291:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1204              	 .loc 3 291 0
 1205 002c 104B     	 ldr r3,.L39+4
 1206 002e 6222     	 mov r2,#98
 1207 0030 5A71     	 strb r2,[r3,#5]
 292:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1208              	 .loc 3 292 0
 1209 0032 114B     	 ldr r3,.L39+12
 1210 0034 1B88     	 ldrh r3,[r3]
 1211 0036 1B0A     	 lsr r3,r3,#8
 1212 0038 9BB2     	 uxth r3,r3
 1213 003a DAB2     	 uxtb r2,r3
 1214 003c 0C4B     	 ldr r3,.L39+4
 1215 003e 9A71     	 strb r2,[r3,#6]
 293:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1216              	 .loc 3 293 0
 1217 0040 0D4B     	 ldr r3,.L39+12
 1218 0042 1B88     	 ldrh r3,[r3]
 1219 0044 DAB2     	 uxtb r2,r3
 1220 0046 0A4B     	 ldr r3,.L39+4
 1221 0048 DA71     	 strb r2,[r3,#7]
 294:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1222              	 .loc 3 294 0
 1223 004a 0C4B     	 ldr r3,.L39+16
 1224 004c 1B88     	 ldrh r3,[r3]
 1225 004e 1B0A     	 lsr r3,r3,#8
 1226 0050 9BB2     	 uxth r3,r3
 1227 0052 DAB2     	 uxtb r2,r3
 1228 0054 064B     	 ldr r3,.L39+4
 1229 0056 1A72     	 strb r2,[r3,#8]
 295:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1230              	 .loc 3 295 0
 1231 0058 084B     	 ldr r3,.L39+16
 1232 005a 1B88     	 ldrh r3,[r3]
 1233 005c DAB2     	 uxtb r2,r3
 1234 005e 044B     	 ldr r3,.L39+4
 1235 0060 5A72     	 strb r2,[r3,#9]
 296:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1236              	 .loc 3 296 0
 1237 0062 034B     	 ldr r3,.L39+4
 1238 0064 FF22     	 mov r2,#255
 1239 0066 9A72     	 strb r2,[r3,#10]
 297:../samuel/samuel_io.c ****  }
 1240              	 .loc 3 297 0
 1241 0068 BD46     	 mov sp,r7
 1242              	 
 1243 006a 80BD     	 pop {r7,pc}
 1244              	.L40:
 1245              	 .align 2
 1246              	.L39:
 1247 006c 00000000 	 .word transmit_buf_size
 1248 0070 00000000 	 .word new_data
 1249 0074 00000000 	 .word node_id
 1250 0078 00000000 	 .word resultC2
 1251 007c 00000000 	 .word resultD2
 1252              	 .cfi_endproc
 1253              	.LFE300:
 1255              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1256              	 .align 2
 1257              	 .global new_data_aktLichtBack
 1258              	 .code 16
 1259              	 .thumb_func
 1261              	new_data_aktLichtBack:
 1262              	.LFB301:
 298:../samuel/samuel_io.c ****  //------------------------------------------------------
 299:../samuel/samuel_io.c **** 
 300:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 301:../samuel/samuel_io.c ****  {
 1263              	 .loc 3 301 0
 1264              	 .cfi_startproc
 1265 0000 80B5     	 push {r7,lr}
 1266              	.LCFI34:
 1267              	 .cfi_def_cfa_offset 8
 1268              	 .cfi_offset 7,-8
 1269              	 .cfi_offset 14,-4
 1270 0002 00AF     	 add r7,sp,#0
 1271              	.LCFI35:
 1272              	 .cfi_def_cfa_register 7
 302:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1273              	 .loc 3 302 0
 1274 0004 194B     	 ldr r3,.L42
 1275 0006 0B22     	 mov r2,#11
 1276 0008 1A70     	 strb r2,[r3]
 303:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1277              	 .loc 3 303 0
 1278 000a 194B     	 ldr r3,.L42+4
 1279 000c 4C22     	 mov r2,#76
 1280 000e 1A70     	 strb r2,[r3]
 304:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1281              	 .loc 3 304 0
 1282 0010 174B     	 ldr r3,.L42+4
 1283 0012 4922     	 mov r2,#73
 1284 0014 5A70     	 strb r2,[r3,#1]
 305:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1285              	 .loc 3 305 0
 1286 0016 164B     	 ldr r3,.L42+4
 1287 0018 4E22     	 mov r2,#78
 1288 001a 9A70     	 strb r2,[r3,#2]
 306:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1289              	 .loc 3 306 0
 1290 001c 154B     	 ldr r3,.L42+8
 1291 001e 1A78     	 ldrb r2,[r3]
 1292 0020 134B     	 ldr r3,.L42+4
 1293 0022 DA70     	 strb r2,[r3,#3]
 307:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1294              	 .loc 3 307 0
 1295 0024 114B     	 ldr r3,.L42
 1296 0026 1A78     	 ldrb r2,[r3]
 1297 0028 114B     	 ldr r3,.L42+4
 1298 002a 1A71     	 strb r2,[r3,#4]
 308:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1299              	 .loc 3 308 0
 1300 002c 104B     	 ldr r3,.L42+4
 1301 002e 6622     	 mov r2,#102
 1302 0030 5A71     	 strb r2,[r3,#5]
 309:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1303              	 .loc 3 309 0
 1304 0032 114B     	 ldr r3,.L42+12
 1305 0034 1B88     	 ldrh r3,[r3]
 1306 0036 1B0A     	 lsr r3,r3,#8
 1307 0038 9BB2     	 uxth r3,r3
 1308 003a DAB2     	 uxtb r2,r3
 1309 003c 0C4B     	 ldr r3,.L42+4
 1310 003e 9A71     	 strb r2,[r3,#6]
 310:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1311              	 .loc 3 310 0
 1312 0040 0D4B     	 ldr r3,.L42+12
 1313 0042 1B88     	 ldrh r3,[r3]
 1314 0044 DAB2     	 uxtb r2,r3
 1315 0046 0A4B     	 ldr r3,.L42+4
 1316 0048 DA71     	 strb r2,[r3,#7]
 311:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1317              	 .loc 3 311 0
 1318 004a 0C4B     	 ldr r3,.L42+16
 1319 004c 1B88     	 ldrh r3,[r3]
 1320 004e 1B0A     	 lsr r3,r3,#8
 1321 0050 9BB2     	 uxth r3,r3
 1322 0052 DAB2     	 uxtb r2,r3
 1323 0054 064B     	 ldr r3,.L42+4
 1324 0056 1A72     	 strb r2,[r3,#8]
 312:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1325              	 .loc 3 312 0
 1326 0058 084B     	 ldr r3,.L42+16
 1327 005a 1B88     	 ldrh r3,[r3]
 1328 005c DAB2     	 uxtb r2,r3
 1329 005e 044B     	 ldr r3,.L42+4
 1330 0060 5A72     	 strb r2,[r3,#9]
 313:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1331              	 .loc 3 313 0
 1332 0062 034B     	 ldr r3,.L42+4
 1333 0064 FF22     	 mov r2,#255
 1334 0066 9A72     	 strb r2,[r3,#10]
 314:../samuel/samuel_io.c ****  }
 1335              	 .loc 3 314 0
 1336 0068 BD46     	 mov sp,r7
 1337              	 
 1338 006a 80BD     	 pop {r7,pc}
 1339              	.L43:
 1340              	 .align 2
 1341              	.L42:
 1342 006c 00000000 	 .word transmit_buf_size
 1343 0070 00000000 	 .word new_data
 1344 0074 00000000 	 .word node_id
 1345 0078 00000000 	 .word dimAkt_Ww
 1346 007c 00000000 	 .word dimAkt_Cw
 1347              	 .cfi_endproc
 1348              	.LFE301:
 1350              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1351              	 .align 2
 1352              	 .global new_data_offLichtBack
 1353              	 .code 16
 1354              	 .thumb_func
 1356              	new_data_offLichtBack:
 1357              	.LFB302:
 315:../samuel/samuel_io.c ****  //------------------------------------------------------
 316:../samuel/samuel_io.c **** 
 317:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 318:../samuel/samuel_io.c ****  {
 1358              	 .loc 3 318 0
 1359              	 .cfi_startproc
 1360 0000 80B5     	 push {r7,lr}
 1361              	.LCFI36:
 1362              	 .cfi_def_cfa_offset 8
 1363              	 .cfi_offset 7,-8
 1364              	 .cfi_offset 14,-4
 1365 0002 00AF     	 add r7,sp,#0
 1366              	.LCFI37:
 1367              	 .cfi_def_cfa_register 7
 319:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1368              	 .loc 3 319 0
 1369 0004 1D4B     	 ldr r3,.L45
 1370 0006 0D22     	 mov r2,#13
 1371 0008 1A70     	 strb r2,[r3]
 320:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1372              	 .loc 3 320 0
 1373 000a 1D4B     	 ldr r3,.L45+4
 1374 000c 4C22     	 mov r2,#76
 1375 000e 1A70     	 strb r2,[r3]
 321:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1376              	 .loc 3 321 0
 1377 0010 1B4B     	 ldr r3,.L45+4
 1378 0012 4922     	 mov r2,#73
 1379 0014 5A70     	 strb r2,[r3,#1]
 322:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1380              	 .loc 3 322 0
 1381 0016 1A4B     	 ldr r3,.L45+4
 1382 0018 4E22     	 mov r2,#78
 1383 001a 9A70     	 strb r2,[r3,#2]
 323:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1384              	 .loc 3 323 0
 1385 001c 194B     	 ldr r3,.L45+8
 1386 001e 1A78     	 ldrb r2,[r3]
 1387 0020 174B     	 ldr r3,.L45+4
 1388 0022 DA70     	 strb r2,[r3,#3]
 324:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1389              	 .loc 3 324 0
 1390 0024 154B     	 ldr r3,.L45
 1391 0026 1A78     	 ldrb r2,[r3]
 1392 0028 154B     	 ldr r3,.L45+4
 1393 002a 1A71     	 strb r2,[r3,#4]
 325:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1394              	 .loc 3 325 0
 1395 002c 144B     	 ldr r3,.L45+4
 1396 002e 6722     	 mov r2,#103
 1397 0030 5A71     	 strb r2,[r3,#5]
 326:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1398              	 .loc 3 326 0
 1399 0032 154B     	 ldr r3,.L45+12
 1400 0034 1B88     	 ldrh r3,[r3]
 1401 0036 1B0A     	 lsr r3,r3,#8
 1402 0038 9BB2     	 uxth r3,r3
 1403 003a DAB2     	 uxtb r2,r3
 1404 003c 104B     	 ldr r3,.L45+4
 1405 003e 9A71     	 strb r2,[r3,#6]
 327:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1406              	 .loc 3 327 0
 1407 0040 114B     	 ldr r3,.L45+12
 1408 0042 1B88     	 ldrh r3,[r3]
 1409 0044 DAB2     	 uxtb r2,r3
 1410 0046 0E4B     	 ldr r3,.L45+4
 1411 0048 DA71     	 strb r2,[r3,#7]
 328:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1412              	 .loc 3 328 0
 1413 004a 104B     	 ldr r3,.L45+16
 1414 004c 1B88     	 ldrh r3,[r3]
 1415 004e 1B0A     	 lsr r3,r3,#8
 1416 0050 9BB2     	 uxth r3,r3
 1417 0052 DAB2     	 uxtb r2,r3
 1418 0054 0A4B     	 ldr r3,.L45+4
 1419 0056 1A72     	 strb r2,[r3,#8]
 329:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1420              	 .loc 3 329 0
 1421 0058 0C4B     	 ldr r3,.L45+16
 1422 005a 1B88     	 ldrh r3,[r3]
 1423 005c DAB2     	 uxtb r2,r3
 1424 005e 084B     	 ldr r3,.L45+4
 1425 0060 5A72     	 strb r2,[r3,#9]
 330:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1426              	 .loc 3 330 0
 1427 0062 0B4B     	 ldr r3,.L45+20
 1428 0064 1A78     	 ldrb r2,[r3]
 1429 0066 064B     	 ldr r3,.L45+4
 1430 0068 9A72     	 strb r2,[r3,#10]
 331:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1431              	 .loc 3 331 0
 1432 006a 0A4B     	 ldr r3,.L45+24
 1433 006c 1A78     	 ldrb r2,[r3]
 1434 006e 044B     	 ldr r3,.L45+4
 1435 0070 DA72     	 strb r2,[r3,#11]
 332:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1436              	 .loc 3 332 0
 1437 0072 034B     	 ldr r3,.L45+4
 1438 0074 FF22     	 mov r2,#255
 1439 0076 1A73     	 strb r2,[r3,#12]
 333:../samuel/samuel_io.c ****  }
 1440              	 .loc 3 333 0
 1441 0078 BD46     	 mov sp,r7
 1442              	 
 1443 007a 80BD     	 pop {r7,pc}
 1444              	.L46:
 1445              	 .align 2
 1446              	.L45:
 1447 007c 00000000 	 .word transmit_buf_size
 1448 0080 00000000 	 .word new_data
 1449 0084 00000000 	 .word node_id
 1450 0088 00000000 	 .word dimOff_Ww
 1451 008c 00000000 	 .word dimOff_Cw
 1452 0090 00000000 	 .word RegOnOff
 1453 0094 00000000 	 .word RegOnOff2
 1454              	 .cfi_endproc
 1455              	.LFE302:
 1457              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1458              	 .align 2
 1459              	 .global new_data_Bright_Color_Back
 1460              	 .code 16
 1461              	 .thumb_func
 1463              	new_data_Bright_Color_Back:
 1464              	.LFB303:
 334:../samuel/samuel_io.c ****  //------------------------------------------------------
 335:../samuel/samuel_io.c **** 
 336:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 337:../samuel/samuel_io.c ****   {
 1465              	 .loc 3 337 0
 1466              	 .cfi_startproc
 1467 0000 80B5     	 push {r7,lr}
 1468              	.LCFI38:
 1469              	 .cfi_def_cfa_offset 8
 1470              	 .cfi_offset 7,-8
 1471              	 .cfi_offset 14,-4
 1472 0002 00AF     	 add r7,sp,#0
 1473              	.LCFI39:
 1474              	 .cfi_def_cfa_register 7
 338:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1475              	 .loc 3 338 0
 1476 0004 194B     	 ldr r3,.L48
 1477 0006 0B22     	 mov r2,#11
 1478 0008 1A70     	 strb r2,[r3]
 339:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1479              	 .loc 3 339 0
 1480 000a 194B     	 ldr r3,.L48+4
 1481 000c 4C22     	 mov r2,#76
 1482 000e 1A70     	 strb r2,[r3]
 340:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1483              	 .loc 3 340 0
 1484 0010 174B     	 ldr r3,.L48+4
 1485 0012 4922     	 mov r2,#73
 1486 0014 5A70     	 strb r2,[r3,#1]
 341:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1487              	 .loc 3 341 0
 1488 0016 164B     	 ldr r3,.L48+4
 1489 0018 4E22     	 mov r2,#78
 1490 001a 9A70     	 strb r2,[r3,#2]
 342:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1491              	 .loc 3 342 0
 1492 001c 154B     	 ldr r3,.L48+8
 1493 001e 1A78     	 ldrb r2,[r3]
 1494 0020 134B     	 ldr r3,.L48+4
 1495 0022 DA70     	 strb r2,[r3,#3]
 343:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1496              	 .loc 3 343 0
 1497 0024 114B     	 ldr r3,.L48
 1498 0026 1A78     	 ldrb r2,[r3]
 1499 0028 114B     	 ldr r3,.L48+4
 1500 002a 1A71     	 strb r2,[r3,#4]
 344:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1501              	 .loc 3 344 0
 1502 002c 104B     	 ldr r3,.L48+4
 1503 002e 6822     	 mov r2,#104
 1504 0030 5A71     	 strb r2,[r3,#5]
 345:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1505              	 .loc 3 345 0
 1506 0032 114B     	 ldr r3,.L48+12
 1507 0034 1B88     	 ldrh r3,[r3]
 1508 0036 1B0A     	 lsr r3,r3,#8
 1509 0038 9BB2     	 uxth r3,r3
 1510 003a DAB2     	 uxtb r2,r3
 1511 003c 0C4B     	 ldr r3,.L48+4
 1512 003e 9A71     	 strb r2,[r3,#6]
 346:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1513              	 .loc 3 346 0
 1514 0040 0D4B     	 ldr r3,.L48+12
 1515 0042 1B88     	 ldrh r3,[r3]
 1516 0044 DAB2     	 uxtb r2,r3
 1517 0046 0A4B     	 ldr r3,.L48+4
 1518 0048 DA71     	 strb r2,[r3,#7]
 347:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1519              	 .loc 3 347 0
 1520 004a 0C4B     	 ldr r3,.L48+16
 1521 004c 1B88     	 ldrh r3,[r3]
 1522 004e 1B0A     	 lsr r3,r3,#8
 1523 0050 9BB2     	 uxth r3,r3
 1524 0052 DAB2     	 uxtb r2,r3
 1525 0054 064B     	 ldr r3,.L48+4
 1526 0056 1A72     	 strb r2,[r3,#8]
 348:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1527              	 .loc 3 348 0
 1528 0058 084B     	 ldr r3,.L48+16
 1529 005a 1B88     	 ldrh r3,[r3]
 1530 005c DAB2     	 uxtb r2,r3
 1531 005e 044B     	 ldr r3,.L48+4
 1532 0060 5A72     	 strb r2,[r3,#9]
 349:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1533              	 .loc 3 349 0
 1534 0062 034B     	 ldr r3,.L48+4
 1535 0064 FF22     	 mov r2,#255
 1536 0066 9A72     	 strb r2,[r3,#10]
 350:../samuel/samuel_io.c ****   }
 1537              	 .loc 3 350 0
 1538 0068 BD46     	 mov sp,r7
 1539              	 
 1540 006a 80BD     	 pop {r7,pc}
 1541              	.L49:
 1542              	 .align 2
 1543              	.L48:
 1544 006c 00000000 	 .word transmit_buf_size
 1545 0070 00000000 	 .word new_data
 1546 0074 00000000 	 .word node_id
 1547 0078 00000000 	 .word Brightness_Gen
 1548 007c 00000000 	 .word ColorQuot_Gen
 1549              	 .cfi_endproc
 1550              	.LFE303:
 1552              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1553              	 .align 2
 1554              	 .global new_data_Quot_Walk_Back
 1555              	 .code 16
 1556              	 .thumb_func
 1558              	new_data_Quot_Walk_Back:
 1559              	.LFB304:
 351:../samuel/samuel_io.c ****   //------------------------------------------------------
 352:../samuel/samuel_io.c **** 
 353:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 354:../samuel/samuel_io.c ****   {
 1560              	 .loc 3 354 0
 1561              	 .cfi_startproc
 1562 0000 80B5     	 push {r7,lr}
 1563              	.LCFI40:
 1564              	 .cfi_def_cfa_offset 8
 1565              	 .cfi_offset 7,-8
 1566              	 .cfi_offset 14,-4
 1567 0002 00AF     	 add r7,sp,#0
 1568              	.LCFI41:
 1569              	 .cfi_def_cfa_register 7
 355:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1570              	 .loc 3 355 0
 1571 0004 194B     	 ldr r3,.L51
 1572 0006 0B22     	 mov r2,#11
 1573 0008 1A70     	 strb r2,[r3]
 356:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1574              	 .loc 3 356 0
 1575 000a 194B     	 ldr r3,.L51+4
 1576 000c 4C22     	 mov r2,#76
 1577 000e 1A70     	 strb r2,[r3]
 357:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1578              	 .loc 3 357 0
 1579 0010 174B     	 ldr r3,.L51+4
 1580 0012 4922     	 mov r2,#73
 1581 0014 5A70     	 strb r2,[r3,#1]
 358:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1582              	 .loc 3 358 0
 1583 0016 164B     	 ldr r3,.L51+4
 1584 0018 4E22     	 mov r2,#78
 1585 001a 9A70     	 strb r2,[r3,#2]
 359:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1586              	 .loc 3 359 0
 1587 001c 154B     	 ldr r3,.L51+8
 1588 001e 1A78     	 ldrb r2,[r3]
 1589 0020 134B     	 ldr r3,.L51+4
 1590 0022 DA70     	 strb r2,[r3,#3]
 360:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1591              	 .loc 3 360 0
 1592 0024 114B     	 ldr r3,.L51
 1593 0026 1A78     	 ldrb r2,[r3]
 1594 0028 114B     	 ldr r3,.L51+4
 1595 002a 1A71     	 strb r2,[r3,#4]
 361:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1596              	 .loc 3 361 0
 1597 002c 104B     	 ldr r3,.L51+4
 1598 002e 6922     	 mov r2,#105
 1599 0030 5A71     	 strb r2,[r3,#5]
 362:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1600              	 .loc 3 362 0
 1601 0032 114B     	 ldr r3,.L51+12
 1602 0034 1B88     	 ldrh r3,[r3]
 1603 0036 1B0A     	 lsr r3,r3,#8
 1604 0038 9BB2     	 uxth r3,r3
 1605 003a DAB2     	 uxtb r2,r3
 1606 003c 0C4B     	 ldr r3,.L51+4
 1607 003e 9A71     	 strb r2,[r3,#6]
 363:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1608              	 .loc 3 363 0
 1609 0040 0D4B     	 ldr r3,.L51+12
 1610 0042 1B88     	 ldrh r3,[r3]
 1611 0044 DAB2     	 uxtb r2,r3
 1612 0046 0A4B     	 ldr r3,.L51+4
 1613 0048 DA71     	 strb r2,[r3,#7]
 364:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1614              	 .loc 3 364 0
 1615 004a 0C4B     	 ldr r3,.L51+16
 1616 004c 1B88     	 ldrh r3,[r3]
 1617 004e 1B0A     	 lsr r3,r3,#8
 1618 0050 9BB2     	 uxth r3,r3
 1619 0052 DAB2     	 uxtb r2,r3
 1620 0054 064B     	 ldr r3,.L51+4
 1621 0056 1A72     	 strb r2,[r3,#8]
 365:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1622              	 .loc 3 365 0
 1623 0058 084B     	 ldr r3,.L51+16
 1624 005a 1B88     	 ldrh r3,[r3]
 1625 005c DAB2     	 uxtb r2,r3
 1626 005e 044B     	 ldr r3,.L51+4
 1627 0060 5A72     	 strb r2,[r3,#9]
 366:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1628              	 .loc 3 366 0
 1629 0062 034B     	 ldr r3,.L51+4
 1630 0064 FF22     	 mov r2,#255
 1631 0066 9A72     	 strb r2,[r3,#10]
 367:../samuel/samuel_io.c ****   }
 1632              	 .loc 3 367 0
 1633 0068 BD46     	 mov sp,r7
 1634              	 
 1635 006a 80BD     	 pop {r7,pc}
 1636              	.L52:
 1637              	 .align 2
 1638              	.L51:
 1639 006c 00000000 	 .word transmit_buf_size
 1640 0070 00000000 	 .word new_data
 1641 0074 00000000 	 .word node_id
 1642 0078 00000000 	 .word linearwalk_gen
 1643 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1644              	 .cfi_endproc
 1645              	.LFE304:
 1647              	 .section .text.new_data_HalloBack,"ax",%progbits
 1648              	 .align 2
 1649              	 .global new_data_HalloBack
 1650              	 .code 16
 1651              	 .thumb_func
 1653              	new_data_HalloBack:
 1654              	.LFB305:
 368:../samuel/samuel_io.c ****  //------------------------------------------
 369:../samuel/samuel_io.c **** 
 370:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 371:../samuel/samuel_io.c ****   {
 1655              	 .loc 3 371 0
 1656              	 .cfi_startproc
 1657 0000 80B5     	 push {r7,lr}
 1658              	.LCFI42:
 1659              	 .cfi_def_cfa_offset 8
 1660              	 .cfi_offset 7,-8
 1661              	 .cfi_offset 14,-4
 1662 0002 00AF     	 add r7,sp,#0
 1663              	.LCFI43:
 1664              	 .cfi_def_cfa_register 7
 372:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1665              	 .loc 3 372 0
 1666 0004 134B     	 ldr r3,.L54
 1667 0006 0B22     	 mov r2,#11
 1668 0008 1A70     	 strb r2,[r3]
 373:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1669              	 .loc 3 373 0
 1670 000a 134B     	 ldr r3,.L54+4
 1671 000c 4C22     	 mov r2,#76
 1672 000e 1A70     	 strb r2,[r3]
 374:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1673              	 .loc 3 374 0
 1674 0010 114B     	 ldr r3,.L54+4
 1675 0012 4922     	 mov r2,#73
 1676 0014 5A70     	 strb r2,[r3,#1]
 375:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1677              	 .loc 3 375 0
 1678 0016 104B     	 ldr r3,.L54+4
 1679 0018 4E22     	 mov r2,#78
 1680 001a 9A70     	 strb r2,[r3,#2]
 376:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1681              	 .loc 3 376 0
 1682 001c 0F4B     	 ldr r3,.L54+8
 1683 001e 1A78     	 ldrb r2,[r3]
 1684 0020 0D4B     	 ldr r3,.L54+4
 1685 0022 DA70     	 strb r2,[r3,#3]
 377:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1686              	 .loc 3 377 0
 1687 0024 0B4B     	 ldr r3,.L54
 1688 0026 1A78     	 ldrb r2,[r3]
 1689 0028 0B4B     	 ldr r3,.L54+4
 1690 002a 1A71     	 strb r2,[r3,#4]
 378:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1691              	 .loc 3 378 0
 1692 002c 0A4B     	 ldr r3,.L54+4
 1693 002e 6A22     	 mov r2,#106
 1694 0030 5A71     	 strb r2,[r3,#5]
 379:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1695              	 .loc 3 379 0
 1696 0032 094B     	 ldr r3,.L54+4
 1697 0034 6F22     	 mov r2,#111
 1698 0036 9A71     	 strb r2,[r3,#6]
 380:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1699              	 .loc 3 380 0
 1700 0038 074B     	 ldr r3,.L54+4
 1701 003a 6B22     	 mov r2,#107
 1702 003c DA71     	 strb r2,[r3,#7]
 381:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1703              	 .loc 3 381 0
 1704 003e 064B     	 ldr r3,.L54+4
 1705 0040 6F22     	 mov r2,#111
 1706 0042 1A72     	 strb r2,[r3,#8]
 382:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1707              	 .loc 3 382 0
 1708 0044 044B     	 ldr r3,.L54+4
 1709 0046 6B22     	 mov r2,#107
 1710 0048 5A72     	 strb r2,[r3,#9]
 383:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1711              	 .loc 3 383 0
 1712 004a 034B     	 ldr r3,.L54+4
 1713 004c FF22     	 mov r2,#255
 1714 004e 9A72     	 strb r2,[r3,#10]
 384:../samuel/samuel_io.c ****   }
 1715              	 .loc 3 384 0
 1716 0050 BD46     	 mov sp,r7
 1717              	 
 1718 0052 80BD     	 pop {r7,pc}
 1719              	.L55:
 1720              	 .align 2
 1721              	.L54:
 1722 0054 00000000 	 .word transmit_buf_size
 1723 0058 00000000 	 .word new_data
 1724 005c 00000000 	 .word node_id
 1725              	 .cfi_endproc
 1726              	.LFE305:
 1728              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 1729              	 .align 2
 1730              	 .global new_data_neuNodeIdBack
 1731              	 .code 16
 1732              	 .thumb_func
 1734              	new_data_neuNodeIdBack:
 1735              	.LFB306:
 385:../samuel/samuel_io.c ****   //------------------------------------------------------
 386:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 387:../samuel/samuel_io.c ****    {
 1736              	 .loc 3 387 0
 1737              	 .cfi_startproc
 1738 0000 80B5     	 push {r7,lr}
 1739              	.LCFI44:
 1740              	 .cfi_def_cfa_offset 8
 1741              	 .cfi_offset 7,-8
 1742              	 .cfi_offset 14,-4
 1743 0002 00AF     	 add r7,sp,#0
 1744              	.LCFI45:
 1745              	 .cfi_def_cfa_register 7
 388:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 1746              	 .loc 3 388 0
 1747 0004 1B4B     	 ldr r3,.L57
 1748 0006 0C22     	 mov r2,#12
 1749 0008 1A70     	 strb r2,[r3]
 389:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1750              	 .loc 3 389 0
 1751 000a 1B4B     	 ldr r3,.L57+4
 1752 000c 4C22     	 mov r2,#76
 1753 000e 1A70     	 strb r2,[r3]
 390:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1754              	 .loc 3 390 0
 1755 0010 194B     	 ldr r3,.L57+4
 1756 0012 4922     	 mov r2,#73
 1757 0014 5A70     	 strb r2,[r3,#1]
 391:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1758              	 .loc 3 391 0
 1759 0016 184B     	 ldr r3,.L57+4
 1760 0018 4E22     	 mov r2,#78
 1761 001a 9A70     	 strb r2,[r3,#2]
 392:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1762              	 .loc 3 392 0
 1763 001c 174B     	 ldr r3,.L57+8
 1764 001e 1A78     	 ldrb r2,[r3]
 1765 0020 154B     	 ldr r3,.L57+4
 1766 0022 DA70     	 strb r2,[r3,#3]
 393:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1767              	 .loc 3 393 0
 1768 0024 134B     	 ldr r3,.L57
 1769 0026 1A78     	 ldrb r2,[r3]
 1770 0028 134B     	 ldr r3,.L57+4
 1771 002a 1A71     	 strb r2,[r3,#4]
 394:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 1772              	 .loc 3 394 0
 1773 002c 124B     	 ldr r3,.L57+4
 1774 002e 6B22     	 mov r2,#107
 1775 0030 5A71     	 strb r2,[r3,#5]
 395:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 1776              	 .loc 3 395 0
 1777 0032 134B     	 ldr r3,.L57+12
 1778 0034 1A78     	 ldrb r2,[r3]
 1779 0036 104B     	 ldr r3,.L57+4
 1780 0038 9A71     	 strb r2,[r3,#6]
 396:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 1781              	 .loc 3 396 0
 1782 003a 124B     	 ldr r3,.L57+16
 1783 003c 1B88     	 ldrh r3,[r3]
 1784 003e 1B0A     	 lsr r3,r3,#8
 1785 0040 9BB2     	 uxth r3,r3
 1786 0042 DAB2     	 uxtb r2,r3
 1787 0044 0C4B     	 ldr r3,.L57+4
 1788 0046 DA71     	 strb r2,[r3,#7]
 397:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 1789              	 .loc 3 397 0
 1790 0048 0E4B     	 ldr r3,.L57+16
 1791 004a 1B88     	 ldrh r3,[r3]
 1792 004c DAB2     	 uxtb r2,r3
 1793 004e 0A4B     	 ldr r3,.L57+4
 1794 0050 1A72     	 strb r2,[r3,#8]
 398:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 1795              	 .loc 3 398 0
 1796 0052 0D4B     	 ldr r3,.L57+20
 1797 0054 1B88     	 ldrh r3,[r3]
 1798 0056 1B0A     	 lsr r3,r3,#8
 1799 0058 9BB2     	 uxth r3,r3
 1800 005a DAB2     	 uxtb r2,r3
 1801 005c 064B     	 ldr r3,.L57+4
 1802 005e 5A72     	 strb r2,[r3,#9]
 399:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 1803              	 .loc 3 399 0
 1804 0060 094B     	 ldr r3,.L57+20
 1805 0062 1B88     	 ldrh r3,[r3]
 1806 0064 DAB2     	 uxtb r2,r3
 1807 0066 044B     	 ldr r3,.L57+4
 1808 0068 9A72     	 strb r2,[r3,#10]
 400:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 1809              	 .loc 3 400 0
 1810 006a 034B     	 ldr r3,.L57+4
 1811 006c FF22     	 mov r2,#255
 1812 006e DA72     	 strb r2,[r3,#11]
 401:../samuel/samuel_io.c ****    }
 1813              	 .loc 3 401 0
 1814 0070 BD46     	 mov sp,r7
 1815              	 
 1816 0072 80BD     	 pop {r7,pc}
 1817              	.L58:
 1818              	 .align 2
 1819              	.L57:
 1820 0074 00000000 	 .word transmit_buf_size
 1821 0078 00000000 	 .word new_data
 1822 007c 00000000 	 .word node_id
 1823 0080 00000000 	 .word node_id_neu
 1824 0084 00000000 	 .word Ser_NrH
 1825 0088 00000000 	 .word Ser_NrL
 1826              	 .cfi_endproc
 1827              	.LFE306:
 1829              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 1830              	 .align 2
 1831              	 .global new_data_neuSerNrBack
 1832              	 .code 16
 1833              	 .thumb_func
 1835              	new_data_neuSerNrBack:
 1836              	.LFB307:
 402:../samuel/samuel_io.c ****    //------------------------------------------------------
 403:../samuel/samuel_io.c **** 
 404:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 405:../samuel/samuel_io.c ****    {
 1837              	 .loc 3 405 0
 1838              	 .cfi_startproc
 1839 0000 80B5     	 push {r7,lr}
 1840              	.LCFI46:
 1841              	 .cfi_def_cfa_offset 8
 1842              	 .cfi_offset 7,-8
 1843              	 .cfi_offset 14,-4
 1844 0002 00AF     	 add r7,sp,#0
 1845              	.LCFI47:
 1846              	 .cfi_def_cfa_register 7
 406:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 1847              	 .loc 3 406 0
 1848 0004 254B     	 ldr r3,.L60
 1849 0006 0F22     	 mov r2,#15
 1850 0008 1A70     	 strb r2,[r3]
 407:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1851              	 .loc 3 407 0
 1852 000a 254B     	 ldr r3,.L60+4
 1853 000c 4C22     	 mov r2,#76
 1854 000e 1A70     	 strb r2,[r3]
 408:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1855              	 .loc 3 408 0
 1856 0010 234B     	 ldr r3,.L60+4
 1857 0012 4922     	 mov r2,#73
 1858 0014 5A70     	 strb r2,[r3,#1]
 409:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1859              	 .loc 3 409 0
 1860 0016 224B     	 ldr r3,.L60+4
 1861 0018 4E22     	 mov r2,#78
 1862 001a 9A70     	 strb r2,[r3,#2]
 410:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1863              	 .loc 3 410 0
 1864 001c 214B     	 ldr r3,.L60+8
 1865 001e 1A78     	 ldrb r2,[r3]
 1866 0020 1F4B     	 ldr r3,.L60+4
 1867 0022 DA70     	 strb r2,[r3,#3]
 411:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1868              	 .loc 3 411 0
 1869 0024 1D4B     	 ldr r3,.L60
 1870 0026 1A78     	 ldrb r2,[r3]
 1871 0028 1D4B     	 ldr r3,.L60+4
 1872 002a 1A71     	 strb r2,[r3,#4]
 412:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 1873              	 .loc 3 412 0
 1874 002c 1C4B     	 ldr r3,.L60+4
 1875 002e 6C22     	 mov r2,#108
 1876 0030 5A71     	 strb r2,[r3,#5]
 413:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 1877              	 .loc 3 413 0
 1878 0032 1D4B     	 ldr r3,.L60+12
 1879 0034 1B88     	 ldrh r3,[r3]
 1880 0036 1B0A     	 lsr r3,r3,#8
 1881 0038 9BB2     	 uxth r3,r3
 1882 003a DAB2     	 uxtb r2,r3
 1883 003c 184B     	 ldr r3,.L60+4
 1884 003e 9A71     	 strb r2,[r3,#6]
 414:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 1885              	 .loc 3 414 0
 1886 0040 194B     	 ldr r3,.L60+12
 1887 0042 1B88     	 ldrh r3,[r3]
 1888 0044 DAB2     	 uxtb r2,r3
 1889 0046 164B     	 ldr r3,.L60+4
 1890 0048 DA71     	 strb r2,[r3,#7]
 415:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 1891              	 .loc 3 415 0
 1892 004a 184B     	 ldr r3,.L60+16
 1893 004c 1B88     	 ldrh r3,[r3]
 1894 004e 1B0A     	 lsr r3,r3,#8
 1895 0050 9BB2     	 uxth r3,r3
 1896 0052 DAB2     	 uxtb r2,r3
 1897 0054 124B     	 ldr r3,.L60+4
 1898 0056 1A72     	 strb r2,[r3,#8]
 416:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 1899              	 .loc 3 416 0
 1900 0058 144B     	 ldr r3,.L60+16
 1901 005a 1B88     	 ldrh r3,[r3]
 1902 005c DAB2     	 uxtb r2,r3
 1903 005e 104B     	 ldr r3,.L60+4
 1904 0060 5A72     	 strb r2,[r3,#9]
 417:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 1905              	 .loc 3 417 0
 1906 0062 134B     	 ldr r3,.L60+20
 1907 0064 1B88     	 ldrh r3,[r3]
 1908 0066 1B0A     	 lsr r3,r3,#8
 1909 0068 9BB2     	 uxth r3,r3
 1910 006a DAB2     	 uxtb r2,r3
 1911 006c 0C4B     	 ldr r3,.L60+4
 1912 006e 9A72     	 strb r2,[r3,#10]
 418:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 1913              	 .loc 3 418 0
 1914 0070 0F4B     	 ldr r3,.L60+20
 1915 0072 1B88     	 ldrh r3,[r3]
 1916 0074 DAB2     	 uxtb r2,r3
 1917 0076 0A4B     	 ldr r3,.L60+4
 1918 0078 DA72     	 strb r2,[r3,#11]
 419:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 1919              	 .loc 3 419 0
 1920 007a 0E4B     	 ldr r3,.L60+24
 1921 007c 1B88     	 ldrh r3,[r3]
 1922 007e 1B0A     	 lsr r3,r3,#8
 1923 0080 9BB2     	 uxth r3,r3
 1924 0082 DAB2     	 uxtb r2,r3
 1925 0084 064B     	 ldr r3,.L60+4
 1926 0086 1A73     	 strb r2,[r3,#12]
 420:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 1927              	 .loc 3 420 0
 1928 0088 0A4B     	 ldr r3,.L60+24
 1929 008a 1B88     	 ldrh r3,[r3]
 1930 008c DAB2     	 uxtb r2,r3
 1931 008e 044B     	 ldr r3,.L60+4
 1932 0090 5A73     	 strb r2,[r3,#13]
 421:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 1933              	 .loc 3 421 0
 1934 0092 034B     	 ldr r3,.L60+4
 1935 0094 FF22     	 mov r2,#255
 1936 0096 9A73     	 strb r2,[r3,#14]
 422:../samuel/samuel_io.c ****    }
 1937              	 .loc 3 422 0
 1938 0098 BD46     	 mov sp,r7
 1939              	 
 1940 009a 80BD     	 pop {r7,pc}
 1941              	.L61:
 1942              	 .align 2
 1943              	.L60:
 1944 009c 00000000 	 .word transmit_buf_size
 1945 00a0 00000000 	 .word new_data
 1946 00a4 00000000 	 .word node_id
 1947 00a8 00000000 	 .word neu_Ser_NrH
 1948 00ac 00000000 	 .word neu_Ser_NrL
 1949 00b0 00000000 	 .word Ser_NrH
 1950 00b4 00000000 	 .word Ser_NrL
 1951              	 .cfi_endproc
 1952              	.LFE307:
 1954              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 1955              	 .align 2
 1956              	 .global new_data_NodeIdBack
 1957              	 .code 16
 1958              	 .thumb_func
 1960              	new_data_NodeIdBack:
 1961              	.LFB308:
 423:../samuel/samuel_io.c ****    //------------------------------------------------------
 424:../samuel/samuel_io.c **** 
 425:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 426:../samuel/samuel_io.c ****    {
 1962              	 .loc 3 426 0
 1963              	 .cfi_startproc
 1964 0000 80B5     	 push {r7,lr}
 1965              	.LCFI48:
 1966              	 .cfi_def_cfa_offset 8
 1967              	 .cfi_offset 7,-8
 1968              	 .cfi_offset 14,-4
 1969 0002 00AF     	 add r7,sp,#0
 1970              	.LCFI49:
 1971              	 .cfi_def_cfa_register 7
 427:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 1972              	 .loc 3 427 0
 1973 0004 1D4B     	 ldr r3,.L63
 1974 0006 0D22     	 mov r2,#13
 1975 0008 1A70     	 strb r2,[r3]
 428:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1976              	 .loc 3 428 0
 1977 000a 1D4B     	 ldr r3,.L63+4
 1978 000c 4C22     	 mov r2,#76
 1979 000e 1A70     	 strb r2,[r3]
 429:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1980              	 .loc 3 429 0
 1981 0010 1B4B     	 ldr r3,.L63+4
 1982 0012 4922     	 mov r2,#73
 1983 0014 5A70     	 strb r2,[r3,#1]
 430:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1984              	 .loc 3 430 0
 1985 0016 1A4B     	 ldr r3,.L63+4
 1986 0018 4E22     	 mov r2,#78
 1987 001a 9A70     	 strb r2,[r3,#2]
 431:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1988              	 .loc 3 431 0
 1989 001c 194B     	 ldr r3,.L63+8
 1990 001e 1A78     	 ldrb r2,[r3]
 1991 0020 174B     	 ldr r3,.L63+4
 1992 0022 DA70     	 strb r2,[r3,#3]
 432:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1993              	 .loc 3 432 0
 1994 0024 154B     	 ldr r3,.L63
 1995 0026 1A78     	 ldrb r2,[r3]
 1996 0028 154B     	 ldr r3,.L63+4
 1997 002a 1A71     	 strb r2,[r3,#4]
 433:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 1998              	 .loc 3 433 0
 1999 002c 144B     	 ldr r3,.L63+4
 2000 002e 6D22     	 mov r2,#109
 2001 0030 5A71     	 strb r2,[r3,#5]
 434:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 2002              	 .loc 3 434 0
 2003 0032 154B     	 ldr r3,.L63+12
 2004 0034 1A78     	 ldrb r2,[r3]
 2005 0036 124B     	 ldr r3,.L63+4
 2006 0038 9A71     	 strb r2,[r3,#6]
 435:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 2007              	 .loc 3 435 0
 2008 003a 124B     	 ldr r3,.L63+8
 2009 003c 1A78     	 ldrb r2,[r3]
 2010 003e 104B     	 ldr r3,.L63+4
 2011 0040 DA71     	 strb r2,[r3,#7]
 436:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 2012              	 .loc 3 436 0
 2013 0042 124B     	 ldr r3,.L63+16
 2014 0044 1B88     	 ldrh r3,[r3]
 2015 0046 1B0A     	 lsr r3,r3,#8
 2016 0048 9BB2     	 uxth r3,r3
 2017 004a DAB2     	 uxtb r2,r3
 2018 004c 0C4B     	 ldr r3,.L63+4
 2019 004e 1A72     	 strb r2,[r3,#8]
 437:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 2020              	 .loc 3 437 0
 2021 0050 0E4B     	 ldr r3,.L63+16
 2022 0052 1B88     	 ldrh r3,[r3]
 2023 0054 DAB2     	 uxtb r2,r3
 2024 0056 0A4B     	 ldr r3,.L63+4
 2025 0058 5A72     	 strb r2,[r3,#9]
 438:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 2026              	 .loc 3 438 0
 2027 005a 0D4B     	 ldr r3,.L63+20
 2028 005c 1B88     	 ldrh r3,[r3]
 2029 005e 1B0A     	 lsr r3,r3,#8
 2030 0060 9BB2     	 uxth r3,r3
 2031 0062 DAB2     	 uxtb r2,r3
 2032 0064 064B     	 ldr r3,.L63+4
 2033 0066 9A72     	 strb r2,[r3,#10]
 439:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 2034              	 .loc 3 439 0
 2035 0068 094B     	 ldr r3,.L63+20
 2036 006a 1B88     	 ldrh r3,[r3]
 2037 006c DAB2     	 uxtb r2,r3
 2038 006e 044B     	 ldr r3,.L63+4
 2039 0070 DA72     	 strb r2,[r3,#11]
 440:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 2040              	 .loc 3 440 0
 2041 0072 034B     	 ldr r3,.L63+4
 2042 0074 FF22     	 mov r2,#255
 2043 0076 1A73     	 strb r2,[r3,#12]
 441:../samuel/samuel_io.c ****    }
 2044              	 .loc 3 441 0
 2045 0078 BD46     	 mov sp,r7
 2046              	 
 2047 007a 80BD     	 pop {r7,pc}
 2048              	.L64:
 2049              	 .align 2
 2050              	.L63:
 2051 007c 00000000 	 .word transmit_buf_size
 2052 0080 00000000 	 .word new_data
 2053 0084 00000000 	 .word node_id
 2054 0088 00000000 	 .word node_id_alt
 2055 008c 00000000 	 .word Ser_NrH
 2056 0090 00000000 	 .word Ser_NrL
 2057              	 .cfi_endproc
 2058              	.LFE308:
 2060              	 .section .text.new_data_SerNrBack,"ax",%progbits
 2061              	 .align 2
 2062              	 .global new_data_SerNrBack
 2063              	 .code 16
 2064              	 .thumb_func
 2066              	new_data_SerNrBack:
 2067              	.LFB309:
 442:../samuel/samuel_io.c **** 
 443:../samuel/samuel_io.c ****    //------------------------------------------------------
 444:../samuel/samuel_io.c **** 
 445:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 446:../samuel/samuel_io.c ****    {
 2068              	 .loc 3 446 0
 2069              	 .cfi_startproc
 2070 0000 80B5     	 push {r7,lr}
 2071              	.LCFI50:
 2072              	 .cfi_def_cfa_offset 8
 2073              	 .cfi_offset 7,-8
 2074              	 .cfi_offset 14,-4
 2075 0002 00AF     	 add r7,sp,#0
 2076              	.LCFI51:
 2077              	 .cfi_def_cfa_register 7
 447:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 2078              	 .loc 3 447 0
 2079 0004 194B     	 ldr r3,.L66
 2080 0006 0B22     	 mov r2,#11
 2081 0008 1A70     	 strb r2,[r3]
 448:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2082              	 .loc 3 448 0
 2083 000a 194B     	 ldr r3,.L66+4
 2084 000c 4C22     	 mov r2,#76
 2085 000e 1A70     	 strb r2,[r3]
 449:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2086              	 .loc 3 449 0
 2087 0010 174B     	 ldr r3,.L66+4
 2088 0012 4922     	 mov r2,#73
 2089 0014 5A70     	 strb r2,[r3,#1]
 450:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2090              	 .loc 3 450 0
 2091 0016 164B     	 ldr r3,.L66+4
 2092 0018 4E22     	 mov r2,#78
 2093 001a 9A70     	 strb r2,[r3,#2]
 451:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2094              	 .loc 3 451 0
 2095 001c 154B     	 ldr r3,.L66+8
 2096 001e 1A78     	 ldrb r2,[r3]
 2097 0020 134B     	 ldr r3,.L66+4
 2098 0022 DA70     	 strb r2,[r3,#3]
 452:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2099              	 .loc 3 452 0
 2100 0024 114B     	 ldr r3,.L66
 2101 0026 1A78     	 ldrb r2,[r3]
 2102 0028 114B     	 ldr r3,.L66+4
 2103 002a 1A71     	 strb r2,[r3,#4]
 453:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2104              	 .loc 3 453 0
 2105 002c 104B     	 ldr r3,.L66+4
 2106 002e 6E22     	 mov r2,#110
 2107 0030 5A71     	 strb r2,[r3,#5]
 454:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2108              	 .loc 3 454 0
 2109 0032 114B     	 ldr r3,.L66+12
 2110 0034 1B88     	 ldrh r3,[r3]
 2111 0036 1B0A     	 lsr r3,r3,#8
 2112 0038 9BB2     	 uxth r3,r3
 2113 003a DAB2     	 uxtb r2,r3
 2114 003c 0C4B     	 ldr r3,.L66+4
 2115 003e 9A71     	 strb r2,[r3,#6]
 455:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2116              	 .loc 3 455 0
 2117 0040 0D4B     	 ldr r3,.L66+12
 2118 0042 1B88     	 ldrh r3,[r3]
 2119 0044 DAB2     	 uxtb r2,r3
 2120 0046 0A4B     	 ldr r3,.L66+4
 2121 0048 DA71     	 strb r2,[r3,#7]
 456:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2122              	 .loc 3 456 0
 2123 004a 0C4B     	 ldr r3,.L66+16
 2124 004c 1B88     	 ldrh r3,[r3]
 2125 004e 1B0A     	 lsr r3,r3,#8
 2126 0050 9BB2     	 uxth r3,r3
 2127 0052 DAB2     	 uxtb r2,r3
 2128 0054 064B     	 ldr r3,.L66+4
 2129 0056 1A72     	 strb r2,[r3,#8]
 457:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2130              	 .loc 3 457 0
 2131 0058 084B     	 ldr r3,.L66+16
 2132 005a 1B88     	 ldrh r3,[r3]
 2133 005c DAB2     	 uxtb r2,r3
 2134 005e 044B     	 ldr r3,.L66+4
 2135 0060 5A72     	 strb r2,[r3,#9]
 458:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2136              	 .loc 3 458 0
 2137 0062 034B     	 ldr r3,.L66+4
 2138 0064 FF22     	 mov r2,#255
 2139 0066 9A72     	 strb r2,[r3,#10]
 459:../samuel/samuel_io.c ****    }
 2140              	 .loc 3 459 0
 2141 0068 BD46     	 mov sp,r7
 2142              	 
 2143 006a 80BD     	 pop {r7,pc}
 2144              	.L67:
 2145              	 .align 2
 2146              	.L66:
 2147 006c 00000000 	 .word transmit_buf_size
 2148 0070 00000000 	 .word new_data
 2149 0074 00000000 	 .word node_id
 2150 0078 00000000 	 .word Ser_NrH
 2151 007c 00000000 	 .word Ser_NrL
 2152              	 .cfi_endproc
 2153              	.LFE309:
 2155              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2156              	 .align 2
 2157              	 .global new_data_readbuff2Back
 2158              	 .code 16
 2159              	 .thumb_func
 2161              	new_data_readbuff2Back:
 2162              	.LFB310:
 460:../samuel/samuel_io.c ****    //-------------------------------------
 461:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 462:../samuel/samuel_io.c ****    {
 2163              	 .loc 3 462 0
 2164              	 .cfi_startproc
 2165 0000 80B5     	 push {r7,lr}
 2166              	.LCFI52:
 2167              	 .cfi_def_cfa_offset 8
 2168              	 .cfi_offset 7,-8
 2169              	 .cfi_offset 14,-4
 2170 0002 00AF     	 add r7,sp,#0
 2171              	.LCFI53:
 2172              	 .cfi_def_cfa_register 7
 463:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2173              	 .loc 3 463 0
 2174 0004 2F4B     	 ldr r3,.L69
 2175 0006 1822     	 mov r2,#24
 2176 0008 1A70     	 strb r2,[r3]
 464:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2177              	 .loc 3 464 0
 2178 000a 2F4B     	 ldr r3,.L69+4
 2179 000c 4C22     	 mov r2,#76
 2180 000e 1A70     	 strb r2,[r3]
 465:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2181              	 .loc 3 465 0
 2182 0010 2D4B     	 ldr r3,.L69+4
 2183 0012 4922     	 mov r2,#73
 2184 0014 5A70     	 strb r2,[r3,#1]
 466:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2185              	 .loc 3 466 0
 2186 0016 2C4B     	 ldr r3,.L69+4
 2187 0018 4E22     	 mov r2,#78
 2188 001a 9A70     	 strb r2,[r3,#2]
 467:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2189              	 .loc 3 467 0
 2190 001c 2B4B     	 ldr r3,.L69+8
 2191 001e 1A78     	 ldrb r2,[r3]
 2192 0020 294B     	 ldr r3,.L69+4
 2193 0022 DA70     	 strb r2,[r3,#3]
 468:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2194              	 .loc 3 468 0
 2195 0024 274B     	 ldr r3,.L69
 2196 0026 1A78     	 ldrb r2,[r3]
 2197 0028 274B     	 ldr r3,.L69+4
 2198 002a 1A71     	 strb r2,[r3,#4]
 469:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2199              	 .loc 3 469 0
 2200 002c 264B     	 ldr r3,.L69+4
 2201 002e 7022     	 mov r2,#112
 2202 0030 5A71     	 strb r2,[r3,#5]
 470:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2203              	 .loc 3 470 0
 2204 0032 254B     	 ldr r3,.L69+4
 2205 0034 0022     	 mov r2,#0
 2206 0036 9A71     	 strb r2,[r3,#6]
 471:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2207              	 .loc 3 471 0
 2208 0038 254B     	 ldr r3,.L69+12
 2209 003a 1A78     	 ldrb r2,[r3]
 2210 003c 224B     	 ldr r3,.L69+4
 2211 003e DA71     	 strb r2,[r3,#7]
 472:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2212              	 .loc 3 472 0
 2213 0040 234B     	 ldr r3,.L69+12
 2214 0042 5A78     	 ldrb r2,[r3,#1]
 2215 0044 204B     	 ldr r3,.L69+4
 2216 0046 1A72     	 strb r2,[r3,#8]
 473:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2217              	 .loc 3 473 0
 2218 0048 214B     	 ldr r3,.L69+12
 2219 004a 9A78     	 ldrb r2,[r3,#2]
 2220 004c 1E4B     	 ldr r3,.L69+4
 2221 004e 5A72     	 strb r2,[r3,#9]
 474:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2222              	 .loc 3 474 0
 2223 0050 1F4B     	 ldr r3,.L69+12
 2224 0052 DA78     	 ldrb r2,[r3,#3]
 2225 0054 1C4B     	 ldr r3,.L69+4
 2226 0056 9A72     	 strb r2,[r3,#10]
 475:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2227              	 .loc 3 475 0
 2228 0058 1D4B     	 ldr r3,.L69+12
 2229 005a 1A79     	 ldrb r2,[r3,#4]
 2230 005c 1A4B     	 ldr r3,.L69+4
 2231 005e DA72     	 strb r2,[r3,#11]
 476:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2232              	 .loc 3 476 0
 2233 0060 1B4B     	 ldr r3,.L69+12
 2234 0062 5A79     	 ldrb r2,[r3,#5]
 2235 0064 184B     	 ldr r3,.L69+4
 2236 0066 1A73     	 strb r2,[r3,#12]
 477:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2237              	 .loc 3 477 0
 2238 0068 194B     	 ldr r3,.L69+12
 2239 006a 9A79     	 ldrb r2,[r3,#6]
 2240 006c 164B     	 ldr r3,.L69+4
 2241 006e 5A73     	 strb r2,[r3,#13]
 478:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2242              	 .loc 3 478 0
 2243 0070 174B     	 ldr r3,.L69+12
 2244 0072 DA79     	 ldrb r2,[r3,#7]
 2245 0074 144B     	 ldr r3,.L69+4
 2246 0076 9A73     	 strb r2,[r3,#14]
 479:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2247              	 .loc 3 479 0
 2248 0078 154B     	 ldr r3,.L69+12
 2249 007a 1A7A     	 ldrb r2,[r3,#8]
 2250 007c 124B     	 ldr r3,.L69+4
 2251 007e DA73     	 strb r2,[r3,#15]
 480:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2252              	 .loc 3 480 0
 2253 0080 134B     	 ldr r3,.L69+12
 2254 0082 5A7A     	 ldrb r2,[r3,#9]
 2255 0084 104B     	 ldr r3,.L69+4
 2256 0086 1A74     	 strb r2,[r3,#16]
 481:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2257              	 .loc 3 481 0
 2258 0088 114B     	 ldr r3,.L69+12
 2259 008a 9A7A     	 ldrb r2,[r3,#10]
 2260 008c 0E4B     	 ldr r3,.L69+4
 2261 008e 5A74     	 strb r2,[r3,#17]
 482:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2262              	 .loc 3 482 0
 2263 0090 0F4B     	 ldr r3,.L69+12
 2264 0092 DA7A     	 ldrb r2,[r3,#11]
 2265 0094 0C4B     	 ldr r3,.L69+4
 2266 0096 9A74     	 strb r2,[r3,#18]
 483:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2267              	 .loc 3 483 0
 2268 0098 0D4B     	 ldr r3,.L69+12
 2269 009a 1A7B     	 ldrb r2,[r3,#12]
 2270 009c 0A4B     	 ldr r3,.L69+4
 2271 009e DA74     	 strb r2,[r3,#19]
 484:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2272              	 .loc 3 484 0
 2273 00a0 0B4B     	 ldr r3,.L69+12
 2274 00a2 5A7B     	 ldrb r2,[r3,#13]
 2275 00a4 084B     	 ldr r3,.L69+4
 2276 00a6 1A75     	 strb r2,[r3,#20]
 485:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2277              	 .loc 3 485 0
 2278 00a8 094B     	 ldr r3,.L69+12
 2279 00aa 9A7B     	 ldrb r2,[r3,#14]
 2280 00ac 064B     	 ldr r3,.L69+4
 2281 00ae 5A75     	 strb r2,[r3,#21]
 486:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2282              	 .loc 3 486 0
 2283 00b0 074B     	 ldr r3,.L69+12
 2284 00b2 DA7B     	 ldrb r2,[r3,#15]
 2285 00b4 044B     	 ldr r3,.L69+4
 2286 00b6 9A75     	 strb r2,[r3,#22]
 487:../samuel/samuel_io.c **** 
 488:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2287              	 .loc 3 488 0
 2288 00b8 034B     	 ldr r3,.L69+4
 2289 00ba FF22     	 mov r2,#255
 2290 00bc DA75     	 strb r2,[r3,#23]
 489:../samuel/samuel_io.c ****    }
 2291              	 .loc 3 489 0
 2292 00be BD46     	 mov sp,r7
 2293              	 
 2294 00c0 80BD     	 pop {r7,pc}
 2295              	.L70:
 2296 00c2 C046     	 .align 2
 2297              	.L69:
 2298 00c4 00000000 	 .word transmit_buf_size
 2299 00c8 00000000 	 .word new_data
 2300 00cc 00000000 	 .word node_id
 2301 00d0 00000000 	 .word ReadBuffer2
 2302              	 .cfi_endproc
 2303              	.LFE310:
 2305              	 .section .text.clearEpromBuffer,"ax",%progbits
 2306              	 .align 2
 2307              	 .global clearEpromBuffer
 2308              	 .code 16
 2309              	 .thumb_func
 2311              	clearEpromBuffer:
 2312              	.LFB311:
 490:../samuel/samuel_io.c **** 
 491:../samuel/samuel_io.c ****  //------------------------------------------------------
 492:../samuel/samuel_io.c **** 
 493:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 494:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 495:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 496:../samuel/samuel_io.c ****  {
 2313              	 .loc 3 496 0
 2314              	 .cfi_startproc
 2315 0000 80B5     	 push {r7,lr}
 2316              	.LCFI54:
 2317              	 .cfi_def_cfa_offset 8
 2318              	 .cfi_offset 7,-8
 2319              	 .cfi_offset 14,-4
 2320 0002 00AF     	 add r7,sp,#0
 2321              	.LCFI55:
 2322              	 .cfi_def_cfa_register 7
 497:../samuel/samuel_io.c **** 
 498:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 499:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2323              	 .loc 3 499 0
 2324 0004 1E4B     	 ldr r3,.L78
 2325 0006 0022     	 mov r2,#0
 2326 0008 1A70     	 strb r2,[r3]
 2327 000a 0BE0     	 b .L72
 2328              	.L73:
 500:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2329              	 .loc 3 500 0 discriminator 3
 2330 000c 1C4B     	 ldr r3,.L78
 2331 000e 1B78     	 ldrb r3,[r3]
 2332 0010 1A1C     	 mov r2,r3
 2333 0012 1C4B     	 ldr r3,.L78+4
 2334 0014 0021     	 mov r1,#0
 2335 0016 9954     	 strb r1,[r3,r2]
 499:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2336              	 .loc 3 499 0 discriminator 3
 2337 0018 194B     	 ldr r3,.L78
 2338 001a 1B78     	 ldrb r3,[r3]
 2339 001c 0133     	 add r3,r3,#1
 2340 001e DAB2     	 uxtb r2,r3
 2341 0020 174B     	 ldr r3,.L78
 2342 0022 1A70     	 strb r2,[r3]
 2343              	.L72:
 499:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2344              	 .loc 3 499 0 is_stmt 0 discriminator 1
 2345 0024 164B     	 ldr r3,.L78
 2346 0026 1B78     	 ldrb r3,[r3]
 2347 0028 0F2B     	 cmp r3,#15
 2348 002a EFD9     	 bls .L73
 501:../samuel/samuel_io.c **** 
 502:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 503:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2349              	 .loc 3 503 0 is_stmt 1
 2350 002c 144B     	 ldr r3,.L78
 2351 002e 0022     	 mov r2,#0
 2352 0030 1A70     	 strb r2,[r3]
 2353 0032 0BE0     	 b .L74
 2354              	.L75:
 504:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2355              	 .loc 3 504 0 discriminator 3
 2356 0034 124B     	 ldr r3,.L78
 2357 0036 1B78     	 ldrb r3,[r3]
 2358 0038 1A1C     	 mov r2,r3
 2359 003a 134B     	 ldr r3,.L78+8
 2360 003c 0021     	 mov r1,#0
 2361 003e 9954     	 strb r1,[r3,r2]
 503:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2362              	 .loc 3 503 0 discriminator 3
 2363 0040 0F4B     	 ldr r3,.L78
 2364 0042 1B78     	 ldrb r3,[r3]
 2365 0044 0133     	 add r3,r3,#1
 2366 0046 DAB2     	 uxtb r2,r3
 2367 0048 0D4B     	 ldr r3,.L78
 2368 004a 1A70     	 strb r2,[r3]
 2369              	.L74:
 503:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2370              	 .loc 3 503 0 is_stmt 0 discriminator 1
 2371 004c 0C4B     	 ldr r3,.L78
 2372 004e 1B78     	 ldrb r3,[r3]
 2373 0050 0F2B     	 cmp r3,#15
 2374 0052 EFD9     	 bls .L75
 505:../samuel/samuel_io.c **** 
 506:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 507:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2375              	 .loc 3 507 0 is_stmt 1
 2376 0054 0A4B     	 ldr r3,.L78
 2377 0056 0022     	 mov r2,#0
 2378 0058 1A70     	 strb r2,[r3]
 2379 005a 0BE0     	 b .L76
 2380              	.L77:
 508:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2381              	 .loc 3 508 0 discriminator 3
 2382 005c 084B     	 ldr r3,.L78
 2383 005e 1B78     	 ldrb r3,[r3]
 2384 0060 1A1C     	 mov r2,r3
 2385 0062 0A4B     	 ldr r3,.L78+12
 2386 0064 0021     	 mov r1,#0
 2387 0066 9954     	 strb r1,[r3,r2]
 507:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2388              	 .loc 3 507 0 discriminator 3
 2389 0068 054B     	 ldr r3,.L78
 2390 006a 1B78     	 ldrb r3,[r3]
 2391 006c 0133     	 add r3,r3,#1
 2392 006e DAB2     	 uxtb r2,r3
 2393 0070 034B     	 ldr r3,.L78
 2394 0072 1A70     	 strb r2,[r3]
 2395              	.L76:
 507:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2396              	 .loc 3 507 0 is_stmt 0 discriminator 1
 2397 0074 024B     	 ldr r3,.L78
 2398 0076 1B78     	 ldrb r3,[r3]
 2399 0078 1F2B     	 cmp r3,#31
 2400 007a EFD9     	 bls .L77
 509:../samuel/samuel_io.c ****  }
 2401              	 .loc 3 509 0 is_stmt 1
 2402 007c BD46     	 mov sp,r7
 2403              	 
 2404 007e 80BD     	 pop {r7,pc}
 2405              	.L79:
 2406              	 .align 2
 2407              	.L78:
 2408 0080 00000000 	 .word Index
 2409 0084 00000000 	 .word ReadBuffer1
 2410 0088 00000000 	 .word ReadBuffer2
 2411 008c 00000000 	 .word ReadBuffer3
 2412              	 .cfi_endproc
 2413              	.LFE311:
 2415              	 .section .text.fillEpromBuffer,"ax",%progbits
 2416              	 .align 2
 2417              	 .global fillEpromBuffer
 2418              	 .code 16
 2419              	 .thumb_func
 2421              	fillEpromBuffer:
 2422              	.LFB312:
 510:../samuel/samuel_io.c **** 
 511:../samuel/samuel_io.c ****  //---------------------------------
 512:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 513:../samuel/samuel_io.c ****  {
 2423              	 .loc 3 513 0
 2424              	 .cfi_startproc
 2425 0000 80B5     	 push {r7,lr}
 2426              	.LCFI56:
 2427              	 .cfi_def_cfa_offset 8
 2428              	 .cfi_offset 7,-8
 2429              	 .cfi_offset 14,-4
 2430 0002 00AF     	 add r7,sp,#0
 2431              	.LCFI57:
 2432              	 .cfi_def_cfa_register 7
 514:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 515:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2433              	 .loc 3 515 0
 2434 0004 0B4B     	 ldr r3,.L83
 2435 0006 0022     	 mov r2,#0
 2436 0008 1A70     	 strb r2,[r3]
 2437 000a 0CE0     	 b .L81
 2438              	.L82:
 516:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2439              	 .loc 3 516 0 discriminator 3
 2440 000c 094B     	 ldr r3,.L83
 2441 000e 1B78     	 ldrb r3,[r3]
 2442 0010 1A1C     	 mov r2,r3
 2443 0012 084B     	 ldr r3,.L83
 2444 0014 1978     	 ldrb r1,[r3]
 2445 0016 084B     	 ldr r3,.L83+4
 2446 0018 9954     	 strb r1,[r3,r2]
 515:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2447              	 .loc 3 515 0 discriminator 3
 2448 001a 064B     	 ldr r3,.L83
 2449 001c 1B78     	 ldrb r3,[r3]
 2450 001e 0133     	 add r3,r3,#1
 2451 0020 DAB2     	 uxtb r2,r3
 2452 0022 044B     	 ldr r3,.L83
 2453 0024 1A70     	 strb r2,[r3]
 2454              	.L81:
 515:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2455              	 .loc 3 515 0 is_stmt 0 discriminator 1
 2456 0026 034B     	 ldr r3,.L83
 2457 0028 1B78     	 ldrb r3,[r3]
 2458 002a 632B     	 cmp r3,#99
 2459 002c EED9     	 bls .L82
 517:../samuel/samuel_io.c ****  }
 2460              	 .loc 3 517 0 is_stmt 1
 2461 002e BD46     	 mov sp,r7
 2462              	 
 2463 0030 80BD     	 pop {r7,pc}
 2464              	.L84:
 2465 0032 C046     	 .align 2
 2466              	.L83:
 2467 0034 00000000 	 .word Index
 2468 0038 00000000 	 .word data_buffer
 2469              	 .cfi_endproc
 2470              	.LFE312:
 2472              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2473              	 .align 2
 2474              	 .global fill2EpromBuffer
 2475              	 .code 16
 2476              	 .thumb_func
 2478              	fill2EpromBuffer:
 2479              	.LFB313:
 518:../samuel/samuel_io.c **** 
 519:../samuel/samuel_io.c ****  //---------------------------------
 520:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 521:../samuel/samuel_io.c ****  {
 2480              	 .loc 3 521 0
 2481              	 .cfi_startproc
 2482 0000 80B5     	 push {r7,lr}
 2483              	.LCFI58:
 2484              	 .cfi_def_cfa_offset 8
 2485              	 .cfi_offset 7,-8
 2486              	 .cfi_offset 14,-4
 2487 0002 00AF     	 add r7,sp,#0
 2488              	.LCFI59:
 2489              	 .cfi_def_cfa_register 7
 522:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 523:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2490              	 .loc 3 523 0
 2491 0004 0C4B     	 ldr r3,.L88
 2492 0006 0022     	 mov r2,#0
 2493 0008 1A70     	 strb r2,[r3]
 2494 000a 0EE0     	 b .L86
 2495              	.L87:
 524:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2496              	 .loc 3 524 0 discriminator 3
 2497 000c 0A4B     	 ldr r3,.L88
 2498 000e 1B78     	 ldrb r3,[r3]
 2499 0010 1A1C     	 mov r2,r3
 2500 0012 094B     	 ldr r3,.L88
 2501 0014 1B78     	 ldrb r3,[r3]
 2502 0016 DB43     	 mvn r3,r3
 2503 0018 D9B2     	 uxtb r1,r3
 2504 001a 084B     	 ldr r3,.L88+4
 2505 001c 9954     	 strb r1,[r3,r2]
 523:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2506              	 .loc 3 523 0 discriminator 3
 2507 001e 064B     	 ldr r3,.L88
 2508 0020 1B78     	 ldrb r3,[r3]
 2509 0022 0133     	 add r3,r3,#1
 2510 0024 DAB2     	 uxtb r2,r3
 2511 0026 044B     	 ldr r3,.L88
 2512 0028 1A70     	 strb r2,[r3]
 2513              	.L86:
 523:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2514              	 .loc 3 523 0 is_stmt 0 discriminator 1
 2515 002a 034B     	 ldr r3,.L88
 2516 002c 1B78     	 ldrb r3,[r3]
 2517 002e 632B     	 cmp r3,#99
 2518 0030 ECD9     	 bls .L87
 525:../samuel/samuel_io.c ****  }
 2519              	 .loc 3 525 0 is_stmt 1
 2520 0032 BD46     	 mov sp,r7
 2521              	 
 2522 0034 80BD     	 pop {r7,pc}
 2523              	.L89:
 2524 0036 C046     	 .align 2
 2525              	.L88:
 2526 0038 00000000 	 .word Index
 2527 003c 00000000 	 .word data_buffer
 2528              	 .cfi_endproc
 2529              	.LFE313:
 2531              	 .section .text.readAllEEprom,"ax",%progbits
 2532              	 .align 2
 2533              	 .global readAllEEprom
 2534              	 .code 16
 2535              	 .thumb_func
 2537              	readAllEEprom:
 2538              	.LFB314:
 526:../samuel/samuel_io.c **** 
 527:../samuel/samuel_io.c **** 
 528:../samuel/samuel_io.c ****  //------------------------------------------------
 529:../samuel/samuel_io.c **** 
 530:../samuel/samuel_io.c **** 
 531:../samuel/samuel_io.c ****  //------------------------------------------------
 532:../samuel/samuel_io.c ****  int readAllEEprom(void)
 533:../samuel/samuel_io.c ****  {
 2539              	 .loc 3 533 0
 2540              	 .cfi_startproc
 2541 0000 80B5     	 push {r7,lr}
 2542              	.LCFI60:
 2543              	 .cfi_def_cfa_offset 8
 2544              	 .cfi_offset 7,-8
 2545              	 .cfi_offset 14,-4
 2546 0002 00AF     	 add r7,sp,#0
 2547              	.LCFI61:
 2548              	 .cfi_def_cfa_register 7
 534:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2549              	 .loc 3 534 0
 2550 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2551 0008 031C     	 mov r3,r0
 2552 000a 1A1C     	 mov r2,r3
 2553 000c 614B     	 ldr r3,.L96
 2554 000e 1A70     	 strb r2,[r3]
 535:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2555              	 .loc 3 535 0
 2556 0010 604B     	 ldr r3,.L96
 2557 0012 1B78     	 ldrb r3,[r3]
 2558 0014 032B     	 cmp r3,#3
 2559 0016 0AD1     	 bne .L91
 536:../samuel/samuel_io.c ****    {
 537:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2560              	 .loc 3 537 0
 2561 0018 5F4B     	 ldr r3,.L96+4
 2562 001a 0120     	 mov r0,#1
 2563 001c 0021     	 mov r1,#0
 2564 001e 1A1C     	 mov r2,r3
 2565 0020 1023     	 mov r3,#16
 2566 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2567 0026 031C     	 mov r3,r0
 2568 0028 1A1C     	 mov r2,r3
 2569 002a 5C4B     	 ldr r3,.L96+8
 2570 002c 1A70     	 strb r2,[r3]
 2571              	.L91:
 538:../samuel/samuel_io.c ****    }
 539:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2572              	 .loc 3 539 0
 2573 002e 5B4B     	 ldr r3,.L96+8
 2574 0030 1B78     	 ldrb r3,[r3]
 2575 0032 002B     	 cmp r3,#0
 2576 0034 14D1     	 bne .L92
 540:../samuel/samuel_io.c ****    {
 541:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2577              	 .loc 3 541 0
 2578 0036 584B     	 ldr r3,.L96+4
 2579 0038 5B78     	 ldrb r3,[r3,#1]
 2580 003a 9AB2     	 uxth r2,r3
 2581 003c 584B     	 ldr r3,.L96+12
 2582 003e 1A80     	 strh r2,[r3]
 542:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2583              	 .loc 3 542 0
 2584 0040 554B     	 ldr r3,.L96+4
 2585 0042 9B78     	 ldrb r3,[r3,#2]
 2586 0044 9AB2     	 uxth r2,r3
 2587 0046 574B     	 ldr r3,.L96+16
 2588 0048 1A80     	 strh r2,[r3]
 543:../samuel/samuel_io.c **** 
 544:../samuel/samuel_io.c **** 
 545:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2589              	 .loc 3 545 0
 2590 004a 574B     	 ldr r3,.L96+20
 2591 004c 0220     	 mov r0,#2
 2592 004e 0021     	 mov r1,#0
 2593 0050 1A1C     	 mov r2,r3
 2594 0052 1023     	 mov r3,#16
 2595 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2596 0058 031C     	 mov r3,r0
 2597 005a 1A1C     	 mov r2,r3
 2598 005c 4F4B     	 ldr r3,.L96+8
 2599 005e 1A70     	 strb r2,[r3]
 2600              	.L92:
 546:../samuel/samuel_io.c ****    }
 547:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2601              	 .loc 3 547 0
 2602 0060 4E4B     	 ldr r3,.L96+8
 2603 0062 1B78     	 ldrb r3,[r3]
 2604 0064 002B     	 cmp r3,#0
 2605 0066 1ED1     	 bne .L93
 548:../samuel/samuel_io.c ****    {
 549:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2606              	 .loc 3 549 0
 2607 0068 4F4B     	 ldr r3,.L96+20
 2608 006a 5A78     	 ldrb r2,[r3,#1]
 2609 006c 4F4B     	 ldr r3,.L96+24
 2610 006e 1A70     	 strb r2,[r3]
 550:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2611              	 .loc 3 550 0
 2612 0070 4D4B     	 ldr r3,.L96+20
 2613 0072 9A78     	 ldrb r2,[r3,#2]
 2614 0074 4E4B     	 ldr r3,.L96+28
 2615 0076 1A70     	 strb r2,[r3]
 551:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2616              	 .loc 3 551 0
 2617 0078 4B4B     	 ldr r3,.L96+20
 2618 007a DB78     	 ldrb r3,[r3,#3]
 2619 007c 9BB2     	 uxth r3,r3
 2620 007e 1B02     	 lsl r3,r3,#8
 2621 0080 9AB2     	 uxth r2,r3
 2622 0082 494B     	 ldr r3,.L96+20
 2623 0084 1B79     	 ldrb r3,[r3,#4]
 2624 0086 9BB2     	 uxth r3,r3
 2625 0088 D318     	 add r3,r2,r3
 2626 008a 9AB2     	 uxth r2,r3
 2627 008c 494B     	 ldr r3,.L96+32
 2628 008e 1A80     	 strh r2,[r3]
 552:../samuel/samuel_io.c **** 
 553:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2629              	 .loc 3 553 0
 2630 0090 494B     	 ldr r3,.L96+36
 2631 0092 0520     	 mov r0,#5
 2632 0094 0021     	 mov r1,#0
 2633 0096 1A1C     	 mov r2,r3
 2634 0098 2023     	 mov r3,#32
 2635 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2636 009e 031C     	 mov r3,r0
 2637 00a0 1A1C     	 mov r2,r3
 2638 00a2 3E4B     	 ldr r3,.L96+8
 2639 00a4 1A70     	 strb r2,[r3]
 2640              	.L93:
 554:../samuel/samuel_io.c ****    }
 555:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2641              	 .loc 3 555 0
 2642 00a6 3D4B     	 ldr r3,.L96+8
 2643 00a8 1B78     	 ldrb r3,[r3]
 2644 00aa 002B     	 cmp r3,#0
 2645 00ac 67D1     	 bne .L94
 556:../samuel/samuel_io.c ****    {
 557:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2646              	 .loc 3 557 0
 2647 00ae 424B     	 ldr r3,.L96+36
 2648 00b0 5A78     	 ldrb r2,[r3,#1]
 2649 00b2 424B     	 ldr r3,.L96+40
 2650 00b4 1A70     	 strb r2,[r3]
 558:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2651              	 .loc 3 558 0
 2652 00b6 404B     	 ldr r3,.L96+36
 2653 00b8 9A78     	 ldrb r2,[r3,#2]
 2654 00ba 414B     	 ldr r3,.L96+44
 2655 00bc 1A70     	 strb r2,[r3]
 559:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2656              	 .loc 3 559 0
 2657 00be 3E4B     	 ldr r3,.L96+36
 2658 00c0 DB78     	 ldrb r3,[r3,#3]
 2659 00c2 9BB2     	 uxth r3,r3
 2660 00c4 1B02     	 lsl r3,r3,#8
 2661 00c6 9AB2     	 uxth r2,r3
 2662 00c8 3B4B     	 ldr r3,.L96+36
 2663 00ca 1B79     	 ldrb r3,[r3,#4]
 2664 00cc 9BB2     	 uxth r3,r3
 2665 00ce D318     	 add r3,r2,r3
 2666 00d0 9AB2     	 uxth r2,r3
 2667 00d2 3C4B     	 ldr r3,.L96+48
 2668 00d4 1A80     	 strh r2,[r3]
 560:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2669              	 .loc 3 560 0
 2670 00d6 384B     	 ldr r3,.L96+36
 2671 00d8 5B79     	 ldrb r3,[r3,#5]
 2672 00da 9BB2     	 uxth r3,r3
 2673 00dc 1B02     	 lsl r3,r3,#8
 2674 00de 9AB2     	 uxth r2,r3
 2675 00e0 354B     	 ldr r3,.L96+36
 2676 00e2 9B79     	 ldrb r3,[r3,#6]
 2677 00e4 9BB2     	 uxth r3,r3
 2678 00e6 D318     	 add r3,r2,r3
 2679 00e8 9AB2     	 uxth r2,r3
 2680 00ea 374B     	 ldr r3,.L96+52
 2681 00ec 1A80     	 strh r2,[r3]
 561:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2682              	 .loc 3 561 0
 2683 00ee 324B     	 ldr r3,.L96+36
 2684 00f0 DB79     	 ldrb r3,[r3,#7]
 2685 00f2 9BB2     	 uxth r3,r3
 2686 00f4 1B02     	 lsl r3,r3,#8
 2687 00f6 9AB2     	 uxth r2,r3
 2688 00f8 2F4B     	 ldr r3,.L96+36
 2689 00fa 1B7A     	 ldrb r3,[r3,#8]
 2690 00fc 9BB2     	 uxth r3,r3
 2691 00fe D318     	 add r3,r2,r3
 2692 0100 9AB2     	 uxth r2,r3
 2693 0102 324B     	 ldr r3,.L96+56
 2694 0104 1A80     	 strh r2,[r3]
 562:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2695              	 .loc 3 562 0
 2696 0106 2C4B     	 ldr r3,.L96+36
 2697 0108 5B7A     	 ldrb r3,[r3,#9]
 2698 010a 9BB2     	 uxth r3,r3
 2699 010c 1B02     	 lsl r3,r3,#8
 2700 010e 9AB2     	 uxth r2,r3
 2701 0110 294B     	 ldr r3,.L96+36
 2702 0112 9B7A     	 ldrb r3,[r3,#10]
 2703 0114 9BB2     	 uxth r3,r3
 2704 0116 D318     	 add r3,r2,r3
 2705 0118 9AB2     	 uxth r2,r3
 2706 011a 2D4B     	 ldr r3,.L96+60
 2707 011c 1A80     	 strh r2,[r3]
 563:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2708              	 .loc 3 563 0
 2709 011e 264B     	 ldr r3,.L96+36
 2710 0120 DB7A     	 ldrb r3,[r3,#11]
 2711 0122 9BB2     	 uxth r3,r3
 2712 0124 1B02     	 lsl r3,r3,#8
 2713 0126 9AB2     	 uxth r2,r3
 2714 0128 234B     	 ldr r3,.L96+36
 2715 012a 1B7B     	 ldrb r3,[r3,#12]
 2716 012c 9BB2     	 uxth r3,r3
 2717 012e D318     	 add r3,r2,r3
 2718 0130 9AB2     	 uxth r2,r3
 2719 0132 284B     	 ldr r3,.L96+64
 2720 0134 1A80     	 strh r2,[r3]
 564:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2721              	 .loc 3 564 0
 2722 0136 204B     	 ldr r3,.L96+36
 2723 0138 5B7B     	 ldrb r3,[r3,#13]
 2724 013a 9BB2     	 uxth r3,r3
 2725 013c 1B02     	 lsl r3,r3,#8
 2726 013e 9AB2     	 uxth r2,r3
 2727 0140 1D4B     	 ldr r3,.L96+36
 2728 0142 9B7B     	 ldrb r3,[r3,#14]
 2729 0144 9BB2     	 uxth r3,r3
 2730 0146 D318     	 add r3,r2,r3
 2731 0148 9AB2     	 uxth r2,r3
 2732 014a 234B     	 ldr r3,.L96+68
 2733 014c 1A80     	 strh r2,[r3]
 565:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 2734              	 .loc 3 565 0
 2735 014e 1A4B     	 ldr r3,.L96+36
 2736 0150 DB7B     	 ldrb r3,[r3,#15]
 2737 0152 9BB2     	 uxth r3,r3
 2738 0154 1B02     	 lsl r3,r3,#8
 2739 0156 9AB2     	 uxth r2,r3
 2740 0158 174B     	 ldr r3,.L96+36
 2741 015a 1B7C     	 ldrb r3,[r3,#16]
 2742 015c 9BB2     	 uxth r3,r3
 2743 015e D318     	 add r3,r2,r3
 2744 0160 9AB2     	 uxth r2,r3
 2745 0162 1E4B     	 ldr r3,.L96+72
 2746 0164 1A80     	 strh r2,[r3]
 566:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 2747              	 .loc 3 566 0
 2748 0166 144B     	 ldr r3,.L96+36
 2749 0168 5B7C     	 ldrb r3,[r3,#17]
 2750 016a 9BB2     	 uxth r3,r3
 2751 016c 1B02     	 lsl r3,r3,#8
 2752 016e 9AB2     	 uxth r2,r3
 2753 0170 114B     	 ldr r3,.L96+36
 2754 0172 9B7C     	 ldrb r3,[r3,#18]
 2755 0174 9BB2     	 uxth r3,r3
 2756 0176 D318     	 add r3,r2,r3
 2757 0178 9AB2     	 uxth r2,r3
 2758 017a 194B     	 ldr r3,.L96+76
 2759 017c 1A80     	 strh r2,[r3]
 2760              	.L94:
 567:../samuel/samuel_io.c **** 
 568:../samuel/samuel_io.c ****    }
 569:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 2761              	 .loc 3 569 0
 2762 017e 054B     	 ldr r3,.L96
 2763 0180 1B78     	 ldrb r3,[r3]
 2764 0182 1A1C     	 mov r2,r3
 2765 0184 054B     	 ldr r3,.L96+8
 2766 0186 1B78     	 ldrb r3,[r3]
 2767 0188 1B01     	 lsl r3,r3,#4
 2768 018a D318     	 add r3,r2,r3
 570:../samuel/samuel_io.c ****  }
 2769              	 .loc 3 570 0
 2770 018c 181C     	 mov r0,r3
 2771 018e BD46     	 mov sp,r7
 2772              	 
 2773 0190 80BD     	 pop {r7,pc}
 2774              	.L97:
 2775 0192 C046     	 .align 2
 2776              	.L96:
 2777 0194 00000000 	 .word EEprom_status
 2778 0198 00000000 	 .word ReadBuffer1
 2779 019c 00000000 	 .word oper_status
 2780 01a0 00000000 	 .word Ser_NrH
 2781 01a4 00000000 	 .word Ser_NrL
 2782 01a8 00000000 	 .word ReadBuffer2
 2783 01ac 00000000 	 .word node_id_alt
 2784 01b0 00000000 	 .word node_id
 2785 01b4 00000000 	 .word node_id_16bit
 2786 01b8 00000000 	 .word ReadBuffer3
 2787 01bc 00000000 	 .word RegOnOff
 2788 01c0 00000000 	 .word RegOnOff2
 2789 01c4 00000000 	 .word dimAkt_Ww
 2790 01c8 00000000 	 .word dimAkt_Cw
 2791 01cc 00000000 	 .word dimOff_Ww
 2792 01d0 00000000 	 .word dimOff_Cw
 2793 01d4 00000000 	 .word dimNorm1_Ww
 2794 01d8 00000000 	 .word dimNorm1_Cw
 2795 01dc 00000000 	 .word dimNorm2_Ww
 2796 01e0 00000000 	 .word dimNorm2_Cw
 2797              	 .cfi_endproc
 2798              	.LFE314:
 2800              	 .section .text.readSerNrEEprom,"ax",%progbits
 2801              	 .align 2
 2802              	 .global readSerNrEEprom
 2803              	 .code 16
 2804              	 .thumb_func
 2806              	readSerNrEEprom:
 2807              	.LFB315:
 571:../samuel/samuel_io.c ****  //------------------------------------------------
 572:../samuel/samuel_io.c **** 
 573:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 574:../samuel/samuel_io.c ****  {
 2808              	 .loc 3 574 0
 2809              	 .cfi_startproc
 2810 0000 80B5     	 push {r7,lr}
 2811              	.LCFI62:
 2812              	 .cfi_def_cfa_offset 8
 2813              	 .cfi_offset 7,-8
 2814              	 .cfi_offset 14,-4
 2815 0002 00AF     	 add r7,sp,#0
 2816              	.LCFI63:
 2817              	 .cfi_def_cfa_register 7
 575:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2818              	 .loc 3 575 0
 2819 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2820 0008 031C     	 mov r3,r0
 2821 000a 1A1C     	 mov r2,r3
 2822 000c 0D4B     	 ldr r3,.L101
 2823 000e 1A70     	 strb r2,[r3]
 576:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2824              	 .loc 3 576 0
 2825 0010 0C4B     	 ldr r3,.L101
 2826 0012 1B78     	 ldrb r3,[r3]
 2827 0014 032B     	 cmp r3,#3
 2828 0016 0AD1     	 bne .L99
 577:../samuel/samuel_io.c **** 	 {
 578:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2829              	 .loc 3 578 0
 2830 0018 0B4B     	 ldr r3,.L101+4
 2831 001a 0120     	 mov r0,#1
 2832 001c 0021     	 mov r1,#0
 2833 001e 1A1C     	 mov r2,r3
 2834 0020 1023     	 mov r3,#16
 2835 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2836 0026 031C     	 mov r3,r0
 2837 0028 1A1C     	 mov r2,r3
 2838 002a 084B     	 ldr r3,.L101+8
 2839 002c 1A70     	 strb r2,[r3]
 2840              	.L99:
 579:../samuel/samuel_io.c ****      }
 580:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 2841              	 .loc 3 580 0
 2842 002e 054B     	 ldr r3,.L101
 2843 0030 1B78     	 ldrb r3,[r3]
 2844 0032 1A1C     	 mov r2,r3
 2845 0034 054B     	 ldr r3,.L101+8
 2846 0036 1B78     	 ldrb r3,[r3]
 2847 0038 1B01     	 lsl r3,r3,#4
 2848 003a D318     	 add r3,r2,r3
 581:../samuel/samuel_io.c ****  }
 2849              	 .loc 3 581 0
 2850 003c 181C     	 mov r0,r3
 2851 003e BD46     	 mov sp,r7
 2852              	 
 2853 0040 80BD     	 pop {r7,pc}
 2854              	.L102:
 2855 0042 C046     	 .align 2
 2856              	.L101:
 2857 0044 00000000 	 .word EEprom_status
 2858 0048 00000000 	 .word ReadBuffer1
 2859 004c 00000000 	 .word oper_status
 2860              	 .cfi_endproc
 2861              	.LFE315:
 2863              	 .section .text.readNodeIdEEprom,"ax",%progbits
 2864              	 .align 2
 2865              	 .global readNodeIdEEprom
 2866              	 .code 16
 2867              	 .thumb_func
 2869              	readNodeIdEEprom:
 2870              	.LFB316:
 582:../samuel/samuel_io.c ****  //------------------------------------------------
 583:../samuel/samuel_io.c **** 
 584:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 585:../samuel/samuel_io.c ****  {
 2871              	 .loc 3 585 0
 2872              	 .cfi_startproc
 2873 0000 80B5     	 push {r7,lr}
 2874              	.LCFI64:
 2875              	 .cfi_def_cfa_offset 8
 2876              	 .cfi_offset 7,-8
 2877              	 .cfi_offset 14,-4
 2878 0002 00AF     	 add r7,sp,#0
 2879              	.LCFI65:
 2880              	 .cfi_def_cfa_register 7
 586:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2881              	 .loc 3 586 0
 2882 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2883 0008 031C     	 mov r3,r0
 2884 000a 1A1C     	 mov r2,r3
 2885 000c 0D4B     	 ldr r3,.L106
 2886 000e 1A70     	 strb r2,[r3]
 587:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2887              	 .loc 3 587 0
 2888 0010 0C4B     	 ldr r3,.L106
 2889 0012 1B78     	 ldrb r3,[r3]
 2890 0014 032B     	 cmp r3,#3
 2891 0016 0AD1     	 bne .L104
 588:../samuel/samuel_io.c **** 	 {
 589:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2892              	 .loc 3 589 0
 2893 0018 0B4B     	 ldr r3,.L106+4
 2894 001a 0220     	 mov r0,#2
 2895 001c 0021     	 mov r1,#0
 2896 001e 1A1C     	 mov r2,r3
 2897 0020 1023     	 mov r3,#16
 2898 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2899 0026 031C     	 mov r3,r0
 2900 0028 1A1C     	 mov r2,r3
 2901 002a 084B     	 ldr r3,.L106+8
 2902 002c 1A70     	 strb r2,[r3]
 2903              	.L104:
 590:../samuel/samuel_io.c ****      }
 591:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2904              	 .loc 3 591 0
 2905 002e 054B     	 ldr r3,.L106
 2906 0030 1B78     	 ldrb r3,[r3]
 2907 0032 1A1C     	 mov r2,r3
 2908 0034 054B     	 ldr r3,.L106+8
 2909 0036 1B78     	 ldrb r3,[r3]
 2910 0038 1B01     	 lsl r3,r3,#4
 2911 003a D318     	 add r3,r2,r3
 592:../samuel/samuel_io.c ****  }
 2912              	 .loc 3 592 0
 2913 003c 181C     	 mov r0,r3
 2914 003e BD46     	 mov sp,r7
 2915              	 
 2916 0040 80BD     	 pop {r7,pc}
 2917              	.L107:
 2918 0042 C046     	 .align 2
 2919              	.L106:
 2920 0044 00000000 	 .word EEprom_status
 2921 0048 00000000 	 .word ReadBuffer2
 2922 004c 00000000 	 .word oper_status
 2923              	 .cfi_endproc
 2924              	.LFE316:
 2926              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 2927              	 .align 2
 2928              	 .global read_akt_light_EEprom
 2929              	 .code 16
 2930              	 .thumb_func
 2932              	read_akt_light_EEprom:
 2933              	.LFB317:
 593:../samuel/samuel_io.c **** 
 594:../samuel/samuel_io.c ****  //------------------------------------------------
 595:../samuel/samuel_io.c **** 
 596:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 597:../samuel/samuel_io.c ****  {
 2934              	 .loc 3 597 0
 2935              	 .cfi_startproc
 2936 0000 80B5     	 push {r7,lr}
 2937              	.LCFI66:
 2938              	 .cfi_def_cfa_offset 8
 2939              	 .cfi_offset 7,-8
 2940              	 .cfi_offset 14,-4
 2941 0002 00AF     	 add r7,sp,#0
 2942              	.LCFI67:
 2943              	 .cfi_def_cfa_register 7
 598:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2944              	 .loc 3 598 0
 2945 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2946 0008 031C     	 mov r3,r0
 2947 000a 1A1C     	 mov r2,r3
 2948 000c 0D4B     	 ldr r3,.L111
 2949 000e 1A70     	 strb r2,[r3]
 599:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2950              	 .loc 3 599 0
 2951 0010 0C4B     	 ldr r3,.L111
 2952 0012 1B78     	 ldrb r3,[r3]
 2953 0014 032B     	 cmp r3,#3
 2954 0016 0AD1     	 bne .L109
 600:../samuel/samuel_io.c **** 	 {
 601:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 2955              	 .loc 3 601 0
 2956 0018 0B4B     	 ldr r3,.L111+4
 2957 001a 0420     	 mov r0,#4
 2958 001c 0021     	 mov r1,#0
 2959 001e 1A1C     	 mov r2,r3
 2960 0020 1023     	 mov r3,#16
 2961 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2962 0026 031C     	 mov r3,r0
 2963 0028 1A1C     	 mov r2,r3
 2964 002a 084B     	 ldr r3,.L111+8
 2965 002c 1A70     	 strb r2,[r3]
 2966              	.L109:
 602:../samuel/samuel_io.c ****      }
 603:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2967              	 .loc 3 603 0
 2968 002e 054B     	 ldr r3,.L111
 2969 0030 1B78     	 ldrb r3,[r3]
 2970 0032 1A1C     	 mov r2,r3
 2971 0034 054B     	 ldr r3,.L111+8
 2972 0036 1B78     	 ldrb r3,[r3]
 2973 0038 1B01     	 lsl r3,r3,#4
 2974 003a D318     	 add r3,r2,r3
 604:../samuel/samuel_io.c ****  }
 2975              	 .loc 3 604 0
 2976 003c 181C     	 mov r0,r3
 2977 003e BD46     	 mov sp,r7
 2978              	 
 2979 0040 80BD     	 pop {r7,pc}
 2980              	.L112:
 2981 0042 C046     	 .align 2
 2982              	.L111:
 2983 0044 00000000 	 .word EEprom_status
 2984 0048 00000000 	 .word ReadBuffer2
 2985 004c 00000000 	 .word oper_status
 2986              	 .cfi_endproc
 2987              	.LFE317:
 2989              	 .section .text.read_off_light_EEprom,"ax",%progbits
 2990              	 .align 2
 2991              	 .global read_off_light_EEprom
 2992              	 .code 16
 2993              	 .thumb_func
 2995              	read_off_light_EEprom:
 2996              	.LFB318:
 605:../samuel/samuel_io.c ****  //------------------------------------------------
 606:../samuel/samuel_io.c **** 
 607:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 608:../samuel/samuel_io.c ****  {
 2997              	 .loc 3 608 0
 2998              	 .cfi_startproc
 2999 0000 80B5     	 push {r7,lr}
 3000              	.LCFI68:
 3001              	 .cfi_def_cfa_offset 8
 3002              	 .cfi_offset 7,-8
 3003              	 .cfi_offset 14,-4
 3004 0002 00AF     	 add r7,sp,#0
 3005              	.LCFI69:
 3006              	 .cfi_def_cfa_register 7
 609:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3007              	 .loc 3 609 0
 3008 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3009 0008 031C     	 mov r3,r0
 3010 000a 1A1C     	 mov r2,r3
 3011 000c 0D4B     	 ldr r3,.L116
 3012 000e 1A70     	 strb r2,[r3]
 610:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3013              	 .loc 3 610 0
 3014 0010 0C4B     	 ldr r3,.L116
 3015 0012 1B78     	 ldrb r3,[r3]
 3016 0014 032B     	 cmp r3,#3
 3017 0016 0AD1     	 bne .L114
 611:../samuel/samuel_io.c **** 	 {
 612:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 3018              	 .loc 3 612 0
 3019 0018 0B4B     	 ldr r3,.L116+4
 3020 001a 0520     	 mov r0,#5
 3021 001c 0021     	 mov r1,#0
 3022 001e 1A1C     	 mov r2,r3
 3023 0020 1023     	 mov r3,#16
 3024 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3025 0026 031C     	 mov r3,r0
 3026 0028 1A1C     	 mov r2,r3
 3027 002a 084B     	 ldr r3,.L116+8
 3028 002c 1A70     	 strb r2,[r3]
 3029              	.L114:
 613:../samuel/samuel_io.c ****      }
 614:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3030              	 .loc 3 614 0
 3031 002e 054B     	 ldr r3,.L116
 3032 0030 1B78     	 ldrb r3,[r3]
 3033 0032 1A1C     	 mov r2,r3
 3034 0034 054B     	 ldr r3,.L116+8
 3035 0036 1B78     	 ldrb r3,[r3]
 3036 0038 1B01     	 lsl r3,r3,#4
 3037 003a D318     	 add r3,r2,r3
 615:../samuel/samuel_io.c ****  }
 3038              	 .loc 3 615 0
 3039 003c 181C     	 mov r0,r3
 3040 003e BD46     	 mov sp,r7
 3041              	 
 3042 0040 80BD     	 pop {r7,pc}
 3043              	.L117:
 3044 0042 C046     	 .align 2
 3045              	.L116:
 3046 0044 00000000 	 .word EEprom_status
 3047 0048 00000000 	 .word ReadBuffer2
 3048 004c 00000000 	 .word oper_status
 3049              	 .cfi_endproc
 3050              	.LFE318:
 3052              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 3053              	 .align 2
 3054              	 .global writeSernr_B1_EEprom
 3055              	 .code 16
 3056              	 .thumb_func
 3058              	writeSernr_B1_EEprom:
 3059              	.LFB319:
 616:../samuel/samuel_io.c **** 
 617:../samuel/samuel_io.c ****  //------------------------------------------------
 618:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 619:../samuel/samuel_io.c ****  {
 3060              	 .loc 3 619 0
 3061              	 .cfi_startproc
 3062 0000 80B5     	 push {r7,lr}
 3063              	.LCFI70:
 3064              	 .cfi_def_cfa_offset 8
 3065              	 .cfi_offset 7,-8
 3066              	 .cfi_offset 14,-4
 3067 0002 82B0     	 sub sp,sp,#8
 3068              	.LCFI71:
 3069              	 .cfi_def_cfa_offset 16
 3070 0004 00AF     	 add r7,sp,#0
 3071              	.LCFI72:
 3072              	 .cfi_def_cfa_register 7
 620:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3073              	 .loc 3 620 0
 3074 0006 8023     	 mov r3,#128
 3075 0008 7B60     	 str r3,[r7,#4]
 621:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3076              	 .loc 3 621 0
 3077 000a 144B     	 ldr r3,.L122
 3078 000c 1A88     	 ldrh r2,[r3]
 3079 000e BA23     	 mov r3,#186
 3080 0010 1B01     	 lsl r3,r3,#4
 3081 0012 9A42     	 cmp r2,r3
 3082 0014 14D9     	 bls .L119
 622:../samuel/samuel_io.c ****   {
 623:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3083              	 .loc 3 623 0
 3084 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3085 001a 031C     	 mov r3,r0
 3086 001c 1A1C     	 mov r2,r3
 3087 001e 104B     	 ldr r3,.L122+4
 3088 0020 1A70     	 strb r2,[r3]
 624:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3089              	 .loc 3 624 0
 3090 0022 0F4B     	 ldr r3,.L122+4
 3091 0024 1B78     	 ldrb r3,[r3]
 3092 0026 032B     	 cmp r3,#3
 3093 0028 08D1     	 bne .L120
 625:../samuel/samuel_io.c ****     {
 626:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3094              	 .loc 3 626 0
 3095 002a 0E4B     	 ldr r3,.L122+8
 3096 002c 0120     	 mov r0,#1
 3097 002e 191C     	 mov r1,r3
 3098 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3099 0034 031C     	 mov r3,r0
 3100 0036 1A1C     	 mov r2,r3
 3101 0038 0B4B     	 ldr r3,.L122+12
 3102 003a 1A70     	 strb r2,[r3]
 3103              	.L120:
 627:../samuel/samuel_io.c ****     }
 628:../samuel/samuel_io.c **** 	 a = 0;
 3104              	 .loc 3 628 0
 3105 003c 0023     	 mov r3,#0
 3106 003e 7B60     	 str r3,[r7,#4]
 3107              	.L119:
 629:../samuel/samuel_io.c ****   }
 630:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3108              	 .loc 3 630 0
 3109 0040 074B     	 ldr r3,.L122+4
 3110 0042 1B78     	 ldrb r3,[r3]
 3111 0044 1A1C     	 mov r2,r3
 3112 0046 084B     	 ldr r3,.L122+12
 3113 0048 1B78     	 ldrb r3,[r3]
 3114 004a 1B01     	 lsl r3,r3,#4
 3115 004c D218     	 add r2,r2,r3
 3116 004e 7B68     	 ldr r3,[r7,#4]
 3117 0050 D318     	 add r3,r2,r3
 631:../samuel/samuel_io.c ****  }
 3118              	 .loc 3 631 0
 3119 0052 181C     	 mov r0,r3
 3120 0054 BD46     	 mov sp,r7
 3121 0056 02B0     	 add sp,sp,#8
 3122              	 
 3123 0058 80BD     	 pop {r7,pc}
 3124              	.L123:
 3125 005a C046     	 .align 2
 3126              	.L122:
 3127 005c 00000000 	 .word resultB
 3128 0060 00000000 	 .word EEprom_status
 3129 0064 00000000 	 .word ReadBuffer1
 3130 0068 00000000 	 .word oper_status
 3131              	 .cfi_endproc
 3132              	.LFE319:
 3134              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3135              	 .align 2
 3136              	 .global writeNodeid_B2_EEprom
 3137              	 .code 16
 3138              	 .thumb_func
 3140              	writeNodeid_B2_EEprom:
 3141              	.LFB320:
 632:../samuel/samuel_io.c ****  //------------------------------------------------
 633:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 634:../samuel/samuel_io.c ****  {
 3142              	 .loc 3 634 0
 3143              	 .cfi_startproc
 3144 0000 80B5     	 push {r7,lr}
 3145              	.LCFI73:
 3146              	 .cfi_def_cfa_offset 8
 3147              	 .cfi_offset 7,-8
 3148              	 .cfi_offset 14,-4
 3149 0002 82B0     	 sub sp,sp,#8
 3150              	.LCFI74:
 3151              	 .cfi_def_cfa_offset 16
 3152 0004 00AF     	 add r7,sp,#0
 3153              	.LCFI75:
 3154              	 .cfi_def_cfa_register 7
 635:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3155              	 .loc 3 635 0
 3156 0006 8023     	 mov r3,#128
 3157 0008 7B60     	 str r3,[r7,#4]
 636:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3158              	 .loc 3 636 0
 3159 000a 144B     	 ldr r3,.L128
 3160 000c 1A88     	 ldrh r2,[r3]
 3161 000e BA23     	 mov r3,#186
 3162 0010 1B01     	 lsl r3,r3,#4
 3163 0012 9A42     	 cmp r2,r3
 3164 0014 14D9     	 bls .L125
 637:../samuel/samuel_io.c ****     {
 638:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3165              	 .loc 3 638 0
 3166 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3167 001a 031C     	 mov r3,r0
 3168 001c 1A1C     	 mov r2,r3
 3169 001e 104B     	 ldr r3,.L128+4
 3170 0020 1A70     	 strb r2,[r3]
 639:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3171              	 .loc 3 639 0
 3172 0022 0F4B     	 ldr r3,.L128+4
 3173 0024 1B78     	 ldrb r3,[r3]
 3174 0026 032B     	 cmp r3,#3
 3175 0028 08D1     	 bne .L126
 640:../samuel/samuel_io.c ****       {
 641:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3176              	 .loc 3 641 0
 3177 002a 0E4B     	 ldr r3,.L128+8
 3178 002c 0220     	 mov r0,#2
 3179 002e 191C     	 mov r1,r3
 3180 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3181 0034 031C     	 mov r3,r0
 3182 0036 1A1C     	 mov r2,r3
 3183 0038 0B4B     	 ldr r3,.L128+12
 3184 003a 1A70     	 strb r2,[r3]
 3185              	.L126:
 642:../samuel/samuel_io.c ****       }
 643:../samuel/samuel_io.c **** 	 a = 0;
 3186              	 .loc 3 643 0
 3187 003c 0023     	 mov r3,#0
 3188 003e 7B60     	 str r3,[r7,#4]
 3189              	.L125:
 644:../samuel/samuel_io.c ****     }
 645:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3190              	 .loc 3 645 0
 3191 0040 074B     	 ldr r3,.L128+4
 3192 0042 1B78     	 ldrb r3,[r3]
 3193 0044 1A1C     	 mov r2,r3
 3194 0046 084B     	 ldr r3,.L128+12
 3195 0048 1B78     	 ldrb r3,[r3]
 3196 004a 1B01     	 lsl r3,r3,#4
 3197 004c D218     	 add r2,r2,r3
 3198 004e 7B68     	 ldr r3,[r7,#4]
 3199 0050 D318     	 add r3,r2,r3
 646:../samuel/samuel_io.c ****  }
 3200              	 .loc 3 646 0
 3201 0052 181C     	 mov r0,r3
 3202 0054 BD46     	 mov sp,r7
 3203 0056 02B0     	 add sp,sp,#8
 3204              	 
 3205 0058 80BD     	 pop {r7,pc}
 3206              	.L129:
 3207 005a C046     	 .align 2
 3208              	.L128:
 3209 005c 00000000 	 .word resultB
 3210 0060 00000000 	 .word EEprom_status
 3211 0064 00000000 	 .word ReadBuffer2
 3212 0068 00000000 	 .word oper_status
 3213              	 .cfi_endproc
 3214              	.LFE320:
 3216              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3217              	 .align 2
 3218              	 .global writeLamp_data_B3_EEprom
 3219              	 .code 16
 3220              	 .thumb_func
 3222              	writeLamp_data_B3_EEprom:
 3223              	.LFB321:
 647:../samuel/samuel_io.c ****  //----------------------------
 648:../samuel/samuel_io.c **** 
 649:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 650:../samuel/samuel_io.c ****  {
 3224              	 .loc 3 650 0
 3225              	 .cfi_startproc
 3226 0000 80B5     	 push {r7,lr}
 3227              	.LCFI76:
 3228              	 .cfi_def_cfa_offset 8
 3229              	 .cfi_offset 7,-8
 3230              	 .cfi_offset 14,-4
 3231 0002 82B0     	 sub sp,sp,#8
 3232              	.LCFI77:
 3233              	 .cfi_def_cfa_offset 16
 3234 0004 00AF     	 add r7,sp,#0
 3235              	.LCFI78:
 3236              	 .cfi_def_cfa_register 7
 651:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3237              	 .loc 3 651 0
 3238 0006 8023     	 mov r3,#128
 3239 0008 7B60     	 str r3,[r7,#4]
 652:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3240              	 .loc 3 652 0
 3241 000a 144B     	 ldr r3,.L134
 3242 000c 1A88     	 ldrh r2,[r3]
 3243 000e BA23     	 mov r3,#186
 3244 0010 1B01     	 lsl r3,r3,#4
 3245 0012 9A42     	 cmp r2,r3
 3246 0014 14D9     	 bls .L131
 653:../samuel/samuel_io.c ****   {
 654:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3247              	 .loc 3 654 0
 3248 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3249 001a 031C     	 mov r3,r0
 3250 001c 1A1C     	 mov r2,r3
 3251 001e 104B     	 ldr r3,.L134+4
 3252 0020 1A70     	 strb r2,[r3]
 655:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3253              	 .loc 3 655 0
 3254 0022 0F4B     	 ldr r3,.L134+4
 3255 0024 1B78     	 ldrb r3,[r3]
 3256 0026 032B     	 cmp r3,#3
 3257 0028 08D1     	 bne .L132
 656:../samuel/samuel_io.c ****     {
 657:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3258              	 .loc 3 657 0
 3259 002a 0E4B     	 ldr r3,.L134+8
 3260 002c 0320     	 mov r0,#3
 3261 002e 191C     	 mov r1,r3
 3262 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3263 0034 031C     	 mov r3,r0
 3264 0036 1A1C     	 mov r2,r3
 3265 0038 0B4B     	 ldr r3,.L134+12
 3266 003a 1A70     	 strb r2,[r3]
 3267              	.L132:
 658:../samuel/samuel_io.c ****     }
 659:../samuel/samuel_io.c **** 	 a = 0;
 3268              	 .loc 3 659 0
 3269 003c 0023     	 mov r3,#0
 3270 003e 7B60     	 str r3,[r7,#4]
 3271              	.L131:
 660:../samuel/samuel_io.c ****   }
 661:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3272              	 .loc 3 661 0
 3273 0040 074B     	 ldr r3,.L134+4
 3274 0042 1B78     	 ldrb r3,[r3]
 3275 0044 1A1C     	 mov r2,r3
 3276 0046 084B     	 ldr r3,.L134+12
 3277 0048 1B78     	 ldrb r3,[r3]
 3278 004a 1B01     	 lsl r3,r3,#4
 3279 004c D218     	 add r2,r2,r3
 3280 004e 7B68     	 ldr r3,[r7,#4]
 3281 0050 D318     	 add r3,r2,r3
 662:../samuel/samuel_io.c ****  }
 3282              	 .loc 3 662 0
 3283 0052 181C     	 mov r0,r3
 3284 0054 BD46     	 mov sp,r7
 3285 0056 02B0     	 add sp,sp,#8
 3286              	 
 3287 0058 80BD     	 pop {r7,pc}
 3288              	.L135:
 3289 005a C046     	 .align 2
 3290              	.L134:
 3291 005c 00000000 	 .word resultB
 3292 0060 00000000 	 .word EEprom_status
 3293 0064 00000000 	 .word ReadBuffer3
 3294 0068 00000000 	 .word oper_status
 3295              	 .cfi_endproc
 3296              	.LFE321:
 3298              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3299              	 .align 2
 3300              	 .global writeakt_light_data_B4_EEprom
 3301              	 .code 16
 3302              	 .thumb_func
 3304              	writeakt_light_data_B4_EEprom:
 3305              	.LFB322:
 663:../samuel/samuel_io.c **** 
 664:../samuel/samuel_io.c ****  //------------------------------------------------
 665:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 666:../samuel/samuel_io.c ****  {
 3306              	 .loc 3 666 0
 3307              	 .cfi_startproc
 3308 0000 80B5     	 push {r7,lr}
 3309              	.LCFI79:
 3310              	 .cfi_def_cfa_offset 8
 3311              	 .cfi_offset 7,-8
 3312              	 .cfi_offset 14,-4
 3313 0002 82B0     	 sub sp,sp,#8
 3314              	.LCFI80:
 3315              	 .cfi_def_cfa_offset 16
 3316 0004 00AF     	 add r7,sp,#0
 3317              	.LCFI81:
 3318              	 .cfi_def_cfa_register 7
 667:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3319              	 .loc 3 667 0
 3320 0006 8023     	 mov r3,#128
 3321 0008 7B60     	 str r3,[r7,#4]
 668:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3322              	 .loc 3 668 0
 3323 000a 144B     	 ldr r3,.L140
 3324 000c 1A88     	 ldrh r2,[r3]
 3325 000e BA23     	 mov r3,#186
 3326 0010 1B01     	 lsl r3,r3,#4
 3327 0012 9A42     	 cmp r2,r3
 3328 0014 14D9     	 bls .L137
 669:../samuel/samuel_io.c ****     {
 670:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3329              	 .loc 3 670 0
 3330 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3331 001a 031C     	 mov r3,r0
 3332 001c 1A1C     	 mov r2,r3
 3333 001e 104B     	 ldr r3,.L140+4
 3334 0020 1A70     	 strb r2,[r3]
 671:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3335              	 .loc 3 671 0
 3336 0022 0F4B     	 ldr r3,.L140+4
 3337 0024 1B78     	 ldrb r3,[r3]
 3338 0026 032B     	 cmp r3,#3
 3339 0028 08D1     	 bne .L138
 672:../samuel/samuel_io.c ****       {
 673:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3340              	 .loc 3 673 0
 3341 002a 0E4B     	 ldr r3,.L140+8
 3342 002c 0420     	 mov r0,#4
 3343 002e 191C     	 mov r1,r3
 3344 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3345 0034 031C     	 mov r3,r0
 3346 0036 1A1C     	 mov r2,r3
 3347 0038 0B4B     	 ldr r3,.L140+12
 3348 003a 1A70     	 strb r2,[r3]
 3349              	.L138:
 674:../samuel/samuel_io.c ****       }
 675:../samuel/samuel_io.c **** 	 a = 0;
 3350              	 .loc 3 675 0
 3351 003c 0023     	 mov r3,#0
 3352 003e 7B60     	 str r3,[r7,#4]
 3353              	.L137:
 676:../samuel/samuel_io.c ****     }
 677:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3354              	 .loc 3 677 0
 3355 0040 074B     	 ldr r3,.L140+4
 3356 0042 1B78     	 ldrb r3,[r3]
 3357 0044 1A1C     	 mov r2,r3
 3358 0046 084B     	 ldr r3,.L140+12
 3359 0048 1B78     	 ldrb r3,[r3]
 3360 004a 1B01     	 lsl r3,r3,#4
 3361 004c D218     	 add r2,r2,r3
 3362 004e 7B68     	 ldr r3,[r7,#4]
 3363 0050 D318     	 add r3,r2,r3
 678:../samuel/samuel_io.c ****  }
 3364              	 .loc 3 678 0
 3365 0052 181C     	 mov r0,r3
 3366 0054 BD46     	 mov sp,r7
 3367 0056 02B0     	 add sp,sp,#8
 3368              	 
 3369 0058 80BD     	 pop {r7,pc}
 3370              	.L141:
 3371 005a C046     	 .align 2
 3372              	.L140:
 3373 005c 00000000 	 .word resultB
 3374 0060 00000000 	 .word EEprom_status
 3375 0064 00000000 	 .word ReadBuffer2
 3376 0068 00000000 	 .word oper_status
 3377              	 .cfi_endproc
 3378              	.LFE322:
 3380              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3381              	 .align 2
 3382              	 .global writeOff_light_B5_EEprom
 3383              	 .code 16
 3384              	 .thumb_func
 3386              	writeOff_light_B5_EEprom:
 3387              	.LFB323:
 679:../samuel/samuel_io.c ****  //----------------------------
 680:../samuel/samuel_io.c **** 
 681:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 682:../samuel/samuel_io.c ****  {
 3388              	 .loc 3 682 0
 3389              	 .cfi_startproc
 3390 0000 80B5     	 push {r7,lr}
 3391              	.LCFI82:
 3392              	 .cfi_def_cfa_offset 8
 3393              	 .cfi_offset 7,-8
 3394              	 .cfi_offset 14,-4
 3395 0002 82B0     	 sub sp,sp,#8
 3396              	.LCFI83:
 3397              	 .cfi_def_cfa_offset 16
 3398 0004 00AF     	 add r7,sp,#0
 3399              	.LCFI84:
 3400              	 .cfi_def_cfa_register 7
 683:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3401              	 .loc 3 683 0
 3402 0006 8023     	 mov r3,#128
 3403 0008 7B60     	 str r3,[r7,#4]
 684:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3404              	 .loc 3 684 0
 3405 000a 144B     	 ldr r3,.L146
 3406 000c 1A88     	 ldrh r2,[r3]
 3407 000e BA23     	 mov r3,#186
 3408 0010 1B01     	 lsl r3,r3,#4
 3409 0012 9A42     	 cmp r2,r3
 3410 0014 14D9     	 bls .L143
 685:../samuel/samuel_io.c ****   {
 686:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3411              	 .loc 3 686 0
 3412 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3413 001a 031C     	 mov r3,r0
 3414 001c 1A1C     	 mov r2,r3
 3415 001e 104B     	 ldr r3,.L146+4
 3416 0020 1A70     	 strb r2,[r3]
 687:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3417              	 .loc 3 687 0
 3418 0022 0F4B     	 ldr r3,.L146+4
 3419 0024 1B78     	 ldrb r3,[r3]
 3420 0026 032B     	 cmp r3,#3
 3421 0028 08D1     	 bne .L144
 688:../samuel/samuel_io.c ****     {
 689:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3422              	 .loc 3 689 0
 3423 002a 0E4B     	 ldr r3,.L146+8
 3424 002c 0520     	 mov r0,#5
 3425 002e 191C     	 mov r1,r3
 3426 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3427 0034 031C     	 mov r3,r0
 3428 0036 1A1C     	 mov r2,r3
 3429 0038 0B4B     	 ldr r3,.L146+12
 3430 003a 1A70     	 strb r2,[r3]
 3431              	.L144:
 690:../samuel/samuel_io.c **** 
 691:../samuel/samuel_io.c **** 
 692:../samuel/samuel_io.c **** 
 693:../samuel/samuel_io.c **** 
 694:../samuel/samuel_io.c ****     }
 695:../samuel/samuel_io.c **** 	 a = 0;
 3432              	 .loc 3 695 0
 3433 003c 0023     	 mov r3,#0
 3434 003e 7B60     	 str r3,[r7,#4]
 3435              	.L143:
 696:../samuel/samuel_io.c ****   }
 697:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3436              	 .loc 3 697 0
 3437 0040 074B     	 ldr r3,.L146+4
 3438 0042 1B78     	 ldrb r3,[r3]
 3439 0044 1A1C     	 mov r2,r3
 3440 0046 084B     	 ldr r3,.L146+12
 3441 0048 1B78     	 ldrb r3,[r3]
 3442 004a 1B01     	 lsl r3,r3,#4
 3443 004c D218     	 add r2,r2,r3
 3444 004e 7B68     	 ldr r3,[r7,#4]
 3445 0050 D318     	 add r3,r2,r3
 698:../samuel/samuel_io.c ****  }
 3446              	 .loc 3 698 0
 3447 0052 181C     	 mov r0,r3
 3448 0054 BD46     	 mov sp,r7
 3449 0056 02B0     	 add sp,sp,#8
 3450              	 
 3451 0058 80BD     	 pop {r7,pc}
 3452              	.L147:
 3453 005a C046     	 .align 2
 3454              	.L146:
 3455 005c 00000000 	 .word resultB
 3456 0060 00000000 	 .word EEprom_status
 3457 0064 00000000 	 .word ReadBuffer2
 3458 0068 00000000 	 .word oper_status
 3459              	 .cfi_endproc
 3460              	.LFE323:
 3462              	 .section .text.sysiniValueB1,"ax",%progbits
 3463              	 .align 2
 3464              	 .global sysiniValueB1
 3465              	 .code 16
 3466              	 .thumb_func
 3468              	sysiniValueB1:
 3469              	.LFB324:
 699:../samuel/samuel_io.c **** 
 700:../samuel/samuel_io.c **** ///#############################################
 701:../samuel/samuel_io.c ****  //initialisierung
 702:../samuel/samuel_io.c **** 
 703:../samuel/samuel_io.c **** 
 704:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 705:../samuel/samuel_io.c ****  {
 3470              	 .loc 3 705 0
 3471              	 .cfi_startproc
 3472 0000 80B5     	 push {r7,lr}
 3473              	.LCFI85:
 3474              	 .cfi_def_cfa_offset 8
 3475              	 .cfi_offset 7,-8
 3476              	 .cfi_offset 14,-4
 3477 0002 00AF     	 add r7,sp,#0
 3478              	.LCFI86:
 3479              	 .cfi_def_cfa_register 7
 706:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 707:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 708:../samuel/samuel_io.c **** 
 709:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3480              	 .loc 3 709 0
 3481 0004 124B     	 ldr r3,.L149
 3482 0006 134A     	 ldr r2,.L149+4
 3483 0008 1A80     	 strh r2,[r3]
 710:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3484              	 .loc 3 710 0
 3485 000a 134B     	 ldr r3,.L149+8
 3486 000c 134A     	 ldr r2,.L149+12
 3487 000e 1A80     	 strh r2,[r3]
 711:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3488              	 .loc 3 711 0
 3489 0010 134B     	 ldr r3,.L149+16
 3490 0012 FA22     	 mov r2,#250
 3491 0014 9200     	 lsl r2,r2,#2
 3492 0016 1A80     	 strh r2,[r3]
 712:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3493              	 .loc 3 712 0
 3494 0018 124B     	 ldr r3,.L149+20
 3495 001a FA22     	 mov r2,#250
 3496 001c 9200     	 lsl r2,r2,#2
 3497 001e 1A80     	 strh r2,[r3]
 713:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3498              	 .loc 3 713 0
 3499 0020 114B     	 ldr r3,.L149+24
 3500 0022 FA22     	 mov r2,#250
 3501 0024 9200     	 lsl r2,r2,#2
 3502 0026 1A80     	 strh r2,[r3]
 714:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3503              	 .loc 3 714 0
 3504 0028 104B     	 ldr r3,.L149+28
 3505 002a FA22     	 mov r2,#250
 3506 002c 9200     	 lsl r2,r2,#2
 3507 002e 1A80     	 strh r2,[r3]
 715:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3508              	 .loc 3 715 0
 3509 0030 0F4B     	 ldr r3,.L149+32
 3510 0032 FA22     	 mov r2,#250
 3511 0034 9200     	 lsl r2,r2,#2
 3512 0036 1A80     	 strh r2,[r3]
 716:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3513              	 .loc 3 716 0
 3514 0038 0E4B     	 ldr r3,.L149+36
 3515 003a FA22     	 mov r2,#250
 3516 003c 9200     	 lsl r2,r2,#2
 3517 003e 1A80     	 strh r2,[r3]
 717:../samuel/samuel_io.c **** 
 718:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3518              	 .loc 3 718 0
 3519 0040 0D4B     	 ldr r3,.L149+40
 3520 0042 0022     	 mov r2,#0
 3521 0044 1A80     	 strh r2,[r3]
 719:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3522              	 .loc 3 719 0
 3523 0046 0D4B     	 ldr r3,.L149+44
 3524 0048 0022     	 mov r2,#0
 3525 004a 1A80     	 strh r2,[r3]
 720:../samuel/samuel_io.c **** 
 721:../samuel/samuel_io.c ****  }
 3526              	 .loc 3 721 0
 3527 004c BD46     	 mov sp,r7
 3528              	 
 3529 004e 80BD     	 pop {r7,pc}
 3530              	.L150:
 3531              	 .align 2
 3532              	.L149:
 3533 0050 00000000 	 .word Ser_NrH
 3534 0054 7A7B0000 	 .word 31610
 3535 0058 00000000 	 .word Ser_NrL
 3536 005c 59580000 	 .word 22617
 3537 0060 00000000 	 .word Hard_Vers
 3538 0064 00000000 	 .word Soft_Vers
 3539 0068 00000000 	 .word GEH_Vers
 3540 006c 00000000 	 .word Mon_Vers
 3541 0070 00000000 	 .word LED_WW_Vers
 3542 0074 00000000 	 .word LED_CW_Vers
 3543 0078 00000000 	 .word neu_Ser_NrH
 3544 007c 00000000 	 .word neu_Ser_NrL
 3545              	 .cfi_endproc
 3546              	.LFE324:
 3548              	 .section .text.sysiniValueB2,"ax",%progbits
 3549              	 .align 2
 3550              	 .global sysiniValueB2
 3551              	 .code 16
 3552              	 .thumb_func
 3554              	sysiniValueB2:
 3555              	.LFB325:
 722:../samuel/samuel_io.c **** 
 723:../samuel/samuel_io.c **** 
 724:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 725:../samuel/samuel_io.c ****  {
 3556              	 .loc 3 725 0
 3557              	 .cfi_startproc
 3558 0000 80B5     	 push {r7,lr}
 3559              	.LCFI87:
 3560              	 .cfi_def_cfa_offset 8
 3561              	 .cfi_offset 7,-8
 3562              	 .cfi_offset 14,-4
 3563 0002 00AF     	 add r7,sp,#0
 3564              	.LCFI88:
 3565              	 .cfi_def_cfa_register 7
 726:../samuel/samuel_io.c ****            node_id = 1;
 3566              	 .loc 3 726 0
 3567 0004 114B     	 ldr r3,.L152
 3568 0006 0122     	 mov r2,#1
 3569 0008 1A70     	 strb r2,[r3]
 727:../samuel/samuel_io.c ****            node_id_alt = 1;
 3570              	 .loc 3 727 0
 3571 000a 114B     	 ldr r3,.L152+4
 3572 000c 0122     	 mov r2,#1
 3573 000e 1A70     	 strb r2,[r3]
 728:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3574              	 .loc 3 728 0
 3575 0010 104B     	 ldr r3,.L152+8
 3576 0012 114A     	 ldr r2,.L152+12
 3577 0014 1A80     	 strh r2,[r3]
 729:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3578              	 .loc 3 729 0
 3579 0016 114B     	 ldr r3,.L152+16
 3580 0018 FA22     	 mov r2,#250
 3581 001a D200     	 lsl r2,r2,#3
 3582 001c 1A80     	 strh r2,[r3]
 730:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3583              	 .loc 3 730 0
 3584 001e 104B     	 ldr r3,.L152+20
 3585 0020 FA22     	 mov r2,#250
 3586 0022 D200     	 lsl r2,r2,#3
 3587 0024 1A80     	 strh r2,[r3]
 731:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3588              	 .loc 3 731 0
 3589 0026 0F4B     	 ldr r3,.L152+24
 3590 0028 E122     	 mov r2,#225
 3591 002a 1201     	 lsl r2,r2,#4
 3592 002c 1A80     	 strh r2,[r3]
 732:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3593              	 .loc 3 732 0
 3594 002e 0E4B     	 ldr r3,.L152+28
 3595 0030 0E4A     	 ldr r2,.L152+32
 3596 0032 1A80     	 strh r2,[r3]
 733:../samuel/samuel_io.c **** 		   led_grupp=10;
 3597              	 .loc 3 733 0
 3598 0034 0E4B     	 ldr r3,.L152+36
 3599 0036 0A22     	 mov r2,#10
 3600 0038 1A80     	 strh r2,[r3]
 734:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3601              	 .loc 3 734 0
 3602 003a 0E4B     	 ldr r3,.L152+40
 3603 003c 3522     	 mov r2,#53
 3604 003e 1A80     	 strh r2,[r3]
 735:../samuel/samuel_io.c **** 
 736:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3605              	 .loc 3 736 0
 3606 0040 0D4B     	 ldr r3,.L152+44
 3607 0042 0122     	 mov r2,#1
 3608 0044 1A70     	 strb r2,[r3]
 737:../samuel/samuel_io.c ****  }
 3609              	 .loc 3 737 0
 3610 0046 BD46     	 mov sp,r7
 3611              	 
 3612 0048 80BD     	 pop {r7,pc}
 3613              	.L153:
 3614 004a C046     	 .align 2
 3615              	.L152:
 3616 004c 00000000 	 .word node_id
 3617 0050 00000000 	 .word node_id_alt
 3618 0054 00000000 	 .word node_id_16bit
 3619 0058 34120000 	 .word 4660
 3620 005c 00000000 	 .word val_Pow_Nom
 3621 0060 00000000 	 .word val_Pow_max
 3622 0064 00000000 	 .word val_Spannung_min
 3623 0068 00000000 	 .word val_Spannung_max
 3624 006c 68100000 	 .word 4200
 3625 0070 00000000 	 .word led_grupp
 3626 0074 00000000 	 .word led_Strom
 3627 0078 00000000 	 .word node_id_neu
 3628              	 .cfi_endproc
 3629              	.LFE325:
 3631              	 .section .text.sysiniValueB4,"ax",%progbits
 3632              	 .align 2
 3633              	 .global sysiniValueB4
 3634              	 .code 16
 3635              	 .thumb_func
 3637              	sysiniValueB4:
 3638              	.LFB326:
 738:../samuel/samuel_io.c **** 
 739:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 740:../samuel/samuel_io.c ****  {
 3639              	 .loc 3 740 0
 3640              	 .cfi_startproc
 3641 0000 80B5     	 push {r7,lr}
 3642              	.LCFI89:
 3643              	 .cfi_def_cfa_offset 8
 3644              	 .cfi_offset 7,-8
 3645              	 .cfi_offset 14,-4
 3646 0002 00AF     	 add r7,sp,#0
 3647              	.LCFI90:
 3648              	 .cfi_def_cfa_register 7
 741:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3649              	 .loc 3 741 0
 3650 0004 264B     	 ldr r3,.L155
 3651 0006 0A22     	 mov r2,#10
 3652 0008 1A70     	 strb r2,[r3]
 742:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3653              	 .loc 3 742 0
 3654 000a 264B     	 ldr r3,.L155+4
 3655 000c 0A22     	 mov r2,#10
 3656 000e 1A70     	 strb r2,[r3]
 743:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3657              	 .loc 3 743 0
 3658 0010 254B     	 ldr r3,.L155+8
 3659 0012 0A22     	 mov r2,#10
 3660 0014 1A70     	 strb r2,[r3]
 744:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3661              	 .loc 3 744 0
 3662 0016 254B     	 ldr r3,.L155+12
 3663 0018 0A22     	 mov r2,#10
 3664 001a 1A70     	 strb r2,[r3]
 745:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3665              	 .loc 3 745 0
 3666 001c 244B     	 ldr r3,.L155+16
 3667 001e 0A22     	 mov r2,#10
 3668 0020 1A80     	 strh r2,[r3]
 746:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3669              	 .loc 3 746 0
 3670 0022 244B     	 ldr r3,.L155+20
 3671 0024 B022     	 mov r2,#176
 3672 0026 1A80     	 strh r2,[r3]
 747:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3673              	 .loc 3 747 0
 3674 0028 234B     	 ldr r3,.L155+24
 3675 002a 0122     	 mov r2,#1
 3676 002c 5242     	 neg r2,r2
 3677 002e 1A80     	 strh r2,[r3]
 748:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3678              	 .loc 3 748 0
 3679 0030 224B     	 ldr r3,.L155+28
 3680 0032 0022     	 mov r2,#0
 3681 0034 1A80     	 strh r2,[r3]
 749:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3682              	 .loc 3 749 0
 3683 0036 224B     	 ldr r3,.L155+32
 3684 0038 FA22     	 mov r2,#250
 3685 003a 9200     	 lsl r2,r2,#2
 3686 003c 1A80     	 strh r2,[r3]
 750:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3687              	 .loc 3 750 0
 3688 003e 214B     	 ldr r3,.L155+36
 3689 0040 FA22     	 mov r2,#250
 3690 0042 9200     	 lsl r2,r2,#2
 3691 0044 1A80     	 strh r2,[r3]
 751:../samuel/samuel_io.c **** 
 752:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3692              	 .loc 3 752 0
 3693 0046 1B4B     	 ldr r3,.L155+20
 3694 0048 1A88     	 ldrh r2,[r3]
 3695 004a 1F4B     	 ldr r3,.L155+40
 3696 004c 1A80     	 strh r2,[r3]
 753:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3697              	 .loc 3 753 0
 3698 004e 194B     	 ldr r3,.L155+20
 3699 0050 1A88     	 ldrh r2,[r3]
 3700 0052 1E4B     	 ldr r3,.L155+44
 3701 0054 1A80     	 strh r2,[r3]
 754:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3702              	 .loc 3 754 0
 3703 0056 174B     	 ldr r3,.L155+20
 3704 0058 1A88     	 ldrh r2,[r3]
 3705 005a 1D4B     	 ldr r3,.L155+48
 3706 005c 1A80     	 strh r2,[r3]
 755:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3707              	 .loc 3 755 0
 3708 005e 154B     	 ldr r3,.L155+20
 3709 0060 1A88     	 ldrh r2,[r3]
 3710 0062 1C4B     	 ldr r3,.L155+52
 3711 0064 1A80     	 strh r2,[r3]
 756:../samuel/samuel_io.c **** 
 757:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3712              	 .loc 3 757 0
 3713 0066 144B     	 ldr r3,.L155+24
 3714 0068 1B88     	 ldrh r3,[r3]
 3715 006a 1B0A     	 lsr r3,r3,#8
 3716 006c 9AB2     	 uxth r2,r3
 3717 006e 1A4B     	 ldr r3,.L155+56
 3718 0070 1A80     	 strh r2,[r3]
 758:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3719              	 .loc 3 758 0
 3720 0072 114B     	 ldr r3,.L155+24
 3721 0074 1B88     	 ldrh r3,[r3]
 3722 0076 1B0A     	 lsr r3,r3,#8
 3723 0078 9AB2     	 uxth r2,r3
 3724 007a 184B     	 ldr r3,.L155+60
 3725 007c 1A80     	 strh r2,[r3]
 759:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3726              	 .loc 3 759 0
 3727 007e 0E4B     	 ldr r3,.L155+24
 3728 0080 1B88     	 ldrh r3,[r3]
 3729 0082 FF22     	 mov r2,#255
 3730 0084 1340     	 and r3,r2
 3731 0086 9AB2     	 uxth r2,r3
 3732 0088 154B     	 ldr r3,.L155+64
 3733 008a 1A80     	 strh r2,[r3]
 760:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3734              	 .loc 3 760 0
 3735 008c 0A4B     	 ldr r3,.L155+24
 3736 008e 1B88     	 ldrh r3,[r3]
 3737 0090 FF22     	 mov r2,#255
 3738 0092 1340     	 and r3,r2
 3739 0094 9AB2     	 uxth r2,r3
 3740 0096 134B     	 ldr r3,.L155+68
 3741 0098 1A80     	 strh r2,[r3]
 761:../samuel/samuel_io.c ****  }
 3742              	 .loc 3 761 0
 3743 009a BD46     	 mov sp,r7
 3744              	 
 3745 009c 80BD     	 pop {r7,pc}
 3746              	.L156:
 3747 009e C046     	 .align 2
 3748              	.L155:
 3749 00a0 00000000 	 .word Dimm_Gamma
 3750 00a4 00000000 	 .word Dimm_Stufen
 3751 00a8 00000000 	 .word Dimm_StufenGR
 3752 00ac 00000000 	 .word Dimm_Valu
 3753 00b0 00000000 	 .word Smooth_Value
 3754 00b4 00000000 	 .word linearwalk_gen
 3755 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 3756 00bc 00000000 	 .word Reserve_1
 3757 00c0 00000000 	 .word Dimm_Max_WW
 3758 00c4 00000000 	 .word Dimm_Max_CW
 3759 00c8 00000000 	 .word linearwalk_ww1
 3760 00cc 00000000 	 .word linearwalk_ww2
 3761 00d0 00000000 	 .word linearwalk_cw1
 3762 00d4 00000000 	 .word linearwalk_cw2
 3763 00d8 00000000 	 .word Farbe_ww1_Quot
 3764 00dc 00000000 	 .word Farbe_cw1_Quot
 3765 00e0 00000000 	 .word Farbe_ww2_Quot
 3766 00e4 00000000 	 .word Farbe_cw2_Quot
 3767              	 .cfi_endproc
 3768              	.LFE326:
 3770              	 .section .text.sysiniValueB5,"ax",%progbits
 3771              	 .align 2
 3772              	 .global sysiniValueB5
 3773              	 .code 16
 3774              	 .thumb_func
 3776              	sysiniValueB5:
 3777              	.LFB327:
 762:../samuel/samuel_io.c **** 
 763:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 764:../samuel/samuel_io.c ****  {
 3778              	 .loc 3 764 0
 3779              	 .cfi_startproc
 3780 0000 80B5     	 push {r7,lr}
 3781              	.LCFI91:
 3782              	 .cfi_def_cfa_offset 8
 3783              	 .cfi_offset 7,-8
 3784              	 .cfi_offset 14,-4
 3785 0002 00AF     	 add r7,sp,#0
 3786              	.LCFI92:
 3787              	 .cfi_def_cfa_register 7
 765:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 3788              	 .loc 3 765 0
 3789 0004 0E4B     	 ldr r3,.L158
 3790 0006 0522     	 mov r2,#5
 3791 0008 1A70     	 strb r2,[r3]
 766:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 3792              	 .loc 3 766 0
 3793 000a 0E4B     	 ldr r3,.L158+4
 3794 000c 0022     	 mov r2,#0
 3795 000e 1A70     	 strb r2,[r3]
 767:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 3796              	 .loc 3 767 0
 3797 0010 0D4B     	 ldr r3,.L158+8
 3798 0012 0022     	 mov r2,#0
 3799 0014 1A80     	 strh r2,[r3]
 768:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 3800              	 .loc 3 768 0
 3801 0016 0D4B     	 ldr r3,.L158+12
 3802 0018 0D4A     	 ldr r2,.L158+16
 3803 001a 1A80     	 strh r2,[r3]
 769:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 3804              	 .loc 3 769 0
 3805 001c 0D4B     	 ldr r3,.L158+20
 3806 001e 0C4A     	 ldr r2,.L158+16
 3807 0020 1A80     	 strh r2,[r3]
 770:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 3808              	 .loc 3 770 0
 3809 0022 0D4B     	 ldr r3,.L158+24
 3810 0024 0D4A     	 ldr r2,.L158+28
 3811 0026 1A80     	 strh r2,[r3]
 771:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 3812              	 .loc 3 771 0
 3813 0028 0D4B     	 ldr r3,.L158+32
 3814 002a 0C4A     	 ldr r2,.L158+28
 3815 002c 1A80     	 strh r2,[r3]
 772:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 3816              	 .loc 3 772 0
 3817 002e 0D4B     	 ldr r3,.L158+36
 3818 0030 0D4A     	 ldr r2,.L158+40
 3819 0032 1A80     	 strh r2,[r3]
 773:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 3820              	 .loc 3 773 0
 3821 0034 0D4B     	 ldr r3,.L158+44
 3822 0036 0C4A     	 ldr r2,.L158+40
 3823 0038 1A80     	 strh r2,[r3]
 774:../samuel/samuel_io.c ****  }
 3824              	 .loc 3 774 0
 3825 003a BD46     	 mov sp,r7
 3826              	 
 3827 003c 80BD     	 pop {r7,pc}
 3828              	.L159:
 3829 003e C046     	 .align 2
 3830              	.L158:
 3831 0040 00000000 	 .word RegOnOff
 3832 0044 00000000 	 .word RegOnOff2
 3833 0048 00000000 	 .word Reserve_2
 3834 004c 00000000 	 .word dimOff_Ww
 3835 0050 FF0F0000 	 .word 4095
 3836 0054 00000000 	 .word dimOff_Cw
 3837 0058 00000000 	 .word dimNorm1_Ww
 3838 005c FF010000 	 .word 511
 3839 0060 00000000 	 .word dimNorm1_Cw
 3840 0064 00000000 	 .word dimNorm2_Ww
 3841 0068 FF020000 	 .word 767
 3842 006c 00000000 	 .word dimNorm2_Cw
 3843              	 .cfi_endproc
 3844              	.LFE327:
 3846              	 .section .text.bcuInit,"ax",%progbits
 3847              	 .align 2
 3848              	 .global bcuInit
 3849              	 .code 16
 3850              	 .thumb_func
 3852              	bcuInit:
 3853              	.LFB328:
 775:../samuel/samuel_io.c **** 
 776:../samuel/samuel_io.c ****  //-----------------------------------------------
 777:../samuel/samuel_io.c ****  // BCCU Vorgaben
 778:../samuel/samuel_io.c **** 
 779:../samuel/samuel_io.c ****  void bcuInit(void)
 780:../samuel/samuel_io.c ****  {
 3854              	 .loc 3 780 0
 3855              	 .cfi_startproc
 3856 0000 80B5     	 push {r7,lr}
 3857              	.LCFI93:
 3858              	 .cfi_def_cfa_offset 8
 3859              	 .cfi_offset 7,-8
 3860              	 .cfi_offset 14,-4
 3861 0002 00AF     	 add r7,sp,#0
 3862              	.LCFI94:
 3863              	 .cfi_def_cfa_register 7
 781:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 3864              	 .loc 3 781 0
 3865 0004 194B     	 ldr r3,.L170
 3866 0006 1B78     	 ldrb r3,[r3]
 3867 0008 052B     	 cmp r3,#5
 3868 000a 2CD8     	 bhi .L169
 3869 000c 9A00     	 lsl r2,r3,#2
 3870 000e 184B     	 ldr r3,.L170+4
 3871 0010 D318     	 add r3,r2,r3
 3872 0012 1B68     	 ldr r3,[r3]
 3873 0014 9F46     	 mov pc,r3
 3874              	 .section .rodata.bcuInit,"a",%progbits
 3875              	 .align 2
 3876              	.L163:
 3877 0000 66000000 	 .word .L169
 3878 0004 16000000 	 .word .L162
 3879 0008 24000000 	 .word .L164
 3880 000c 32000000 	 .word .L165
 3881 0010 42000000 	 .word .L166
 3882 0014 54000000 	 .word .L167
 3883              	 .section .text.bcuInit
 3884              	.L162:
 782:../samuel/samuel_io.c **** 		{
 783:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 3885              	 .loc 3 783 0
 3886 0016 174B     	 ldr r3,.L170+8
 3887 0018 0022     	 mov r2,#0
 3888 001a 1A80     	 strh r2,[r3]
 784:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 3889              	 .loc 3 784 0
 3890 001c 164B     	 ldr r3,.L170+12
 3891 001e 0022     	 mov r2,#0
 3892 0020 1A80     	 strh r2,[r3]
 785:../samuel/samuel_io.c **** 									break;
 3893              	 .loc 3 785 0
 3894 0022 21E0     	 b .L160
 3895              	.L164:
 786:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 3896              	 .loc 3 786 0
 3897 0024 134B     	 ldr r3,.L170+8
 3898 0026 154A     	 ldr r2,.L170+16
 3899 0028 1A80     	 strh r2,[r3]
 787:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 3900              	 .loc 3 787 0
 3901 002a 134B     	 ldr r3,.L170+12
 3902 002c 134A     	 ldr r2,.L170+16
 3903 002e 1A80     	 strh r2,[r3]
 788:../samuel/samuel_io.c **** 									break;
 3904              	 .loc 3 788 0
 3905 0030 1AE0     	 b .L160
 3906              	.L165:
 789:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 3907              	 .loc 3 789 0
 3908 0032 134B     	 ldr r3,.L170+20
 3909 0034 1A88     	 ldrh r2,[r3]
 3910 0036 0F4B     	 ldr r3,.L170+8
 3911 0038 1A80     	 strh r2,[r3]
 790:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 3912              	 .loc 3 790 0
 3913 003a 124B     	 ldr r3,.L170+24
 3914 003c 1A88     	 ldrh r2,[r3]
 3915 003e 0E4B     	 ldr r3,.L170+12
 3916 0040 1A80     	 strh r2,[r3]
 3917              	.L166:
 791:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 3918              	 .loc 3 791 0
 3919 0042 114B     	 ldr r3,.L170+28
 3920 0044 1A88     	 ldrh r2,[r3]
 3921 0046 0B4B     	 ldr r3,.L170+8
 3922 0048 1A80     	 strh r2,[r3]
 792:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 3923              	 .loc 3 792 0
 3924 004a 104B     	 ldr r3,.L170+32
 3925 004c 1A88     	 ldrh r2,[r3]
 3926 004e 0A4B     	 ldr r3,.L170+12
 3927 0050 1A80     	 strh r2,[r3]
 793:../samuel/samuel_io.c **** 									break;
 3928              	 .loc 3 793 0
 3929 0052 09E0     	 b .L160
 3930              	.L167:
 794:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 3931              	 .loc 3 794 0
 3932 0054 0E4B     	 ldr r3,.L170+36
 3933 0056 1A88     	 ldrh r2,[r3]
 3934 0058 064B     	 ldr r3,.L170+8
 3935 005a 1A80     	 strh r2,[r3]
 795:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 3936              	 .loc 3 795 0
 3937 005c 0D4B     	 ldr r3,.L170+40
 3938 005e 1A88     	 ldrh r2,[r3]
 3939 0060 054B     	 ldr r3,.L170+12
 3940 0062 1A80     	 strh r2,[r3]
 796:../samuel/samuel_io.c **** 									break;
 3941              	 .loc 3 796 0
 3942 0064 00E0     	 b .L160
 3943              	.L169:
 797:../samuel/samuel_io.c **** 		default:
 798:../samuel/samuel_io.c **** 									break;
 3944              	 .loc 3 798 0
 3945 0066 C046     	 mov r8,r8
 3946              	.L160:
 799:../samuel/samuel_io.c **** 		}
 800:../samuel/samuel_io.c **** 
 801:../samuel/samuel_io.c ****  }
 3947              	 .loc 3 801 0
 3948 0068 BD46     	 mov sp,r7
 3949              	 
 3950 006a 80BD     	 pop {r7,pc}
 3951              	.L171:
 3952              	 .align 2
 3953              	.L170:
 3954 006c 00000000 	 .word RegOnOff
 3955 0070 00000000 	 .word .L163
 3956 0074 00000000 	 .word dimAkt_Ww
 3957 0078 00000000 	 .word dimAkt_Cw
 3958 007c FF7F0000 	 .word 32767
 3959 0080 00000000 	 .word dimNorm1_Ww
 3960 0084 00000000 	 .word dimNorm1_Cw
 3961 0088 00000000 	 .word dimNorm2_Ww
 3962 008c 00000000 	 .word dimNorm2_Cw
 3963 0090 00000000 	 .word dimOff_Ww
 3964 0094 00000000 	 .word dimOff_Cw
 3965              	 .cfi_endproc
 3966              	.LFE328:
 3968              	 .section .text.bcuUebergabe,"ax",%progbits
 3969              	 .align 2
 3970              	 .global bcuUebergabe
 3971              	 .code 16
 3972              	 .thumb_func
 3974              	bcuUebergabe:
 3975              	.LFB329:
 802:../samuel/samuel_io.c ****  //----------------------------------
 803:../samuel/samuel_io.c **** 
 804:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 805:../samuel/samuel_io.c ****  {
 3976              	 .loc 3 805 0
 3977              	 .cfi_startproc
 3978 0000 80B5     	 push {r7,lr}
 3979              	.LCFI95:
 3980              	 .cfi_def_cfa_offset 8
 3981              	 .cfi_offset 7,-8
 3982              	 .cfi_offset 14,-4
 3983 0002 00AF     	 add r7,sp,#0
 3984              	.LCFI96:
 3985              	 .cfi_def_cfa_register 7
 806:../samuel/samuel_io.c **** 
 807:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 808:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 809:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 810:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 811:../samuel/samuel_io.c **** 
 812:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 3986              	 .loc 3 812 0
 3987 0004 204B     	 ldr r3,.L173
 3988 0006 1B88     	 ldrh r3,[r3]
 3989 0008 1A1C     	 mov r2,r3
 3990 000a 204B     	 ldr r3,.L173+4
 3991 000c 181C     	 mov r0,r3
 3992 000e 111C     	 mov r1,r2
 3993 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 813:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 3994              	 .loc 3 813 0
 3995 0014 1E4B     	 ldr r3,.L173+8
 3996 0016 1B88     	 ldrh r3,[r3]
 3997 0018 1A1C     	 mov r2,r3
 3998 001a 1E4B     	 ldr r3,.L173+12
 3999 001c 181C     	 mov r0,r3
 4000 001e 111C     	 mov r1,r2
 4001 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 814:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 4002              	 .loc 3 814 0
 4003 0024 1C4B     	 ldr r3,.L173+16
 4004 0026 1B88     	 ldrh r3,[r3]
 4005 0028 1A1C     	 mov r2,r3
 4006 002a 1C4B     	 ldr r3,.L173+20
 4007 002c 181C     	 mov r0,r3
 4008 002e 111C     	 mov r1,r2
 4009 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 815:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 4010              	 .loc 3 815 0
 4011 0034 1A4B     	 ldr r3,.L173+24
 4012 0036 1B88     	 ldrh r3,[r3]
 4013 0038 1A1C     	 mov r2,r3
 4014 003a 1A4B     	 ldr r3,.L173+28
 4015 003c 181C     	 mov r0,r3
 4016 003e 111C     	 mov r1,r2
 4017 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 816:../samuel/samuel_io.c **** 
 817:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 4018              	 .loc 3 817 0
 4019 0044 184B     	 ldr r3,.L173+32
 4020 0046 1B88     	 ldrh r3,[r3]
 4021 0048 1A1C     	 mov r2,r3
 4022 004a 104B     	 ldr r3,.L173+4
 4023 004c 181C     	 mov r0,r3
 4024 004e 111C     	 mov r1,r2
 4025 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 818:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 4026              	 .loc 3 818 0
 4027 0054 154B     	 ldr r3,.L173+36
 4028 0056 1B88     	 ldrh r3,[r3]
 4029 0058 1A1C     	 mov r2,r3
 4030 005a 0E4B     	 ldr r3,.L173+12
 4031 005c 181C     	 mov r0,r3
 4032 005e 111C     	 mov r1,r2
 4033 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 819:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 4034              	 .loc 3 819 0
 4035 0064 124B     	 ldr r3,.L173+40
 4036 0066 1B88     	 ldrh r3,[r3]
 4037 0068 1A1C     	 mov r2,r3
 4038 006a 0C4B     	 ldr r3,.L173+20
 4039 006c 181C     	 mov r0,r3
 4040 006e 111C     	 mov r1,r2
 4041 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 820:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 4042              	 .loc 3 820 0
 4043 0074 0F4B     	 ldr r3,.L173+44
 4044 0076 1B88     	 ldrh r3,[r3]
 4045 0078 1A1C     	 mov r2,r3
 4046 007a 0A4B     	 ldr r3,.L173+28
 4047 007c 181C     	 mov r0,r3
 4048 007e 111C     	 mov r1,r2
 4049 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 821:../samuel/samuel_io.c **** 
 822:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 823:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 824:../samuel/samuel_io.c **** 
 825:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 826:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 827:../samuel/samuel_io.c ****  }
 4050              	 .loc 3 827 0
 4051 0084 BD46     	 mov sp,r7
 4052              	 
 4053 0086 80BD     	 pop {r7,pc}
 4054              	.L174:
 4055              	 .align 2
 4056              	.L173:
 4057 0088 00000000 	 .word Farbe_ww2
 4058 008c 00000000 	 .word PDM_BCCU_0
 4059 0090 00000000 	 .word Farbe_cw2
 4060 0094 00000000 	 .word PDM_BCCU_1
 4061 0098 00000000 	 .word Farbe_ww1
 4062 009c 00000000 	 .word PDM_BCCU_2
 4063 00a0 00000000 	 .word Farbe_cw1
 4064 00a4 00000000 	 .word PDM_BCCU_3
 4065 00a8 00000000 	 .word linearwalk_ww2
 4066 00ac 00000000 	 .word linearwalk_cw2
 4067 00b0 00000000 	 .word linearwalk_ww1
 4068 00b4 00000000 	 .word linearwalk_cw1
 4069              	 .cfi_endproc
 4070              	.LFE329:
 4072              	 .section .text.bcuAktBerechnung,"ax",%progbits
 4073              	 .align 2
 4074              	 .global bcuAktBerechnung
 4075              	 .code 16
 4076              	 .thumb_func
 4078              	bcuAktBerechnung:
 4079              	.LFB330:
 828:../samuel/samuel_io.c ****  //----------------------------------
 829:../samuel/samuel_io.c **** 
 830:../samuel/samuel_io.c **** 
 831:../samuel/samuel_io.c ****  //----------------------------------
 832:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 833:../samuel/samuel_io.c ****   {
 4080              	 .loc 3 833 0
 4081              	 .cfi_startproc
 4082 0000 80B5     	 push {r7,lr}
 4083              	.LCFI97:
 4084              	 .cfi_def_cfa_offset 8
 4085              	 .cfi_offset 7,-8
 4086              	 .cfi_offset 14,-4
 4087 0002 82B0     	 sub sp,sp,#8
 4088              	.LCFI98:
 4089              	 .cfi_def_cfa_offset 16
 4090 0004 00AF     	 add r7,sp,#0
 4091              	.LCFI99:
 4092              	 .cfi_def_cfa_register 7
 834:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 835:../samuel/samuel_io.c **** 
 836:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4093              	 .loc 3 836 0
 4094 0006 284B     	 ldr r3,.L176
 4095 0008 1B88     	 ldrh r3,[r3]
 4096 000a 1B0A     	 lsr r3,r3,#8
 4097 000c 9AB2     	 uxth r2,r3
 4098 000e 274B     	 ldr r3,.L176+4
 4099 0010 1A80     	 strh r2,[r3]
 837:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4100              	 .loc 3 837 0
 4101 0012 254B     	 ldr r3,.L176
 4102 0014 1B88     	 ldrh r3,[r3]
 4103 0016 1B0A     	 lsr r3,r3,#8
 4104 0018 9AB2     	 uxth r2,r3
 4105 001a 254B     	 ldr r3,.L176+8
 4106 001c 1A80     	 strh r2,[r3]
 838:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4107              	 .loc 3 838 0
 4108 001e 224B     	 ldr r3,.L176
 4109 0020 1B88     	 ldrh r3,[r3]
 4110 0022 FF22     	 mov r2,#255
 4111 0024 1340     	 and r3,r2
 4112 0026 9AB2     	 uxth r2,r3
 4113 0028 224B     	 ldr r3,.L176+12
 4114 002a 1A80     	 strh r2,[r3]
 839:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4115              	 .loc 3 839 0
 4116 002c 1E4B     	 ldr r3,.L176
 4117 002e 1B88     	 ldrh r3,[r3]
 4118 0030 FF22     	 mov r2,#255
 4119 0032 1340     	 and r3,r2
 4120 0034 9AB2     	 uxth r2,r3
 4121 0036 204B     	 ldr r3,.L176+16
 4122 0038 1A80     	 strh r2,[r3]
 840:../samuel/samuel_io.c **** 
 841:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4123              	 .loc 3 841 0
 4124 003a 204B     	 ldr r3,.L176+20
 4125 003c 1B88     	 ldrh r3,[r3]
 4126 003e 1A1C     	 mov r2,r3
 4127 0040 1A4B     	 ldr r3,.L176+4
 4128 0042 1B88     	 ldrh r3,[r3]
 4129 0044 5343     	 mul r3,r2
 4130 0046 7B60     	 str r3,[r7,#4]
 842:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4131              	 .loc 3 842 0
 4132 0048 7B68     	 ldr r3,[r7,#4]
 4133 004a 1B0A     	 lsr r3,r3,#8
 4134 004c 1B09     	 lsr r3,r3,#4
 4135 004e 9AB2     	 uxth r2,r3
 4136 0050 1B4B     	 ldr r3,.L176+24
 4137 0052 1A80     	 strh r2,[r3]
 843:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4138              	 .loc 3 843 0
 4139 0054 194B     	 ldr r3,.L176+20
 4140 0056 1B88     	 ldrh r3,[r3]
 4141 0058 1A1C     	 mov r2,r3
 4142 005a 164B     	 ldr r3,.L176+12
 4143 005c 1B88     	 ldrh r3,[r3]
 4144 005e 5343     	 mul r3,r2
 4145 0060 7B60     	 str r3,[r7,#4]
 844:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4146              	 .loc 3 844 0
 4147 0062 7B68     	 ldr r3,[r7,#4]
 4148 0064 1B0A     	 lsr r3,r3,#8
 4149 0066 1B09     	 lsr r3,r3,#4
 4150 0068 9AB2     	 uxth r2,r3
 4151 006a 164B     	 ldr r3,.L176+28
 4152 006c 1A80     	 strh r2,[r3]
 845:../samuel/samuel_io.c **** 
 846:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4153              	 .loc 3 846 0
 4154 006e 164B     	 ldr r3,.L176+32
 4155 0070 1B88     	 ldrh r3,[r3]
 4156 0072 1A1C     	 mov r2,r3
 4157 0074 0E4B     	 ldr r3,.L176+8
 4158 0076 1B88     	 ldrh r3,[r3]
 4159 0078 5343     	 mul r3,r2
 4160 007a 7B60     	 str r3,[r7,#4]
 847:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4161              	 .loc 3 847 0
 4162 007c 7B68     	 ldr r3,[r7,#4]
 4163 007e 1B0A     	 lsr r3,r3,#8
 4164 0080 1B09     	 lsr r3,r3,#4
 4165 0082 9AB2     	 uxth r2,r3
 4166 0084 114B     	 ldr r3,.L176+36
 4167 0086 1A80     	 strh r2,[r3]
 848:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4168              	 .loc 3 848 0
 4169 0088 0F4B     	 ldr r3,.L176+32
 4170 008a 1B88     	 ldrh r3,[r3]
 4171 008c 1A1C     	 mov r2,r3
 4172 008e 0A4B     	 ldr r3,.L176+16
 4173 0090 1B88     	 ldrh r3,[r3]
 4174 0092 5343     	 mul r3,r2
 4175 0094 7B60     	 str r3,[r7,#4]
 849:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4176              	 .loc 3 849 0
 4177 0096 7B68     	 ldr r3,[r7,#4]
 4178 0098 1B0A     	 lsr r3,r3,#8
 4179 009a 1B09     	 lsr r3,r3,#4
 4180 009c 9AB2     	 uxth r2,r3
 4181 009e 0C4B     	 ldr r3,.L176+40
 4182 00a0 1A80     	 strh r2,[r3]
 850:../samuel/samuel_io.c ****   }
 4183              	 .loc 3 850 0
 4184 00a2 BD46     	 mov sp,r7
 4185 00a4 02B0     	 add sp,sp,#8
 4186              	 
 4187 00a6 80BD     	 pop {r7,pc}
 4188              	.L177:
 4189              	 .align 2
 4190              	.L176:
 4191 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4192 00ac 00000000 	 .word Farbe_ww1_Quot
 4193 00b0 00000000 	 .word Farbe_cw1_Quot
 4194 00b4 00000000 	 .word Farbe_ww2_Quot
 4195 00b8 00000000 	 .word Farbe_cw2_Quot
 4196 00bc 00000000 	 .word dimAkt_Ww
 4197 00c0 00000000 	 .word Farbe_ww1
 4198 00c4 00000000 	 .word Farbe_ww2
 4199 00c8 00000000 	 .word dimAkt_Cw
 4200 00cc 00000000 	 .word Farbe_cw1
 4201 00d0 00000000 	 .word Farbe_cw2
 4202              	 .cfi_endproc
 4203              	.LFE330:
 4205              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4206              	 .align 2
 4207              	 .global bcudirAktBerechnung
 4208              	 .code 16
 4209              	 .thumb_func
 4211              	bcudirAktBerechnung:
 4212              	.LFB331:
 851:../samuel/samuel_io.c **** 
 852:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 853:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 854:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 855:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 856:../samuel/samuel_io.c **** 
 857:../samuel/samuel_io.c ****   {
 4213              	 .loc 3 857 0
 4214              	 .cfi_startproc
 4215 0000 80B5     	 push {r7,lr}
 4216              	.LCFI100:
 4217              	 .cfi_def_cfa_offset 8
 4218              	 .cfi_offset 7,-8
 4219              	 .cfi_offset 14,-4
 4220 0002 82B0     	 sub sp,sp,#8
 4221              	.LCFI101:
 4222              	 .cfi_def_cfa_offset 16
 4223 0004 00AF     	 add r7,sp,#0
 4224              	.LCFI102:
 4225              	 .cfi_def_cfa_register 7
 858:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 859:../samuel/samuel_io.c **** 
 860:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4226              	 .loc 3 860 0
 4227 0006 2A4B     	 ldr r3,.L179
 4228 0008 0122     	 mov r2,#1
 4229 000a 5242     	 neg r2,r2
 4230 000c 1A80     	 strh r2,[r3]
 861:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4231              	 .loc 3 861 0
 4232 000e 284B     	 ldr r3,.L179
 4233 0010 1B88     	 ldrh r3,[r3]
 4234 0012 1B0A     	 lsr r3,r3,#8
 4235 0014 9AB2     	 uxth r2,r3
 4236 0016 274B     	 ldr r3,.L179+4
 4237 0018 1A80     	 strh r2,[r3]
 862:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4238              	 .loc 3 862 0
 4239 001a 254B     	 ldr r3,.L179
 4240 001c 1B88     	 ldrh r3,[r3]
 4241 001e 1B0A     	 lsr r3,r3,#8
 4242 0020 9AB2     	 uxth r2,r3
 4243 0022 254B     	 ldr r3,.L179+8
 4244 0024 1A80     	 strh r2,[r3]
 863:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4245              	 .loc 3 863 0
 4246 0026 224B     	 ldr r3,.L179
 4247 0028 1B88     	 ldrh r3,[r3]
 4248 002a FF22     	 mov r2,#255
 4249 002c 1340     	 and r3,r2
 4250 002e 9AB2     	 uxth r2,r3
 4251 0030 224B     	 ldr r3,.L179+12
 4252 0032 1A80     	 strh r2,[r3]
 864:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4253              	 .loc 3 864 0
 4254 0034 1E4B     	 ldr r3,.L179
 4255 0036 1B88     	 ldrh r3,[r3]
 4256 0038 FF22     	 mov r2,#255
 4257 003a 1340     	 and r3,r2
 4258 003c 9AB2     	 uxth r2,r3
 4259 003e 204B     	 ldr r3,.L179+16
 4260 0040 1A80     	 strh r2,[r3]
 865:../samuel/samuel_io.c **** 
 866:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4261              	 .loc 3 866 0
 4262 0042 204B     	 ldr r3,.L179+20
 4263 0044 1B88     	 ldrh r3,[r3]
 4264 0046 1A1C     	 mov r2,r3
 4265 0048 1A4B     	 ldr r3,.L179+4
 4266 004a 1B88     	 ldrh r3,[r3]
 4267 004c 5343     	 mul r3,r2
 4268 004e 7B60     	 str r3,[r7,#4]
 867:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4269              	 .loc 3 867 0
 4270 0050 7B68     	 ldr r3,[r7,#4]
 4271 0052 1B0A     	 lsr r3,r3,#8
 4272 0054 1B09     	 lsr r3,r3,#4
 4273 0056 9AB2     	 uxth r2,r3
 4274 0058 1B4B     	 ldr r3,.L179+24
 4275 005a 1A80     	 strh r2,[r3]
 868:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4276              	 .loc 3 868 0
 4277 005c 194B     	 ldr r3,.L179+20
 4278 005e 1B88     	 ldrh r3,[r3]
 4279 0060 1A1C     	 mov r2,r3
 4280 0062 164B     	 ldr r3,.L179+12
 4281 0064 1B88     	 ldrh r3,[r3]
 4282 0066 5343     	 mul r3,r2
 4283 0068 7B60     	 str r3,[r7,#4]
 869:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4284              	 .loc 3 869 0
 4285 006a 7B68     	 ldr r3,[r7,#4]
 4286 006c 1B0A     	 lsr r3,r3,#8
 4287 006e 1B09     	 lsr r3,r3,#4
 4288 0070 9AB2     	 uxth r2,r3
 4289 0072 164B     	 ldr r3,.L179+28
 4290 0074 1A80     	 strh r2,[r3]
 870:../samuel/samuel_io.c **** 
 871:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4291              	 .loc 3 871 0
 4292 0076 164B     	 ldr r3,.L179+32
 4293 0078 1B88     	 ldrh r3,[r3]
 4294 007a 1A1C     	 mov r2,r3
 4295 007c 0E4B     	 ldr r3,.L179+8
 4296 007e 1B88     	 ldrh r3,[r3]
 4297 0080 5343     	 mul r3,r2
 4298 0082 7B60     	 str r3,[r7,#4]
 872:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4299              	 .loc 3 872 0
 4300 0084 7B68     	 ldr r3,[r7,#4]
 4301 0086 1B0A     	 lsr r3,r3,#8
 4302 0088 1B09     	 lsr r3,r3,#4
 4303 008a 9AB2     	 uxth r2,r3
 4304 008c 114B     	 ldr r3,.L179+36
 4305 008e 1A80     	 strh r2,[r3]
 873:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4306              	 .loc 3 873 0
 4307 0090 0F4B     	 ldr r3,.L179+32
 4308 0092 1B88     	 ldrh r3,[r3]
 4309 0094 1A1C     	 mov r2,r3
 4310 0096 0A4B     	 ldr r3,.L179+16
 4311 0098 1B88     	 ldrh r3,[r3]
 4312 009a 5343     	 mul r3,r2
 4313 009c 7B60     	 str r3,[r7,#4]
 874:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4314              	 .loc 3 874 0
 4315 009e 7B68     	 ldr r3,[r7,#4]
 4316 00a0 1B0A     	 lsr r3,r3,#8
 4317 00a2 1B09     	 lsr r3,r3,#4
 4318 00a4 9AB2     	 uxth r2,r3
 4319 00a6 0C4B     	 ldr r3,.L179+40
 4320 00a8 1A80     	 strh r2,[r3]
 875:../samuel/samuel_io.c ****   }
 4321              	 .loc 3 875 0
 4322 00aa BD46     	 mov sp,r7
 4323 00ac 02B0     	 add sp,sp,#8
 4324              	 
 4325 00ae 80BD     	 pop {r7,pc}
 4326              	.L180:
 4327              	 .align 2
 4328              	.L179:
 4329 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4330 00b4 00000000 	 .word Farbe_ww1_Quot
 4331 00b8 00000000 	 .word Farbe_cw1_Quot
 4332 00bc 00000000 	 .word Farbe_ww2_Quot
 4333 00c0 00000000 	 .word Farbe_cw2_Quot
 4334 00c4 00000000 	 .word dimAkt_Ww
 4335 00c8 00000000 	 .word Farbe_ww1
 4336 00cc 00000000 	 .word Farbe_ww2
 4337 00d0 00000000 	 .word dimAkt_Cw
 4338 00d4 00000000 	 .word Farbe_cw1
 4339 00d8 00000000 	 .word Farbe_cw2
 4340              	 .cfi_endproc
 4341              	.LFE331:
 4343              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4344              	 .align 2
 4345              	 .global bcuColorBerechnung
 4346              	 .code 16
 4347              	 .thumb_func
 4349              	bcuColorBerechnung:
 4350              	.LFB332:
 876:../samuel/samuel_io.c ****  //----------------------------------
 877:../samuel/samuel_io.c **** 
 878:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 879:../samuel/samuel_io.c ****   {
 4351              	 .loc 3 879 0
 4352              	 .cfi_startproc
 4353 0000 80B5     	 push {r7,lr}
 4354              	.LCFI103:
 4355              	 .cfi_def_cfa_offset 8
 4356              	 .cfi_offset 7,-8
 4357              	 .cfi_offset 14,-4
 4358 0002 82B0     	 sub sp,sp,#8
 4359              	.LCFI104:
 4360              	 .cfi_def_cfa_offset 16
 4361 0004 00AF     	 add r7,sp,#0
 4362              	.LCFI105:
 4363              	 .cfi_def_cfa_register 7
 880:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 881:../samuel/samuel_io.c **** 
 882:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4364              	 .loc 3 882 0
 4365 0006 1E4B     	 ldr r3,.L182
 4366 0008 0122     	 mov r2,#1
 4367 000a 5242     	 neg r2,r2
 4368 000c 1A80     	 strh r2,[r3]
 883:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4369              	 .loc 3 883 0
 4370 000e 1C4B     	 ldr r3,.L182
 4371 0010 1B88     	 ldrh r3,[r3]
 4372 0012 1A1C     	 mov r2,r3
 4373 0014 1B4B     	 ldr r3,.L182+4
 4374 0016 1B88     	 ldrh r3,[r3]
 4375 0018 5343     	 mul r3,r2
 4376 001a 7B60     	 str r3,[r7,#4]
 884:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4377              	 .loc 3 884 0
 4378 001c 7B68     	 ldr r3,[r7,#4]
 4379 001e 1B0C     	 lsr r3,r3,#16
 4380 0020 7B60     	 str r3,[r7,#4]
 885:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4381              	 .loc 3 885 0
 4382 0022 194B     	 ldr r3,.L182+8
 4383 0024 1B88     	 ldrh r3,[r3]
 4384 0026 1A1C     	 mov r2,r3
 4385 0028 184B     	 ldr r3,.L182+12
 4386 002a 9B1A     	 sub r3,r3,r2
 4387 002c 1A1C     	 mov r2,r3
 4388 002e 7B68     	 ldr r3,[r7,#4]
 4389 0030 5343     	 mul r3,r2
 4390 0032 7B60     	 str r3,[r7,#4]
 886:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4391              	 .loc 3 886 0
 4392 0034 7B68     	 ldr r3,[r7,#4]
 4393 0036 1B0C     	 lsr r3,r3,#16
 4394 0038 7B60     	 str r3,[r7,#4]
 887:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4395              	 .loc 3 887 0
 4396 003a 7B68     	 ldr r3,[r7,#4]
 4397 003c 9AB2     	 uxth r2,r3
 4398 003e 104B     	 ldr r3,.L182
 4399 0040 1A80     	 strh r2,[r3]
 888:../samuel/samuel_io.c **** 
 889:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4400              	 .loc 3 889 0
 4401 0042 134B     	 ldr r3,.L182+16
 4402 0044 0122     	 mov r2,#1
 4403 0046 5242     	 neg r2,r2
 4404 0048 1A80     	 strh r2,[r3]
 890:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4405              	 .loc 3 890 0
 4406 004a 114B     	 ldr r3,.L182+16
 4407 004c 1B88     	 ldrh r3,[r3]
 4408 004e 1A1C     	 mov r2,r3
 4409 0050 0C4B     	 ldr r3,.L182+4
 4410 0052 1B88     	 ldrh r3,[r3]
 4411 0054 5343     	 mul r3,r2
 4412 0056 7B60     	 str r3,[r7,#4]
 891:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4413              	 .loc 3 891 0
 4414 0058 7B68     	 ldr r3,[r7,#4]
 4415 005a 1B0C     	 lsr r3,r3,#16
 4416 005c 7B60     	 str r3,[r7,#4]
 892:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4417              	 .loc 3 892 0
 4418 005e 0A4B     	 ldr r3,.L182+8
 4419 0060 1B88     	 ldrh r3,[r3]
 4420 0062 1A1C     	 mov r2,r3
 4421 0064 7B68     	 ldr r3,[r7,#4]
 4422 0066 5343     	 mul r3,r2
 4423 0068 7B60     	 str r3,[r7,#4]
 893:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4424              	 .loc 3 893 0
 4425 006a 7B68     	 ldr r3,[r7,#4]
 4426 006c 1B0C     	 lsr r3,r3,#16
 4427 006e 7B60     	 str r3,[r7,#4]
 894:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4428              	 .loc 3 894 0
 4429 0070 7B68     	 ldr r3,[r7,#4]
 4430 0072 9AB2     	 uxth r2,r3
 4431 0074 064B     	 ldr r3,.L182+16
 4432 0076 1A80     	 strh r2,[r3]
 895:../samuel/samuel_io.c ****   }
 4433              	 .loc 3 895 0
 4434 0078 BD46     	 mov sp,r7
 4435 007a 02B0     	 add sp,sp,#8
 4436              	 
 4437 007c 80BD     	 pop {r7,pc}
 4438              	.L183:
 4439 007e C046     	 .align 2
 4440              	.L182:
 4441 0080 00000000 	 .word dimAkt_Ww
 4442 0084 00000000 	 .word Brightness_Gen
 4443 0088 00000000 	 .word ColorQuot_Gen
 4444 008c FFFF0000 	 .word 65535
 4445 0090 00000000 	 .word dimAkt_Cw
 4446              	 .cfi_endproc
 4447              	.LFE332:
 4449              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4450              	 .align 2
 4451              	 .global Offlight_zahler_write
 4452              	 .code 16
 4453              	 .thumb_func
 4455              	Offlight_zahler_write:
 4456              	.LFB333:
 896:../samuel/samuel_io.c ****  //----------------------------------
 897:../samuel/samuel_io.c **** 
 898:../samuel/samuel_io.c **** 
 899:../samuel/samuel_io.c **** 
 900:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 901:../samuel/samuel_io.c ****  {
 4457              	 .loc 3 901 0
 4458              	 .cfi_startproc
 4459 0000 80B5     	 push {r7,lr}
 4460              	.LCFI106:
 4461              	 .cfi_def_cfa_offset 8
 4462              	 .cfi_offset 7,-8
 4463              	 .cfi_offset 14,-4
 4464 0002 82B0     	 sub sp,sp,#8
 4465              	.LCFI107:
 4466              	 .cfi_def_cfa_offset 16
 4467 0004 00AF     	 add r7,sp,#0
 4468              	.LCFI108:
 4469              	 .cfi_def_cfa_register 7
 902:../samuel/samuel_io.c ****      uint8_t a;
 903:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4470              	 .loc 3 903 0
 4471 0006 3B4B     	 ldr r3,.L190
 4472 0008 1B78     	 ldrb r3,[r3]
 4473 000a 052B     	 cmp r3,#5
 4474 000c 00D0     	 beq .LCB3712
 4475 000e 6EE0     	 b .L184
 4476              	.LCB3712:
 904:../samuel/samuel_io.c **** 	 {
 905:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4477              	 .loc 3 905 0
 4478 0010 394B     	 ldr r3,.L190+4
 4479 0012 1B88     	 ldrh r3,[r3]
 4480 0014 0133     	 add r3,r3,#1
 4481 0016 9AB2     	 uxth r2,r3
 4482 0018 374B     	 ldr r3,.L190+4
 4483 001a 1A80     	 strh r2,[r3]
 906:../samuel/samuel_io.c **** 
 907:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4484              	 .loc 3 907 0
 4485 001c 364B     	 ldr r3,.L190+4
 4486 001e 1B88     	 ldrh r3,[r3]
 4487 0020 3B2B     	 cmp r3,#59
 4488 0022 64D9     	 bls .L184
 908:../samuel/samuel_io.c **** 	  {
 909:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4489              	 .loc 3 909 0
 4490 0024 344B     	 ldr r3,.L190+4
 4491 0026 0022     	 mov r2,#0
 4492 0028 1A80     	 strh r2,[r3]
 910:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4493              	 .loc 3 910 0
 4494 002a FFF7FEFF 	 bl read_off_light_EEprom
 4495 002e 021C     	 mov r2,r0
 4496 0030 FB1D     	 add r3,r7,#7
 4497 0032 1A70     	 strb r2,[r3]
 911:../samuel/samuel_io.c **** 			if (a == 0x03)
 4498              	 .loc 3 911 0
 4499 0034 FB1D     	 add r3,r7,#7
 4500 0036 1B78     	 ldrb r3,[r3]
 4501 0038 032B     	 cmp r3,#3
 4502 003a 52D1     	 bne .L186
 912:../samuel/samuel_io.c **** 			{
 913:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4503              	 .loc 3 913 0
 4504 003c 2F4B     	 ldr r3,.L190+8
 4505 003e 1A88     	 ldrh r2,[r3]
 4506 0040 2F4B     	 ldr r3,.L190+12
 4507 0042 1A80     	 strh r2,[r3]
 914:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4508              	 .loc 3 914 0
 4509 0044 2F4B     	 ldr r3,.L190+16
 4510 0046 1A88     	 ldrh r2,[r3]
 4511 0048 2F4B     	 ldr r3,.L190+20
 4512 004a 1A80     	 strh r2,[r3]
 915:../samuel/samuel_io.c **** 
 916:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4513              	 .loc 3 916 0
 4514 004c 2F4B     	 ldr r3,.L190+24
 4515 004e 1B79     	 ldrb r3,[r3,#4]
 4516 0050 9AB2     	 uxth r2,r3
 4517 0052 2B4B     	 ldr r3,.L190+12
 4518 0054 1B88     	 ldrh r3,[r3]
 4519 0056 1B0A     	 lsr r3,r3,#8
 4520 0058 9BB2     	 uxth r3,r3
 4521 005a 9A42     	 cmp r2,r3
 4522 005c 20D1     	 bne .L187
 4523              	 .loc 3 916 0 is_stmt 0 discriminator 1
 4524 005e 2B4B     	 ldr r3,.L190+24
 4525 0060 5B79     	 ldrb r3,[r3,#5]
 4526 0062 1A1C     	 mov r2,r3
 4527 0064 264B     	 ldr r3,.L190+12
 4528 0066 1B88     	 ldrh r3,[r3]
 4529 0068 191C     	 mov r1,r3
 4530 006a FF23     	 mov r3,#255
 4531 006c 0B40     	 and r3,r1
 4532 006e 9A42     	 cmp r2,r3
 4533 0070 16D1     	 bne .L187
 4534              	 .loc 3 916 0 discriminator 2
 4535 0072 264B     	 ldr r3,.L190+24
 4536 0074 9B79     	 ldrb r3,[r3,#6]
 4537 0076 9AB2     	 uxth r2,r3
 4538 0078 234B     	 ldr r3,.L190+20
 4539 007a 1B88     	 ldrh r3,[r3]
 4540 007c 1B0A     	 lsr r3,r3,#8
 4541 007e 9BB2     	 uxth r3,r3
 4542 0080 9A42     	 cmp r2,r3
 4543 0082 0DD1     	 bne .L187
 4544              	 .loc 3 916 0 discriminator 3
 4545 0084 214B     	 ldr r3,.L190+24
 4546 0086 DB79     	 ldrb r3,[r3,#7]
 4547 0088 1A1C     	 mov r2,r3
 4548 008a 1F4B     	 ldr r3,.L190+20
 4549 008c 1B88     	 ldrh r3,[r3]
 4550 008e 191C     	 mov r1,r3
 4551 0090 FF23     	 mov r3,#255
 4552 0092 0B40     	 and r3,r1
 4553 0094 9A42     	 cmp r2,r3
 4554 0096 03D1     	 bne .L187
 917:../samuel/samuel_io.c **** 			 {
 918:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4555              	 .loc 3 918 0 is_stmt 1
 4556 0098 174B     	 ldr r3,.L190+4
 4557 009a 0022     	 mov r2,#0
 4558 009c 1A80     	 strh r2,[r3]
 4559 009e 23E0     	 b .L189
 4560              	.L187:
 919:../samuel/samuel_io.c **** 			 }
 920:../samuel/samuel_io.c **** 			 else{
 921:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4561              	 .loc 3 921 0
 4562 00a0 174B     	 ldr r3,.L190+12
 4563 00a2 1B88     	 ldrh r3,[r3]
 4564 00a4 1B0A     	 lsr r3,r3,#8
 4565 00a6 9BB2     	 uxth r3,r3
 4566 00a8 DAB2     	 uxtb r2,r3
 4567 00aa 184B     	 ldr r3,.L190+24
 4568 00ac 1A71     	 strb r2,[r3,#4]
 922:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4569              	 .loc 3 922 0
 4570 00ae 144B     	 ldr r3,.L190+12
 4571 00b0 1B88     	 ldrh r3,[r3]
 4572 00b2 DAB2     	 uxtb r2,r3
 4573 00b4 154B     	 ldr r3,.L190+24
 4574 00b6 5A71     	 strb r2,[r3,#5]
 923:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4575              	 .loc 3 923 0
 4576 00b8 134B     	 ldr r3,.L190+20
 4577 00ba 1B88     	 ldrh r3,[r3]
 4578 00bc 1B0A     	 lsr r3,r3,#8
 4579 00be 9BB2     	 uxth r3,r3
 4580 00c0 DAB2     	 uxtb r2,r3
 4581 00c2 124B     	 ldr r3,.L190+24
 4582 00c4 9A71     	 strb r2,[r3,#6]
 924:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4583              	 .loc 3 924 0
 4584 00c6 104B     	 ldr r3,.L190+20
 4585 00c8 1B88     	 ldrh r3,[r3]
 4586 00ca DAB2     	 uxtb r2,r3
 4587 00cc 0F4B     	 ldr r3,.L190+24
 4588 00ce DA71     	 strb r2,[r3,#7]
 925:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4589              	 .loc 3 925 0
 4590 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4591 00d4 021C     	 mov r2,r0
 4592 00d6 FB1D     	 add r3,r7,#7
 4593 00d8 1A70     	 strb r2,[r3]
 926:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4594              	 .loc 3 926 0
 4595 00da 074B     	 ldr r3,.L190+4
 4596 00dc 0022     	 mov r2,#0
 4597 00de 1A80     	 strh r2,[r3]
 4598 00e0 02E0     	 b .L189
 4599              	.L186:
 927:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 928:../samuel/samuel_io.c **** 			 }
 929:../samuel/samuel_io.c **** 			}
 930:../samuel/samuel_io.c **** 			else {
 931:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4600              	 .loc 3 931 0
 4601 00e2 054B     	 ldr r3,.L190+4
 4602 00e4 1E22     	 mov r2,#30
 4603 00e6 1A80     	 strh r2,[r3]
 4604              	.L189:
 932:../samuel/samuel_io.c **** 			}
 933:../samuel/samuel_io.c **** 
 934:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4605              	 .loc 3 934 0
 4606 00e8 034B     	 ldr r3,.L190+4
 4607 00ea 0022     	 mov r2,#0
 4608 00ec 1A80     	 strh r2,[r3]
 4609              	.L184:
 935:../samuel/samuel_io.c **** 	  }//zahler_offlight
 936:../samuel/samuel_io.c **** 	 }//regonoff
 937:../samuel/samuel_io.c ****  }
 4610              	 .loc 3 937 0
 4611 00ee BD46     	 mov sp,r7
 4612 00f0 02B0     	 add sp,sp,#8
 4613              	 
 4614 00f2 80BD     	 pop {r7,pc}
 4615              	.L191:
 4616              	 .align 2
 4617              	.L190:
 4618 00f4 00000000 	 .word RegOnOff
 4619 00f8 00000000 	 .word zahler_offlight
 4620 00fc 00000000 	 .word dimAkt_Ww
 4621 0100 00000000 	 .word dimOff_Ww
 4622 0104 00000000 	 .word dimAkt_Cw
 4623 0108 00000000 	 .word dimOff_Cw
 4624 010c 00000000 	 .word ReadBuffer2
 4625              	 .cfi_endproc
 4626              	.LFE333:
 4628              	 .section .text.plus39V_stop,"ax",%progbits
 4629              	 .align 2
 4630              	 .global plus39V_stop
 4631              	 .code 16
 4632              	 .thumb_func
 4634              	plus39V_stop:
 4635              	.LFB334:
 938:../samuel/samuel_io.c **** 
 939:../samuel/samuel_io.c ****  //----------------------------------------------------
 940:../samuel/samuel_io.c **** 
 941:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
 942:../samuel/samuel_io.c ****   {
 4636              	 .loc 3 942 0
 4637              	 .cfi_startproc
 4638 0000 80B5     	 push {r7,lr}
 4639              	.LCFI109:
 4640              	 .cfi_def_cfa_offset 8
 4641              	 .cfi_offset 7,-8
 4642              	 .cfi_offset 14,-4
 4643 0002 00AF     	 add r7,sp,#0
 4644              	.LCFI110:
 4645              	 .cfi_def_cfa_register 7
 943:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 944:../samuel/samuel_io.c **** 
 945:../samuel/samuel_io.c **** 
 946:../samuel/samuel_io.c ****   }
 4646              	 .loc 3 946 0
 4647 0004 BD46     	 mov sp,r7
 4648              	 
 4649 0006 80BD     	 pop {r7,pc}
 4650              	 .cfi_endproc
 4651              	.LFE334:
 4653              	 .section .text.plus39V_start,"ax",%progbits
 4654              	 .align 2
 4655              	 .global plus39V_start
 4656              	 .code 16
 4657              	 .thumb_func
 4659              	plus39V_start:
 4660              	.LFB335:
 947:../samuel/samuel_io.c **** 
 948:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
 949:../samuel/samuel_io.c ****   {
 4661              	 .loc 3 949 0
 4662              	 .cfi_startproc
 4663 0000 80B5     	 push {r7,lr}
 4664              	.LCFI111:
 4665              	 .cfi_def_cfa_offset 8
 4666              	 .cfi_offset 7,-8
 4667              	 .cfi_offset 14,-4
 4668 0002 00AF     	 add r7,sp,#0
 4669              	.LCFI112:
 4670              	 .cfi_def_cfa_register 7
 950:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 951:../samuel/samuel_io.c **** 
 952:../samuel/samuel_io.c ****   }
 4671              	 .loc 3 952 0
 4672 0004 BD46     	 mov sp,r7
 4673              	 
 4674 0006 80BD     	 pop {r7,pc}
 4675              	 .cfi_endproc
 4676              	.LFE335:
 4678              	 .section .text.Time1msec,"ax",%progbits
 4679              	 .align 2
 4680              	 .global Time1msec
 4681              	 .code 16
 4682              	 .thumb_func
 4684              	Time1msec:
 4685              	.LFB336:
 953:../samuel/samuel_io.c **** 
 954:../samuel/samuel_io.c ****  //----------------------------------
 955:../samuel/samuel_io.c **** 
 956:../samuel/samuel_io.c ****   void Time1msec (void) //
 957:../samuel/samuel_io.c ****   {
 4686              	 .loc 3 957 0
 4687              	 .cfi_startproc
 4688 0000 80B5     	 push {r7,lr}
 4689              	.LCFI113:
 4690              	 .cfi_def_cfa_offset 8
 4691              	 .cfi_offset 7,-8
 4692              	 .cfi_offset 14,-4
 4693 0002 00AF     	 add r7,sp,#0
 4694              	.LCFI114:
 4695              	 .cfi_def_cfa_register 7
 958:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4696              	 .loc 3 958 0
 4697 0004 024B     	 ldr r3,.L195
 4698 0006 181C     	 mov r0,r3
 4699 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
 959:../samuel/samuel_io.c **** 
 960:../samuel/samuel_io.c ****   }
 4700              	 .loc 3 960 0
 4701 000c BD46     	 mov sp,r7
 4702              	 
 4703 000e 80BD     	 pop {r7,pc}
 4704              	.L196:
 4705              	 .align 2
 4706              	.L195:
 4707 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4708              	 .cfi_endproc
 4709              	.LFE336:
 4711              	 .section .text.Time20msec,"ax",%progbits
 4712              	 .align 2
 4713              	 .global Time20msec
 4714              	 .code 16
 4715              	 .thumb_func
 4717              	Time20msec:
 4718              	.LFB337:
 961:../samuel/samuel_io.c ****   //----------------------------------
 962:../samuel/samuel_io.c **** 
 963:../samuel/samuel_io.c ****    void Time20msec (void) //
 964:../samuel/samuel_io.c ****    {
 4719              	 .loc 3 964 0
 4720              	 .cfi_startproc
 4721 0000 80B5     	 push {r7,lr}
 4722              	.LCFI115:
 4723              	 .cfi_def_cfa_offset 8
 4724              	 .cfi_offset 7,-8
 4725              	 .cfi_offset 14,-4
 4726 0002 00AF     	 add r7,sp,#0
 4727              	.LCFI116:
 4728              	 .cfi_def_cfa_register 7
 965:../samuel/samuel_io.c **** 
 966:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 967:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 4729              	 .loc 3 967 0
 4730 0004 364B     	 ldr r3,.L204
 4731 0006 1B88     	 ldrh r3,[r3]
 4732 0008 1A1C     	 mov r2,r3
 4733 000a 131C     	 mov r3,r2
 4734 000c 5B00     	 lsl r3,r3,#1
 4735 000e 9B18     	 add r3,r3,r2
 4736 0010 344A     	 ldr r2,.L204+4
 4737 0012 1288     	 ldrh r2,[r2]
 4738 0014 9B18     	 add r3,r3,r2
 4739 0016 002B     	 cmp r3,#0
 4740 0018 00DA     	 bge .L198
 4741 001a 0333     	 add r3,r3,#3
 4742              	.L198:
 4743 001c 9B10     	 asr r3,r3,#2
 4744 001e 9AB2     	 uxth r2,r3
 4745 0020 2F4B     	 ldr r3,.L204
 4746 0022 1A80     	 strh r2,[r3]
 968:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 4747              	 .loc 3 968 0
 4748 0024 304B     	 ldr r3,.L204+8
 4749 0026 1B88     	 ldrh r3,[r3]
 4750 0028 1A1C     	 mov r2,r3
 4751 002a 131C     	 mov r3,r2
 4752 002c 5B00     	 lsl r3,r3,#1
 4753 002e 9B18     	 add r3,r3,r2
 4754 0030 2E4A     	 ldr r2,.L204+12
 4755 0032 1288     	 ldrh r2,[r2]
 4756 0034 9B18     	 add r3,r3,r2
 4757 0036 002B     	 cmp r3,#0
 4758 0038 00DA     	 bge .L199
 4759 003a 0333     	 add r3,r3,#3
 4760              	.L199:
 4761 003c 9B10     	 asr r3,r3,#2
 4762 003e 9AB2     	 uxth r2,r3
 4763 0040 294B     	 ldr r3,.L204+8
 4764 0042 1A80     	 strh r2,[r3]
 969:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 4765              	 .loc 3 969 0
 4766 0044 2A4B     	 ldr r3,.L204+16
 4767 0046 1B88     	 ldrh r3,[r3]
 4768 0048 1A1C     	 mov r2,r3
 4769 004a 131C     	 mov r3,r2
 4770 004c 5B00     	 lsl r3,r3,#1
 4771 004e 9B18     	 add r3,r3,r2
 4772 0050 284A     	 ldr r2,.L204+20
 4773 0052 1288     	 ldrh r2,[r2]
 4774 0054 9B18     	 add r3,r3,r2
 4775 0056 002B     	 cmp r3,#0
 4776 0058 00DA     	 bge .L200
 4777 005a 0333     	 add r3,r3,#3
 4778              	.L200:
 4779 005c 9B10     	 asr r3,r3,#2
 4780 005e 9AB2     	 uxth r2,r3
 4781 0060 234B     	 ldr r3,.L204+16
 4782 0062 1A80     	 strh r2,[r3]
 970:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 4783              	 .loc 3 970 0
 4784 0064 244B     	 ldr r3,.L204+24
 4785 0066 1B88     	 ldrh r3,[r3]
 4786 0068 1A1C     	 mov r2,r3
 4787 006a 131C     	 mov r3,r2
 4788 006c 5B00     	 lsl r3,r3,#1
 4789 006e 9B18     	 add r3,r3,r2
 4790 0070 224A     	 ldr r2,.L204+28
 4791 0072 1288     	 ldrh r2,[r2]
 4792 0074 9B18     	 add r3,r3,r2
 4793 0076 002B     	 cmp r3,#0
 4794 0078 00DA     	 bge .L201
 4795 007a 0333     	 add r3,r3,#3
 4796              	.L201:
 4797 007c 9B10     	 asr r3,r3,#2
 4798 007e 9AB2     	 uxth r2,r3
 4799 0080 1D4B     	 ldr r3,.L204+24
 4800 0082 1A80     	 strh r2,[r3]
 971:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 4801              	 .loc 3 971 0
 4802 0084 1E4B     	 ldr r3,.L204+32
 4803 0086 1B88     	 ldrh r3,[r3]
 4804 0088 0133     	 add r3,r3,#1
 4805 008a 9AB2     	 uxth r2,r3
 4806 008c 1C4B     	 ldr r3,.L204+32
 4807 008e 1A80     	 strh r2,[r3]
 972:../samuel/samuel_io.c **** 
 973:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 4808              	 .loc 3 973 0
 4809 0090 1B4B     	 ldr r3,.L204+32
 4810 0092 1B88     	 ldrh r3,[r3]
 4811 0094 052B     	 cmp r3,#5
 4812 0096 21D9     	 bls .L197
 974:../samuel/samuel_io.c ****       {
 975:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
 976:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 4813              	 .loc 3 976 0
 4814 0098 194B     	 ldr r3,.L204+32
 4815 009a 0022     	 mov r2,#0
 4816 009c 1A80     	 strh r2,[r3]
 977:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 4817              	 .loc 3 977 0
 4818 009e 104B     	 ldr r3,.L204
 4819 00a0 1B88     	 ldrh r3,[r3]
 4820 00a2 184A     	 ldr r2,.L204+36
 4821 00a4 9342     	 cmp r3,r2
 4822 00a6 09D8     	 bhi .L203
 978:../samuel/samuel_io.c ****      	     {
 979:../samuel/samuel_io.c ****      	     plus39V_stop();
 4823              	 .loc 3 979 0
 4824 00a8 FFF7FEFF 	 bl plus39V_stop
 980:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 4825              	 .loc 3 980 0
 4826 00ac 164B     	 ldr r3,.L204+40
 4827 00ae 0022     	 mov r2,#0
 4828 00b0 1A70     	 strb r2,[r3]
 981:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 4829              	 .loc 3 981 0
 4830 00b2 164B     	 ldr r3,.L204+44
 4831 00b4 181C     	 mov r0,r3
 4832 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4833 00ba 0FE0     	 b .L197
 4834              	.L203:
 982:../samuel/samuel_io.c ****      	     }
 983:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 4835              	 .loc 3 983 0
 4836 00bc 084B     	 ldr r3,.L204
 4837 00be 1A88     	 ldrh r2,[r3]
 4838 00c0 BF23     	 mov r3,#191
 4839 00c2 1B01     	 lsl r3,r3,#4
 4840 00c4 9A42     	 cmp r2,r3
 4841 00c6 09D9     	 bls .L197
 984:../samuel/samuel_io.c ****  			 {
 985:../samuel/samuel_io.c ****      	     plus39V_start();
 4842              	 .loc 3 985 0
 4843 00c8 FFF7FEFF 	 bl plus39V_start
 986:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 4844              	 .loc 3 986 0
 4845 00cc 0E4B     	 ldr r3,.L204+40
 4846 00ce 1B78     	 ldrb r3,[r3]
 4847 00d0 002B     	 cmp r3,#0
 4848 00d2 03D1     	 bne .L197
 987:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 4849              	 .loc 3 987 0
 4850 00d4 0D4B     	 ldr r3,.L204+44
 4851 00d6 181C     	 mov r0,r3
 4852 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4853              	.L197:
 988:../samuel/samuel_io.c ****  			 }
 989:../samuel/samuel_io.c ****       }
 990:../samuel/samuel_io.c **** 
 991:../samuel/samuel_io.c **** 
 992:../samuel/samuel_io.c ****    }
 4854              	 .loc 3 992 0
 4855 00dc BD46     	 mov sp,r7
 4856              	 
 4857 00de 80BD     	 pop {r7,pc}
 4858              	.L205:
 4859              	 .align 2
 4860              	.L204:
 4861 00e0 00000000 	 .word resultA2
 4862 00e4 00000000 	 .word resultAalt
 4863 00e8 00000000 	 .word resultB2
 4864 00ec 00000000 	 .word resultBalt
 4865 00f0 00000000 	 .word resultC2
 4866 00f4 00000000 	 .word resultCalt
 4867 00f8 00000000 	 .word resultD2
 4868 00fc 00000000 	 .word resultDalt
 4869 0100 00000000 	 .word adc_ready20m
 4870 0104 9F0B0000 	 .word 2975
 4871 0108 00000000 	 .word B_nextLedOff
 4872 010c 00000000 	 .word VCC_LED_shtdwn
 4873              	 .cfi_endproc
 4874              	.LFE337:
 4876              	 .section .text.firstuartBack,"ax",%progbits
 4877              	 .align 2
 4878              	 .global firstuartBack
 4879              	 .code 16
 4880              	 .thumb_func
 4882              	firstuartBack:
 4883              	.LFB338:
 993:../samuel/samuel_io.c ****   //------------------------------
 994:../samuel/samuel_io.c **** 
 995:../samuel/samuel_io.c ****    void firstuartBack (void) //
 996:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 4884              	 .loc 3 996 0
 4885              	 .cfi_startproc
 4886 0000 98B5     	 push {r3,r4,r7,lr}
 4887              	.LCFI117:
 4888              	 .cfi_def_cfa_offset 16
 4889              	 .cfi_offset 3,-16
 4890              	 .cfi_offset 4,-12
 4891              	 .cfi_offset 7,-8
 4892              	 .cfi_offset 14,-4
 4893 0002 00AF     	 add r7,sp,#0
 4894              	.LCFI118:
 4895              	 .cfi_def_cfa_register 7
 4896              	 .loc 3 996 0
 4897 0004 174B     	 ldr r3,.L208
 4898 0006 1B78     	 ldrb r3,[r3]
 4899 0008 002B     	 cmp r3,#0
 4900 000a 29D1     	 bne .L206
 997:../samuel/samuel_io.c ****    	   {
 998:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 4901              	 .loc 3 998 0
 4902 000c FFF7FEFF 	 bl new_data_HalloBack
 999:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 4903              	 .loc 3 999 0
 4904 0010 154B     	 ldr r3,.L208+4
 4905 0012 3022     	 mov r2,#48
 4906 0014 5A71     	 strb r2,[r3,#5]
1000:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 4907              	 .loc 3 1000 0
 4908 0016 154B     	 ldr r3,.L208+8
 4909 0018 1B88     	 ldrh r3,[r3]
 4910 001a 1B0A     	 lsr r3,r3,#8
 4911 001c 9BB2     	 uxth r3,r3
 4912 001e DAB2     	 uxtb r2,r3
 4913 0020 114B     	 ldr r3,.L208+4
 4914 0022 9A71     	 strb r2,[r3,#6]
1001:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 4915              	 .loc 3 1001 0
 4916 0024 114B     	 ldr r3,.L208+8
 4917 0026 1B88     	 ldrh r3,[r3]
 4918 0028 DAB2     	 uxtb r2,r3
 4919 002a 0F4B     	 ldr r3,.L208+4
 4920 002c DA71     	 strb r2,[r3,#7]
1002:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 4921              	 .loc 3 1002 0
 4922 002e 104B     	 ldr r3,.L208+12
 4923 0030 1B88     	 ldrh r3,[r3]
 4924 0032 1B0A     	 lsr r3,r3,#8
 4925 0034 9BB2     	 uxth r3,r3
 4926 0036 DAB2     	 uxtb r2,r3
 4927 0038 0B4B     	 ldr r3,.L208+4
 4928 003a 1A72     	 strb r2,[r3,#8]
1003:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 4929              	 .loc 3 1003 0
 4930 003c 0C4B     	 ldr r3,.L208+12
 4931 003e 1B88     	 ldrh r3,[r3]
 4932 0040 DAB2     	 uxtb r2,r3
 4933 0042 094B     	 ldr r3,.L208+4
 4934 0044 5A72     	 strb r2,[r3,#9]
1004:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 4935              	 .loc 3 1004 0
 4936 0046 0B4B     	 ldr r3,.L208+16
 4937 0048 1B78     	 ldrb r3,[r3]
 4938 004a 1C1C     	 mov r4,r3
 4939 004c 0A4A     	 ldr r2,.L208+20
 4940 004e 064B     	 ldr r3,.L208+4
 4941 0050 101C     	 mov r0,r2
 4942 0052 191C     	 mov r1,r3
 4943 0054 221C     	 mov r2,r4
 4944 0056 FFF7FEFF 	 bl UART_Transmit
1005:../samuel/samuel_io.c ****    	   B_first_uart=1;
 4945              	 .loc 3 1005 0
 4946 005a 024B     	 ldr r3,.L208
 4947 005c 0122     	 mov r2,#1
 4948 005e 1A70     	 strb r2,[r3]
 4949              	.L206:
1006:../samuel/samuel_io.c ****    	   }
1007:../samuel/samuel_io.c ****    }
 4950              	 .loc 3 1007 0
 4951 0060 BD46     	 mov sp,r7
 4952              	 
 4953 0062 98BD     	 pop {r3,r4,r7,pc}
 4954              	.L209:
 4955              	 .align 2
 4956              	.L208:
 4957 0064 00000000 	 .word B_first_uart
 4958 0068 00000000 	 .word new_data
 4959 006c 00000000 	 .word Ser_NrH
 4960 0070 00000000 	 .word Ser_NrL
 4961 0074 00000000 	 .word transmit_buf_size
 4962 0078 00000000 	 .word UART_1
 4963              	 .cfi_endproc
 4964              	.LFE338:
 4966              	 .text
 4967              	.Letext0:
 4968              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4969              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4970              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 4971              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc/xmc1_gpio.h"
 4972              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc/xmc_usic.h"
 4973              	 .file 9 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc/xmc_uart.h"
 4974              	 .file 10 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/UART/uart.h"
 4975              	 .file 11 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 4976              	 .file 12 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc/xmc_vadc.h"
 4977              	 .file 13 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 4978              	 .file 14 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc/xmc_bccu.h"
 4979              	 .file 15 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 4980              	 .file 16 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIM_BCCU/dim_bccu.h"
 4981              	 .file 17 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 4982              	 .file 18 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 4983              	 .file 19 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 4984              	 .file 20 "../samuel/samuel_io.h"
 4985              	 .file 21 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 4986              	 .file 22 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/UART/uart_extern.h"
 4987              	 .file 23 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 4988              	 .file 24 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 4989              	 .file 25 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 4990              	 .file 26 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4455   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:4882   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:687    .text.lightprog01:00000178 $d
    {standard input}:693    .text.light_aus:00000000 $t
    {standard input}:698    .text.light_aus:00000000 light_aus
    {standard input}:4211   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:3974   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:752    .text.light_aus:00000048 $d
    {standard input}:762    .text.analog_start:00000000 $t
    {standard input}:767    .text.analog_start:00000000 analog_start
    {standard input}:787    .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:792    .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:812    .text.new_data_fill:00000000 $t
    {standard input}:817    .text.new_data_fill:00000000 new_data_fill
    {standard input}:884    .text.new_data_fill:00000050 $d
    {standard input}:890    .text.new_data_unbekanntBack:00000000 $t
    {standard input}:895    .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:964    .text.new_data_unbekanntBack:00000054 $d
    {standard input}:971    .text.new_data_BroadcastBack:00000000 $t
    {standard input}:976    .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:1057   .text.new_data_BroadcastBack:0000006c $d
    {standard input}:1066   .text.new_data_analog1Back:00000000 $t
    {standard input}:1071   .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1152   .text.new_data_analog1Back:0000006c $d
    {standard input}:1161   .text.new_data_analog2Back:00000000 $t
    {standard input}:1166   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1247   .text.new_data_analog2Back:0000006c $d
    {standard input}:1256   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1261   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1342   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1351   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1356   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1447   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1458   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1463   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1544   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1553   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1558   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1639   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1648   .text.new_data_HalloBack:00000000 $t
    {standard input}:1653   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1722   .text.new_data_HalloBack:00000054 $d
    {standard input}:1729   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:1734   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:1820   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:1830   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:1835   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:1944   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:1955   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:1960   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:2051   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:2061   .text.new_data_SerNrBack:00000000 $t
    {standard input}:2066   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2147   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2156   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2161   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2298   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2306   .text.clearEpromBuffer:00000000 $t
    {standard input}:2311   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2408   .text.clearEpromBuffer:00000080 $d
    {standard input}:2416   .text.fillEpromBuffer:00000000 $t
    {standard input}:2421   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2467   .text.fillEpromBuffer:00000034 $d
    {standard input}:2473   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2478   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2526   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2532   .text.readAllEEprom:00000000 $t
    {standard input}:2537   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:2777   .text.readAllEEprom:00000194 $d
    {standard input}:2801   .text.readSerNrEEprom:00000000 $t
    {standard input}:2806   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:2857   .text.readSerNrEEprom:00000044 $d
    {standard input}:2864   .text.readNodeIdEEprom:00000000 $t
    {standard input}:2869   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:2920   .text.readNodeIdEEprom:00000044 $d
    {standard input}:2927   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:2932   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:2983   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:2990   .text.read_off_light_EEprom:00000000 $t
    {standard input}:2995   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:3046   .text.read_off_light_EEprom:00000044 $d
    {standard input}:3053   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:3058   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3127   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3135   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3140   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3209   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3217   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3222   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3291   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3299   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3304   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3373   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3381   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3386   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3455   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3463   .text.sysiniValueB1:00000000 $t
    {standard input}:3468   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3533   .text.sysiniValueB1:00000050 $d
    {standard input}:3549   .text.sysiniValueB2:00000000 $t
    {standard input}:3554   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3616   .text.sysiniValueB2:0000004c $d
    {standard input}:3632   .text.sysiniValueB4:00000000 $t
    {standard input}:3637   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:3749   .text.sysiniValueB4:000000a0 $d
    {standard input}:3771   .text.sysiniValueB5:00000000 $t
    {standard input}:3776   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:3831   .text.sysiniValueB5:00000040 $d
    {standard input}:3847   .text.bcuInit:00000000 $t
    {standard input}:3852   .text.bcuInit:00000000 bcuInit
    {standard input}:3875   .rodata.bcuInit:00000000 $d
    {standard input}:3954   .text.bcuInit:0000006c $d
    {standard input}:3969   .text.bcuUebergabe:00000000 $t
    {standard input}:4057   .text.bcuUebergabe:00000088 $d
    {standard input}:4073   .text.bcuAktBerechnung:00000000 $t
    {standard input}:4078   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4191   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4206   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4329   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4344   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4349   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4441   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4450   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4618   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4629   .text.plus39V_stop:00000000 $t
    {standard input}:4634   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4654   .text.plus39V_start:00000000 $t
    {standard input}:4659   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4679   .text.Time1msec:00000000 $t
    {standard input}:4684   .text.Time1msec:00000000 Time1msec
    {standard input}:4707   .text.Time1msec:00000010 $d
    {standard input}:4712   .text.Time20msec:00000000 $t
    {standard input}:4717   .text.Time20msec:00000000 Time20msec
    {standard input}:4861   .text.Time20msec:000000e0 $d
    {standard input}:4877   .text.firstuartBack:00000000 $t
    {standard input}:4957   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
