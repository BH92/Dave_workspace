   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_ccu8.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_CCU8_StartPrescaler,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_CCU8_StartPrescaler:
  23              	.LFB41:
  24              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2016-03-09
   4:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  82:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
  83:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  84:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  85:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  86:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  87:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  88:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
  89:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  90:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
  91:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  92:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
  93:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  94:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
  95:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
  96:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
  97:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  98:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
  99:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 100:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 101:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 102:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 103:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 104:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 105:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 106:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 107:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 108:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 109:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 110:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 111:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 112:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 113:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 114:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 115:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 116:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 117:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 118:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 119:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 120:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 121:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 122:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 123:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 124:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 125:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 126:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 127:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 128:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 129:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 130:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 131:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 132:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 133:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 134:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 135:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 136:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 137:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 138:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 139:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 140:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 141:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 142:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 143:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 144:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 145:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 146:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 147:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 148:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 149:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 150:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 151:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 152:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 153:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 154:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 155:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 156:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 157:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 158:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 159:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 160:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 161:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 163:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 164:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 165:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 166:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 167:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 168:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 169:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 170:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 171:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 172:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 173:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 174:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 175:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 176:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 177:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 178:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 179:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 180:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 181:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 182:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 183:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 184:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 185:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 186:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 187:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 188:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 189:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 190:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 191:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 192:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 193:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 194:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 195:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 196:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 197:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 198:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 199:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 200:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 201:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 202:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 203:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 204:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 205:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 206:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 207:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 208:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 209:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 210:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 211:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 212:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 213:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 214:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 215:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 216:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 217:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 218:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 219:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 220:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 221:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 222:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 223:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 224:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 225:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 226:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 227:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 228:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 229:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 230:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 231:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 232:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 233:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 234:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 235:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 236:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 237:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 238:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 239:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 240:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 241:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 242:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 243:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 244:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 245:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 246:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 247:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 248:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 249:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 250:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 251:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 252:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 253:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 254:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 255:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 256:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 257:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 258:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 259:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 260:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 261:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 262:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 263:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 264:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 265:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 266:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 267:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 268:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 269:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 270:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 271:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 272:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 273:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 274:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 275:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 276:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 277:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 278:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 279:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 280:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 281:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 282:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 283:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 284:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 285:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 286:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 287:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 288:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 289:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 290:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 291:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 292:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 293:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 294:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 295:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 296:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 297:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 298:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 299:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 300:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 301:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 302:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 303:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 304:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 305:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 306:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 307:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 308:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 309:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 310:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 311:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 312:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 313:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 314:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 315:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 316:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 317:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 318:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 319:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 320:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 321:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 322:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 323:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 324:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 325:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 326:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 327:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 328:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 329:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 330:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 331:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 332:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 333:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 334:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 335:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 336:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 337:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 338:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 339:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 340:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 341:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 342:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 343:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 344:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 345:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 346:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 347:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 348:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 349:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 350:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 351:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 352:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 353:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 354:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 355:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 356:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 357:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 358:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 359:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 360:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 361:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 362:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 363:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 364:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 365:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 366:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 367:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 368:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 369:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 370:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 371:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 372:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 373:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 374:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 375:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 376:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 377:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 378:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 379:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 380:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 381:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 382:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 383:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 384:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 385:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 386:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 387:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 388:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 389:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 390:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 391:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 392:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 393:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 394:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 395:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 396:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 397:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 398:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 399:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 400:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 401:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 402:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 403:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 404:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 405:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 406:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 407:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 408:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 409:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 410:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 411:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 412:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 413:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 414:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 415:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 416:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 417:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 418:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 419:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 420:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 421:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 422:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 423:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 424:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 425:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 426:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 427:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 428:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 429:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 430:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 431:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 432:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 433:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 434:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 435:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 436:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 437:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 438:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 439:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 440:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 441:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 442:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 443:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 444:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 445:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 446:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 447:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 448:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 449:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 450:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 451:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 452:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 453:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 454:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 455:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 456:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 457:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 458:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 459:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 460:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 461:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 462:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 463:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 464:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 465:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 466:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 467:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 468:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 469:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 470:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 471:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 472:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 473:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 474:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 475:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 476:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 477:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 478:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 479:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 480:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 481:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 482:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 483:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 484:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 485:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 486:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 487:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 488:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 489:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 490:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 491:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 492:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 493:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 494:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 495:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 496:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 497:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 498:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 499:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 500:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 501:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 502:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 503:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 504:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 505:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 506:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 507:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 508:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 509:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 510:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 511:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 512:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 513:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 514:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 515:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 516:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 517:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 518:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 519:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 520:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 521:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 522:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 523:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 524:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 525:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 526:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 527:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 528:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 529:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 530:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 531:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 532:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 533:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 534:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 535:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 536:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 537:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 538:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 539:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 540:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 541:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 542:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 543:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 544:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 545:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 546:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 547:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 548:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 549:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 550:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 551:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 552:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 553:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 554:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 555:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 556:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 557:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 558:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 559:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 560:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 561:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 562:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 563:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 564:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 565:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 566:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 567:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 568:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 569:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 570:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 571:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 572:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 573:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 574:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 575:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 576:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 577:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 578:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 579:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 580:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 581:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 582:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 583:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 584:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 585:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 586:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 587:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 588:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 589:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 590:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 591:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 592:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 593:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 594:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 595:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 596:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 597:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 598:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 599:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 600:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 601:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 602:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 603:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 604:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 605:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 606:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 607:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 608:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 609:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 610:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 611:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 612:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 613:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 614:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 615:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 616:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 617:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 618:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 619:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 620:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 621:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 622:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 623:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 624:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 625:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 626:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 627:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 628:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 629:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 630:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 631:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 632:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 633:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 634:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 635:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 636:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 637:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 638:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 639:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 640:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 641:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 642:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 643:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 644:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 645:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 646:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 647:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 648:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 649:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 650:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 651:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 652:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 653:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 654:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 655:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 656:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 657:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 658:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 659:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 660:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 661:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 662:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 663:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 664:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 665:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 666:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 667:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 668:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 669:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 670:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 671:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 672:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 673:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 674:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 675:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 676:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 677:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 678:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 679:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 680:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 681:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 682:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 683:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 684:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 685:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 686:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 687:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 688:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 689:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 690:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 691:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 692:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 693:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 694:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 695:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 696:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 697:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 698:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 699:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 700:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 701:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 702:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 703:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 704:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 705:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 706:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 707:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 708:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 709:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 710:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 711:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 712:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 713:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 714:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 715:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 716:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 717:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 718:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 719:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 720:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 721:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 722:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 723:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 724:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 725:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 726:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 727:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 728:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 729:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 730:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 731:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 732:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 733:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 734:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 735:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 736:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 737:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 738:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 739:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 740:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 741:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 742:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 743:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 744:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 745:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 746:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 747:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 748:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 749:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 750:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 751:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 752:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 753:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 754:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 755:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 756:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 757:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 758:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 759:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 760:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 761:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 762:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 763:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 764:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 765:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 766:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 767:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 768:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 769:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 770:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 771:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 772:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 773:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 774:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 775:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 776:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 777:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 778:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 779:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 780:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 781:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 782:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 783:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 784:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 785:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 786:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 787:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 788:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 789:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 790:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 791:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 792:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 793:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 794:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 795:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 796:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 797:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 798:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 799:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 800:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 801:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 802:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 803:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 804:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 805:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 806:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 807:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 808:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 809:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 810:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 811:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 812:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 813:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 814:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 815:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 816:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 817:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 818:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 819:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 820:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 821:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 822:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 823:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 824:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 825:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 826:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 827:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 828:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 829:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 830:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 831:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 832:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 833:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 834:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 835:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 836:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 837:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 838:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 839:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 840:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 841:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 842:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 843:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 844:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 845:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 846:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 847:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 848:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 849:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 850:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 851:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 852:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 853:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 854:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 855:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 856:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 857:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 858:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 859:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 860:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 861:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 862:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 863:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 864:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 865:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 866:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 867:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 868:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 869:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 870:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 871:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 872:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 873:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 874:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 875:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 876:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 877:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 878:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 879:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 880:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 881:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 882:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 883:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 884:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 885:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 886:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 887:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 888:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 889:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 890:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 891:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 892:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 893:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 894:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 895:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 896:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 897:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 898:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 899:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 900:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 901:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 902:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 903:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 904:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 905:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 906:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 907:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 908:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 909:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 910:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 911:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 912:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 913:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 914:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 915:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 916:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 917:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 918:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 919:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 920:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 921:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 922:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 923:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 924:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 925:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 926:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 927:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 928:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 929:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 930:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 931:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 932:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 933:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 934:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 935:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 936:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 937:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 938:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 939:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 940:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 941:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 942:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 943:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 944:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 945:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 946:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 947:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 948:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 949:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 950:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 951:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 952:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 953:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 954:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 955:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 956:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
 957:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 958:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 959:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
 960:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
 961:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 962:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 963:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 964:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
 965:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
 966:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 967:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 968:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 969:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 970:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 971:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
 972:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
 973:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
 974:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 975:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
 976:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 977:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
 978:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 979:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 980:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
 981:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 982:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
 983:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
 984:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 985:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 986:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
 987:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 988:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
 989:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 990:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
 991:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 992:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
 993:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
 994:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 995:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 996:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
 997:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
 998:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 999:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1000:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1001:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1002:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1003:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1004:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1005:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1006:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1007:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1008:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1009:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1010:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1011:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1012:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1013:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1014:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1015:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1016:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1017:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1018:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1019:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1020:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1021:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1022:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1023:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1024:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1025:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1026:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1027:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1028:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1029:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1030:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1031:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1032:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1033:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1034:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1035:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1036:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1037:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1038:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1039:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1040:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1041:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1042:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1043:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1044:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1045:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1046:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1047:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1048:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1049:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1050:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1051:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1052:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1053:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1054:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1055:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1056:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1057:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1058:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1059:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1060:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1061:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1062:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1063:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1064:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1065:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1066:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1067:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1068:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1069:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1070:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1071:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1072:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1073:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1074:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1075:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1076:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1077:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1078:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1079:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1080:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1081:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1082:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1083:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1084:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1085:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1086:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1087:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1088:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1089:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1090:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1091:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1092:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1093:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1094:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1095:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1096:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1097:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1098:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1099:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1100:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1101:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1102:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1103:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1104:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1105:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1106:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1107:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1108:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1109:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1110:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1111:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  25              	 .loc 1 1111 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
1112:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1113:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
  39              	 .loc 1 1113 0
  40 0008 7B68     	 ldr r3,[r7,#4]
  41 000a DB68     	 ldr r3,[r3,#12]
  42 000c 8022     	 mov r2,#128
  43 000e 5200     	 lsl r2,r2,#1
  44 0010 1A43     	 orr r2,r3
  45 0012 7B68     	 ldr r3,[r7,#4]
  46 0014 DA60     	 str r2,[r3,#12]
1114:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  47              	 .loc 1 1114 0
  48 0016 BD46     	 mov sp,r7
  49 0018 02B0     	 add sp,sp,#8
  50              	 
  51 001a 80BD     	 pop {r7,pc}
  52              	 .cfi_endproc
  53              	.LFE41:
  55              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
  56              	 .align 2
  57              	 .code 16
  58              	 .thumb_func
  60              	XMC_CCU8_SLICE_StopTimer:
  61              	.LFB55:
1115:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1116:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1117:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1118:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1119:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1120:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1121:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1122:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1123:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1124:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1125:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1126:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1127:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1128:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1129:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1130:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1131:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1132:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1133:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1134:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1135:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1136:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1137:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1138:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1139:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1140:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1141:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1142:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1143:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1144:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1145:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1146:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1147:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1148:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1149:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1150:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1151:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1152:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1153:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1154:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1155:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1156:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1157:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1158:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1159:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1160:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1161:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1162:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1163:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1164:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1165:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1166:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1167:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1168:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1169:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1170:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1171:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1172:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1173:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1174:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1175:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1176:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1177:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1178:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1179:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1180:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1181:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1182:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1183:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1184:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1185:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1186:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1187:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1188:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1189:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1190:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1191:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1192:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1193:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1194:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1195:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1196:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1197:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1198:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1199:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1200:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1201:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1202:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1203:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1204:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1205:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1206:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1207:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1208:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1209:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1210:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1211:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1212:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1213:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1214:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1215:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1216:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1217:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1218:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1219:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1220:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1221:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1222:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1223:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1224:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1225:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1226:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1227:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1228:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1229:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1230:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1231:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1232:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1233:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1234:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1235:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1236:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
1237:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1238:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1239:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1240:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1241:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1242:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1243:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1244:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1245:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1246:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1247:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1248:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1249:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1250:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1251:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1252:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1253:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1254:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1255:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1256:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1257:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1258:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1259:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1260:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1261:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1262:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1263:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1264:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1265:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1266:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1267:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1268:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1269:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1270:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1271:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1272:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1273:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1274:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1275:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1276:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1277:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1278:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1279:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1280:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1281:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1282:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1283:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1284:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1285:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1286:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1287:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1288:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1289:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1290:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1291:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1292:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1293:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1294:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1295:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1296:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1297:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1298:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1299:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1300:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1301:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1302:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1303:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1304:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1305:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1306:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1307:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1308:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1309:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1310:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1311:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1312:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1313:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1314:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1315:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1316:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1317:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1318:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1319:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1320:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1321:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1322:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1323:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1324:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1325:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1326:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1327:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1328:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1329:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1330:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1331:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1332:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1333:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1334:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1335:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1336:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1337:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1338:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1339:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1340:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1341:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1342:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1343:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1344:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1345:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1346:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1347:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1348:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1349:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1350:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1351:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1352:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1353:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1354:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1355:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1356:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1357:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1358:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1359:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1360:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1361:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1362:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1363:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1364:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1365:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1366:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1367:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1368:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1369:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1370:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1371:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1372:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1373:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1374:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1375:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1376:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1377:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1378:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1379:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1380:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1381:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1382:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1383:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1384:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1385:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1386:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1387:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1388:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1389:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1390:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1391:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1392:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1393:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1394:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1395:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1396:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1397:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1398:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1399:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1400:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1401:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1402:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1403:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1404:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1405:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1406:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1407:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1408:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1409:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1410:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1411:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1412:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1413:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1414:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1415:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1416:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1417:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1418:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1419:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1420:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1421:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1422:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1423:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1424:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1425:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1426:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1427:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1428:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1429:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1430:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1431:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1432:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1433:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1434:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1435:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1436:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1437:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1438:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1439:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1440:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1441:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1442:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1443:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1444:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1445:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1446:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1447:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1448:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1449:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1450:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1451:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1452:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1453:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1454:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1455:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1456:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1457:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1458:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1459:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1460:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1461:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1462:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1463:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1464:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1465:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1466:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1467:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1468:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1469:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1470:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1471:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1472:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1473:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1474:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1475:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1476:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1477:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1478:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1479:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1480:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1481:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1482:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1483:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1484:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1485:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1486:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1487:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1488:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1489:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1490:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1491:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1492:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1493:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1494:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1495:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1496:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1497:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1498:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1499:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1500:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1501:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1502:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1503:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1504:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1505:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1506:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1507:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1508:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1509:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1510:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1511:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1512:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1513:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1514:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1515:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1516:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1517:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1518:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1519:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1520:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1521:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1522:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1523:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1524:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1525:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1526:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1527:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1528:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1529:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1530:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1531:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1532:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1533:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1534:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1535:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1536:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1537:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1538:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1539:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1540:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1541:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1542:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1543:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1544:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1545:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1546:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1547:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1548:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1549:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1550:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1551:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1552:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1553:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1554:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1555:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1556:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1557:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1558:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1559:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1560:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1561:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1562:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1563:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1564:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1565:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1566:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1567:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1568:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1569:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1570:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1571:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1572:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1573:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1574:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1575:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1576:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1577:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1578:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1579:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1580:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1581:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1582:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1583:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1584:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1585:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1586:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1587:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1588:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1589:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1590:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1591:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1592:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1593:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1594:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1595:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1596:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1597:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1598:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1599:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1600:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1601:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1602:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1603:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1604:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1605:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1606:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1607:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1608:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1609:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1610:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1611:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1612:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1613:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1614:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1615:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1616:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1617:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1618:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1619:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1620:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1621:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1622:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1623:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1624:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1625:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1626:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1627:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1628:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1629:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1630:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1631:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1632:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1633:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1634:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1635:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1636:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1637:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1638:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1639:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1640:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1641:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1642:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1643:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1644:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1645:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1646:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1647:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1648:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1649:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1650:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1651:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1652:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1653:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1654:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1655:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1656:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1657:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1658:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1659:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1660:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1661:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1662:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1663:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1664:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1665:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1666:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1667:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1668:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1669:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1670:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1671:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1672:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1673:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1674:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1675:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1676:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1677:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1678:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1679:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1680:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1681:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1682:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1683:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1684:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1685:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1686:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1687:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1688:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1689:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1690:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1691:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1692:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1693:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1694:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1695:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1696:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1697:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1698:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1699:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1700:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1701:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1702:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1703:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1704:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1705:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1706:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1707:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1708:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1709:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1710:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1711:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1712:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1713:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1714:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1715:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1716:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1717:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1718:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1719:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1720:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1721:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1722:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1723:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1724:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1725:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1726:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1727:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1728:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1729:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1730:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1731:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1732:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1733:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1734:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1735:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1736:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1737:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1738:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1739:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1740:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1741:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1742:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1743:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1744:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1745:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1746:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1747:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1748:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1749:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1750:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1751:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1752:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1753:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1754:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1755:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1756:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1757:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1758:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1759:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1760:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1761:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1762:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1763:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1764:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1765:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1766:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1767:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1768:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
1769:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1770:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1771:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1772:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1773:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1774:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1775:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1776:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1777:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1778:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1779:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1780:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1781:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1782:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1783:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
1784:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  62              	 .loc 1 1784 0
  63              	 .cfi_startproc
  64 0000 80B5     	 push {r7,lr}
  65              	.LCFI3:
  66              	 .cfi_def_cfa_offset 8
  67              	 .cfi_offset 7,-8
  68              	 .cfi_offset 14,-4
  69 0002 82B0     	 sub sp,sp,#8
  70              	.LCFI4:
  71              	 .cfi_def_cfa_offset 16
  72 0004 00AF     	 add r7,sp,#0
  73              	.LCFI5:
  74              	 .cfi_def_cfa_register 7
  75 0006 7860     	 str r0,[r7,#4]
1785:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1786:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR |= (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
  76              	 .loc 1 1786 0
  77 0008 7B68     	 ldr r3,[r7,#4]
  78 000a 1B69     	 ldr r3,[r3,#16]
  79 000c 0122     	 mov r2,#1
  80 000e 1A43     	 orr r2,r3
  81 0010 7B68     	 ldr r3,[r7,#4]
  82 0012 1A61     	 str r2,[r3,#16]
1787:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  83              	 .loc 1 1787 0
  84 0014 BD46     	 mov sp,r7
  85 0016 02B0     	 add sp,sp,#8
  86              	 
  87 0018 80BD     	 pop {r7,pc}
  88              	 .cfi_endproc
  89              	.LFE55:
  91 001a C046     	 .section .text.XMC_CCU8_SLICE_SetDitherCompareValue,"ax",%progbits
  92              	 .align 2
  93              	 .code 16
  94              	 .thumb_func
  96              	XMC_CCU8_SLICE_SetDitherCompareValue:
  97              	.LFB69:
1788:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1789:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1790:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1791:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1792:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1793:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1794:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1795:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
1796:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
1797:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
1798:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1799:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1800:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1801:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1802:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
1803:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1804:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1805:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR |= (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
1806:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1807:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1808:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1809:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1810:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1811:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
1812:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
1813:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1814:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1815:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1816:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
1817:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
1818:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
1819:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1820:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1821:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1822:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1823:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
1824:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1825:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1826:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
1827:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1828:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1829:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1830:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1831:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1832:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1833:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1834:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1835:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1836:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
1837:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1838:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1839:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
1840:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1841:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1842:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
1843:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1844:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
1845:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1846:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1847:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1848:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
1849:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1850:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1851:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1852:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1853:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
1854:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
1855:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1856:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
1857:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1858:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1859:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
1860:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1861:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
1862:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
1863:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1864:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
1865:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
1866:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1867:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1868:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1869:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1870:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1871:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1872:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1873:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1874:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
1875:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1876:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1877:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1878:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1879:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
1880:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1881:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1882:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
1883:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1884:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
1885:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1886:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1887:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1888:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
1889:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1890:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
1891:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1892:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1893:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
1894:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1895:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1896:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
1897:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1898:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
1899:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
1900:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1901:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1902:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
1903:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1904:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1905:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1906:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
1907:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
1908:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1909:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1910:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1911:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1912:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
1913:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1914:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1915:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1916:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
1917:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1918:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1919:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
1920:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1921:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
1922:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1923:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1924:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1925:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1926:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
1927:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
1928:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1929:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1930:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
1931:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1932:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1933:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
1934:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1935:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1936:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
1937:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
1938:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1939:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1940:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
1941:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1942:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
1943:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1944:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
1945:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
1946:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1947:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1948:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1949:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
1950:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1951:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1952:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1953:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1954:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1955:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
1956:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
1957:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1958:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
1959:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1960:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1961:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1962:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1963:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
1964:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1965:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1966:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1967:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
1968:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1969:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1970:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1971:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1972:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1973:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1974:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1975:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1976:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
1977:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
1978:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1979:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
1980:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
1981:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
1982:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1983:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1984:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
1985:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1986:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
1987:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1988:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
1989:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
1990:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1991:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1992:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1993:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1994:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1995:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1996:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1997:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1998:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1999:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2000:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2001:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2002:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2003:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2004:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2005:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2006:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2007:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2008:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2009:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2010:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2011:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2012:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2013:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2014:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2015:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2016:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2017:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2018:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2019:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2020:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2021:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2022:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2023:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2024:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2025:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2026:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2027:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2028:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2029:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2030:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2031:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2032:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2033:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2034:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2035:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2036:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2037:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2038:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2039:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2040:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2041:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2042:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2043:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2044:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2045:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2046:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2047:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2048:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2049:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2050:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2051:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2052:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2053:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2054:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2055:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2056:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2057:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2058:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2059:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2060:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2061:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2062:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
2063:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2064:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2065:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2066:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2067:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2068:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2069:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2070:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2071:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2072:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2073:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2074:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2075:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2076:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2077:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2078:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2079:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2080:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2081:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2082:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2083:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2084:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2085:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2086:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2087:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2088:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2089:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2090:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2091:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2092:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2093:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2094:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2095:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2096:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2097:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2098:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2099:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2100:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2101:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2102:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2103:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2104:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2105:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2106:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2107:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2108:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2109:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2110:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2111:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2112:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2113:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2114:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2115:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2116:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2117:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2118:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2119:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2120:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2121:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2122:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2123:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2124:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2125:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2126:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2127:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2128:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2129:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2130:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2131:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2132:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2133:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2134:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2135:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2136:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2137:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2138:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2139:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2140:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2141:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2142:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2143:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2144:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2145:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2146:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2147:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2148:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2149:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2150:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2151:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2152:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2153:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2154:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2155:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2156:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2157:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2158:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2159:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2160:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2161:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2162:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2163:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2164:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2165:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2166:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2167:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2168:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2169:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2170:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2171:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2172:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2173:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2174:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2175:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2176:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2177:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2178:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2179:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2180:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2181:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2182:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2183:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2184:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2185:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2186:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2187:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2188:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2189:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2190:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2191:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2192:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2193:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2194:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2195:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2196:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2197:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2198:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2199:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2200:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2201:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2202:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2203:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2204:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2205:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2206:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2207:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2208:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2209:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  98              	 .loc 1 2209 0
  99              	 .cfi_startproc
 100 0000 80B5     	 push {r7,lr}
 101              	.LCFI6:
 102              	 .cfi_def_cfa_offset 8
 103              	 .cfi_offset 7,-8
 104              	 .cfi_offset 14,-4
 105 0002 82B0     	 sub sp,sp,#8
 106              	.LCFI7:
 107              	 .cfi_def_cfa_offset 16
 108 0004 00AF     	 add r7,sp,#0
 109              	.LCFI8:
 110              	 .cfi_def_cfa_register 7
 111 0006 7860     	 str r0,[r7,#4]
 112 0008 0A1C     	 mov r2,r1
 113 000a FB1C     	 add r3,r7,#3
 114 000c 1A70     	 strb r2,[r3]
2210:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2211:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2212:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2213:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
 115              	 .loc 1 2213 0
 116 000e FB1C     	 add r3,r7,#3
 117 0010 1A78     	 ldrb r2,[r3]
 118 0012 7B68     	 ldr r3,[r7,#4]
 119 0014 1A62     	 str r2,[r3,#32]
2214:C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 120              	 .loc 1 2214 0
 121 0016 BD46     	 mov sp,r7
 122 0018 02B0     	 add sp,sp,#8
 123              	 
 124 001a 80BD     	 pop {r7,pc}
 125              	 .cfi_endproc
 126              	.LFE69:
 128              	 .section .text.XMC_CCU8_lGateClock,"ax",%progbits
 129              	 .align 2
 130              	 .code 16
 131              	 .thumb_func
 133              	XMC_CCU8_lGateClock:
 134              	.LFB96:
 135              	 .file 2 "../Libraries/XMCLib/src/xmc_ccu8.c"
   1:../Libraries/XMCLib/src/xmc_ccu8.c **** /**
   2:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @file xmc_ccu8.c
   3:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @date 2015-10-07
   4:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   5:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ccu8.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   9:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ccu8.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ccu8.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ccu8.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ccu8.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ccu8.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ccu8.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  36:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ccu8.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  39:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  42:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  45:../Libraries/XMCLib/src/xmc_ccu8.c ****  *       during external load event. 
  46:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  47:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-07-24:
  48:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  49:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  50:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-08-17:
  51:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_CHC_CONFIG_MASK is not applicable to XMC14 devices. <br>
  52:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Start of prescaler XMC_CCU8_StartPrescaler() is invoked in XMC_CCU8_Init() API. <br>
  53:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - In XMC_CCU8_SLICE_CompareInit(), CHC register is updated according to the device. <br>
  54:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Bug fix XMC_CCU8_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  55:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  56:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  57:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-10-07:
  58:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  59:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - DOC updates for the newly added APIs.
  60:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  61:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @endcond
  62:../Libraries/XMCLib/src/xmc_ccu8.c ****  */
  63:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_ccu8.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  66:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_ccu8.h"
  67:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  68:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU80)
  69:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_scu.h"
  70:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  71:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ccu8.c ****  * MACROS
  73:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_NUM_SLICES_PER_MODULE          (4U)
  75:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_PERIOD_MASK       (1U)
  76:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  77:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  78:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  79:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  80:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices */
  81:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS1_EV0IS_Msk
  82:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
  83:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS_EV0IS_Msk
  84:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
  85:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GIDLC_CLOCK_MASK               (15U)
  86:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE0_MASK               (1U)
  87:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE1_MASK               (16U)
  88:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE2_MASK               (256U)
  89:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE3_MASK               (4096U)
  90:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK    (63U)
  91:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
  92:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHC_CONFIG_MASK          (20U)
  93:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
  94:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  95:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_DTC_DIV(div) \
  96:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((div == XMC_CCU8_SLICE_DTC_DIV_1) || \
  97:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_2) || \
  98:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_4) || \
  99:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_8))
 100:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 101:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CLOCK(clock) \
 102:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((clock == XMC_CCU8_CLOCK_SCU)        || \
 103:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_A) || \
 104:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_B) || \
 105:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_C))
 106:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 107:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_OUTPUT(out) \
 108:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((out == XMC_CCU8_SLICE_OUTPUT_0) || \
 109:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_1) || \
 110:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_2) || \
 111:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_3))
 112:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 113:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_END_MODE(end_mode) \
 114:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP) || \
 115:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR) || \
 116:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR))
 117:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 118:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_ID(event_id) \
 119:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((event_id == XMC_CCU8_SLICE_EVENT_NONE)|| \
 120:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_0)   || \
 121:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_1)   || \
 122:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_2))
 123:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 124:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 125:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 126:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 127:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 128:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 129:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 130:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_FILTER(cycles) \
 131:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((cycles == XMC_CCU8_SLICE_EVENT_FILTER_DISABLED) || \
 132:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES) || \
 133:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES) || \
 134:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES))
 135:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 136:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CAP_TIMER_CLEAR_MODE(mode) \
 137:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER)   || \
 138:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH)|| \
 139:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW) || \
 140:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS))
 141:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 142:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action) \
 143:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 144:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 145:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 146:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 147:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SR_ID(id) \
 148:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((id == XMC_CCU8_SLICE_SR_ID_0) || \
 149:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_1) || \
 150:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_2) || \
 151:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_3))
 152:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 153:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel) \
 154:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE) || \
 155:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1)    || \
 156:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_2)    || \
 157:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2))
 158:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 159:../Libraries/XMCLib/src/xmc_ccu8.c **** #if((UC_SERIES == XMC13) || (UC_SERIES == XMC14))
 160:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 161:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 162:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 163:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2) || \
 164:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2))
 165:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 166:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 167:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 168:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 169:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2))
 170:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 171:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 172:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 173:../Libraries/XMCLib/src/xmc_ccu8.c ****  * LOCAL ROUTINES
 174:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 175:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 176:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lAssertReset(const XMC_CCU8_MODULE_t *const module)
 177:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 178:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 179:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 180:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 181:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 182:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 183:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 184:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 185:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 186:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 187:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 188:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 189:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 190:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 191:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lAssertReset:Invalid Module Pointer", 0);
 192:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 193:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 194:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 195:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 196:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lDeassertReset(const XMC_CCU8_MODULE_t *const module)
 197:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 198:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 199:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 200:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 201:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 202:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 203:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 204:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 205:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 206:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 207:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 208:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 209:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 210:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 211:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lDeassertReset:Invalid Module Pointer", 0);
 212:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 213:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 214:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 215:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 216:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 217:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 218:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lGateClock(XMC_CCU8_MODULE_t *const module)
 219:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 136              	 .loc 2 219 0
 137              	 .cfi_startproc
 138 0000 80B5     	 push {r7,lr}
 139              	.LCFI9:
 140              	 .cfi_def_cfa_offset 8
 141              	 .cfi_offset 7,-8
 142              	 .cfi_offset 14,-4
 143 0002 82B0     	 sub sp,sp,#8
 144              	.LCFI10:
 145              	 .cfi_def_cfa_offset 16
 146 0004 00AF     	 add r7,sp,#0
 147              	.LCFI11:
 148              	 .cfi_def_cfa_register 7
 149 0006 7860     	 str r0,[r7,#4]
 220:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 150              	 .loc 2 220 0
 151 0008 7A68     	 ldr r2,[r7,#4]
 152 000a A023     	 mov r3,#160
 153 000c DB05     	 lsl r3,r3,#23
 154 000e 9A42     	 cmp r2,r3
 155 0010 00D0     	 beq .L6
 221:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 222:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 223:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 224:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 225:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 226:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)      
 227:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 228:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 229:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 230:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 231:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 232:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 233:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lGateClock:Invalid Module Pointer", 0);
 234:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 156              	 .loc 2 234 0
 157 0012 03E0     	 b .L4
 158              	.L6:
 223:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 159              	 .loc 2 223 0
 160 0014 0220     	 mov r0,#2
 161 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 224:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 162              	 .loc 2 224 0
 163 001a C046     	 mov r8,r8
 164              	.L4:
 235:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 236:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 165              	 .loc 2 236 0
 166 001c BD46     	 mov sp,r7
 167 001e 02B0     	 add sp,sp,#8
 168              	 
 169 0020 80BD     	 pop {r7,pc}
 170              	 .cfi_endproc
 171              	.LFE96:
 173 0022 C046     	 .section .text.XMC_CCU8_lUngateClock,"ax",%progbits
 174              	 .align 2
 175              	 .code 16
 176              	 .thumb_func
 178              	XMC_CCU8_lUngateClock:
 179              	.LFB97:
 237:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 238:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lUngateClock(XMC_CCU8_MODULE_t *const module)
 239:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 180              	 .loc 2 239 0
 181              	 .cfi_startproc
 182 0000 80B5     	 push {r7,lr}
 183              	.LCFI12:
 184              	 .cfi_def_cfa_offset 8
 185              	 .cfi_offset 7,-8
 186              	 .cfi_offset 14,-4
 187 0002 82B0     	 sub sp,sp,#8
 188              	.LCFI13:
 189              	 .cfi_def_cfa_offset 16
 190 0004 00AF     	 add r7,sp,#0
 191              	.LCFI14:
 192              	 .cfi_def_cfa_register 7
 193 0006 7860     	 str r0,[r7,#4]
 240:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 194              	 .loc 2 240 0
 195 0008 7A68     	 ldr r2,[r7,#4]
 196 000a A023     	 mov r3,#160
 197 000c DB05     	 lsl r3,r3,#23
 198 000e 9A42     	 cmp r2,r3
 199 0010 00D0     	 beq .L10
 241:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 242:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 243:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 244:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 245:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 246:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)      
 247:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 248:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 249:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 250:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 251:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 252:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 253:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lUngateClock:Invalid Module Pointer", 0);
 254:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 200              	 .loc 2 254 0
 201 0012 03E0     	 b .L8
 202              	.L10:
 243:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 203              	 .loc 2 243 0
 204 0014 0220     	 mov r0,#2
 205 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 244:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 206              	 .loc 2 244 0
 207 001a C046     	 mov r8,r8
 208              	.L8:
 255:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 256:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 209              	 .loc 2 256 0
 210 001c BD46     	 mov sp,r7
 211 001e 02B0     	 add sp,sp,#8
 212              	 
 213 0020 80BD     	 pop {r7,pc}
 214              	 .cfi_endproc
 215              	.LFE97:
 217 0022 C046     	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
 218              	 .align 2
 219              	 .global XMC_CCU8_EnableModule
 220              	 .code 16
 221              	 .thumb_func
 223              	XMC_CCU8_EnableModule:
 224              	.LFB98:
 257:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 258:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 259:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined (XMC_ASSERT_ENABLE)
 260:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsInputvalid(XMC_CCU8_SLICE_INPUT_t input)
 261:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 262:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_SERIES == XMC14)
 263:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 48U);
 264:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 265:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 16U);
 266:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 267:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 268:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 269:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 270:../Libraries/XMCLib/src/xmc_ccu8.c ****  * API IMPLEMENTATION
 271:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 272:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 273:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as active and enable the clock  */
 274:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module)
 275:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 225              	 .loc 2 275 0
 226              	 .cfi_startproc
 227 0000 80B5     	 push {r7,lr}
 228              	.LCFI15:
 229              	 .cfi_def_cfa_offset 8
 230              	 .cfi_offset 7,-8
 231              	 .cfi_offset 14,-4
 232 0002 82B0     	 sub sp,sp,#8
 233              	.LCFI16:
 234              	 .cfi_def_cfa_offset 16
 235 0004 00AF     	 add r7,sp,#0
 236              	.LCFI17:
 237              	 .cfi_def_cfa_register 7
 238 0006 7860     	 str r0,[r7,#4]
 276:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_EnableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 277:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 278:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_FAMILY == XMC4)
 279:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module clock */
 280:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 281:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 282:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 283:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 284:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lUngateClock(module);
 239              	 .loc 2 284 0
 240 0008 7B68     	 ldr r3,[r7,#4]
 241 000a 181C     	 mov r0,r3
 242 000c FFF7FEFF 	 bl XMC_CCU8_lUngateClock
 285:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 286:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 287:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 288:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lDeassertReset(module);
 289:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 290:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 243              	 .loc 2 290 0
 244 0010 BD46     	 mov sp,r7
 245 0012 02B0     	 add sp,sp,#8
 246              	 
 247 0014 80BD     	 pop {r7,pc}
 248              	 .cfi_endproc
 249              	.LFE98:
 251 0016 C046     	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
 252              	 .align 2
 253              	 .global XMC_CCU8_DisableModule
 254              	 .code 16
 255              	 .thumb_func
 257              	XMC_CCU8_DisableModule:
 258              	.LFB99:
 291:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 292:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as idle and disable the clock  */
 293:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module)
 294:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 259              	 .loc 2 294 0
 260              	 .cfi_startproc
 261 0000 80B5     	 push {r7,lr}
 262              	.LCFI18:
 263              	 .cfi_def_cfa_offset 8
 264              	 .cfi_offset 7,-8
 265              	 .cfi_offset 14,-4
 266 0002 82B0     	 sub sp,sp,#8
 267              	.LCFI19:
 268              	 .cfi_def_cfa_offset 16
 269 0004 00AF     	 add r7,sp,#0
 270              	.LCFI20:
 271              	 .cfi_def_cfa_register 7
 272 0006 7860     	 str r0,[r7,#4]
 295:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_DisableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 296:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 297:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 298:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lAssertReset(module);
 299:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 300:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 301:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 302:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lGateClock(module);
 273              	 .loc 2 302 0
 274 0008 7B68     	 ldr r3,[r7,#4]
 275 000a 181C     	 mov r0,r3
 276 000c FFF7FEFF 	 bl XMC_CCU8_lGateClock
 303:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 304:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 277              	 .loc 2 304 0
 278 0010 BD46     	 mov sp,r7
 279 0012 02B0     	 add sp,sp,#8
 280              	 
 281 0014 80BD     	 pop {r7,pc}
 282              	 .cfi_endproc
 283              	.LFE99:
 285 0016 C046     	 .section .text.XMC_CCU8_Init,"ax",%progbits
 286              	 .align 2
 287              	 .global XMC_CCU8_Init
 288              	 .code 16
 289              	 .thumb_func
 291              	XMC_CCU8_Init:
 292              	.LFB100:
 305:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 306:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to initialize CCU8 global resources  */
 307:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action)
 308:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 293              	 .loc 2 308 0
 294              	 .cfi_startproc
 295 0000 80B5     	 push {r7,lr}
 296              	.LCFI21:
 297              	 .cfi_def_cfa_offset 8
 298              	 .cfi_offset 7,-8
 299              	 .cfi_offset 14,-4
 300 0002 84B0     	 sub sp,sp,#16
 301              	.LCFI22:
 302              	 .cfi_def_cfa_offset 24
 303 0004 00AF     	 add r7,sp,#0
 304              	.LCFI23:
 305              	 .cfi_def_cfa_register 7
 306 0006 7860     	 str r0,[r7,#4]
 307 0008 0A1C     	 mov r2,r1
 308 000a FB1C     	 add r3,r7,#3
 309 000c 1A70     	 strb r2,[r3]
 309:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 310:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 311:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 312:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid mcs action", XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action));
 313:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 314:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module */
 315:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_EnableModule(module);
 310              	 .loc 2 315 0
 311 000e 7B68     	 ldr r3,[r7,#4]
 312 0010 181C     	 mov r0,r3
 313 0012 FFF7FEFF 	 bl XMC_CCU8_EnableModule
 316:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Start the prescaler */
 317:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_StartPrescaler(module);
 314              	 .loc 2 317 0
 315 0016 7B68     	 ldr r3,[r7,#4]
 316 0018 181C     	 mov r0,r3
 317 001a FFF7FEFF 	 bl XMC_CCU8_StartPrescaler
 318:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 319:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 318              	 .loc 2 319 0
 319 001e 7B68     	 ldr r3,[r7,#4]
 320 0020 1B68     	 ldr r3,[r3]
 321 0022 FB60     	 str r3,[r7,#12]
 320:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_MSDE_Msk);
 322              	 .loc 2 320 0
 323 0024 FB68     	 ldr r3,[r7,#12]
 324 0026 074A     	 ldr r2,.L15
 325 0028 1340     	 and r3,r2
 326 002a FB60     	 str r3,[r7,#12]
 321:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= (uint32_t)mcs_action << CCU8_GCTRL_MSDE_Pos;
 327              	 .loc 2 321 0
 328 002c FB1C     	 add r3,r7,#3
 329 002e 1B78     	 ldrb r3,[r3]
 330 0030 9B03     	 lsl r3,r3,#14
 331 0032 FA68     	 ldr r2,[r7,#12]
 332 0034 1343     	 orr r3,r2
 333 0036 FB60     	 str r3,[r7,#12]
 322:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 323:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 334              	 .loc 2 323 0
 335 0038 7B68     	 ldr r3,[r7,#4]
 336 003a FA68     	 ldr r2,[r7,#12]
 337 003c 1A60     	 str r2,[r3]
 324:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 338              	 .loc 2 324 0
 339 003e BD46     	 mov sp,r7
 340 0040 04B0     	 add sp,sp,#16
 341              	 
 342 0042 80BD     	 pop {r7,pc}
 343              	.L16:
 344              	 .align 2
 345              	.L15:
 346 0044 FF3FFFFF 	 .word -49153
 347              	 .cfi_endproc
 348              	.LFE100:
 350              	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
 351              	 .align 2
 352              	 .global XMC_CCU8_SetModuleClock
 353              	 .code 16
 354              	 .thumb_func
 356              	XMC_CCU8_SetModuleClock:
 357              	.LFB101:
 325:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 326:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to select CCU8 module clock */
 327:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock)
 328:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 358              	 .loc 2 328 0
 359              	 .cfi_startproc
 360 0000 80B5     	 push {r7,lr}
 361              	.LCFI24:
 362              	 .cfi_def_cfa_offset 8
 363              	 .cfi_offset 7,-8
 364              	 .cfi_offset 14,-4
 365 0002 84B0     	 sub sp,sp,#16
 366              	.LCFI25:
 367              	 .cfi_def_cfa_offset 24
 368 0004 00AF     	 add r7,sp,#0
 369              	.LCFI26:
 370              	 .cfi_def_cfa_register 7
 371 0006 7860     	 str r0,[r7,#4]
 372 0008 0A1C     	 mov r2,r1
 373 000a FB1C     	 add r3,r7,#3
 374 000c 1A70     	 strb r2,[r3]
 329:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 330:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 331:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 332:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Clock", XMC_CCU8_SLICE_CHECK_CLOCK(clock));
 333:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 334:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 375              	 .loc 2 334 0
 376 000e 7B68     	 ldr r3,[r7,#4]
 377 0010 1B68     	 ldr r3,[r3]
 378 0012 FB60     	 str r3,[r7,#12]
 335:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_PCIS_Msk);
 379              	 .loc 2 335 0
 380 0014 FB68     	 ldr r3,[r7,#12]
 381 0016 3022     	 mov r2,#48
 382 0018 9343     	 bic r3,r2
 383 001a FB60     	 str r3,[r7,#12]
 336:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t) clock) << CCU8_GCTRL_PCIS_Pos;
 384              	 .loc 2 336 0
 385 001c FB1C     	 add r3,r7,#3
 386 001e 1B78     	 ldrb r3,[r3]
 387 0020 1B01     	 lsl r3,r3,#4
 388 0022 FA68     	 ldr r2,[r7,#12]
 389 0024 1343     	 orr r3,r2
 390 0026 FB60     	 str r3,[r7,#12]
 337:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 338:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 391              	 .loc 2 338 0
 392 0028 7B68     	 ldr r3,[r7,#4]
 393 002a FA68     	 ldr r2,[r7,#12]
 394 002c 1A60     	 str r2,[r3]
 339:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 395              	 .loc 2 339 0
 396 002e BD46     	 mov sp,r7
 397 0030 04B0     	 add sp,sp,#16
 398              	 
 399 0032 80BD     	 pop {r7,pc}
 400              	 .cfi_endproc
 401              	.LFE101:
 403              	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
 404              	 .align 2
 405              	 .global XMC_CCU8_SLICE_CompareInit
 406              	 .code 16
 407              	 .thumb_func
 409              	XMC_CCU8_SLICE_CompareInit:
 410              	.LFB102:
 340:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 341:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Compare mode */
 342:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
 343:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init)
 344:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 411              	 .loc 2 344 0
 412              	 .cfi_startproc
 413 0000 80B5     	 push {r7,lr}
 414              	.LCFI27:
 415              	 .cfi_def_cfa_offset 8
 416              	 .cfi_offset 7,-8
 417              	 .cfi_offset 14,-4
 418 0002 82B0     	 sub sp,sp,#8
 419              	.LCFI28:
 420              	 .cfi_def_cfa_offset 16
 421 0004 00AF     	 add r7,sp,#0
 422              	.LCFI29:
 423              	 .cfi_def_cfa_register 7
 424 0006 7860     	 str r0,[r7,#4]
 425 0008 3960     	 str r1,[r7]
 345:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 346:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Timer Init Pointer is NULL",
 347:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 348:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 349:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 426              	 .loc 2 349 0
 427 000a 7B68     	 ldr r3,[r7,#4]
 428 000c 181C     	 mov r0,r3
 429 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 350:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the timer mode */
 351:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = compare_init->tc;
 430              	 .loc 2 351 0
 431 0012 3B68     	 ldr r3,[r7]
 432 0014 1A68     	 ldr r2,[r3]
 433 0016 7B68     	 ldr r3,[r7,#4]
 434 0018 5A61     	 str r2,[r3,#20]
 352:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 353:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC =  (uint32_t)compare_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 435              	 .loc 2 353 0
 436 001a 3B68     	 ldr r3,[r7]
 437 001c 5B7B     	 ldrb r3,[r3,#13]
 438 001e DB06     	 lsl r3,r3,#27
 439 0020 DB0F     	 lsr r3,r3,#31
 440 0022 DBB2     	 uxtb r3,r3
 441 0024 1A05     	 lsl r2,r3,#20
 442 0026 7B68     	 ldr r3,[r7,#4]
 443 0028 5A60     	 str r2,[r3,#4]
 354:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 355:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 444              	 .loc 2 355 0
 445 002a 3B68     	 ldr r3,[r7]
 446 002c 1B7B     	 ldrb r3,[r3,#12]
 447 002e 1B07     	 lsl r3,r3,#28
 448 0030 1B0F     	 lsr r3,r3,#28
 449 0032 DBB2     	 uxtb r3,r3
 450 0034 1A1C     	 mov r2,r3
 451 0036 7B68     	 ldr r3,[r7,#4]
 452 0038 5A62     	 str r2,[r3,#36]
 356:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 357:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 453              	 .loc 2 357 0
 454 003a 3B68     	 ldr r3,[r7]
 455 003c 1B7B     	 ldrb r3,[r3,#12]
 456 003e 1B06     	 lsl r3,r3,#24
 457 0040 1B0F     	 lsr r3,r3,#28
 458 0042 DBB2     	 uxtb r3,r3
 459 0044 1A1C     	 mov r2,r3
 460 0046 7B68     	 ldr r3,[r7,#4]
 461 0048 DA62     	 str r2,[r3,#44]
 358:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the dither compare value */
 359:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 462              	 .loc 2 359 0
 463 004a 3B68     	 ldr r3,[r7]
 464 004c 5B7B     	 ldrb r3,[r3,#13]
 465 004e 1B07     	 lsl r3,r3,#28
 466 0050 1B0F     	 lsr r3,r3,#28
 467 0052 DBB2     	 uxtb r3,r3
 468 0054 1A1C     	 mov r2,r3
 469 0056 7B68     	 ldr r3,[r7,#4]
 470 0058 1A62     	 str r2,[r3,#32]
 360:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program timer output passive level */
 361:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = (uint32_t) compare_init->psl;
 471              	 .loc 2 361 0
 472 005a 3B68     	 ldr r3,[r7]
 473 005c 5A68     	 ldr r2,[r3,#4]
 474 005e 7B68     	 ldr r3,[r7,#4]
 475 0060 9A61     	 str r2,[r3,#24]
 362:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Asymmetric PWM and Slice output routing configuration */
 363:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 364:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t) compare_init->chc;
 365:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 366:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t)((uint32_t)compare_init->chc ^ XMC_CCU8_SLICE_CHC_CONFIG_MASK);
 476              	 .loc 2 366 0
 477 0062 3B68     	 ldr r3,[r7]
 478 0064 9B68     	 ldr r3,[r3,#8]
 479 0066 1422     	 mov r2,#20
 480 0068 5A40     	 eor r2,r3
 481 006a 7B68     	 ldr r3,[r7,#4]
 482 006c 9A64     	 str r2,[r3,#72]
 367:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 368:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 483              	 .loc 2 368 0
 484 006e BD46     	 mov sp,r7
 485 0070 02B0     	 add sp,sp,#8
 486              	 
 487 0072 80BD     	 pop {r7,pc}
 488              	 .cfi_endproc
 489              	.LFE102:
 491              	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
 492              	 .align 2
 493              	 .global XMC_CCU8_SLICE_CaptureInit
 494              	 .code 16
 495              	 .thumb_func
 497              	XMC_CCU8_SLICE_CaptureInit:
 498              	.LFB103:
 369:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 370:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Capture mode */
 371:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice, 
 372:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init)
 373:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 499              	 .loc 2 373 0
 500              	 .cfi_startproc
 501 0000 80B5     	 push {r7,lr}
 502              	.LCFI30:
 503              	 .cfi_def_cfa_offset 8
 504              	 .cfi_offset 7,-8
 505              	 .cfi_offset 14,-4
 506 0002 82B0     	 sub sp,sp,#8
 507              	.LCFI31:
 508              	 .cfi_def_cfa_offset 16
 509 0004 00AF     	 add r7,sp,#0
 510              	.LCFI32:
 511              	 .cfi_def_cfa_register 7
 512 0006 7860     	 str r0,[r7,#4]
 513 0008 3960     	 str r1,[r7]
 374:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 375:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Capture Init Pointer is NULL", 
 376:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 377:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 378:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 514              	 .loc 2 378 0
 515 000a 7B68     	 ldr r3,[r7,#4]
 516 000c 181C     	 mov r0,r3
 517 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 379:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Capture mode configuration */
 380:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = capture_init->tc;
 518              	 .loc 2 380 0
 519 0012 3B68     	 ldr r3,[r7]
 520 0014 1A68     	 ldr r2,[r3]
 521 0016 7B68     	 ldr r3,[r7,#4]
 522 0018 5A61     	 str r2,[r3,#20]
 381:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 382:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = (uint32_t)capture_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 523              	 .loc 2 382 0
 524 001a 3B68     	 ldr r3,[r7]
 525 001c 5B79     	 ldrb r3,[r3,#5]
 526 001e DB07     	 lsl r3,r3,#31
 527 0020 DB0F     	 lsr r3,r3,#31
 528 0022 DBB2     	 uxtb r3,r3
 529 0024 1A05     	 lsl r2,r3,#20
 530 0026 7B68     	 ldr r3,[r7,#4]
 531 0028 5A60     	 str r2,[r3,#4]
 383:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 384:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 532              	 .loc 2 384 0
 533 002a 3B68     	 ldr r3,[r7]
 534 002c 1B79     	 ldrb r3,[r3,#4]
 535 002e 1B06     	 lsl r3,r3,#24
 536 0030 1B0F     	 lsr r3,r3,#28
 537 0032 DBB2     	 uxtb r3,r3
 538 0034 1A1C     	 mov r2,r3
 539 0036 7B68     	 ldr r3,[r7,#4]
 540 0038 DA62     	 str r2,[r3,#44]
 385:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 386:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 541              	 .loc 2 386 0
 542 003a 3B68     	 ldr r3,[r7]
 543 003c 1B79     	 ldrb r3,[r3,#4]
 544 003e 1B07     	 lsl r3,r3,#28
 545 0040 1B0F     	 lsr r3,r3,#28
 546 0042 DBB2     	 uxtb r3,r3
 547 0044 1A1C     	 mov r2,r3
 548 0046 7B68     	 ldr r3,[r7,#4]
 549 0048 5A62     	 str r2,[r3,#36]
 387:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 550              	 .loc 2 387 0
 551 004a BD46     	 mov sp,r7
 552 004c 02B0     	 add sp,sp,#8
 553              	 
 554 004e 80BD     	 pop {r7,pc}
 555              	 .cfi_endproc
 556              	.LFE103:
 558              	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
 559              	 .align 2
 560              	 .global XMC_CCU8_SLICE_SetOutPath
 561              	 .code 16
 562              	 .thumb_func
 564              	XMC_CCU8_SLICE_SetOutPath:
 565              	.LFB104:
 388:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 389:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the each output of the slice with either STx or inverted STx. */
 390:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk)
 391:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 566              	 .loc 2 391 0
 567              	 .cfi_startproc
 568 0000 80B5     	 push {r7,lr}
 569              	.LCFI33:
 570              	 .cfi_def_cfa_offset 8
 571              	 .cfi_offset 7,-8
 572              	 .cfi_offset 14,-4
 573 0002 84B0     	 sub sp,sp,#16
 574              	.LCFI34:
 575              	 .cfi_def_cfa_offset 24
 576 0004 00AF     	 add r7,sp,#0
 577              	.LCFI35:
 578              	 .cfi_def_cfa_register 7
 579 0006 7860     	 str r0,[r7,#4]
 580 0008 3960     	 str r1,[r7]
 392:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t chc;
 393:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetOutPath:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 394:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc = slice->CHC;
 581              	 .loc 2 394 0
 582 000a 7B68     	 ldr r3,[r7,#4]
 583 000c 9B6C     	 ldr r3,[r3,#72]
 584 000e FB60     	 str r3,[r7,#12]
 395:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 396:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)out_path_msk >> 16U);
 585              	 .loc 2 396 0
 586 0010 3B68     	 ldr r3,[r7]
 587 0012 1B0C     	 lsr r3,r3,#16
 588 0014 DA43     	 mvn r2,r3
 589 0016 FB68     	 ldr r3,[r7,#12]
 590 0018 1340     	 and r3,r2
 591 001a FB60     	 str r3,[r7,#12]
 397:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0xFFFFU);
 592              	 .loc 2 397 0
 593 001c 3B68     	 ldr r3,[r7]
 594 001e 1B04     	 lsl r3,r3,#16
 595 0020 1B0C     	 lsr r3,r3,#16
 596 0022 FA68     	 ldr r2,[r7,#12]
 597 0024 1343     	 orr r3,r2
 598 0026 FB60     	 str r3,[r7,#12]
 398:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 399:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)((uint32_t)(out_path_msk & 0xCCCC0U) >> 2U));
 400:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0x33330U);
 401:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 402:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = chc;
 599              	 .loc 2 402 0
 600 0028 7B68     	 ldr r3,[r7,#4]
 601 002a FA68     	 ldr r2,[r7,#12]
 602 002c 9A64     	 str r2,[r3,#72]
 403:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 603              	 .loc 2 403 0
 604 002e BD46     	 mov sp,r7
 605 0030 04B0     	 add sp,sp,#16
 606              	 
 607 0032 80BD     	 pop {r7,pc}
 608              	 .cfi_endproc
 609              	.LFE104:
 611              	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 612              	 .align 2
 613              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 614              	 .code 16
 615              	 .thumb_func
 617              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 618              	.LFB105:
 404:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 405:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU8x.MCSS input. *
 406:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
 407:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 619              	 .loc 2 407 0
 620              	 .cfi_startproc
 621 0000 80B5     	 push {r7,lr}
 622              	.LCFI36:
 623              	 .cfi_def_cfa_offset 8
 624              	 .cfi_offset 7,-8
 625              	 .cfi_offset 14,-4
 626 0002 84B0     	 sub sp,sp,#16
 627              	.LCFI37:
 628              	 .cfi_def_cfa_offset 24
 629 0004 00AF     	 add r7,sp,#0
 630              	.LCFI38:
 631              	 .cfi_def_cfa_register 7
 632 0006 7860     	 str r0,[r7,#4]
 633 0008 3960     	 str r1,[r7]
 408:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 409:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 410:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU8_IsValidM
 411:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 412:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 634              	 .loc 2 412 0
 635 000a 7B68     	 ldr r3,[r7,#4]
 636 000c 1B68     	 ldr r3,[r3]
 637 000e FB60     	 str r3,[r7,#12]
 413:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 638              	 .loc 2 413 0
 639 0010 3B68     	 ldr r3,[r7]
 640 0012 1B0C     	 lsr r3,r3,#16
 641 0014 DA43     	 mvn r2,r3
 642 0016 FB68     	 ldr r3,[r7,#12]
 643 0018 1340     	 and r3,r2
 644 001a FB60     	 str r3,[r7,#12]
 414:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 645              	 .loc 2 414 0
 646 001c 3B68     	 ldr r3,[r7]
 647 001e 1B04     	 lsl r3,r3,#16
 648 0020 1B0C     	 lsr r3,r3,#16
 649 0022 FA68     	 ldr r2,[r7,#12]
 650 0024 1343     	 orr r3,r2
 651 0026 FB60     	 str r3,[r7,#12]
 415:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 652              	 .loc 2 415 0
 653 0028 7B68     	 ldr r3,[r7,#4]
 654 002a FA68     	 ldr r2,[r7,#12]
 655 002c 1A60     	 str r2,[r3]
 416:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 656              	 .loc 2 416 0
 657 002e BD46     	 mov sp,r7
 658 0030 04B0     	 add sp,sp,#16
 659              	 
 660 0032 80BD     	 pop {r7,pc}
 661              	 .cfi_endproc
 662              	.LFE105:
 664              	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 665              	 .align 2
 666              	 .global XMC_CCU8_SLICE_StartConfig
 667              	 .code 16
 668              	 .thumb_func
 670              	XMC_CCU8_SLICE_StartConfig:
 671              	.LFB106:
 417:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 418:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 419:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Start trigger function of a slice*/
 420:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
 421:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_EVENT_t event,
 422:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode)
 423:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 672              	 .loc 2 423 0
 673              	 .cfi_startproc
 674 0000 80B5     	 push {r7,lr}
 675              	.LCFI39:
 676              	 .cfi_def_cfa_offset 8
 677              	 .cfi_offset 7,-8
 678              	 .cfi_offset 14,-4
 679 0002 84B0     	 sub sp,sp,#16
 680              	.LCFI40:
 681              	 .cfi_def_cfa_offset 24
 682 0004 00AF     	 add r7,sp,#0
 683              	.LCFI41:
 684              	 .cfi_def_cfa_register 7
 685 0006 7860     	 str r0,[r7,#4]
 686 0008 081C     	 mov r0,r1
 687 000a 111C     	 mov r1,r2
 688 000c FB1C     	 add r3,r7,#3
 689 000e 021C     	 add r2,r0,#0
 690 0010 1A70     	 strb r2,[r3]
 691 0012 BB1C     	 add r3,r7,#2
 692 0014 0A1C     	 add r2,r1,#0
 693 0016 1A70     	 strb r2,[r3]
 424:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 425:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 426:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 427:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 428:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 429:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Start Mode", 
 430:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START) ||\
 431:../Libraries/XMCLib/src/xmc_ccu8.c ****               (start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)));
 432:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 694              	 .loc 2 432 0
 695 0018 7B68     	 ldr r3,[r7,#4]
 696 001a 5B68     	 ldr r3,[r3,#4]
 697 001c BB60     	 str r3,[r7,#8]
 433:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 434:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_STRTS_Msk);
 698              	 .loc 2 434 0
 699 001e BB68     	 ldr r3,[r7,#8]
 700 0020 0322     	 mov r2,#3
 701 0022 9343     	 bic r3,r2
 702 0024 BB60     	 str r3,[r7,#8]
 435:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_STRTS_Pos;
 703              	 .loc 2 435 0
 704 0026 FB1C     	 add r3,r7,#3
 705 0028 1B78     	 ldrb r3,[r3]
 706 002a BA68     	 ldr r2,[r7,#8]
 707 002c 1343     	 orr r3,r2
 708 002e BB60     	 str r3,[r7,#8]
 436:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 437:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 709              	 .loc 2 437 0
 710 0030 7B68     	 ldr r3,[r7,#4]
 711 0032 BA68     	 ldr r2,[r7,#8]
 712 0034 5A60     	 str r2,[r3,#4]
 438:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 439:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 713              	 .loc 2 439 0
 714 0036 7B68     	 ldr r3,[r7,#4]
 715 0038 5B69     	 ldr r3,[r3,#20]
 716 003a FB60     	 str r3,[r7,#12]
 440:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 441:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)
 717              	 .loc 2 441 0
 718 003c BB1C     	 add r3,r7,#2
 719 003e 1B78     	 ldrb r3,[r3]
 720 0040 012B     	 cmp r3,#1
 721 0042 05D1     	 bne .L23
 442:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 443:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_STRM_Msk;
 722              	 .loc 2 443 0
 723 0044 FB68     	 ldr r3,[r7,#12]
 724 0046 8022     	 mov r2,#128
 725 0048 D200     	 lsl r2,r2,#3
 726 004a 1343     	 orr r3,r2
 727 004c FB60     	 str r3,[r7,#12]
 728 004e 03E0     	 b .L24
 729              	.L23:
 444:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 445:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 446:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 447:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_STRM_Msk);
 730              	 .loc 2 447 0
 731 0050 FB68     	 ldr r3,[r7,#12]
 732 0052 044A     	 ldr r2,.L25
 733 0054 1340     	 and r3,r2
 734 0056 FB60     	 str r3,[r7,#12]
 735              	.L24:
 448:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 449:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 450:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 736              	 .loc 2 450 0
 737 0058 7B68     	 ldr r3,[r7,#4]
 738 005a FA68     	 ldr r2,[r7,#12]
 739 005c 5A61     	 str r2,[r3,#20]
 451:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 740              	 .loc 2 451 0
 741 005e BD46     	 mov sp,r7
 742 0060 04B0     	 add sp,sp,#16
 743              	 
 744 0062 80BD     	 pop {r7,pc}
 745              	.L26:
 746              	 .align 2
 747              	.L25:
 748 0064 FFFBFFFF 	 .word -1025
 749              	 .cfi_endproc
 750              	.LFE106:
 752              	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 753              	 .align 2
 754              	 .global XMC_CCU8_SLICE_StopConfig
 755              	 .code 16
 756              	 .thumb_func
 758              	XMC_CCU8_SLICE_StopConfig:
 759              	.LFB107:
 452:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 453:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Stop trigger function of a slice */
 454:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
 455:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_EVENT_t event,
 456:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode)
 457:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 760              	 .loc 2 457 0
 761              	 .cfi_startproc
 762 0000 80B5     	 push {r7,lr}
 763              	.LCFI42:
 764              	 .cfi_def_cfa_offset 8
 765              	 .cfi_offset 7,-8
 766              	 .cfi_offset 14,-4
 767 0002 84B0     	 sub sp,sp,#16
 768              	.LCFI43:
 769              	 .cfi_def_cfa_offset 24
 770 0004 00AF     	 add r7,sp,#0
 771              	.LCFI44:
 772              	 .cfi_def_cfa_register 7
 773 0006 7860     	 str r0,[r7,#4]
 774 0008 081C     	 mov r0,r1
 775 000a 111C     	 mov r1,r2
 776 000c FB1C     	 add r3,r7,#3
 777 000e 021C     	 add r2,r0,#0
 778 0010 1A70     	 strb r2,[r3]
 779 0012 BB1C     	 add r3,r7,#2
 780 0014 0A1C     	 add r2,r1,#0
 781 0016 1A70     	 strb r2,[r3]
 458:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 459:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 460:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 461:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 462:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 463:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid End Mode", XMC_CCU8_SLICE_CHECK_END_MODE(end_mode))
 464:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 465:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 782              	 .loc 2 465 0
 783 0018 7B68     	 ldr r3,[r7,#4]
 784 001a 5B68     	 ldr r3,[r3,#4]
 785 001c FB60     	 str r3,[r7,#12]
 466:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the stop function */
 467:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_ENDS_Msk);
 786              	 .loc 2 467 0
 787 001e FB68     	 ldr r3,[r7,#12]
 788 0020 0C22     	 mov r2,#12
 789 0022 9343     	 bic r3,r2
 790 0024 FB60     	 str r3,[r7,#12]
 468:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_ENDS_Pos;
 791              	 .loc 2 468 0
 792 0026 FB1C     	 add r3,r7,#3
 793 0028 1B78     	 ldrb r3,[r3]
 794 002a 9B00     	 lsl r3,r3,#2
 795 002c FA68     	 ldr r2,[r7,#12]
 796 002e 1343     	 orr r3,r2
 797 0030 FB60     	 str r3,[r7,#12]
 469:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 470:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 798              	 .loc 2 470 0
 799 0032 7B68     	 ldr r3,[r7,#4]
 800 0034 FA68     	 ldr r2,[r7,#12]
 801 0036 5A60     	 str r2,[r3,#4]
 471:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 472:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the stop mode */
 473:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 802              	 .loc 2 473 0
 803 0038 7B68     	 ldr r3,[r7,#4]
 804 003a 5B69     	 ldr r3,[r3,#20]
 805 003c BB60     	 str r3,[r7,#8]
 474:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_ENDM_Msk);
 806              	 .loc 2 474 0
 807 003e BB68     	 ldr r3,[r7,#8]
 808 0040 074A     	 ldr r2,.L28
 809 0042 1340     	 and r3,r2
 810 0044 BB60     	 str r3,[r7,#8]
 475:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= ((uint32_t) end_mode) << CCU8_CC8_TC_ENDM_Pos;
 811              	 .loc 2 475 0
 812 0046 BB1C     	 add r3,r7,#2
 813 0048 1B78     	 ldrb r3,[r3]
 814 004a 1B02     	 lsl r3,r3,#8
 815 004c BA68     	 ldr r2,[r7,#8]
 816 004e 1343     	 orr r3,r2
 817 0050 BB60     	 str r3,[r7,#8]
 476:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 477:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 818              	 .loc 2 477 0
 819 0052 7B68     	 ldr r3,[r7,#4]
 820 0054 BA68     	 ldr r2,[r7,#8]
 821 0056 5A61     	 str r2,[r3,#20]
 478:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 822              	 .loc 2 478 0
 823 0058 BD46     	 mov sp,r7
 824 005a 04B0     	 add sp,sp,#16
 825              	 
 826 005c 80BD     	 pop {r7,pc}
 827              	.L29:
 828 005e C046     	 .align 2
 829              	.L28:
 830 0060 FFFCFFFF 	 .word -769
 831              	 .cfi_endproc
 832              	.LFE107:
 834              	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 835              	 .align 2
 836              	 .global XMC_CCU8_SLICE_LoadConfig
 837              	 .code 16
 838              	 .thumb_func
 840              	XMC_CCU8_SLICE_LoadConfig:
 841              	.LFB108:
 479:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 480:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Load trigger function of a slice*/
 481:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 482:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 842              	 .loc 2 482 0
 843              	 .cfi_startproc
 844 0000 80B5     	 push {r7,lr}
 845              	.LCFI45:
 846              	 .cfi_def_cfa_offset 8
 847              	 .cfi_offset 7,-8
 848              	 .cfi_offset 14,-4
 849 0002 84B0     	 sub sp,sp,#16
 850              	.LCFI46:
 851              	 .cfi_def_cfa_offset 24
 852 0004 00AF     	 add r7,sp,#0
 853              	.LCFI47:
 854              	 .cfi_def_cfa_register 7
 855 0006 7860     	 str r0,[r7,#4]
 856 0008 0A1C     	 mov r2,r1
 857 000a FB1C     	 add r3,r7,#3
 858 000c 1A70     	 strb r2,[r3]
 483:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 484:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 485:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 486:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 487:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 488:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 859              	 .loc 2 488 0
 860 000e 7B68     	 ldr r3,[r7,#4]
 861 0010 5B68     	 ldr r3,[r3,#4]
 862 0012 FB60     	 str r3,[r7,#12]
 489:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 490:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 491:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_LDS_Msk);
 863              	 .loc 2 491 0
 864 0014 FB68     	 ldr r3,[r7,#12]
 865 0016 074A     	 ldr r2,.L31
 866 0018 1340     	 and r3,r2
 867 001a FB60     	 str r3,[r7,#12]
 492:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_LDS_Pos;
 868              	 .loc 2 492 0
 869 001c FB1C     	 add r3,r7,#3
 870 001e 1B78     	 ldrb r3,[r3]
 871 0020 1B03     	 lsl r3,r3,#12
 872 0022 FA68     	 ldr r2,[r7,#12]
 873 0024 1343     	 orr r3,r2
 874 0026 FB60     	 str r3,[r7,#12]
 493:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 494:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 875              	 .loc 2 494 0
 876 0028 7B68     	 ldr r3,[r7,#4]
 877 002a FA68     	 ldr r2,[r7,#12]
 878 002c 5A60     	 str r2,[r3,#4]
 495:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 879              	 .loc 2 495 0
 880 002e BD46     	 mov sp,r7
 881 0030 04B0     	 add sp,sp,#16
 882              	 
 883 0032 80BD     	 pop {r7,pc}
 884              	.L32:
 885              	 .align 2
 886              	.L31:
 887 0034 FFCFFFFF 	 .word -12289
 888              	 .cfi_endproc
 889              	.LFE108:
 891              	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 892              	 .align 2
 893              	 .global XMC_CCU8_SLICE_LoadSelector
 894              	 .code 16
 895              	 .thumb_func
 897              	XMC_CCU8_SLICE_LoadSelector:
 898              	.LFB109:
 496:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 497:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure, which compare register value has to be loaded during external load event */
 498:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
 499:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 899              	 .loc 2 499 0
 900              	 .cfi_startproc
 901 0000 80B5     	 push {r7,lr}
 902              	.LCFI48:
 903              	 .cfi_def_cfa_offset 8
 904              	 .cfi_offset 7,-8
 905              	 .cfi_offset 14,-4
 906 0002 84B0     	 sub sp,sp,#16
 907              	.LCFI49:
 908              	 .cfi_def_cfa_offset 24
 909 0004 00AF     	 add r7,sp,#0
 910              	.LCFI50:
 911              	 .cfi_def_cfa_register 7
 912 0006 7860     	 str r0,[r7,#4]
 913 0008 0A1C     	 mov r2,r1
 914 000a FB1C     	 add r3,r7,#3
 915 000c 1A70     	 strb r2,[r3]
 500:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 501:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 502:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 503:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Channel number", XMC_CCU8_SLICE_CHECK_COMP_CHANNE
 504:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 505:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 916              	 .loc 2 505 0
 917 000e 7B68     	 ldr r3,[r7,#4]
 918 0010 5B69     	 ldr r3,[r3,#20]
 919 0012 FB60     	 str r3,[r7,#12]
 506:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 507:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 508:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_TLS_Msk);
 920              	 .loc 2 508 0
 921 0014 FB68     	 ldr r3,[r7,#12]
 922 0016 8022     	 mov r2,#128
 923 0018 9343     	 bic r3,r2
 924 001a FB60     	 str r3,[r7,#12]
 509:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)ch_num << CCU8_CC8_TC_TLS_Pos;
 925              	 .loc 2 509 0
 926 001c FB1C     	 add r3,r7,#3
 927 001e 1B78     	 ldrb r3,[r3]
 928 0020 DB01     	 lsl r3,r3,#7
 929 0022 FA68     	 ldr r2,[r7,#12]
 930 0024 1343     	 orr r3,r2
 931 0026 FB60     	 str r3,[r7,#12]
 510:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 511:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 932              	 .loc 2 511 0
 933 0028 7B68     	 ldr r3,[r7,#4]
 934 002a FA68     	 ldr r2,[r7,#12]
 935 002c 5A61     	 str r2,[r3,#20]
 512:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 936              	 .loc 2 512 0
 937 002e BD46     	 mov sp,r7
 938 0030 04B0     	 add sp,sp,#16
 939              	 
 940 0032 80BD     	 pop {r7,pc}
 941              	 .cfi_endproc
 942              	.LFE109:
 944              	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 945              	 .align 2
 946              	 .global XMC_CCU8_SLICE_ModulationConfig
 947              	 .code 16
 948              	 .thumb_func
 950              	XMC_CCU8_SLICE_ModulationConfig:
 951              	.LFB110:
 513:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 514:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice modulation function */
 515:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
 516:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_EVENT_t event,
 517:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
 518:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
 519:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const bool synch_with_pwm)
 520:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 952              	 .loc 2 520 0
 953              	 .cfi_startproc
 954 0000 90B5     	 push {r4,r7,lr}
 955              	.LCFI51:
 956              	 .cfi_def_cfa_offset 12
 957              	 .cfi_offset 4,-12
 958              	 .cfi_offset 7,-8
 959              	 .cfi_offset 14,-4
 960 0002 85B0     	 sub sp,sp,#20
 961              	.LCFI52:
 962              	 .cfi_def_cfa_offset 32
 963 0004 00AF     	 add r7,sp,#0
 964              	.LCFI53:
 965              	 .cfi_def_cfa_register 7
 966 0006 7860     	 str r0,[r7,#4]
 967 0008 0C1C     	 mov r4,r1
 968 000a 101C     	 mov r0,r2
 969 000c 191C     	 mov r1,r3
 970 000e FB1C     	 add r3,r7,#3
 971 0010 221C     	 add r2,r4,#0
 972 0012 1A70     	 strb r2,[r3]
 973 0014 BB1C     	 add r3,r7,#2
 974 0016 021C     	 add r2,r0,#0
 975 0018 1A70     	 strb r2,[r3]
 976 001a 7B1C     	 add r3,r7,#1
 977 001c 0A1C     	 add r2,r1,#0
 978 001e 1A70     	 strb r2,[r3]
 521:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 522:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 523:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 524:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
 525:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(even
 526:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid channel for modulation", 
 527:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel));
 528:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Modulation Mode", 
 529:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT) ||\
 530:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)));
 531:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 532:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 979              	 .loc 2 532 0
 980 0020 7B68     	 ldr r3,[r7,#4]
 981 0022 5B68     	 ldr r3,[r3,#4]
 982 0024 BB60     	 str r3,[r7,#8]
 533:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 534:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the modulation function */
 535:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_MOS_Msk);
 983              	 .loc 2 535 0
 984 0026 BB68     	 ldr r3,[r7,#8]
 985 0028 1D4A     	 ldr r2,.L39
 986 002a 1340     	 and r3,r2
 987 002c BB60     	 str r3,[r7,#8]
 536:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_MOS_Pos;
 988              	 .loc 2 536 0
 989 002e FB1C     	 add r3,r7,#3
 990 0030 1B78     	 ldrb r3,[r3]
 991 0032 9B04     	 lsl r3,r3,#18
 992 0034 BA68     	 ldr r2,[r7,#8]
 993 0036 1343     	 orr r3,r2
 994 0038 BB60     	 str r3,[r7,#8]
 537:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 538:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 995              	 .loc 2 538 0
 996 003a 7B68     	 ldr r3,[r7,#4]
 997 003c BA68     	 ldr r2,[r7,#8]
 998 003e 5A60     	 str r2,[r3,#4]
 539:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 540:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 999              	 .loc 2 540 0
 1000 0040 7B68     	 ldr r3,[r7,#4]
 1001 0042 5B69     	 ldr r3,[r3,#20]
 1002 0044 FB60     	 str r3,[r7,#12]
 541:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 542:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, Modulation mode */
 543:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)
 1003              	 .loc 2 543 0
 1004 0046 BB1C     	 add r3,r7,#2
 1005 0048 1B78     	 ldrb r3,[r3]
 1006 004a 012B     	 cmp r3,#1
 1007 004c 05D1     	 bne .L35
 544:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 545:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMT_Msk;
 1008              	 .loc 2 545 0
 1009 004e FB68     	 ldr r3,[r7,#12]
 1010 0050 8022     	 mov r2,#128
 1011 0052 5204     	 lsl r2,r2,#17
 1012 0054 1343     	 orr r3,r2
 1013 0056 FB60     	 str r3,[r7,#12]
 1014 0058 03E0     	 b .L36
 1015              	.L35:
 546:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 547:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 548:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 549:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMT_Msk);
 1016              	 .loc 2 549 0
 1017 005a FB68     	 ldr r3,[r7,#12]
 1018 005c 114A     	 ldr r2,.L39+4
 1019 005e 1340     	 and r3,r2
 1020 0060 FB60     	 str r3,[r7,#12]
 1021              	.L36:
 550:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 551:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 552:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Synchronization of modulation effect with PWM cycle */
 553:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1022              	 .loc 2 553 0
 1023 0062 2023     	 mov r3,#32
 1024 0064 FB18     	 add r3,r7,r3
 1025 0066 1B78     	 ldrb r3,[r3]
 1026 0068 002B     	 cmp r3,#0
 1027 006a 05D0     	 beq .L37
 554:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 555:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMS_Msk;
 1028              	 .loc 2 555 0
 1029 006c FB68     	 ldr r3,[r7,#12]
 1030 006e 8022     	 mov r2,#128
 1031 0070 1204     	 lsl r2,r2,#16
 1032 0072 1343     	 orr r3,r2
 1033 0074 FB60     	 str r3,[r7,#12]
 1034 0076 03E0     	 b .L38
 1035              	.L37:
 556:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 557:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 558:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 559:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMS_Msk);
 1036              	 .loc 2 559 0
 1037 0078 FB68     	 ldr r3,[r7,#12]
 1038 007a 0B4A     	 ldr r2,.L39+8
 1039 007c 1340     	 and r3,r2
 1040 007e FB60     	 str r3,[r7,#12]
 1041              	.L38:
 560:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 561:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 562:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure on which channel external modulation to be applied */
 563:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_EME_Msk);
 1042              	 .loc 2 563 0
 1043 0080 FB68     	 ldr r3,[r7,#12]
 1044 0082 0A4A     	 ldr r2,.L39+12
 1045 0084 1340     	 and r3,r2
 1046 0086 FB60     	 str r3,[r7,#12]
 564:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)channel << CCU8_CC8_TC_EME_Pos;
 1047              	 .loc 2 564 0
 1048 0088 7B1C     	 add r3,r7,#1
 1049 008a 1B78     	 ldrb r3,[r3]
 1050 008c DB06     	 lsl r3,r3,#27
 1051 008e FA68     	 ldr r2,[r7,#12]
 1052 0090 1343     	 orr r3,r2
 1053 0092 FB60     	 str r3,[r7,#12]
 565:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 566:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1054              	 .loc 2 566 0
 1055 0094 7B68     	 ldr r3,[r7,#4]
 1056 0096 FA68     	 ldr r2,[r7,#12]
 1057 0098 5A61     	 str r2,[r3,#20]
 567:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1058              	 .loc 2 567 0
 1059 009a BD46     	 mov sp,r7
 1060 009c 05B0     	 add sp,sp,#20
 1061              	 
 1062 009e 90BD     	 pop {r4,r7,pc}
 1063              	.L40:
 1064              	 .align 2
 1065              	.L39:
 1066 00a0 FFFFF3FF 	 .word -786433
 1067 00a4 FFFFFFFE 	 .word -16777217
 1068 00a8 FFFF7FFF 	 .word -8388609
 1069 00ac FFFFFFE7 	 .word -402653185
 1070              	 .cfi_endproc
 1071              	.LFE110:
 1073              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 1074              	 .align 2
 1075              	 .global XMC_CCU8_SLICE_CountConfig
 1076              	 .code 16
 1077              	 .thumb_func
 1079              	XMC_CCU8_SLICE_CountConfig:
 1080              	.LFB111:
 568:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 569:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice count function */
 570:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 571:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1081              	 .loc 2 571 0
 1082              	 .cfi_startproc
 1083 0000 80B5     	 push {r7,lr}
 1084              	.LCFI54:
 1085              	 .cfi_def_cfa_offset 8
 1086              	 .cfi_offset 7,-8
 1087              	 .cfi_offset 14,-4
 1088 0002 84B0     	 sub sp,sp,#16
 1089              	.LCFI55:
 1090              	 .cfi_def_cfa_offset 24
 1091 0004 00AF     	 add r7,sp,#0
 1092              	.LCFI56:
 1093              	 .cfi_def_cfa_register 7
 1094 0006 7860     	 str r0,[r7,#4]
 1095 0008 0A1C     	 mov r2,r1
 1096 000a FB1C     	 add r3,r7,#3
 1097 000c 1A70     	 strb r2,[r3]
 572:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 573:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 574:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 575:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 576:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 577:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1098              	 .loc 2 577 0
 1099 000e 7B68     	 ldr r3,[r7,#4]
 1100 0010 5B68     	 ldr r3,[r3,#4]
 1101 0012 FB60     	 str r3,[r7,#12]
 578:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 579:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the count function */
 580:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CNTS_Msk);
 1102              	 .loc 2 580 0
 1103 0014 FB68     	 ldr r3,[r7,#12]
 1104 0016 074A     	 ldr r2,.L42
 1105 0018 1340     	 and r3,r2
 1106 001a FB60     	 str r3,[r7,#12]
 581:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CNTS_Pos;
 1107              	 .loc 2 581 0
 1108 001c FB1C     	 add r3,r7,#3
 1109 001e 1B78     	 ldrb r3,[r3]
 1110 0020 9B03     	 lsl r3,r3,#14
 1111 0022 FA68     	 ldr r2,[r7,#12]
 1112 0024 1343     	 orr r3,r2
 1113 0026 FB60     	 str r3,[r7,#12]
 582:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 583:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1114              	 .loc 2 583 0
 1115 0028 7B68     	 ldr r3,[r7,#4]
 1116 002a FA68     	 ldr r2,[r7,#12]
 1117 002c 5A60     	 str r2,[r3,#4]
 584:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1118              	 .loc 2 584 0
 1119 002e BD46     	 mov sp,r7
 1120 0030 04B0     	 add sp,sp,#16
 1121              	 
 1122 0032 80BD     	 pop {r7,pc}
 1123              	.L43:
 1124              	 .align 2
 1125              	.L42:
 1126 0034 FF3FFFFF 	 .word -49153
 1127              	 .cfi_endproc
 1128              	.LFE111:
 1130              	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 1131              	 .align 2
 1132              	 .global XMC_CCU8_SLICE_GateConfig
 1133              	 .code 16
 1134              	 .thumb_func
 1136              	XMC_CCU8_SLICE_GateConfig:
 1137              	.LFB112:
 585:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 586:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice gate function */
 587:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 588:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1138              	 .loc 2 588 0
 1139              	 .cfi_startproc
 1140 0000 80B5     	 push {r7,lr}
 1141              	.LCFI57:
 1142              	 .cfi_def_cfa_offset 8
 1143              	 .cfi_offset 7,-8
 1144              	 .cfi_offset 14,-4
 1145 0002 84B0     	 sub sp,sp,#16
 1146              	.LCFI58:
 1147              	 .cfi_def_cfa_offset 24
 1148 0004 00AF     	 add r7,sp,#0
 1149              	.LCFI59:
 1150              	 .cfi_def_cfa_register 7
 1151 0006 7860     	 str r0,[r7,#4]
 1152 0008 0A1C     	 mov r2,r1
 1153 000a FB1C     	 add r3,r7,#3
 1154 000c 1A70     	 strb r2,[r3]
 589:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 590:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 591:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 592:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 593:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 594:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1155              	 .loc 2 594 0
 1156 000e 7B68     	 ldr r3,[r7,#4]
 1157 0010 5B68     	 ldr r3,[r3,#4]
 1158 0012 FB60     	 str r3,[r7,#12]
 595:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 596:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 597:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_GATES_Msk);
 1159              	 .loc 2 597 0
 1160 0014 FB68     	 ldr r3,[r7,#12]
 1161 0016 074A     	 ldr r2,.L45
 1162 0018 1340     	 and r3,r2
 1163 001a FB60     	 str r3,[r7,#12]
 598:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_GATES_Pos;
 1164              	 .loc 2 598 0
 1165 001c FB1C     	 add r3,r7,#3
 1166 001e 1B78     	 ldrb r3,[r3]
 1167 0020 1B02     	 lsl r3,r3,#8
 1168 0022 FA68     	 ldr r2,[r7,#12]
 1169 0024 1343     	 orr r3,r2
 1170 0026 FB60     	 str r3,[r7,#12]
 599:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 600:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1171              	 .loc 2 600 0
 1172 0028 7B68     	 ldr r3,[r7,#4]
 1173 002a FA68     	 ldr r2,[r7,#12]
 1174 002c 5A60     	 str r2,[r3,#4]
 601:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1175              	 .loc 2 601 0
 1176 002e BD46     	 mov sp,r7
 1177 0030 04B0     	 add sp,sp,#16
 1178              	 
 1179 0032 80BD     	 pop {r7,pc}
 1180              	.L46:
 1181              	 .align 2
 1182              	.L45:
 1183 0034 FFFCFFFF 	 .word -769
 1184              	 .cfi_endproc
 1185              	.LFE112:
 1187              	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 1188              	 .align 2
 1189              	 .global XMC_CCU8_SLICE_Capture0Config
 1190              	 .code 16
 1191              	 .thumb_func
 1193              	XMC_CCU8_SLICE_Capture0Config:
 1194              	.LFB113:
 602:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 603:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-0 function */
 604:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 605:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1195              	 .loc 2 605 0
 1196              	 .cfi_startproc
 1197 0000 80B5     	 push {r7,lr}
 1198              	.LCFI60:
 1199              	 .cfi_def_cfa_offset 8
 1200              	 .cfi_offset 7,-8
 1201              	 .cfi_offset 14,-4
 1202 0002 84B0     	 sub sp,sp,#16
 1203              	.LCFI61:
 1204              	 .cfi_def_cfa_offset 24
 1205 0004 00AF     	 add r7,sp,#0
 1206              	.LCFI62:
 1207              	 .cfi_def_cfa_register 7
 1208 0006 7860     	 str r0,[r7,#4]
 1209 0008 0A1C     	 mov r2,r1
 1210 000a FB1C     	 add r3,r7,#3
 1211 000c 1A70     	 strb r2,[r3]
 606:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 607:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 608:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 609:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 610:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 611:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1212              	 .loc 2 611 0
 1213 000e 7B68     	 ldr r3,[r7,#4]
 1214 0010 5B68     	 ldr r3,[r3,#4]
 1215 0012 FB60     	 str r3,[r7,#12]
 612:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 613:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 614:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP0S_Msk);
 1216              	 .loc 2 614 0
 1217 0014 FB68     	 ldr r3,[r7,#12]
 1218 0016 3022     	 mov r2,#48
 1219 0018 9343     	 bic r3,r2
 1220 001a FB60     	 str r3,[r7,#12]
 615:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP0S_Pos;
 1221              	 .loc 2 615 0
 1222 001c FB1C     	 add r3,r7,#3
 1223 001e 1B78     	 ldrb r3,[r3]
 1224 0020 1B01     	 lsl r3,r3,#4
 1225 0022 FA68     	 ldr r2,[r7,#12]
 1226 0024 1343     	 orr r3,r2
 1227 0026 FB60     	 str r3,[r7,#12]
 616:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 617:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1228              	 .loc 2 617 0
 1229 0028 7B68     	 ldr r3,[r7,#4]
 1230 002a FA68     	 ldr r2,[r7,#12]
 1231 002c 5A60     	 str r2,[r3,#4]
 618:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1232              	 .loc 2 618 0
 1233 002e BD46     	 mov sp,r7
 1234 0030 04B0     	 add sp,sp,#16
 1235              	 
 1236 0032 80BD     	 pop {r7,pc}
 1237              	 .cfi_endproc
 1238              	.LFE113:
 1240              	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 1241              	 .align 2
 1242              	 .global XMC_CCU8_SLICE_Capture1Config
 1243              	 .code 16
 1244              	 .thumb_func
 1246              	XMC_CCU8_SLICE_Capture1Config:
 1247              	.LFB114:
 619:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 620:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-1 function */
 621:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 622:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1248              	 .loc 2 622 0
 1249              	 .cfi_startproc
 1250 0000 80B5     	 push {r7,lr}
 1251              	.LCFI63:
 1252              	 .cfi_def_cfa_offset 8
 1253              	 .cfi_offset 7,-8
 1254              	 .cfi_offset 14,-4
 1255 0002 84B0     	 sub sp,sp,#16
 1256              	.LCFI64:
 1257              	 .cfi_def_cfa_offset 24
 1258 0004 00AF     	 add r7,sp,#0
 1259              	.LCFI65:
 1260              	 .cfi_def_cfa_register 7
 1261 0006 7860     	 str r0,[r7,#4]
 1262 0008 0A1C     	 mov r2,r1
 1263 000a FB1C     	 add r3,r7,#3
 1264 000c 1A70     	 strb r2,[r3]
 623:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 624:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 625:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 626:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 627:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 628:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 629:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1265              	 .loc 2 629 0
 1266 000e 7B68     	 ldr r3,[r7,#4]
 1267 0010 5B68     	 ldr r3,[r3,#4]
 1268 0012 FB60     	 str r3,[r7,#12]
 630:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 631:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 632:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP1S_Msk);
 1269              	 .loc 2 632 0
 1270 0014 FB68     	 ldr r3,[r7,#12]
 1271 0016 C022     	 mov r2,#192
 1272 0018 9343     	 bic r3,r2
 1273 001a FB60     	 str r3,[r7,#12]
 633:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP1S_Pos;
 1274              	 .loc 2 633 0
 1275 001c FB1C     	 add r3,r7,#3
 1276 001e 1B78     	 ldrb r3,[r3]
 1277 0020 9B01     	 lsl r3,r3,#6
 1278 0022 FA68     	 ldr r2,[r7,#12]
 1279 0024 1343     	 orr r3,r2
 1280 0026 FB60     	 str r3,[r7,#12]
 634:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 635:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1281              	 .loc 2 635 0
 1282 0028 7B68     	 ldr r3,[r7,#4]
 1283 002a FA68     	 ldr r2,[r7,#12]
 1284 002c 5A60     	 str r2,[r3,#4]
 636:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1285              	 .loc 2 636 0
 1286 002e BD46     	 mov sp,r7
 1287 0030 04B0     	 add sp,sp,#16
 1288              	 
 1289 0032 80BD     	 pop {r7,pc}
 1290              	 .cfi_endproc
 1291              	.LFE114:
 1293              	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 1294              	 .align 2
 1295              	 .global XMC_CCU8_SLICE_DirectionConfig
 1296              	 .code 16
 1297              	 .thumb_func
 1299              	XMC_CCU8_SLICE_DirectionConfig:
 1300              	.LFB115:
 637:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 638:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure direction function */
 639:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
 640:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1301              	 .loc 2 640 0
 1302              	 .cfi_startproc
 1303 0000 80B5     	 push {r7,lr}
 1304              	.LCFI66:
 1305              	 .cfi_def_cfa_offset 8
 1306              	 .cfi_offset 7,-8
 1307              	 .cfi_offset 14,-4
 1308 0002 84B0     	 sub sp,sp,#16
 1309              	.LCFI67:
 1310              	 .cfi_def_cfa_offset 24
 1311 0004 00AF     	 add r7,sp,#0
 1312              	.LCFI68:
 1313              	 .cfi_def_cfa_register 7
 1314 0006 7860     	 str r0,[r7,#4]
 1315 0008 0A1C     	 mov r2,r1
 1316 000a FB1C     	 add r3,r7,#3
 1317 000c 1A70     	 strb r2,[r3]
 641:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 642:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 643:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 644:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event
 645:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 646:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1318              	 .loc 2 646 0
 1319 000e 7B68     	 ldr r3,[r7,#4]
 1320 0010 5B68     	 ldr r3,[r3,#4]
 1321 0012 FB60     	 str r3,[r7,#12]
 647:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 648:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the direction function */
 649:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_UDS_Msk);
 1322              	 .loc 2 649 0
 1323 0014 FB68     	 ldr r3,[r7,#12]
 1324 0016 074A     	 ldr r2,.L50
 1325 0018 1340     	 and r3,r2
 1326 001a FB60     	 str r3,[r7,#12]
 650:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_UDS_Pos;
 1327              	 .loc 2 650 0
 1328 001c FB1C     	 add r3,r7,#3
 1329 001e 1B78     	 ldrb r3,[r3]
 1330 0020 9B02     	 lsl r3,r3,#10
 1331 0022 FA68     	 ldr r2,[r7,#12]
 1332 0024 1343     	 orr r3,r2
 1333 0026 FB60     	 str r3,[r7,#12]
 651:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 652:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1334              	 .loc 2 652 0
 1335 0028 7B68     	 ldr r3,[r7,#4]
 1336 002a FA68     	 ldr r2,[r7,#12]
 1337 002c 5A60     	 str r2,[r3,#4]
 653:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1338              	 .loc 2 653 0
 1339 002e BD46     	 mov sp,r7
 1340 0030 04B0     	 add sp,sp,#16
 1341              	 
 1342 0032 80BD     	 pop {r7,pc}
 1343              	.L51:
 1344              	 .align 2
 1345              	.L50:
 1346 0034 FFF3FFFF 	 .word -3073
 1347              	 .cfi_endproc
 1348              	.LFE115:
 1350              	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1351              	 .align 2
 1352              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 1353              	 .code 16
 1354              	 .thumb_func
 1356              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 1357              	.LFB116:
 654:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 655:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice status bit override function */
 656:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice)
 657:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1358              	 .loc 2 657 0
 1359              	 .cfi_startproc
 1360 0000 80B5     	 push {r7,lr}
 1361              	.LCFI69:
 1362              	 .cfi_def_cfa_offset 8
 1363              	 .cfi_offset 7,-8
 1364              	 .cfi_offset 14,-4
 1365 0002 84B0     	 sub sp,sp,#16
 1366              	.LCFI70:
 1367              	 .cfi_def_cfa_offset 24
 1368 0004 00AF     	 add r7,sp,#0
 1369              	.LCFI71:
 1370              	 .cfi_def_cfa_register 7
 1371 0006 7860     	 str r0,[r7,#4]
 658:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 659:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 660:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 661:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 662:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1372              	 .loc 2 662 0
 1373 0008 7B68     	 ldr r3,[r7,#4]
 1374 000a 5B68     	 ldr r3,[r3,#4]
 1375 000c FB60     	 str r3,[r7,#12]
 663:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 664:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map status bit trigger override to Event 1 &
 665:../Libraries/XMCLib/src/xmc_ccu8.c ****          status bit value override to Event 2 */
 666:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_OFS_Msk);
 1376              	 .loc 2 666 0
 1377 000e FB68     	 ldr r3,[r7,#12]
 1378 0010 064A     	 ldr r2,.L53
 1379 0012 1340     	 and r3,r2
 1380 0014 FB60     	 str r3,[r7,#12]
 667:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_OFS_Pos;
 1381              	 .loc 2 667 0
 1382 0016 FB68     	 ldr r3,[r7,#12]
 1383 0018 8022     	 mov r2,#128
 1384 001a 5202     	 lsl r2,r2,#9
 1385 001c 1343     	 orr r3,r2
 1386 001e FB60     	 str r3,[r7,#12]
 668:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 669:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1387              	 .loc 2 669 0
 1388 0020 7B68     	 ldr r3,[r7,#4]
 1389 0022 FA68     	 ldr r2,[r7,#12]
 1390 0024 5A60     	 str r2,[r3,#4]
 670:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1391              	 .loc 2 670 0
 1392 0026 BD46     	 mov sp,r7
 1393 0028 04B0     	 add sp,sp,#16
 1394              	 
 1395 002a 80BD     	 pop {r7,pc}
 1396              	.L54:
 1397              	 .align 2
 1398              	.L53:
 1399 002c FFFFFEFF 	 .word -65537
 1400              	 .cfi_endproc
 1401              	.LFE116:
 1403              	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 1404              	 .align 2
 1405              	 .global XMC_CCU8_SLICE_TrapConfig
 1406              	 .code 16
 1407              	 .thumb_func
 1409              	XMC_CCU8_SLICE_TrapConfig:
 1410              	.LFB117:
 671:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 672:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure trap function*/
 673:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
 674:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
 675:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const bool synch_with_pwm)
 676:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1411              	 .loc 2 676 0
 1412              	 .cfi_startproc
 1413 0000 80B5     	 push {r7,lr}
 1414              	.LCFI72:
 1415              	 .cfi_def_cfa_offset 8
 1416              	 .cfi_offset 7,-8
 1417              	 .cfi_offset 14,-4
 1418 0002 84B0     	 sub sp,sp,#16
 1419              	.LCFI73:
 1420              	 .cfi_def_cfa_offset 24
 1421 0004 00AF     	 add r7,sp,#0
 1422              	.LCFI74:
 1423              	 .cfi_def_cfa_register 7
 1424 0006 7860     	 str r0,[r7,#4]
 1425 0008 081C     	 mov r0,r1
 1426 000a 111C     	 mov r1,r2
 1427 000c FB1C     	 add r3,r7,#3
 1428 000e 021C     	 add r2,r0,#0
 1429 0010 1A70     	 strb r2,[r3]
 1430 0012 BB1C     	 add r3,r7,#2
 1431 0014 0A1C     	 add r2,r1,#0
 1432 0016 1A70     	 strb r2,[r3]
 677:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 678:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 679:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 680:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 681:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 682:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                              (exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 683:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 684:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1433              	 .loc 2 684 0
 1434 0018 7B68     	 ldr r3,[r7,#4]
 1435 001a 5B68     	 ldr r3,[r3,#4]
 1436 001c BB60     	 str r3,[r7,#8]
 685:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 686:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map trap function to Event 2 */
 687:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_TS_Msk);
 1437              	 .loc 2 687 0
 1438 001e BB68     	 ldr r3,[r7,#8]
 1439 0020 174A     	 ldr r2,.L60
 1440 0022 1340     	 and r3,r2
 1441 0024 BB60     	 str r3,[r7,#8]
 688:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_TS_Pos;
 1442              	 .loc 2 688 0
 1443 0026 BB68     	 ldr r3,[r7,#8]
 1444 0028 8022     	 mov r2,#128
 1445 002a 9202     	 lsl r2,r2,#10
 1446 002c 1343     	 orr r3,r2
 1447 002e BB60     	 str r3,[r7,#8]
 689:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 690:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1448              	 .loc 2 690 0
 1449 0030 7B68     	 ldr r3,[r7,#4]
 1450 0032 BA68     	 ldr r2,[r7,#8]
 1451 0034 5A60     	 str r2,[r3,#4]
 691:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 692:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1452              	 .loc 2 692 0
 1453 0036 7B68     	 ldr r3,[r7,#4]
 1454 0038 5B69     	 ldr r3,[r3,#20]
 1455 003a FB60     	 str r3,[r7,#12]
 693:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 694:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure synchronization option */
 695:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1456              	 .loc 2 695 0
 1457 003c BB1C     	 add r3,r7,#2
 1458 003e 1B78     	 ldrb r3,[r3]
 1459 0040 002B     	 cmp r3,#0
 1460 0042 05D0     	 beq .L56
 696:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 697:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSE_Msk;
 1461              	 .loc 2 697 0
 1462 0044 FB68     	 ldr r3,[r7,#12]
 1463 0046 8022     	 mov r2,#128
 1464 0048 9203     	 lsl r2,r2,#14
 1465 004a 1343     	 orr r3,r2
 1466 004c FB60     	 str r3,[r7,#12]
 1467 004e 03E0     	 b .L57
 1468              	.L56:
 698:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 699:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 700:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 701:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSE_Msk);
 1469              	 .loc 2 701 0
 1470 0050 FB68     	 ldr r3,[r7,#12]
 1471 0052 0C4A     	 ldr r2,.L60+4
 1472 0054 1340     	 and r3,r2
 1473 0056 FB60     	 str r3,[r7,#12]
 1474              	.L57:
 702:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 703:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 704:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure exit mode */
 705:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(exit_mode == XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW)
 1475              	 .loc 2 705 0
 1476 0058 FB1C     	 add r3,r7,#3
 1477 005a 1B78     	 ldrb r3,[r3]
 1478 005c 012B     	 cmp r3,#1
 1479 005e 05D1     	 bne .L58
 706:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 707:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSW_Msk;
 1480              	 .loc 2 707 0
 1481 0060 FB68     	 ldr r3,[r7,#12]
 1482 0062 8022     	 mov r2,#128
 1483 0064 D203     	 lsl r2,r2,#15
 1484 0066 1343     	 orr r3,r2
 1485 0068 FB60     	 str r3,[r7,#12]
 1486 006a 03E0     	 b .L59
 1487              	.L58:
 708:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 709:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 710:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 711:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSW_Msk);
 1488              	 .loc 2 711 0
 1489 006c FB68     	 ldr r3,[r7,#12]
 1490 006e 064A     	 ldr r2,.L60+8
 1491 0070 1340     	 and r3,r2
 1492 0072 FB60     	 str r3,[r7,#12]
 1493              	.L59:
 712:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 713:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 714:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1494              	 .loc 2 714 0
 1495 0074 7B68     	 ldr r3,[r7,#4]
 1496 0076 FA68     	 ldr r2,[r7,#12]
 1497 0078 5A61     	 str r2,[r3,#20]
 715:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1498              	 .loc 2 715 0
 1499 007a BD46     	 mov sp,r7
 1500 007c 04B0     	 add sp,sp,#16
 1501              	 
 1502 007e 80BD     	 pop {r7,pc}
 1503              	.L61:
 1504              	 .align 2
 1505              	.L60:
 1506 0080 FFFFFDFF 	 .word -131073
 1507 0084 FFFFDFFF 	 .word -2097153
 1508 0088 FFFFBFFF 	 .word -4194305
 1509              	 .cfi_endproc
 1510              	.LFE117:
 1512              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1513              	 .align 2
 1514              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 1515              	 .code 16
 1516              	 .thumb_func
 1518              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 1519              	.LFB118:
 716:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 717:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice Status Bit Override event */
 718:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
 719:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
 720:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
 721:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1520              	 .loc 2 721 0
 1521              	 .cfi_startproc
 1522 0000 80B5     	 push {r7,lr}
 1523              	.LCFI75:
 1524              	 .cfi_def_cfa_offset 8
 1525              	 .cfi_offset 7,-8
 1526              	 .cfi_offset 14,-4
 1527 0002 86B0     	 sub sp,sp,#24
 1528              	.LCFI76:
 1529              	 .cfi_def_cfa_offset 32
 1530 0004 00AF     	 add r7,sp,#0
 1531              	.LCFI77:
 1532              	 .cfi_def_cfa_register 7
 1533 0006 F860     	 str r0,[r7,#12]
 1534 0008 B960     	 str r1,[r7,#8]
 1535 000a 7A60     	 str r2,[r7,#4]
 722:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 723:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 724:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU8_IsVal
 725:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 726:../Libraries/XMCLib/src/xmc_ccu8.c **** 		     XMC_CCU8_SLICE_IsInputvalid(ev1_config->mapped_input));
 727:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity", 
 728:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 729:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity", 
 730:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 731:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 732:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 733:../Libraries/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 734:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 735:../Libraries/XMCLib/src/xmc_ccu8.c **** 		      XMC_CCU8_SLICE_IsInputvalid(ev2_config->mapped_input));
 736:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 737:../Libraries/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 738:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 739:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 740:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 741:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 742:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 743:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 744:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 745:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 746:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 747:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 748:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV1EM_Pos);
 749:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS2_EV1EM_Pos;
 750:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 751:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 752:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV2EM_Pos);
 753:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS2_EV2EM_Pos;
 754:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 755:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 756:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV1LM_Pos);
 757:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS2_EV1LM_Pos;
 758:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 759:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 760:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV2LM_Pos);
 761:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS2_EV2LM_Pos;
 762:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 763:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 764:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF1M_Pos);
 765:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS2_LPF1M_Pos;
 766:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 767:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 768:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF2M_Pos);
 769:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS2_LPF2M_Pos;
 770:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 771:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins; 
 772:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 773:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 774:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 775:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV1IS_Pos);
 776:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS1_EV1IS_Pos;
 777:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 778:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 779:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV2IS_Pos);
 780:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS1_EV2IS_Pos;
 781:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 782:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;  
 783:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 784:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1536              	 .loc 2 784 0
 1537 000c FB68     	 ldr r3,[r7,#12]
 1538 000e 1B68     	 ldr r3,[r3]
 1539 0010 7B61     	 str r3,[r7,#20]
 785:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 786:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 787:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV1EM_Pos);
 1540              	 .loc 2 787 0
 1541 0012 7B69     	 ldr r3,[r7,#20]
 1542 0014 2A4A     	 ldr r2,.L63
 1543 0016 1340     	 and r3,r2
 1544 0018 7B61     	 str r3,[r7,#20]
 788:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS_EV1EM_Pos;
 1545              	 .loc 2 788 0
 1546 001a BB68     	 ldr r3,[r7,#8]
 1547 001c 5B78     	 ldrb r3,[r3,#1]
 1548 001e 9B04     	 lsl r3,r3,#18
 1549 0020 7A69     	 ldr r2,[r7,#20]
 1550 0022 1343     	 orr r3,r2
 1551 0024 7B61     	 str r3,[r7,#20]
 789:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 790:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 791:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV2EM_Pos);
 1552              	 .loc 2 791 0
 1553 0026 7B69     	 ldr r3,[r7,#20]
 1554 0028 264A     	 ldr r2,.L63+4
 1555 002a 1340     	 and r3,r2
 1556 002c 7B61     	 str r3,[r7,#20]
 792:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS_EV2EM_Pos;
 1557              	 .loc 2 792 0
 1558 002e 7B68     	 ldr r3,[r7,#4]
 1559 0030 5B78     	 ldrb r3,[r3,#1]
 1560 0032 1B05     	 lsl r3,r3,#20
 1561 0034 7A69     	 ldr r2,[r7,#20]
 1562 0036 1343     	 orr r3,r2
 1563 0038 7B61     	 str r3,[r7,#20]
 793:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 794:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 795:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV1LM_Pos);
 1564              	 .loc 2 795 0
 1565 003a 7B69     	 ldr r3,[r7,#20]
 1566 003c 224A     	 ldr r2,.L63+8
 1567 003e 1340     	 and r3,r2
 1568 0040 7B61     	 str r3,[r7,#20]
 796:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS_EV1LM_Pos;
 1569              	 .loc 2 796 0
 1570 0042 BB68     	 ldr r3,[r7,#8]
 1571 0044 9B78     	 ldrb r3,[r3,#2]
 1572 0046 DB05     	 lsl r3,r3,#23
 1573 0048 7A69     	 ldr r2,[r7,#20]
 1574 004a 1343     	 orr r3,r2
 1575 004c 7B61     	 str r3,[r7,#20]
 797:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 798:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 799:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV2LM_Pos);
 1576              	 .loc 2 799 0
 1577 004e 7B69     	 ldr r3,[r7,#20]
 1578 0050 1E4A     	 ldr r2,.L63+12
 1579 0052 1340     	 and r3,r2
 1580 0054 7B61     	 str r3,[r7,#20]
 800:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS_EV2LM_Pos;
 1581              	 .loc 2 800 0
 1582 0056 7B68     	 ldr r3,[r7,#4]
 1583 0058 9B78     	 ldrb r3,[r3,#2]
 1584 005a 1B06     	 lsl r3,r3,#24
 1585 005c 7A69     	 ldr r2,[r7,#20]
 1586 005e 1343     	 orr r3,r2
 1587 0060 7B61     	 str r3,[r7,#20]
 801:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 802:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 803:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF1M_Pos);
 1588              	 .loc 2 803 0
 1589 0062 7B69     	 ldr r3,[r7,#20]
 1590 0064 1A4A     	 ldr r2,.L63+16
 1591 0066 1340     	 and r3,r2
 1592 0068 7B61     	 str r3,[r7,#20]
 804:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS_LPF1M_Pos;
 1593              	 .loc 2 804 0
 1594 006a BB68     	 ldr r3,[r7,#8]
 1595 006c DB78     	 ldrb r3,[r3,#3]
 1596 006e DB06     	 lsl r3,r3,#27
 1597 0070 7A69     	 ldr r2,[r7,#20]
 1598 0072 1343     	 orr r3,r2
 1599 0074 7B61     	 str r3,[r7,#20]
 805:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 806:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 807:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF2M_Pos);
 1600              	 .loc 2 807 0
 1601 0076 7B69     	 ldr r3,[r7,#20]
 1602 0078 164A     	 ldr r2,.L63+20
 1603 007a 1340     	 and r3,r2
 1604 007c 7B61     	 str r3,[r7,#20]
 808:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS_LPF2M_Pos;
 1605              	 .loc 2 808 0
 1606 007e 7B68     	 ldr r3,[r7,#4]
 1607 0080 DB78     	 ldrb r3,[r3,#3]
 1608 0082 5B07     	 lsl r3,r3,#29
 1609 0084 7A69     	 ldr r2,[r7,#20]
 1610 0086 1343     	 orr r3,r2
 1611 0088 7B61     	 str r3,[r7,#20]
 809:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 810:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 811:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV1IS_Pos);
 1612              	 .loc 2 811 0
 1613 008a 7B69     	 ldr r3,[r7,#20]
 1614 008c F022     	 mov r2,#240
 1615 008e 9343     	 bic r3,r2
 1616 0090 7B61     	 str r3,[r7,#20]
 812:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS_EV1IS_Pos;
 1617              	 .loc 2 812 0
 1618 0092 BB68     	 ldr r3,[r7,#8]
 1619 0094 1B78     	 ldrb r3,[r3]
 1620 0096 1B01     	 lsl r3,r3,#4
 1621 0098 7A69     	 ldr r2,[r7,#20]
 1622 009a 1343     	 orr r3,r2
 1623 009c 7B61     	 str r3,[r7,#20]
 813:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 814:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 815:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV2IS_Pos);
 1624              	 .loc 2 815 0
 1625 009e 7B69     	 ldr r3,[r7,#20]
 1626 00a0 0D4A     	 ldr r2,.L63+24
 1627 00a2 1340     	 and r3,r2
 1628 00a4 7B61     	 str r3,[r7,#20]
 816:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS_EV2IS_Pos;
 1629              	 .loc 2 816 0
 1630 00a6 7B68     	 ldr r3,[r7,#4]
 1631 00a8 1B78     	 ldrb r3,[r3]
 1632 00aa 1B02     	 lsl r3,r3,#8
 1633 00ac 7A69     	 ldr r2,[r7,#20]
 1634 00ae 1343     	 orr r3,r2
 1635 00b0 7B61     	 str r3,[r7,#20]
 817:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 818:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1636              	 .loc 2 818 0
 1637 00b2 FB68     	 ldr r3,[r7,#12]
 1638 00b4 7A69     	 ldr r2,[r7,#20]
 1639 00b6 1A60     	 str r2,[r3]
 819:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 820:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1640              	 .loc 2 820 0
 1641 00b8 BD46     	 mov sp,r7
 1642 00ba 06B0     	 add sp,sp,#24
 1643              	 
 1644 00bc 80BD     	 pop {r7,pc}
 1645              	.L64:
 1646 00be C046     	 .align 2
 1647              	.L63:
 1648 00c0 FFFFF3FF 	 .word -786433
 1649 00c4 FFFFCFFF 	 .word -3145729
 1650 00c8 FFFF7FFF 	 .word -8388609
 1651 00cc FFFFFFFE 	 .word -16777217
 1652 00d0 FFFFFFE7 	 .word -402653185
 1653 00d4 FFFFFF9F 	 .word -1610612737
 1654 00d8 FFF0FFFF 	 .word -3841
 1655              	 .cfi_endproc
 1656              	.LFE118:
 1658              	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 1659              	 .align 2
 1660              	 .global XMC_CCU8_SLICE_ConfigureEvent
 1661              	 .code 16
 1662              	 .thumb_func
 1664              	XMC_CCU8_SLICE_ConfigureEvent:
 1665              	.LFB119:
 821:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 822:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice trigger event */
 823:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
 824:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_t event,
 825:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *const config)
 826:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1666              	 .loc 2 826 0
 1667              	 .cfi_startproc
 1668 0000 80B5     	 push {r7,lr}
 1669              	.LCFI78:
 1670              	 .cfi_def_cfa_offset 8
 1671              	 .cfi_offset 7,-8
 1672              	 .cfi_offset 14,-4
 1673 0002 88B0     	 sub sp,sp,#32
 1674              	.LCFI79:
 1675              	 .cfi_def_cfa_offset 40
 1676 0004 00AF     	 add r7,sp,#0
 1677              	.LCFI80:
 1678              	 .cfi_def_cfa_register 7
 1679 0006 F860     	 str r0,[r7,#12]
 1680 0008 7A60     	 str r2,[r7,#4]
 1681 000a 0B23     	 mov r3,#11
 1682 000c FB18     	 add r3,r7,r3
 1683 000e 0A1C     	 add r2,r1,#0
 1684 0010 1A70     	 strb r2,[r3]
 827:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 828:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 829:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 830:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 831:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 832:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 833:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Input",  XMC_CCU8_SLICE_IsInputvalid(config->ma
 834:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 835:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 836:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Level Sensitivity", 
 837:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 838:../Libraries/XMCLib/src/xmc_ccu8.c ****               (config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 839:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Debounce Period",
 840:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(config->duration));
 841:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 842:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 843:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1685              	 .loc 2 843 0
 1686 0012 1F23     	 mov r3,#31
 1687 0014 FB18     	 add r3,r7,r3
 1688 0016 0B22     	 mov r2,#11
 1689 0018 BA18     	 add r2,r7,r2
 1690 001a 1278     	 ldrb r2,[r2]
 1691 001c 013A     	 sub r2,r2,#1
 1692 001e 1A70     	 strb r2,[r3]
 844:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 845:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 846:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 847:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 848:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 849:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 850:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 851:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 852:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 853:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 854:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 855:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 856:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 857:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 858:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 859:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 860:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 861:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 862:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 863:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins;
 864:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 865:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 866:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 867:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 868:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 869:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 870:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 871:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 872:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 873:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 874:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 875:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1693              	 .loc 2 875 0
 1694 0020 FB68     	 ldr r3,[r7,#12]
 1695 0022 1B68     	 ldr r3,[r3]
 1696 0024 BB61     	 str r3,[r7,#24]
 876:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 877:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 878:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1697              	 .loc 2 878 0
 1698 0026 1F23     	 mov r3,#31
 1699 0028 FB18     	 add r3,r7,r3
 1700 002a 1B78     	 ldrb r3,[r3]
 1701 002c DB18     	 add r3,r3,r3
 1702 002e DAB2     	 uxtb r2,r3
 1703 0030 1723     	 mov r3,#23
 1704 0032 FB18     	 add r3,r7,r3
 1705 0034 1032     	 add r2,r2,#16
 1706 0036 1A70     	 strb r2,[r3]
 879:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1707              	 .loc 2 879 0
 1708 0038 1723     	 mov r3,#23
 1709 003a FB18     	 add r3,r7,r3
 1710 003c 1B78     	 ldrb r3,[r3]
 1711 003e 0322     	 mov r2,#3
 1712 0040 9A40     	 lsl r2,r2,r3
 1713 0042 131C     	 mov r3,r2
 1714 0044 DA43     	 mvn r2,r3
 1715 0046 BB69     	 ldr r3,[r7,#24]
 1716 0048 1340     	 and r3,r2
 1717 004a BB61     	 str r3,[r7,#24]
 880:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 1718              	 .loc 2 880 0
 1719 004c 7B68     	 ldr r3,[r7,#4]
 1720 004e 5B78     	 ldrb r3,[r3,#1]
 1721 0050 1A1C     	 mov r2,r3
 1722 0052 1723     	 mov r3,#23
 1723 0054 FB18     	 add r3,r7,r3
 1724 0056 1B78     	 ldrb r3,[r3]
 1725 0058 9A40     	 lsl r2,r2,r3
 1726 005a 131C     	 mov r3,r2
 1727 005c BA69     	 ldr r2,[r7,#24]
 1728 005e 1343     	 orr r3,r2
 1729 0060 BB61     	 str r3,[r7,#24]
 881:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 882:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 883:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0LM_Pos) + offset;
 1730              	 .loc 2 883 0
 1731 0062 1723     	 mov r3,#23
 1732 0064 FB18     	 add r3,r7,r3
 1733 0066 1F22     	 mov r2,#31
 1734 0068 BA18     	 add r2,r7,r2
 1735 006a 1278     	 ldrb r2,[r2]
 1736 006c 1632     	 add r2,r2,#22
 1737 006e 1A70     	 strb r2,[r3]
 884:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1738              	 .loc 2 884 0
 1739 0070 1723     	 mov r3,#23
 1740 0072 FB18     	 add r3,r7,r3
 1741 0074 1B78     	 ldrb r3,[r3]
 1742 0076 0122     	 mov r2,#1
 1743 0078 9A40     	 lsl r2,r2,r3
 1744 007a 131C     	 mov r3,r2
 1745 007c DA43     	 mvn r2,r3
 1746 007e BB69     	 ldr r3,[r7,#24]
 1747 0080 1340     	 and r3,r2
 1748 0082 BB61     	 str r3,[r7,#24]
 885:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 1749              	 .loc 2 885 0
 1750 0084 7B68     	 ldr r3,[r7,#4]
 1751 0086 9B78     	 ldrb r3,[r3,#2]
 1752 0088 1A1C     	 mov r2,r3
 1753 008a 1723     	 mov r3,#23
 1754 008c FB18     	 add r3,r7,r3
 1755 008e 1B78     	 ldrb r3,[r3]
 1756 0090 9A40     	 lsl r2,r2,r3
 1757 0092 131C     	 mov r3,r2
 1758 0094 BA69     	 ldr r2,[r7,#24]
 1759 0096 1343     	 orr r3,r2
 1760 0098 BB61     	 str r3,[r7,#24]
 886:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 887:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 888:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1761              	 .loc 2 888 0
 1762 009a 1F23     	 mov r3,#31
 1763 009c FB18     	 add r3,r7,r3
 1764 009e 1B78     	 ldrb r3,[r3]
 1765 00a0 DB18     	 add r3,r3,r3
 1766 00a2 DAB2     	 uxtb r2,r3
 1767 00a4 1723     	 mov r3,#23
 1768 00a6 FB18     	 add r3,r7,r3
 1769 00a8 1932     	 add r2,r2,#25
 1770 00aa 1A70     	 strb r2,[r3]
 889:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1771              	 .loc 2 889 0
 1772 00ac 1723     	 mov r3,#23
 1773 00ae FB18     	 add r3,r7,r3
 1774 00b0 1B78     	 ldrb r3,[r3]
 1775 00b2 0322     	 mov r2,#3
 1776 00b4 9A40     	 lsl r2,r2,r3
 1777 00b6 131C     	 mov r3,r2
 1778 00b8 DA43     	 mvn r2,r3
 1779 00ba BB69     	 ldr r3,[r7,#24]
 1780 00bc 1340     	 and r3,r2
 1781 00be BB61     	 str r3,[r7,#24]
 890:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 1782              	 .loc 2 890 0
 1783 00c0 7B68     	 ldr r3,[r7,#4]
 1784 00c2 DB78     	 ldrb r3,[r3,#3]
 1785 00c4 1A1C     	 mov r2,r3
 1786 00c6 1723     	 mov r3,#23
 1787 00c8 FB18     	 add r3,r7,r3
 1788 00ca 1B78     	 ldrb r3,[r3]
 1789 00cc 9A40     	 lsl r2,r2,r3
 1790 00ce 131C     	 mov r3,r2
 1791 00d0 BA69     	 ldr r2,[r7,#24]
 1792 00d2 1343     	 orr r3,r2
 1793 00d4 BB61     	 str r3,[r7,#24]
 891:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 892:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 893:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1794              	 .loc 2 893 0
 1795 00d6 1723     	 mov r3,#23
 1796 00d8 FB18     	 add r3,r7,r3
 1797 00da 1F22     	 mov r2,#31
 1798 00dc BA18     	 add r2,r7,r2
 1799 00de 1278     	 ldrb r2,[r2]
 1800 00e0 9200     	 lsl r2,r2,#2
 1801 00e2 1A70     	 strb r2,[r3]
 894:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1802              	 .loc 2 894 0
 1803 00e4 1723     	 mov r3,#23
 1804 00e6 FB18     	 add r3,r7,r3
 1805 00e8 1B78     	 ldrb r3,[r3]
 1806 00ea 0F22     	 mov r2,#15
 1807 00ec 9A40     	 lsl r2,r2,r3
 1808 00ee 131C     	 mov r3,r2
 1809 00f0 DA43     	 mvn r2,r3
 1810 00f2 BB69     	 ldr r3,[r7,#24]
 1811 00f4 1340     	 and r3,r2
 1812 00f6 BB61     	 str r3,[r7,#24]
 895:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 1813              	 .loc 2 895 0
 1814 00f8 7B68     	 ldr r3,[r7,#4]
 1815 00fa 1B78     	 ldrb r3,[r3]
 1816 00fc 1A1C     	 mov r2,r3
 1817 00fe 1723     	 mov r3,#23
 1818 0100 FB18     	 add r3,r7,r3
 1819 0102 1B78     	 ldrb r3,[r3]
 1820 0104 9A40     	 lsl r2,r2,r3
 1821 0106 131C     	 mov r3,r2
 1822 0108 BA69     	 ldr r2,[r7,#24]
 1823 010a 1343     	 orr r3,r2
 1824 010c BB61     	 str r3,[r7,#24]
 896:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 897:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1825              	 .loc 2 897 0
 1826 010e FB68     	 ldr r3,[r7,#12]
 1827 0110 BA69     	 ldr r2,[r7,#24]
 1828 0112 1A60     	 str r2,[r3]
 898:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 899:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1829              	 .loc 2 899 0
 1830 0114 BD46     	 mov sp,r7
 1831 0116 08B0     	 add sp,sp,#32
 1832              	 
 1833 0118 80BD     	 pop {r7,pc}
 1834              	 .cfi_endproc
 1835              	.LFE119:
 1837 011a C046     	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 1838              	 .align 2
 1839              	 .global XMC_CCU8_SLICE_SetInput
 1840              	 .code 16
 1841              	 .thumb_func
 1843              	XMC_CCU8_SLICE_SetInput:
 1844              	.LFB120:
 900:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 901:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to bind an input to a slice trigger event */
 902:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
 903:../Libraries/XMCLib/src/xmc_ccu8.c ****                          const XMC_CCU8_SLICE_EVENT_t event,
 904:../Libraries/XMCLib/src/xmc_ccu8.c ****                              const XMC_CCU8_SLICE_INPUT_t input)
 905:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1845              	 .loc 2 905 0
 1846              	 .cfi_startproc
 1847 0000 80B5     	 push {r7,lr}
 1848              	.LCFI81:
 1849              	 .cfi_def_cfa_offset 8
 1850              	 .cfi_offset 7,-8
 1851              	 .cfi_offset 14,-4
 1852 0002 84B0     	 sub sp,sp,#16
 1853              	.LCFI82:
 1854              	 .cfi_def_cfa_offset 24
 1855 0004 00AF     	 add r7,sp,#0
 1856              	.LCFI83:
 1857              	 .cfi_def_cfa_register 7
 1858 0006 7860     	 str r0,[r7,#4]
 1859 0008 081C     	 mov r0,r1
 1860 000a 111C     	 mov r1,r2
 1861 000c FB1C     	 add r3,r7,#3
 1862 000e 021C     	 add r2,r0,#0
 1863 0010 1A70     	 strb r2,[r3]
 1864 0012 BB1C     	 add r3,r7,#2
 1865 0014 0A1C     	 add r2,r1,#0
 1866 0016 1A70     	 strb r2,[r3]
 906:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 907:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 908:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 909:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 910:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 911:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 912:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Input", XMC_CCU8_SLICE_IsInputvalid(input));
 913:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 914:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 915:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1867              	 .loc 2 915 0
 1868 0018 0F23     	 mov r3,#15
 1869 001a FB18     	 add r3,r7,r3
 1870 001c FA1C     	 add r2,r7,#3
 1871 001e 1278     	 ldrb r2,[r2]
 1872 0020 013A     	 sub r2,r2,#1
 1873 0022 1A70     	 strb r2,[r3]
 916:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 917:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 918:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 919:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 920:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 921:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 922:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 923:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 924:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 925:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 926:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 1874              	 .loc 2 926 0
 1875 0024 0E23     	 mov r3,#14
 1876 0026 FB18     	 add r3,r7,r3
 1877 0028 0F22     	 mov r2,#15
 1878 002a BA18     	 add r2,r7,r2
 1879 002c 1278     	 ldrb r2,[r2]
 1880 002e 9200     	 lsl r2,r2,#2
 1881 0030 1A70     	 strb r2,[r3]
 927:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1882              	 .loc 2 927 0
 1883 0032 7B68     	 ldr r3,[r7,#4]
 1884 0034 1B68     	 ldr r3,[r3]
 1885 0036 BB60     	 str r3,[r7,#8]
 928:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1886              	 .loc 2 928 0
 1887 0038 0E23     	 mov r3,#14
 1888 003a FB18     	 add r3,r7,r3
 1889 003c 1B78     	 ldrb r3,[r3]
 1890 003e 0F22     	 mov r2,#15
 1891 0040 9A40     	 lsl r2,r2,r3
 1892 0042 131C     	 mov r3,r2
 1893 0044 DA43     	 mvn r2,r3
 1894 0046 BB68     	 ldr r3,[r7,#8]
 1895 0048 1340     	 and r3,r2
 1896 004a BB60     	 str r3,[r7,#8]
 929:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 1897              	 .loc 2 929 0
 1898 004c BB1C     	 add r3,r7,#2
 1899 004e 1A78     	 ldrb r2,[r3]
 1900 0050 0E23     	 mov r3,#14
 1901 0052 FB18     	 add r3,r7,r3
 1902 0054 1B78     	 ldrb r3,[r3]
 1903 0056 9A40     	 lsl r2,r2,r3
 1904 0058 131C     	 mov r3,r2
 1905 005a BA68     	 ldr r2,[r7,#8]
 1906 005c 1343     	 orr r3,r2
 1907 005e BB60     	 str r3,[r7,#8]
 930:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 931:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1908              	 .loc 2 931 0
 1909 0060 7B68     	 ldr r3,[r7,#4]
 1910 0062 BA68     	 ldr r2,[r7,#8]
 1911 0064 1A60     	 str r2,[r3]
 932:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 933:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1912              	 .loc 2 933 0
 1913 0066 BD46     	 mov sp,r7
 1914 0068 04B0     	 add sp,sp,#16
 1915              	 
 1916 006a 80BD     	 pop {r7,pc}
 1917              	 .cfi_endproc
 1918              	.LFE120:
 1920              	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 1921              	 .align 2
 1922              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 1923              	 .code 16
 1924              	 .thumb_func
 1926              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 1927              	.LFB121:
 934:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 935:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to program timer repeat mode - Single shot vs repeat  */
 936:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice,
 937:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t mode)
 938:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1928              	 .loc 2 938 0
 1929              	 .cfi_startproc
 1930 0000 80B5     	 push {r7,lr}
 1931              	.LCFI84:
 1932              	 .cfi_def_cfa_offset 8
 1933              	 .cfi_offset 7,-8
 1934              	 .cfi_offset 14,-4
 1935 0002 84B0     	 sub sp,sp,#16
 1936              	.LCFI85:
 1937              	 .cfi_def_cfa_offset 24
 1938 0004 00AF     	 add r7,sp,#0
 1939              	.LCFI86:
 1940              	 .cfi_def_cfa_register 7
 1941 0006 7860     	 str r0,[r7,#4]
 1942 0008 0A1C     	 mov r2,r1
 1943 000a FB1C     	 add r3,r7,#3
 1944 000c 1A70     	 strb r2,[r3]
 939:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 940:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 941:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
 942:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode", 
 943:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 944:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == (mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT))));
 945:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 946:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1945              	 .loc 2 946 0
 1946 000e 7B68     	 ldr r3,[r7,#4]
 1947 0010 5B69     	 ldr r3,[r3,#20]
 1948 0012 FB60     	 str r3,[r7,#12]
 947:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 948:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 1949              	 .loc 2 948 0
 1950 0014 FB1C     	 add r3,r7,#3
 1951 0016 1B78     	 ldrb r3,[r3]
 1952 0018 002B     	 cmp r3,#0
 1953 001a 04D1     	 bne .L68
 949:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 950:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TSSM_Msk);
 1954              	 .loc 2 950 0
 1955 001c FB68     	 ldr r3,[r7,#12]
 1956 001e 0222     	 mov r2,#2
 1957 0020 9343     	 bic r3,r2
 1958 0022 FB60     	 str r3,[r7,#12]
 1959 0024 03E0     	 b .L69
 1960              	.L68:
 951:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 952:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 953:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 954:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TSSM_Msk;
 1961              	 .loc 2 954 0
 1962 0026 FB68     	 ldr r3,[r7,#12]
 1963 0028 0222     	 mov r2,#2
 1964 002a 1343     	 orr r3,r2
 1965 002c FB60     	 str r3,[r7,#12]
 1966              	.L69:
 955:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 956:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 957:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1967              	 .loc 2 957 0
 1968 002e 7B68     	 ldr r3,[r7,#4]
 1969 0030 FA68     	 ldr r2,[r7,#12]
 1970 0032 5A61     	 str r2,[r3,#20]
 958:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1971              	 .loc 2 958 0
 1972 0034 BD46     	 mov sp,r7
 1973 0036 04B0     	 add sp,sp,#16
 1974              	 
 1975 0038 80BD     	 pop {r7,pc}
 1976              	 .cfi_endproc
 1977              	.LFE121:
 1979 003a C046     	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 1980              	 .align 2
 1981              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 1982              	 .code 16
 1983              	 .thumb_func
 1985              	XMC_CCU8_SLICE_SetTimerCountingMode:
 1986              	.LFB122:
 959:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 960:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer counting mode  */
 961:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
 962:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1987              	 .loc 2 962 0
 1988              	 .cfi_startproc
 1989 0000 80B5     	 push {r7,lr}
 1990              	.LCFI87:
 1991              	 .cfi_def_cfa_offset 8
 1992              	 .cfi_offset 7,-8
 1993              	 .cfi_offset 14,-4
 1994 0002 84B0     	 sub sp,sp,#16
 1995              	.LCFI88:
 1996              	 .cfi_def_cfa_offset 24
 1997 0004 00AF     	 add r7,sp,#0
 1998              	.LCFI89:
 1999              	 .cfi_def_cfa_register 7
 2000 0006 7860     	 str r0,[r7,#4]
 2001 0008 0A1C     	 mov r2,r1
 2002 000a FB1C     	 add r3,r7,#3
 2003 000c 1A70     	 strb r2,[r3]
 963:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 964:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 965:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
 966:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Timer Count Mode",
 967:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA) ||\
 968:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA)));
 969:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 970:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2004              	 .loc 2 970 0
 2005 000e 7B68     	 ldr r3,[r7,#4]
 2006 0010 5B69     	 ldr r3,[r3,#20]
 2007 0012 FB60     	 str r3,[r7,#12]
 971:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 972:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == mode)
 2008              	 .loc 2 972 0
 2009 0014 FB1C     	 add r3,r7,#3
 2010 0016 1B78     	 ldrb r3,[r3]
 2011 0018 002B     	 cmp r3,#0
 2012 001a 04D1     	 bne .L71
 973:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 974:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TCM_Msk);
 2013              	 .loc 2 974 0
 2014 001c FB68     	 ldr r3,[r7,#12]
 2015 001e 0122     	 mov r2,#1
 2016 0020 9343     	 bic r3,r2
 2017 0022 FB60     	 str r3,[r7,#12]
 2018 0024 03E0     	 b .L72
 2019              	.L71:
 975:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 976:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 977:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 978:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TCM_Msk;
 2020              	 .loc 2 978 0
 2021 0026 FB68     	 ldr r3,[r7,#12]
 2022 0028 0122     	 mov r2,#1
 2023 002a 1343     	 orr r3,r2
 2024 002c FB60     	 str r3,[r7,#12]
 2025              	.L72:
 979:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 980:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 981:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2026              	 .loc 2 981 0
 2027 002e 7B68     	 ldr r3,[r7,#4]
 2028 0030 FA68     	 ldr r2,[r7,#12]
 2029 0032 5A61     	 str r2,[r3,#20]
 982:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2030              	 .loc 2 982 0
 2031 0034 BD46     	 mov sp,r7
 2032 0036 04B0     	 add sp,sp,#16
 2033              	 
 2034 0038 80BD     	 pop {r7,pc}
 2035              	 .cfi_endproc
 2036              	.LFE122:
 2038 003a C046     	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 2039              	 .align 2
 2040              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 2041              	 .code 16
 2042              	 .thumb_func
 2044              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 2045              	.LFB123:
 983:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 984:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs period match value of the timer  */
 985:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val)
 986:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2046              	 .loc 2 986 0
 2047              	 .cfi_startproc
 2048 0000 80B5     	 push {r7,lr}
 2049              	.LCFI90:
 2050              	 .cfi_def_cfa_offset 8
 2051              	 .cfi_offset 7,-8
 2052              	 .cfi_offset 14,-4
 2053 0002 82B0     	 sub sp,sp,#8
 2054              	.LCFI91:
 2055              	 .cfi_def_cfa_offset 16
 2056 0004 00AF     	 add r7,sp,#0
 2057              	.LCFI92:
 2058              	 .cfi_def_cfa_register 7
 2059 0006 7860     	 str r0,[r7,#4]
 2060 0008 0A1C     	 mov r2,r1
 2061 000a BB1C     	 add r3,r7,#2
 2062 000c 1A80     	 strh r2,[r3]
 987:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
 988:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PRS = (uint32_t) period_val;
 2063              	 .loc 2 988 0
 2064 000e BB1C     	 add r3,r7,#2
 2065 0010 1A88     	 ldrh r2,[r3]
 2066 0012 7B68     	 ldr r3,[r7,#4]
 2067 0014 5A63     	 str r2,[r3,#52]
 989:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2068              	 .loc 2 989 0
 2069 0016 BD46     	 mov sp,r7
 2070 0018 02B0     	 add sp,sp,#8
 2071              	 
 2072 001a 80BD     	 pop {r7,pc}
 2073              	 .cfi_endproc
 2074              	.LFE123:
 2076              	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2077              	 .align 2
 2078              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 2079              	 .code 16
 2080              	 .thumb_func
 2082              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 2083              	.LFB124:
 990:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 991:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves desired capture register value */
 992:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
 993:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2084              	 .loc 2 993 0
 2085              	 .cfi_startproc
 2086 0000 80B5     	 push {r7,lr}
 2087              	.LCFI93:
 2088              	 .cfi_def_cfa_offset 8
 2089              	 .cfi_offset 7,-8
 2090              	 .cfi_offset 14,-4
 2091 0002 82B0     	 sub sp,sp,#8
 2092              	.LCFI94:
 2093              	 .cfi_def_cfa_offset 16
 2094 0004 00AF     	 add r7,sp,#0
 2095              	.LCFI95:
 2096              	 .cfi_def_cfa_register 7
 2097 0006 7860     	 str r0,[r7,#4]
 2098 0008 0A1C     	 mov r2,r1
 2099 000a FB1C     	 add r3,r7,#3
 2100 000c 1A70     	 strb r2,[r3]
 994:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 995:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 996:../Libraries/XMCLib/src/xmc_ccu8.c ****   return(slice->CV[reg_num]);
 2101              	 .loc 2 996 0
 2102 000e FB1C     	 add r3,r7,#3
 2103 0010 1B78     	 ldrb r3,[r3]
 2104 0012 7A68     	 ldr r2,[r7,#4]
 2105 0014 1C33     	 add r3,r3,#28
 2106 0016 9B00     	 lsl r3,r3,#2
 2107 0018 D318     	 add r3,r2,r3
 2108 001a 5B68     	 ldr r3,[r3,#4]
 997:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2109              	 .loc 2 997 0
 2110 001c 181C     	 mov r0,r3
 2111 001e BD46     	 mov sp,r7
 2112 0020 02B0     	 add sp,sp,#8
 2113              	 
 2114 0022 80BD     	 pop {r7,pc}
 2115              	 .cfi_endproc
 2116              	.LFE124:
 2118              	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2119              	 .align 2
 2120              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 2121              	 .code 16
 2122              	 .thumb_func
 2124              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 2125              	.LFB125:
 998:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 999:../Libraries/XMCLib/src/xmc_ccu8.c **** /* @brief Retrieves the latest captured timer value */
1000:../Libraries/XMCLib/src/xmc_ccu8.c **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
1001:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
1002:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                            uint32_t *val_ptr)
1003:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2126              	 .loc 2 1003 0
 2127              	 .cfi_startproc
 2128 0000 80B5     	 push {r7,lr}
 2129              	.LCFI96:
 2130              	 .cfi_def_cfa_offset 8
 2131              	 .cfi_offset 7,-8
 2132              	 .cfi_offset 14,-4
 2133 0002 86B0     	 sub sp,sp,#24
 2134              	.LCFI97:
 2135              	 .cfi_def_cfa_offset 32
 2136 0004 00AF     	 add r7,sp,#0
 2137              	.LCFI98:
 2138              	 .cfi_def_cfa_register 7
 2139 0006 F860     	 str r0,[r7,#12]
 2140 0008 7A60     	 str r2,[r7,#4]
 2141 000a 0B23     	 mov r3,#11
 2142 000c FB18     	 add r3,r7,r3
 2143 000e 0A1C     	 add r2,r1,#0
 2144 0010 1A70     	 strb r2,[r3]
1004:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1005:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_STATUS_t retval;
1006:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t i;
1007:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t start;
1008:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t end;
1009:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1010:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlic
1011:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Register Set",
1012:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1013:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1014:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1015:../Libraries/XMCLib/src/xmc_ccu8.c ****   retval = XMC_CCU8_STATUS_ERROR;
 2145              	 .loc 2 1015 0
 2146 0012 1723     	 mov r3,#23
 2147 0014 FB18     	 add r3,r7,r3
 2148 0016 0122     	 mov r2,#1
 2149 0018 1A70     	 strb r2,[r3]
1016:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1017:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First check if extended capture mode is enabled */
1018:../Libraries/XMCLib/src/xmc_ccu8.c ****   if((slice->TC) & CCU8_CC8_TC_ECM_Msk)
 2150              	 .loc 2 1018 0
 2151 001a FB68     	 ldr r3,[r7,#12]
 2152 001c 5B69     	 ldr r3,[r3,#20]
 2153 001e 1022     	 mov r2,#16
 2154 0020 1340     	 and r3,r2
 2155 0022 08D0     	 beq .L77
1019:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1020:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
1021:../Libraries/XMCLib/src/xmc_ccu8.c ****     start = 0U;
 2156              	 .loc 2 1021 0
 2157 0024 1523     	 mov r3,#21
 2158 0026 FB18     	 add r3,r7,r3
 2159 0028 0022     	 mov r2,#0
 2160 002a 1A70     	 strb r2,[r3]
1022:../Libraries/XMCLib/src/xmc_ccu8.c ****     end = XMC_CCU8_NUM_SLICES_PER_MODULE;
 2161              	 .loc 2 1022 0
 2162 002c 1423     	 mov r3,#20
 2163 002e FB18     	 add r3,r7,r3
 2164 0030 0422     	 mov r2,#4
 2165 0032 1A70     	 strb r2,[r3]
 2166 0034 15E0     	 b .L78
 2167              	.L77:
1023:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1024:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1025:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1026:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode is not enabled */
1027:../Libraries/XMCLib/src/xmc_ccu8.c ****     if(set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)
 2168              	 .loc 2 1027 0
 2169 0036 0B23     	 mov r3,#11
 2170 0038 FB18     	 add r3,r7,r3
 2171 003a 1B78     	 ldrb r3,[r3]
 2172 003c 012B     	 cmp r3,#1
 2173 003e 08D1     	 bne .L79
1028:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1029:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2174              	 .loc 2 1029 0
 2175 0040 1523     	 mov r3,#21
 2176 0042 FB18     	 add r3,r7,r3
 2177 0044 0222     	 mov r2,#2
 2178 0046 1A70     	 strb r2,[r3]
1030:../Libraries/XMCLib/src/xmc_ccu8.c ****       end   = (uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE;
 2179              	 .loc 2 1030 0
 2180 0048 1423     	 mov r3,#20
 2181 004a FB18     	 add r3,r7,r3
 2182 004c 0422     	 mov r2,#4
 2183 004e 1A70     	 strb r2,[r3]
 2184 0050 07E0     	 b .L78
 2185              	.L79:
1031:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1032:../Libraries/XMCLib/src/xmc_ccu8.c ****     else
1033:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1034:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = 0U;
 2186              	 .loc 2 1034 0
 2187 0052 1523     	 mov r3,#21
 2188 0054 FB18     	 add r3,r7,r3
 2189 0056 0022     	 mov r2,#0
 2190 0058 1A70     	 strb r2,[r3]
1035:../Libraries/XMCLib/src/xmc_ccu8.c ****       end = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2191              	 .loc 2 1035 0
 2192 005a 1423     	 mov r3,#20
 2193 005c FB18     	 add r3,r7,r3
 2194 005e 0222     	 mov r2,#2
 2195 0060 1A70     	 strb r2,[r3]
 2196              	.L78:
1036:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1037:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1038:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   for(i=start; i<end; i++)
 2197              	 .loc 2 1039 0
 2198 0062 1623     	 mov r3,#22
 2199 0064 FB18     	 add r3,r7,r3
 2200 0066 1522     	 mov r2,#21
 2201 0068 BA18     	 add r2,r7,r2
 2202 006a 1278     	 ldrb r2,[r2]
 2203 006c 1A70     	 strb r2,[r3]
 2204 006e 21E0     	 b .L80
 2205              	.L83:
1040:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1041:../Libraries/XMCLib/src/xmc_ccu8.c ****     if( (slice->CV[i]) & CCU8_CC8_CV_FFL_Msk )
 2206              	 .loc 2 1041 0
 2207 0070 1623     	 mov r3,#22
 2208 0072 FB18     	 add r3,r7,r3
 2209 0074 1B78     	 ldrb r3,[r3]
 2210 0076 FA68     	 ldr r2,[r7,#12]
 2211 0078 1C33     	 add r3,r3,#28
 2212 007a 9B00     	 lsl r3,r3,#2
 2213 007c D318     	 add r3,r2,r3
 2214 007e 5A68     	 ldr r2,[r3,#4]
 2215 0080 8023     	 mov r3,#128
 2216 0082 5B03     	 lsl r3,r3,#13
 2217 0084 1340     	 and r3,r2
 2218 0086 0ED0     	 beq .L81
1042:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1043:../Libraries/XMCLib/src/xmc_ccu8.c ****       *val_ptr = slice->CV[i];
 2219              	 .loc 2 1043 0
 2220 0088 1623     	 mov r3,#22
 2221 008a FB18     	 add r3,r7,r3
 2222 008c 1B78     	 ldrb r3,[r3]
 2223 008e FA68     	 ldr r2,[r7,#12]
 2224 0090 1C33     	 add r3,r3,#28
 2225 0092 9B00     	 lsl r3,r3,#2
 2226 0094 D318     	 add r3,r2,r3
 2227 0096 5A68     	 ldr r2,[r3,#4]
 2228 0098 7B68     	 ldr r3,[r7,#4]
 2229 009a 1A60     	 str r2,[r3]
1044:../Libraries/XMCLib/src/xmc_ccu8.c ****       retval = XMC_CCU8_STATUS_OK;
 2230              	 .loc 2 1044 0
 2231 009c 1723     	 mov r3,#23
 2232 009e FB18     	 add r3,r7,r3
 2233 00a0 0022     	 mov r2,#0
 2234 00a2 1A70     	 strb r2,[r3]
1045:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2235              	 .loc 2 1045 0
 2236 00a4 0EE0     	 b .L82
 2237              	.L81:
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2238              	 .loc 2 1039 0 discriminator 2
 2239 00a6 1623     	 mov r3,#22
 2240 00a8 FB18     	 add r3,r7,r3
 2241 00aa 1A78     	 ldrb r2,[r3]
 2242 00ac 1623     	 mov r3,#22
 2243 00ae FB18     	 add r3,r7,r3
 2244 00b0 0132     	 add r2,r2,#1
 2245 00b2 1A70     	 strb r2,[r3]
 2246              	.L80:
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2247              	 .loc 2 1039 0 is_stmt 0 discriminator 1
 2248 00b4 1623     	 mov r3,#22
 2249 00b6 FA18     	 add r2,r7,r3
 2250 00b8 1423     	 mov r3,#20
 2251 00ba FB18     	 add r3,r7,r3
 2252 00bc 1278     	 ldrb r2,[r2]
 2253 00be 1B78     	 ldrb r3,[r3]
 2254 00c0 9A42     	 cmp r2,r3
 2255 00c2 D5D3     	 bcc .L83
 2256              	.L82:
1046:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1047:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1048:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1049:../Libraries/XMCLib/src/xmc_ccu8.c ****   return retval;
 2257              	 .loc 2 1049 0 is_stmt 1
 2258 00c4 1723     	 mov r3,#23
 2259 00c6 FB18     	 add r3,r7,r3
 2260 00c8 1B78     	 ldrb r3,[r3]
1050:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2261              	 .loc 2 1050 0
 2262 00ca 181C     	 mov r0,r3
 2263 00cc BD46     	 mov sp,r7
 2264 00ce 06B0     	 add sp,sp,#24
 2265              	 
 2266 00d0 80BD     	 pop {r7,pc}
 2267              	 .cfi_endproc
 2268              	.LFE125:
 2270 00d2 C046     	 .section .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo,"ax",%progbits
 2271              	 .align 2
 2272              	 .global XMC_CCU8_SLICE_GetCapturedValueFromFifo
 2273              	 .code 16
 2274              	 .thumb_func
 2276              	XMC_CCU8_SLICE_GetCapturedValueFromFifo:
 2277              	.LFB126:
1051:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1052:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1053:../Libraries/XMCLib/src/xmc_ccu8.c **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1054:../Libraries/XMCLib/src/xmc_ccu8.c **** {
1055:../Libraries/XMCLib/src/xmc_ccu8.c ****   int32_t  cap;
1056:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t extracted_slice;
1057:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1058:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidModule(modu
1059:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1060:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First read the global fifo register */
1061:../Libraries/XMCLib/src/xmc_ccu8.c ****   cap = (int32_t) module->ECRD;
1062:../Libraries/XMCLib/src/xmc_ccu8.c ****     
1063:../Libraries/XMCLib/src/xmc_ccu8.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU8_ECRD_SPTR_Msk)) >> CCU8_ECRD_SPTR_Pos;
1064:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1065:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Return captured result only if it were applicable to this slice */
1066:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(extracted_slice != ((uint32_t)slice_number))
1067:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1068:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = -1;
1069:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1070:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1071:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (cap);
1072:../Libraries/XMCLib/src/xmc_ccu8.c **** }
1073:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
1074:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1075:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU
1076:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2278              	 .loc 2 1076 0
 2279              	 .cfi_startproc
 2280 0000 80B5     	 push {r7,lr}
 2281              	.LCFI99:
 2282              	 .cfi_def_cfa_offset 8
 2283              	 .cfi_offset 7,-8
 2284              	 .cfi_offset 14,-4
 2285 0002 84B0     	 sub sp,sp,#16
 2286              	.LCFI100:
 2287              	 .cfi_def_cfa_offset 24
 2288 0004 00AF     	 add r7,sp,#0
 2289              	.LCFI101:
 2290              	 .cfi_def_cfa_register 7
 2291 0006 7860     	 str r0,[r7,#4]
 2292 0008 0A1C     	 mov r2,r1
 2293 000a FB1C     	 add r3,r7,#3
 2294 000c 1A70     	 strb r2,[r3]
1077:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cap;
1078:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1079:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1080:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1081:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1082:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1083:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1084:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_CAP_REG_SET_LOW == set)
 2295              	 .loc 2 1084 0
 2296 000e FB1C     	 add r3,r7,#3
 2297 0010 1B78     	 ldrb r3,[r3]
 2298 0012 002B     	 cmp r3,#0
 2299 0014 04D1     	 bne .L86
1085:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1086:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  cap = slice->ECRD0;
 2300              	 .loc 2 1086 0
 2301 0016 7B68     	 ldr r3,[r7,#4]
 2302 0018 B822     	 mov r2,#184
 2303 001a 9B58     	 ldr r3,[r3,r2]
 2304 001c FB60     	 str r3,[r7,#12]
 2305 001e 03E0     	 b .L87
 2306              	.L86:
1087:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1088:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1089:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1090:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  cap = slice->ECRD1;
 2307              	 .loc 2 1090 0
 2308 0020 7B68     	 ldr r3,[r7,#4]
 2309 0022 BC22     	 mov r2,#188
 2310 0024 9B58     	 ldr r3,[r3,r2]
 2311 0026 FB60     	 str r3,[r7,#12]
 2312              	.L87:
1091:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1092:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1093:../Libraries/XMCLib/src/xmc_ccu8.c ****   return cap;
 2313              	 .loc 2 1093 0
 2314 0028 FB68     	 ldr r3,[r7,#12]
1094:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2315              	 .loc 2 1094 0
 2316 002a 181C     	 mov r0,r3
 2317 002c BD46     	 mov sp,r7
 2318 002e 04B0     	 add sp,sp,#16
 2319              	 
 2320 0030 80BD     	 pop {r7,pc}
 2321              	 .cfi_endproc
 2322              	.LFE126:
 2324 0032 C046     	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 2325              	 .align 2
 2326              	 .global XMC_CCU8_SLICE_EnableDithering
 2327              	 .code 16
 2328              	 .thumb_func
 2330              	XMC_CCU8_SLICE_EnableDithering:
 2331              	.LFB127:
1095:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
1096:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1097:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Enables PWM dithering feature */
1098:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
1099:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool period_dither,
1100:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool duty_dither,
1101:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const uint8_t spread)
1102:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2332              	 .loc 2 1102 0
 2333              	 .cfi_startproc
 2334 0000 90B5     	 push {r4,r7,lr}
 2335              	.LCFI102:
 2336              	 .cfi_def_cfa_offset 12
 2337              	 .cfi_offset 4,-12
 2338              	 .cfi_offset 7,-8
 2339              	 .cfi_offset 14,-4
 2340 0002 85B0     	 sub sp,sp,#20
 2341              	.LCFI103:
 2342              	 .cfi_def_cfa_offset 32
 2343 0004 00AF     	 add r7,sp,#0
 2344              	.LCFI104:
 2345              	 .cfi_def_cfa_register 7
 2346 0006 7860     	 str r0,[r7,#4]
 2347 0008 0C1C     	 mov r4,r1
 2348 000a 101C     	 mov r0,r2
 2349 000c 191C     	 mov r1,r3
 2350 000e FB1C     	 add r3,r7,#3
 2351 0010 221C     	 add r2,r4,#0
 2352 0012 1A70     	 strb r2,[r3]
 2353 0014 BB1C     	 add r3,r7,#2
 2354 0016 021C     	 add r2,r0,#0
 2355 0018 1A70     	 strb r2,[r3]
 2356 001a 7B1C     	 add r3,r7,#1
 2357 001c 0A1C     	 add r2,r1,#0
 2358 001e 1A70     	 strb r2,[r3]
1103:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
1104:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1105:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1106:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1107:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2359              	 .loc 2 1107 0
 2360 0020 7B68     	 ldr r3,[r7,#4]
 2361 0022 5B69     	 ldr r3,[r3,#20]
 2362 0024 FB60     	 str r3,[r7,#12]
1108:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
 2363              	 .loc 2 1108 0
 2364 0026 FB68     	 ldr r3,[r7,#12]
 2365 0028 104A     	 ldr r2,.L92
 2366 002a 1340     	 and r3,r2
 2367 002c FB60     	 str r3,[r7,#12]
1109:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1110:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(true == period_dither)
 2368              	 .loc 2 1110 0
 2369 002e FB1C     	 add r3,r7,#3
 2370 0030 1B78     	 ldrb r3,[r3]
 2371 0032 002B     	 cmp r3,#0
 2372 0034 04D0     	 beq .L90
1111:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1112:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_PERIOD_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2373              	 .loc 2 1112 0
 2374 0036 FB68     	 ldr r3,[r7,#12]
 2375 0038 8022     	 mov r2,#128
 2376 003a 9201     	 lsl r2,r2,#6
 2377 003c 1343     	 orr r3,r2
 2378 003e FB60     	 str r3,[r7,#12]
 2379              	.L90:
1113:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1114:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(true == duty_dither)
 2380              	 .loc 2 1114 0
 2381 0040 BB1C     	 add r3,r7,#2
 2382 0042 1B78     	 ldrb r3,[r3]
 2383 0044 002B     	 cmp r3,#0
 2384 0046 04D0     	 beq .L91
1115:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1116:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2385              	 .loc 2 1116 0
 2386 0048 FB68     	 ldr r3,[r7,#12]
 2387 004a 8022     	 mov r2,#128
 2388 004c D201     	 lsl r2,r2,#7
 2389 004e 1343     	 orr r3,r2
 2390 0050 FB60     	 str r3,[r7,#12]
 2391              	.L91:
1117:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1118:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1119:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2392              	 .loc 2 1119 0
 2393 0052 7B68     	 ldr r3,[r7,#4]
 2394 0054 FA68     	 ldr r2,[r7,#12]
 2395 0056 5A61     	 str r2,[r3,#20]
1120:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1121:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_SetDitherCompareValue((XMC_CCU8_SLICE_t *)slice, (uint8_t)spread);
 2396              	 .loc 2 1121 0
 2397 0058 7A68     	 ldr r2,[r7,#4]
 2398 005a 7B1C     	 add r3,r7,#1
 2399 005c 1B78     	 ldrb r3,[r3]
 2400 005e 101C     	 mov r0,r2
 2401 0060 191C     	 mov r1,r3
 2402 0062 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDitherCompareValue
1122:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2403              	 .loc 2 1122 0
 2404 0066 BD46     	 mov sp,r7
 2405 0068 05B0     	 add sp,sp,#20
 2406              	 
 2407 006a 90BD     	 pop {r4,r7,pc}
 2408              	.L93:
 2409              	 .align 2
 2410              	.L92:
 2411 006c FF9FFFFF 	 .word -24577
 2412              	 .cfi_endproc
 2413              	.LFE127:
 2415              	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 2416              	 .align 2
 2417              	 .global XMC_CCU8_SLICE_SetPrescaler
 2418              	 .code 16
 2419              	 .thumb_func
 2421              	XMC_CCU8_SLICE_SetPrescaler:
 2422              	.LFB128:
1123:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1124:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs Pre-scaler divider  */
1125:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const uint8_t div_val)
1126:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2423              	 .loc 2 1126 0
 2424              	 .cfi_startproc
 2425 0000 80B5     	 push {r7,lr}
 2426              	.LCFI105:
 2427              	 .cfi_def_cfa_offset 8
 2428              	 .cfi_offset 7,-8
 2429              	 .cfi_offset 14,-4
 2430 0002 84B0     	 sub sp,sp,#16
 2431              	.LCFI106:
 2432              	 .cfi_def_cfa_offset 24
 2433 0004 00AF     	 add r7,sp,#0
 2434              	.LCFI107:
 2435              	 .cfi_def_cfa_register 7
 2436 0006 7860     	 str r0,[r7,#4]
 2437 0008 0A1C     	 mov r2,r1
 2438 000a FB1C     	 add r3,r7,#3
 2439 000c 1A70     	 strb r2,[r3]
1127:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t fpc;
1128:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1129:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1130:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1131:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* If the prescaler is not running, update directly the divider*/
1132:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc = slice->FPC;
 2440              	 .loc 2 1132 0
 2441 000e 7B68     	 ldr r3,[r7,#4]
 2442 0010 9B6A     	 ldr r3,[r3,#40]
 2443 0012 FB60     	 str r3,[r7,#12]
1133:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc &= ~((uint32_t) CCU8_CC8_FPC_PVAL_Msk);
 2444              	 .loc 2 1133 0
 2445 0014 FB68     	 ldr r3,[r7,#12]
 2446 0016 094A     	 ldr r2,.L95
 2447 0018 1340     	 and r3,r2
 2448 001a FB60     	 str r3,[r7,#12]
1134:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc |= ((uint32_t) div_val) << CCU8_CC8_FPC_PVAL_Pos;
 2449              	 .loc 2 1134 0
 2450 001c FB1C     	 add r3,r7,#3
 2451 001e 1B78     	 ldrb r3,[r3]
 2452 0020 1B02     	 lsl r3,r3,#8
 2453 0022 FA68     	 ldr r2,[r7,#12]
 2454 0024 1343     	 orr r3,r2
 2455 0026 FB60     	 str r3,[r7,#12]
1135:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPC = fpc;
 2456              	 .loc 2 1135 0
 2457 0028 7B68     	 ldr r3,[r7,#4]
 2458 002a FA68     	 ldr r2,[r7,#12]
 2459 002c 9A62     	 str r2,[r3,#40]
1136:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1137:../Libraries/XMCLib/src/xmc_ccu8.c ****   /*
1138:../Libraries/XMCLib/src/xmc_ccu8.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1139:../Libraries/XMCLib/src/xmc_ccu8.c ****    * compare value.
1140:../Libraries/XMCLib/src/xmc_ccu8.c ****    */
1141:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) div_val;
 2460              	 .loc 2 1141 0
 2461 002e FB1C     	 add r3,r7,#3
 2462 0030 1A78     	 ldrb r2,[r3]
 2463 0032 7B68     	 ldr r3,[r7,#4]
 2464 0034 5A62     	 str r2,[r3,#36]
1142:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2465              	 .loc 2 1142 0
 2466 0036 BD46     	 mov sp,r7
 2467 0038 04B0     	 add sp,sp,#16
 2468              	 
 2469 003a 80BD     	 pop {r7,pc}
 2470              	.L96:
 2471              	 .align 2
 2472              	.L95:
 2473 003c FFF0FFFF 	 .word -3841
 2474              	 .cfi_endproc
 2475              	.LFE128:
 2477              	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 2478              	 .align 2
 2479              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 2480              	 .code 16
 2481              	 .thumb_func
 2483              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 2484              	.LFB129:
1143:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1144:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer compare match value for channel 1 or 2 */
1145:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1146:../Libraries/XMCLib/src/xmc_ccu8.c ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1147:../Libraries/XMCLib/src/xmc_ccu8.c ****                                          const uint16_t compare_val)
1148:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2485              	 .loc 2 1148 0
 2486              	 .cfi_startproc
 2487 0000 80B5     	 push {r7,lr}
 2488              	.LCFI108:
 2489              	 .cfi_def_cfa_offset 8
 2490              	 .cfi_offset 7,-8
 2491              	 .cfi_offset 14,-4
 2492 0002 82B0     	 sub sp,sp,#8
 2493              	.LCFI109:
 2494              	 .cfi_def_cfa_offset 16
 2495 0004 00AF     	 add r7,sp,#0
 2496              	.LCFI110:
 2497              	 .cfi_def_cfa_register 7
 2498 0006 7860     	 str r0,[r7,#4]
 2499 0008 081C     	 mov r0,r1
 2500 000a 111C     	 mov r1,r2
 2501 000c FB1C     	 add r3,r7,#3
 2502 000e 021C     	 add r2,r0,#0
 2503 0010 1A70     	 strb r2,[r3]
 2504 0012 3B1C     	 mov r3,r7
 2505 0014 0A1C     	 add r2,r1,#0
 2506 0016 1A80     	 strh r2,[r3]
1149:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1150:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANN
1151:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1152:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2507              	 .loc 2 1152 0
 2508 0018 FB1C     	 add r3,r7,#3
 2509 001a 1B78     	 ldrb r3,[r3]
 2510 001c 002B     	 cmp r3,#0
 2511 001e 04D1     	 bne .L98
1153:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1154:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR1S = (uint32_t) compare_val;
 2512              	 .loc 2 1154 0
 2513 0020 3B1C     	 mov r3,r7
 2514 0022 1A88     	 ldrh r2,[r3]
 2515 0024 7B68     	 ldr r3,[r7,#4]
 2516 0026 DA63     	 str r2,[r3,#60]
 2517 0028 03E0     	 b .L97
 2518              	.L98:
1155:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1156:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1157:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1158:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR2S = (uint32_t) compare_val;
 2519              	 .loc 2 1158 0
 2520 002a 3B1C     	 mov r3,r7
 2521 002c 1A88     	 ldrh r2,[r3]
 2522 002e 7B68     	 ldr r3,[r7,#4]
 2523 0030 5A64     	 str r2,[r3,#68]
 2524              	.L97:
1159:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1160:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2525              	 .loc 2 1160 0
 2526 0032 BD46     	 mov sp,r7
 2527 0034 02B0     	 add sp,sp,#8
 2528              	 
 2529 0036 80BD     	 pop {r7,pc}
 2530              	 .cfi_endproc
 2531              	.LFE129:
 2533              	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 2534              	 .align 2
 2535              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 2536              	 .code 16
 2537              	 .thumb_func
 2539              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 2540              	.LFB130:
1161:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1162:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Returns the timer compare match value for channel 1 or 2 */
1163:../Libraries/XMCLib/src/xmc_ccu8.c **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
1164:../Libraries/XMCLib/src/xmc_ccu8.c ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel)
1165:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2541              	 .loc 2 1165 0
 2542              	 .cfi_startproc
 2543 0000 80B5     	 push {r7,lr}
 2544              	.LCFI111:
 2545              	 .cfi_def_cfa_offset 8
 2546              	 .cfi_offset 7,-8
 2547              	 .cfi_offset 14,-4
 2548 0002 84B0     	 sub sp,sp,#16
 2549              	.LCFI112:
 2550              	 .cfi_def_cfa_offset 24
 2551 0004 00AF     	 add r7,sp,#0
 2552              	.LCFI113:
 2553              	 .cfi_def_cfa_register 7
 2554 0006 7860     	 str r0,[r7,#4]
 2555 0008 0A1C     	 mov r2,r1
 2556 000a FB1C     	 add r3,r7,#3
 2557 000c 1A70     	 strb r2,[r3]
1166:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint16_t compare_value;
1167:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1168:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1169:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(ch
1170:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1171:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2558              	 .loc 2 1171 0
 2559 000e FB1C     	 add r3,r7,#3
 2560 0010 1B78     	 ldrb r3,[r3]
 2561 0012 002B     	 cmp r3,#0
 2562 0014 05D1     	 bne .L101
1172:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1173:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR1;
 2563              	 .loc 2 1173 0
 2564 0016 7B68     	 ldr r3,[r7,#4]
 2565 0018 9A6B     	 ldr r2,[r3,#56]
 2566 001a 0E23     	 mov r3,#14
 2567 001c FB18     	 add r3,r7,r3
 2568 001e 1A80     	 strh r2,[r3]
 2569 0020 04E0     	 b .L102
 2570              	.L101:
1174:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1175:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1176:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1177:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR2;
 2571              	 .loc 2 1177 0
 2572 0022 7B68     	 ldr r3,[r7,#4]
 2573 0024 1A6C     	 ldr r2,[r3,#64]
 2574 0026 0E23     	 mov r3,#14
 2575 0028 FB18     	 add r3,r7,r3
 2576 002a 1A80     	 strh r2,[r3]
 2577              	.L102:
1178:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1179:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1180:../Libraries/XMCLib/src/xmc_ccu8.c ****   return(compare_value);
 2578              	 .loc 2 1180 0
 2579 002c 0E23     	 mov r3,#14
 2580 002e FB18     	 add r3,r7,r3
 2581 0030 1B88     	 ldrh r3,[r3]
1181:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2582              	 .loc 2 1181 0
 2583 0032 181C     	 mov r0,r3
 2584 0034 BD46     	 mov sp,r7
 2585 0036 04B0     	 add sp,sp,#16
 2586              	 
 2587 0038 80BD     	 pop {r7,pc}
 2588              	 .cfi_endproc
 2589              	.LFE130:
 2591 003a C046     	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 2592              	 .align 2
 2593              	 .global XMC_CCU8_SLICE_SetInterruptNode
 2594              	 .code 16
 2595              	 .thumb_func
 2597              	XMC_CCU8_SLICE_SetInterruptNode:
 2598              	.LFB131:
1182:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1183:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Binds a capcom event to an NVIC node  */
1184:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
1185:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
1186:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_SR_ID_t sr)
1187:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2599              	 .loc 2 1187 0
 2600              	 .cfi_startproc
 2601 0000 80B5     	 push {r7,lr}
 2602              	.LCFI114:
 2603              	 .cfi_def_cfa_offset 8
 2604              	 .cfi_offset 7,-8
 2605              	 .cfi_offset 14,-4
 2606 0002 86B0     	 sub sp,sp,#24
 2607              	.LCFI115:
 2608              	 .cfi_def_cfa_offset 32
 2609 0004 00AF     	 add r7,sp,#0
 2610              	.LCFI116:
 2611              	 .cfi_def_cfa_register 7
 2612 0006 7860     	 str r0,[r7,#4]
 2613 0008 081C     	 mov r0,r1
 2614 000a 111C     	 mov r1,r2
 2615 000c FB1C     	 add r3,r7,#3
 2616 000e 021C     	 add r2,r0,#0
 2617 0010 1A70     	 strb r2,[r3]
 2618 0012 BB1C     	 add r3,r7,#2
 2619 0014 0A1C     	 add r2,r1,#0
 2620 0016 1A70     	 strb r2,[r3]
1188:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t srs;
1189:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t mask;
1190:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t pos;
1191:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1192:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1193:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU8_SLICE_CHECK_SR_ID(sr));
1194:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event)
1195:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1196:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs = slice->SRS;
 2621              	 .loc 2 1196 0
 2622 0018 7B68     	 ldr r3,[r7,#4]
 2623 001a A822     	 mov r2,#168
 2624 001c 9B58     	 ldr r3,[r3,r2]
 2625 001e FB60     	 str r3,[r7,#12]
1197:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1198:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch(event)
 2626              	 .loc 2 1198 0
 2627 0020 FB1C     	 add r3,r7,#3
 2628 0022 1B78     	 ldrb r3,[r3]
 2629 0024 092B     	 cmp r3,#9
 2630 0026 1FD8     	 bhi .L105
 2631 0028 9A00     	 lsl r2,r3,#2
 2632 002a 1C4B     	 ldr r3,.L113
 2633 002c D318     	 add r3,r2,r3
 2634 002e 1B68     	 ldr r3,[r3]
 2635 0030 9F46     	 mov pc,r3
 2636              	 .section .rodata.XMC_CCU8_SLICE_SetInterruptNode,"a",%progbits
 2637              	 .align 2
 2638              	.L107:
 2639 0000 32000000 	 .word .L106
 2640 0004 32000000 	 .word .L106
 2641 0008 3C000000 	 .word .L108
 2642 000c 3C000000 	 .word .L108
 2643 0010 46000000 	 .word .L109
 2644 0014 46000000 	 .word .L109
 2645 0018 68000000 	 .word .L105
 2646 001c 68000000 	 .word .L105
 2647 0020 50000000 	 .word .L110
 2648 0024 5C000000 	 .word .L111
 2649              	 .section .text.XMC_CCU8_SLICE_SetInterruptNode
 2650              	.L106:
1199:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1200:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH:
1201:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH:
1202:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_POSR_Msk);
 2651              	 .loc 2 1202 0
 2652 0032 0323     	 mov r3,#3
 2653 0034 7B61     	 str r3,[r7,#20]
1203:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_POSR_Pos;
 2654              	 .loc 2 1203 0
 2655 0036 0023     	 mov r3,#0
 2656 0038 3B61     	 str r3,[r7,#16]
1204:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2657              	 .loc 2 1204 0
 2658 003a 1BE0     	 b .L112
 2659              	.L108:
1205:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1206:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1:
1207:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1:
1208:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM1SR_Msk);
 2660              	 .loc 2 1208 0
 2661 003c 0C23     	 mov r3,#12
 2662 003e 7B61     	 str r3,[r7,#20]
1209:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM1SR_Pos;
 2663              	 .loc 2 1209 0
 2664 0040 0223     	 mov r3,#2
 2665 0042 3B61     	 str r3,[r7,#16]
1210:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2666              	 .loc 2 1210 0
 2667 0044 16E0     	 b .L112
 2668              	.L109:
1211:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1212:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2:
1213:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2:
1214:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM2SR_Msk);
 2669              	 .loc 2 1214 0
 2670 0046 3023     	 mov r3,#48
 2671 0048 7B61     	 str r3,[r7,#20]
1215:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM2SR_Pos;
 2672              	 .loc 2 1215 0
 2673 004a 0423     	 mov r3,#4
 2674 004c 3B61     	 str r3,[r7,#16]
1216:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2675              	 .loc 2 1216 0
 2676 004e 11E0     	 b .L112
 2677              	.L110:
1217:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1218:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT0:
1219:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E0SR_Msk);
 2678              	 .loc 2 1219 0
 2679 0050 C023     	 mov r3,#192
 2680 0052 9B00     	 lsl r3,r3,#2
 2681 0054 7B61     	 str r3,[r7,#20]
1220:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E0SR_Pos;
 2682              	 .loc 2 1220 0
 2683 0056 0823     	 mov r3,#8
 2684 0058 3B61     	 str r3,[r7,#16]
1221:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2685              	 .loc 2 1221 0
 2686 005a 0BE0     	 b .L112
 2687              	.L111:
1222:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1223:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT1:
1224:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E1SR_Msk);
 2688              	 .loc 2 1224 0
 2689 005c C023     	 mov r3,#192
 2690 005e 1B01     	 lsl r3,r3,#4
 2691 0060 7B61     	 str r3,[r7,#20]
1225:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E1SR_Pos;
 2692              	 .loc 2 1225 0
 2693 0062 0A23     	 mov r3,#10
 2694 0064 3B61     	 str r3,[r7,#16]
1226:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2695              	 .loc 2 1226 0
 2696 0066 05E0     	 b .L112
 2697              	.L105:
1227:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1228:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
1229:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E2SR_Msk);
 2698              	 .loc 2 1229 0
 2699 0068 C023     	 mov r3,#192
 2700 006a 9B01     	 lsl r3,r3,#6
 2701 006c 7B61     	 str r3,[r7,#20]
1230:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E2SR_Pos;
 2702              	 .loc 2 1230 0
 2703 006e 0C23     	 mov r3,#12
 2704 0070 3B61     	 str r3,[r7,#16]
1231:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2705              	 .loc 2 1231 0
 2706 0072 C046     	 mov r8,r8
 2707              	.L112:
1232:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1233:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1234:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs &= ~mask;
 2708              	 .loc 2 1234 0
 2709 0074 7B69     	 ldr r3,[r7,#20]
 2710 0076 DA43     	 mvn r2,r3
 2711 0078 FB68     	 ldr r3,[r7,#12]
 2712 007a 1340     	 and r3,r2
 2713 007c FB60     	 str r3,[r7,#12]
1235:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs |= (uint32_t)sr << pos;
 2714              	 .loc 2 1235 0
 2715 007e BB1C     	 add r3,r7,#2
 2716 0080 1A78     	 ldrb r2,[r3]
 2717 0082 3B69     	 ldr r3,[r7,#16]
 2718 0084 9A40     	 lsl r2,r2,r3
 2719 0086 131C     	 mov r3,r2
 2720 0088 FA68     	 ldr r2,[r7,#12]
 2721 008a 1343     	 orr r3,r2
 2722 008c FB60     	 str r3,[r7,#12]
1236:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1237:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->SRS = srs;
 2723              	 .loc 2 1237 0
 2724 008e 7B68     	 ldr r3,[r7,#4]
 2725 0090 A821     	 mov r1,#168
 2726 0092 FA68     	 ldr r2,[r7,#12]
 2727 0094 5A50     	 str r2,[r3,r1]
1238:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2728              	 .loc 2 1238 0
 2729 0096 BD46     	 mov sp,r7
 2730 0098 06B0     	 add sp,sp,#24
 2731              	 
 2732 009a 80BD     	 pop {r7,pc}
 2733              	.L114:
 2734              	 .align 2
 2735              	.L113:
 2736 009c 00000000 	 .word .L107
 2737              	 .cfi_endproc
 2738              	.LFE131:
 2740              	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 2741              	 .align 2
 2742              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 2743              	 .code 16
 2744              	 .thumb_func
 2746              	XMC_CCU8_SLICE_SetPassiveLevel:
 2747              	.LFB132:
1239:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1240:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Asserts passive level for the slice output */
1241:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
1242:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
1243:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1244:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2748              	 .loc 2 1244 0
 2749              	 .cfi_startproc
 2750 0000 80B5     	 push {r7,lr}
 2751              	.LCFI117:
 2752              	 .cfi_def_cfa_offset 8
 2753              	 .cfi_offset 7,-8
 2754              	 .cfi_offset 14,-4
 2755 0002 84B0     	 sub sp,sp,#16
 2756              	.LCFI118:
 2757              	 .cfi_def_cfa_offset 24
 2758 0004 00AF     	 add r7,sp,#0
 2759              	.LCFI119:
 2760              	 .cfi_def_cfa_register 7
 2761 0006 7860     	 str r0,[r7,#4]
 2762 0008 081C     	 mov r0,r1
 2763 000a 111C     	 mov r1,r2
 2764 000c FB1C     	 add r3,r7,#3
 2765 000e 021C     	 add r2,r0,#0
 2766 0010 1A70     	 strb r2,[r3]
 2767 0012 BB1C     	 add r3,r7,#2
 2768 0014 0A1C     	 add r2,r1,#0
 2769 0016 1A70     	 strb r2,[r3]
1245:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t psl;
1246:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1247:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1248:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Output", XMC_CCU8_SLICE_CHECK_OUTPUT(out
1249:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Passive Level",
1250:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW) ||\
1251:../Libraries/XMCLib/src/xmc_ccu8.c ****               (level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH)));
1252:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1253:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl = slice->PSL;
 2770              	 .loc 2 1253 0
 2771 0018 7B68     	 ldr r3,[r7,#4]
 2772 001a 9B69     	 ldr r3,[r3,#24]
 2773 001c FB60     	 str r3,[r7,#12]
1254:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1255:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl &= ~((uint32_t) out);
 2774              	 .loc 2 1255 0
 2775 001e FB1C     	 add r3,r7,#3
 2776 0020 1B78     	 ldrb r3,[r3]
 2777 0022 DA43     	 mvn r2,r3
 2778 0024 FB68     	 ldr r3,[r7,#12]
 2779 0026 1340     	 and r3,r2
 2780 0028 FB60     	 str r3,[r7,#12]
1256:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl |= (uint32_t) level << ((uint32_t)out >> 1U);
 2781              	 .loc 2 1256 0
 2782 002a BB1C     	 add r3,r7,#2
 2783 002c 1B78     	 ldrb r3,[r3]
 2784 002e FA1C     	 add r2,r7,#3
 2785 0030 1278     	 ldrb r2,[r2]
 2786 0032 5208     	 lsr r2,r2,#1
 2787 0034 D2B2     	 uxtb r2,r2
 2788 0036 9340     	 lsl r3,r3,r2
 2789 0038 FA68     	 ldr r2,[r7,#12]
 2790 003a 1343     	 orr r3,r2
 2791 003c FB60     	 str r3,[r7,#12]
1257:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1258:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program CC8 slice output passive level */
1259:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = psl;
 2792              	 .loc 2 1259 0
 2793 003e 7B68     	 ldr r3,[r7,#4]
 2794 0040 FA68     	 ldr r2,[r7,#12]
 2795 0042 9A61     	 str r2,[r3,#24]
1260:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2796              	 .loc 2 1260 0
 2797 0044 BD46     	 mov sp,r7
 2798 0046 04B0     	 add sp,sp,#16
 2799              	 
 2800 0048 80BD     	 pop {r7,pc}
 2801              	 .cfi_endproc
 2802              	.LFE132:
 2804 004a C046     	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 2805              	 .align 2
 2806              	 .global XMC_CCU8_SLICE_DeadTimeInit
 2807              	 .code 16
 2808              	 .thumb_func
 2810              	XMC_CCU8_SLICE_DeadTimeInit:
 2811              	.LFB133:
1261:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1262:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Initializes Dead time configuration for the slice outputs */
1263:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
1264:../Libraries/XMCLib/src/xmc_ccu8.c ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config)
1265:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2812              	 .loc 2 1265 0
 2813              	 .cfi_startproc
 2814 0000 80B5     	 push {r7,lr}
 2815              	.LCFI120:
 2816              	 .cfi_def_cfa_offset 8
 2817              	 .cfi_offset 7,-8
 2818              	 .cfi_offset 14,-4
 2819 0002 82B0     	 sub sp,sp,#8
 2820              	.LCFI121:
 2821              	 .cfi_def_cfa_offset 16
 2822 0004 00AF     	 add r7,sp,#0
 2823              	.LCFI122:
 2824              	 .cfi_def_cfa_register 7
 2825 0006 7860     	 str r0,[r7,#4]
 2826 0008 3960     	 str r1,[r7]
1266:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1267:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1268:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 1 */
1269:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC1R = config->dc1r;
 2827              	 .loc 2 1269 0
 2828 000a 3B68     	 ldr r3,[r7]
 2829 000c 5A68     	 ldr r2,[r3,#4]
 2830 000e 7B68     	 ldr r3,[r7,#4]
 2831 0010 1A65     	 str r2,[r3,#80]
1270:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 2 */
1271:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = config->dc2r;
 2832              	 .loc 2 1271 0
 2833 0012 3B68     	 ldr r3,[r7]
 2834 0014 9A68     	 ldr r2,[r3,#8]
 2835 0016 7B68     	 ldr r3,[r7,#4]
 2836 0018 5A65     	 str r2,[r3,#84]
1272:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time control configuration */
1273:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC = config->dtc;
 2837              	 .loc 2 1273 0
 2838 001a 3B68     	 ldr r3,[r7]
 2839 001c 1A68     	 ldr r2,[r3]
 2840 001e 7B68     	 ldr r3,[r7,#4]
 2841 0020 DA64     	 str r2,[r3,#76]
1274:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2842              	 .loc 2 1274 0
 2843 0022 BD46     	 mov sp,r7
 2844 0024 02B0     	 add sp,sp,#8
 2845              	 
 2846 0026 80BD     	 pop {r7,pc}
 2847              	 .cfi_endproc
 2848              	.LFE133:
 2850              	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 2851              	 .align 2
 2852              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 2853              	 .code 16
 2854              	 .thumb_func
 2856              	XMC_CCU8_SLICE_ConfigureDeadTime:
 2857              	.LFB134:
1275:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1276:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Activates or deactivates dead time for compare channel and ST path */
1277:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask)
1278:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2858              	 .loc 2 1278 0
 2859              	 .cfi_startproc
 2860 0000 80B5     	 push {r7,lr}
 2861              	.LCFI123:
 2862              	 .cfi_def_cfa_offset 8
 2863              	 .cfi_offset 7,-8
 2864              	 .cfi_offset 14,-4
 2865 0002 82B0     	 sub sp,sp,#8
 2866              	.LCFI124:
 2867              	 .cfi_def_cfa_offset 16
 2868 0004 00AF     	 add r7,sp,#0
 2869              	.LCFI125:
 2870              	 .cfi_def_cfa_register 7
 2871 0006 7860     	 str r0,[r7,#4]
 2872 0008 0A1C     	 mov r2,r1
 2873 000a FB1C     	 add r3,r7,#3
 2874 000c 1A70     	 strb r2,[r3]
1279:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1280:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Channel", (mask <= XMC_CCU8_SLICE_DEAD_TIME_
1281:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1282:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK);
 2875              	 .loc 2 1282 0
 2876 000e 7B68     	 ldr r3,[r7,#4]
 2877 0010 DB6C     	 ldr r3,[r3,#76]
 2878 0012 3F22     	 mov r2,#63
 2879 0014 9343     	 bic r3,r2
 2880 0016 1A1C     	 mov r2,r3
 2881 0018 7B68     	 ldr r3,[r7,#4]
 2882 001a DA64     	 str r2,[r3,#76]
1283:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= (uint32_t) mask;
 2883              	 .loc 2 1283 0
 2884 001c 7B68     	 ldr r3,[r7,#4]
 2885 001e DA6C     	 ldr r2,[r3,#76]
 2886 0020 FB1C     	 add r3,r7,#3
 2887 0022 1B78     	 ldrb r3,[r3]
 2888 0024 1A43     	 orr r2,r3
 2889 0026 7B68     	 ldr r3,[r7,#4]
 2890 0028 DA64     	 str r2,[r3,#76]
1284:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2891              	 .loc 2 1284 0
 2892 002a BD46     	 mov sp,r7
 2893 002c 02B0     	 add sp,sp,#8
 2894              	 
 2895 002e 80BD     	 pop {r7,pc}
 2896              	 .cfi_endproc
 2897              	.LFE134:
 2899              	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 2900              	 .align 2
 2901              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 2902              	 .code 16
 2903              	 .thumb_func
 2905              	XMC_CCU8_SLICE_SetDeadTimeValue:
 2906              	.LFB135:
1285:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1286:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures rising edge delay and falling edge delay for dead time */
1287:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
1288:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1289:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t rise_value,
1290:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t fall_value)
1291:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2907              	 .loc 2 1291 0
 2908              	 .cfi_startproc
 2909 0000 90B5     	 push {r4,r7,lr}
 2910              	.LCFI126:
 2911              	 .cfi_def_cfa_offset 12
 2912              	 .cfi_offset 4,-12
 2913              	 .cfi_offset 7,-8
 2914              	 .cfi_offset 14,-4
 2915 0002 83B0     	 sub sp,sp,#12
 2916              	.LCFI127:
 2917              	 .cfi_def_cfa_offset 24
 2918 0004 00AF     	 add r7,sp,#0
 2919              	.LCFI128:
 2920              	 .cfi_def_cfa_register 7
 2921 0006 7860     	 str r0,[r7,#4]
 2922 0008 0C1C     	 mov r4,r1
 2923 000a 101C     	 mov r0,r2
 2924 000c 191C     	 mov r1,r3
 2925 000e FB1C     	 add r3,r7,#3
 2926 0010 221C     	 add r2,r4,#0
 2927 0012 1A70     	 strb r2,[r3]
 2928 0014 BB1C     	 add r3,r7,#2
 2929 0016 021C     	 add r2,r0,#0
 2930 0018 1A70     	 strb r2,[r3]
 2931 001a 7B1C     	 add r3,r7,#1
 2932 001c 0A1C     	 add r2,r1,#0
 2933 001e 1A70     	 strb r2,[r3]
1292:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1293:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(c
1294:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1295:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2934              	 .loc 2 1295 0
 2935 0020 FB1C     	 add r3,r7,#3
 2936 0022 1B78     	 ldrb r3,[r3]
 2937 0024 002B     	 cmp r3,#0
 2938 0026 08D1     	 bne .L119
1296:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1297:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->DC1R = (((uint32_t) fall_value) << CCU8_CC8_DC1R_DT1F_Pos) | ((uint32_t) rise_value);
 2939              	 .loc 2 1297 0
 2940 0028 7B1C     	 add r3,r7,#1
 2941 002a 1B78     	 ldrb r3,[r3]
 2942 002c 1A02     	 lsl r2,r3,#8
 2943 002e BB1C     	 add r3,r7,#2
 2944 0030 1B78     	 ldrb r3,[r3]
 2945 0032 1A43     	 orr r2,r3
 2946 0034 7B68     	 ldr r3,[r7,#4]
 2947 0036 1A65     	 str r2,[r3,#80]
 2948 0038 07E0     	 b .L118
 2949              	.L119:
1298:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1299:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1300:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1301:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = (((uint32_t) fall_value) << CCU8_CC8_DC2R_DT2F_Pos) | ((uint32_t) rise_value);
 2950              	 .loc 2 1301 0
 2951 003a 7B1C     	 add r3,r7,#1
 2952 003c 1B78     	 ldrb r3,[r3]
 2953 003e 1A02     	 lsl r2,r3,#8
 2954 0040 BB1C     	 add r3,r7,#2
 2955 0042 1B78     	 ldrb r3,[r3]
 2956 0044 1A43     	 orr r2,r3
 2957 0046 7B68     	 ldr r3,[r7,#4]
 2958 0048 5A65     	 str r2,[r3,#84]
 2959              	.L118:
1302:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1303:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2960              	 .loc 2 1303 0
 2961 004a BD46     	 mov sp,r7
 2962 004c 03B0     	 add sp,sp,#12
 2963              	 
 2964 004e 90BD     	 pop {r4,r7,pc}
 2965              	 .cfi_endproc
 2966              	.LFE135:
 2968              	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 2969              	 .align 2
 2970              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 2971              	 .code 16
 2972              	 .thumb_func
 2974              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 2975              	.LFB136:
1304:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1305:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures clock division factor for dead time */
1306:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
1307:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2976              	 .loc 2 1307 0
 2977              	 .cfi_startproc
 2978 0000 80B5     	 push {r7,lr}
 2979              	.LCFI129:
 2980              	 .cfi_def_cfa_offset 8
 2981              	 .cfi_offset 7,-8
 2982              	 .cfi_offset 14,-4
 2983 0002 82B0     	 sub sp,sp,#8
 2984              	.LCFI130:
 2985              	 .cfi_def_cfa_offset 16
 2986 0004 00AF     	 add r7,sp,#0
 2987              	.LCFI131:
 2988              	 .cfi_def_cfa_register 7
 2989 0006 7860     	 str r0,[r7,#4]
 2990 0008 0A1C     	 mov r2,r1
 2991 000a FB1C     	 add r3,r7,#3
 2992 000c 1A70     	 strb r2,[r3]
1308:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1309:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid divider value", XMC_CCU8_SLICE_CHECK_DTC_
1310:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1311:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) CCU8_CC8_DTC_DTCC_Msk);
 2993              	 .loc 2 1311 0
 2994 000e 7B68     	 ldr r3,[r7,#4]
 2995 0010 DB6C     	 ldr r3,[r3,#76]
 2996 0012 C022     	 mov r2,#192
 2997 0014 9343     	 bic r3,r2
 2998 0016 1A1C     	 mov r2,r3
 2999 0018 7B68     	 ldr r3,[r7,#4]
 3000 001a DA64     	 str r2,[r3,#76]
1312:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= ((uint32_t) div_val) << CCU8_CC8_DTC_DTCC_Pos;
 3001              	 .loc 2 1312 0
 3002 001c 7B68     	 ldr r3,[r7,#4]
 3003 001e DA6C     	 ldr r2,[r3,#76]
 3004 0020 FB1C     	 add r3,r7,#3
 3005 0022 1B78     	 ldrb r3,[r3]
 3006 0024 9B01     	 lsl r3,r3,#6
 3007 0026 1A43     	 orr r2,r3
 3008 0028 7B68     	 ldr r3,[r7,#4]
 3009 002a DA64     	 str r2,[r3,#76]
1313:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3010              	 .loc 2 1313 0
 3011 002c BD46     	 mov sp,r7
 3012 002e 02B0     	 add sp,sp,#8
 3013              	 
 3014 0030 80BD     	 pop {r7,pc}
 3015              	 .cfi_endproc
 3016              	.LFE136:
 3018 0032 C046     	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 3019              	 .align 2
 3020              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 3021              	 .code 16
 3022              	 .thumb_func
 3024              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 3025              	.LFB137:
1314:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1315:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures status ST1, ST2 mapping to STy */
1316:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
1317:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3026              	 .loc 2 1317 0
 3027              	 .cfi_startproc
 3028 0000 80B5     	 push {r7,lr}
 3029              	.LCFI132:
 3030              	 .cfi_def_cfa_offset 8
 3031              	 .cfi_offset 7,-8
 3032              	 .cfi_offset 14,-4
 3033 0002 82B0     	 sub sp,sp,#8
 3034              	.LCFI133:
 3035              	 .cfi_def_cfa_offset 16
 3036 0004 00AF     	 add r7,sp,#0
 3037              	.LCFI134:
 3038              	 .cfi_def_cfa_register 7
 3039 0006 7860     	 str r0,[r7,#4]
 3040 0008 0A1C     	 mov r2,r1
 3041 000a FB1C     	 add r3,r7,#3
 3042 000c 1A70     	 strb r2,[r3]
1318:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1319:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Channel", XMC_CCU8_SLICE_CHECK_SLICE_
1320:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1321:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_STOS_Msk);
 3043              	 .loc 2 1321 0
 3044 000e 7B68     	 ldr r3,[r7,#4]
 3045 0010 5B69     	 ldr r3,[r3,#20]
 3046 0012 074A     	 ldr r2,.L123
 3047 0014 1A40     	 and r2,r3
 3048 0016 7B68     	 ldr r3,[r7,#4]
 3049 0018 5A61     	 str r2,[r3,#20]
1322:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC |= ((uint32_t) channel) << CCU8_CC8_TC_STOS_Pos;
 3050              	 .loc 2 1322 0
 3051 001a 7B68     	 ldr r3,[r7,#4]
 3052 001c 5A69     	 ldr r2,[r3,#20]
 3053 001e FB1C     	 add r3,r7,#3
 3054 0020 1B78     	 ldrb r3,[r3]
 3055 0022 5B07     	 lsl r3,r3,#29
 3056 0024 1A43     	 orr r2,r3
 3057 0026 7B68     	 ldr r3,[r7,#4]
 3058 0028 5A61     	 str r2,[r3,#20]
1323:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3059              	 .loc 2 1323 0
 3060 002a BD46     	 mov sp,r7
 3061 002c 02B0     	 add sp,sp,#8
 3062              	 
 3063 002e 80BD     	 pop {r7,pc}
 3064              	.L124:
 3065              	 .align 2
 3066              	.L123:
 3067 0030 FFFFFF9F 	 .word -1610612737
 3068              	 .cfi_endproc
 3069              	.LFE137:
 3071              	 .text
 3072              	.Letext0:
 3073              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3074              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3075              	 .file 5 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 3076              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/XMCLib/inc/xmc1_scu.h"
 3077              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_8_TestFast/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:18     .text.XMC_CCU8_StartPrescaler:00000000 $t
    {standard input}:22     .text.XMC_CCU8_StartPrescaler:00000000 XMC_CCU8_StartPrescaler
    {standard input}:56     .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:60     .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:92     .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:96     .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 XMC_CCU8_SLICE_SetDitherCompareValue
    {standard input}:129    .text.XMC_CCU8_lGateClock:00000000 $t
    {standard input}:133    .text.XMC_CCU8_lGateClock:00000000 XMC_CCU8_lGateClock
    {standard input}:174    .text.XMC_CCU8_lUngateClock:00000000 $t
    {standard input}:178    .text.XMC_CCU8_lUngateClock:00000000 XMC_CCU8_lUngateClock
    {standard input}:218    .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:223    .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:252    .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:257    .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:286    .text.XMC_CCU8_Init:00000000 $t
    {standard input}:291    .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:346    .text.XMC_CCU8_Init:00000044 $d
    {standard input}:351    .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:356    .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:404    .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:409    .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:492    .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:497    .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:559    .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:564    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:612    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:617    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:665    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:670    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:748    .text.XMC_CCU8_SLICE_StartConfig:00000064 $d
    {standard input}:753    .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:758    .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:830    .text.XMC_CCU8_SLICE_StopConfig:00000060 $d
    {standard input}:835    .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:840    .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:887    .text.XMC_CCU8_SLICE_LoadConfig:00000034 $d
    {standard input}:892    .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:897    .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:945    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:950    .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:1066   .text.XMC_CCU8_SLICE_ModulationConfig:000000a0 $d
    {standard input}:1074   .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:1079   .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:1126   .text.XMC_CCU8_SLICE_CountConfig:00000034 $d
    {standard input}:1131   .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:1136   .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:1183   .text.XMC_CCU8_SLICE_GateConfig:00000034 $d
    {standard input}:1188   .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:1193   .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:1241   .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:1246   .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:1294   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:1299   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:1346   .text.XMC_CCU8_SLICE_DirectionConfig:00000034 $d
    {standard input}:1351   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1356   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:1399   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:0000002c $d
    {standard input}:1404   .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:1409   .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:1506   .text.XMC_CCU8_SLICE_TrapConfig:00000080 $d
    {standard input}:1513   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1518   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1648   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:000000c0 $d
    {standard input}:1659   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1664   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:1838   .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:1843   .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:1921   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:1926   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:1980   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:1985   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:2039   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:2044   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:2077   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2082   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:2119   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2124   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:2271   .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2276   .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 XMC_CCU8_SLICE_GetCapturedValueFromFifo
    {standard input}:2325   .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:2330   .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:2411   .text.XMC_CCU8_SLICE_EnableDithering:0000006c $d
    {standard input}:2416   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:2421   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:2473   .text.XMC_CCU8_SLICE_SetPrescaler:0000003c $d
    {standard input}:2478   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:2483   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:2534   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:2539   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:2592   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2597   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:2637   .rodata.XMC_CCU8_SLICE_SetInterruptNode:00000000 $d
    {standard input}:2736   .text.XMC_CCU8_SLICE_SetInterruptNode:0000009c $d
    {standard input}:2741   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2746   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:2805   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:2810   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:2851   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:2856   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:2900   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:2905   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:2969   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:2974   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:3019   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:3024   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
    {standard input}:3067   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
