   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 384B     	 ldr r3,.L17
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c 364B     	 ldr r3,.L17
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 61 )  //ende
 469              	 .loc 3 119 0
 470 0010 354B     	 ldr r3,.L17
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 3D2B     	 cmp r3,#61
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 334B     	 ldr r3,.L17
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e 61E0     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 314B     	 ldr r3,.L17
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 1CD1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 4095;
 485              	 .loc 3 125 0
 486 0028 304B     	 ldr r3,.L17+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c 304A     	 ldr r2,.L17+8
 489 002e 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4095;
 490              	 .loc 3 126 0
 491 0030 2E4B     	 ldr r3,.L17+4
 492 0032 DB6A     	 ldr r3,[r3,#44]
 493 0034 2E4A     	 ldr r2,.L17+8
 494 0036 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 4095;
 495              	 .loc 3 127 0
 496 0038 2C4B     	 ldr r3,.L17+4
 497 003a DB6A     	 ldr r3,[r3,#44]
 498 003c 2C4A     	 ldr r2,.L17+8
 499 003e 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4095;
 500              	 .loc 3 128 0
 501 0040 2A4B     	 ldr r3,.L17+4
 502 0042 DB6A     	 ldr r3,[r3,#44]
 503 0044 2A4A     	 ldr r2,.L17+8
 504 0046 DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 505              	 .loc 3 129 0
 506 0048 284B     	 ldr r3,.L17+4
 507 004a 181C     	 mov r0,r3
 508 004c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 509              	 .loc 3 130 0
 510 0050 264A     	 ldr r2,.L17+4
 511 0052 E523     	 mov r3,#229
 512 0054 9B00     	 lsl r3,r3,#2
 513 0056 101C     	 mov r0,r2
 514 0058 0021     	 mov r1,#0
 515 005a 1A1C     	 mov r2,r3
 516 005c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 517 0060 40E0     	 b .L12
 518              	.L15:
 131:../samuel/samuel_io.c **** 	 			 }
 132:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 40 )
 519              	 .loc 3 132 0
 520 0062 214B     	 ldr r3,.L17
 521 0064 1B88     	 ldrh r3,[r3]
 522 0066 282B     	 cmp r3,#40
 523 0068 1CD1     	 bne .L16
 133:../samuel/samuel_io.c **** 	 			 {
 134:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 4095;
 524              	 .loc 3 134 0
 525 006a 204B     	 ldr r3,.L17+4
 526 006c DB6A     	 ldr r3,[r3,#44]
 527 006e 204A     	 ldr r2,.L17+8
 528 0070 1A80     	 strh r2,[r3]
 135:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 529              	 .loc 3 135 0
 530 0072 1E4B     	 ldr r3,.L17+4
 531 0074 DB6A     	 ldr r3,[r3,#44]
 532 0076 0022     	 mov r2,#0
 533 0078 5A80     	 strh r2,[r3,#2]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 4095;
 534              	 .loc 3 136 0
 535 007a 1C4B     	 ldr r3,.L17+4
 536 007c DB6A     	 ldr r3,[r3,#44]
 537 007e 1C4A     	 ldr r2,.L17+8
 538 0080 9A80     	 strh r2,[r3,#4]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 539              	 .loc 3 137 0
 540 0082 1A4B     	 ldr r3,.L17+4
 541 0084 DB6A     	 ldr r3,[r3,#44]
 542 0086 0022     	 mov r2,#0
 543 0088 DA80     	 strh r2,[r3,#6]
 138:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 544              	 .loc 3 138 0
 545 008a 184B     	 ldr r3,.L17+4
 546 008c 181C     	 mov r0,r3
 547 008e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 139:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 548              	 .loc 3 139 0
 549 0092 164A     	 ldr r2,.L17+4
 550 0094 E523     	 mov r3,#229
 551 0096 9B00     	 lsl r3,r3,#2
 552 0098 101C     	 mov r0,r2
 553 009a 0021     	 mov r1,#0
 554 009c 1A1C     	 mov r2,r3
 555 009e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 556 00a2 1FE0     	 b .L12
 557              	.L16:
 140:../samuel/samuel_io.c **** 	 			 }
 141:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 60 )
 558              	 .loc 3 141 0
 559 00a4 104B     	 ldr r3,.L17
 560 00a6 1B88     	 ldrh r3,[r3]
 561 00a8 3C2B     	 cmp r3,#60
 562 00aa 1BD1     	 bne .L12
 142:../samuel/samuel_io.c **** 	 			 {
 143:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 563              	 .loc 3 143 0
 564 00ac 0F4B     	 ldr r3,.L17+4
 565 00ae DB6A     	 ldr r3,[r3,#44]
 566 00b0 0022     	 mov r2,#0
 567 00b2 1A80     	 strh r2,[r3]
 144:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4095;
 568              	 .loc 3 144 0
 569 00b4 0D4B     	 ldr r3,.L17+4
 570 00b6 DB6A     	 ldr r3,[r3,#44]
 571 00b8 0D4A     	 ldr r2,.L17+8
 572 00ba 5A80     	 strh r2,[r3,#2]
 145:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 573              	 .loc 3 145 0
 574 00bc 0B4B     	 ldr r3,.L17+4
 575 00be DB6A     	 ldr r3,[r3,#44]
 576 00c0 0022     	 mov r2,#0
 577 00c2 9A80     	 strh r2,[r3,#4]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4095;
 578              	 .loc 3 146 0
 579 00c4 094B     	 ldr r3,.L17+4
 580 00c6 DB6A     	 ldr r3,[r3,#44]
 581 00c8 094A     	 ldr r2,.L17+8
 582 00ca DA80     	 strh r2,[r3,#6]
 147:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 583              	 .loc 3 147 0
 584 00cc 074B     	 ldr r3,.L17+4
 585 00ce 181C     	 mov r0,r3
 586 00d0 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 148:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 587              	 .loc 3 148 0
 588 00d4 054A     	 ldr r2,.L17+4
 589 00d6 E523     	 mov r3,#229
 590 00d8 9B00     	 lsl r3,r3,#2
 591 00da 101C     	 mov r0,r2
 592 00dc 0021     	 mov r1,#0
 593 00de 1A1C     	 mov r2,r3
 594 00e0 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 595              	.L12:
 149:../samuel/samuel_io.c **** 	 			 }
 150:../samuel/samuel_io.c **** 				 else
 151:../samuel/samuel_io.c **** 
 152:../samuel/samuel_io.c **** 				 {
 153:../samuel/samuel_io.c **** 
 154:../samuel/samuel_io.c **** 				 }
 155:../samuel/samuel_io.c **** 
 156:../samuel/samuel_io.c ****    }
 596              	 .loc 3 156 0
 597 00e4 BD46     	 mov sp,r7
 598              	 
 599 00e6 80BD     	 pop {r7,pc}
 600              	.L18:
 601              	 .align 2
 602              	.L17:
 603 00e8 00000000 	 .word zahler_lightprog01
 604 00ec 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 605 00f0 FF0F0000 	 .word 4095
 606              	 .cfi_endproc
 607              	.LFE292:
 609              	 .section .text.light_aus,"ax",%progbits
 610              	 .align 2
 611              	 .global light_aus
 612              	 .code 16
 613              	 .thumb_func
 615              	light_aus:
 616              	.LFB293:
 157:../samuel/samuel_io.c ****   //------------------------------------------
 158:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 159:../samuel/samuel_io.c ****    {
 617              	 .loc 3 159 0
 618              	 .cfi_startproc
 619 0000 80B5     	 push {r7,lr}
 620              	.LCFI18:
 621              	 .cfi_def_cfa_offset 8
 622              	 .cfi_offset 7,-8
 623              	 .cfi_offset 14,-4
 624 0002 00AF     	 add r7,sp,#0
 625              	.LCFI19:
 626              	 .cfi_def_cfa_register 7
 160:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 627              	 .loc 3 160 0
 628 0004 104B     	 ldr r3,.L20
 629 0006 1A88     	 ldrh r2,[r3]
 630 0008 104B     	 ldr r3,.L20+4
 631 000a 1A80     	 strh r2,[r3]
 161:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 632              	 .loc 3 161 0
 633 000c 0E4B     	 ldr r3,.L20
 634 000e 1A88     	 ldrh r2,[r3]
 635 0010 0F4B     	 ldr r3,.L20+8
 636 0012 1A80     	 strh r2,[r3]
 162:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 637              	 .loc 3 162 0
 638 0014 0C4B     	 ldr r3,.L20
 639 0016 1A88     	 ldrh r2,[r3]
 640 0018 0E4B     	 ldr r3,.L20+12
 641 001a 1A80     	 strh r2,[r3]
 163:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 642              	 .loc 3 163 0
 643 001c 0A4B     	 ldr r3,.L20
 644 001e 1A88     	 ldrh r2,[r3]
 645 0020 0D4B     	 ldr r3,.L20+16
 646 0022 1A80     	 strh r2,[r3]
 164:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 647              	 .loc 3 164 0
 648 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 165:../samuel/samuel_io.c **** 	  bcuUebergabe();
 649              	 .loc 3 165 0
 650 0028 FFF7FEFF 	 bl bcuUebergabe
 166:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 167:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 651              	 .loc 3 167 0
 652 002c 0B4A     	 ldr r2,.L20+20
 653 002e 8023     	 mov r3,#128
 654 0030 1B01     	 lsl r3,r3,#4
 655 0032 101C     	 mov r0,r2
 656 0034 191C     	 mov r1,r3
 657 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 168:../samuel/samuel_io.c **** 	     // Start Dimming
 169:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 658              	 .loc 3 169 0
 659 003a 084B     	 ldr r3,.L20+20
 660 003c 181C     	 mov r0,r3
 661 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 170:../samuel/samuel_io.c **** 
 171:../samuel/samuel_io.c ****    }
 662              	 .loc 3 171 0
 663 0042 BD46     	 mov sp,r7
 664              	 
 665 0044 80BD     	 pop {r7,pc}
 666              	.L21:
 667 0046 C046     	 .align 2
 668              	.L20:
 669 0048 00000000 	 .word linearwalk_gen
 670 004c 00000000 	 .word linearwalk_ww1
 671 0050 00000000 	 .word linearwalk_ww2
 672 0054 00000000 	 .word linearwalk_cw1
 673 0058 00000000 	 .word linearwalk_cw2
 674 005c 00000000 	 .word DIM_BCCU_0
 675              	 .cfi_endproc
 676              	.LFE293:
 678              	 .section .text.analog_start,"ax",%progbits
 679              	 .align 2
 680              	 .global analog_start
 681              	 .code 16
 682              	 .thumb_func
 684              	analog_start:
 685              	.LFB294:
 172:../samuel/samuel_io.c ****   //------------------------------------------
 173:../samuel/samuel_io.c **** 
 174:../samuel/samuel_io.c **** 
 175:../samuel/samuel_io.c **** 
 176:../samuel/samuel_io.c ****  void analog_start (void)
 177:../samuel/samuel_io.c ****   {
 686              	 .loc 3 177 0
 687              	 .cfi_startproc
 688 0000 80B5     	 push {r7,lr}
 689              	.LCFI20:
 690              	 .cfi_def_cfa_offset 8
 691              	 .cfi_offset 7,-8
 692              	 .cfi_offset 14,-4
 693 0002 00AF     	 add r7,sp,#0
 694              	.LCFI21:
 695              	 .cfi_def_cfa_register 7
 178:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 179:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 180:../samuel/samuel_io.c **** 
 181:../samuel/samuel_io.c ****   }
 696              	 .loc 3 181 0
 697 0004 BD46     	 mov sp,r7
 698              	 
 699 0006 80BD     	 pop {r7,pc}
 700              	 .cfi_endproc
 701              	.LFE294:
 703              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 704              	 .align 2
 705              	 .global SCU_0_IRQHandler
 706              	 .code 16
 707              	 .thumb_func
 709              	SCU_0_IRQHandler:
 710              	.LFB295:
 182:../samuel/samuel_io.c **** 
 183:../samuel/samuel_io.c **** 
 184:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 185:../samuel/samuel_io.c ****   {
 711              	 .loc 3 185 0
 712              	 .cfi_startproc
 713 0000 80B5     	 push {r7,lr}
 714              	.LCFI22:
 715              	 .cfi_def_cfa_offset 8
 716              	 .cfi_offset 7,-8
 717              	 .cfi_offset 14,-4
 718 0002 00AF     	 add r7,sp,#0
 719              	.LCFI23:
 720              	 .cfi_def_cfa_register 7
 186:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 187:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 188:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 189:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 190:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 191:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 192:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 193:../samuel/samuel_io.c ****   }
 721              	 .loc 3 193 0
 722 0004 BD46     	 mov sp,r7
 723              	 
 724 0006 80BD     	 pop {r7,pc}
 725              	 .cfi_endproc
 726              	.LFE295:
 728              	 .section .text.new_data_fill,"ax",%progbits
 729              	 .align 2
 730              	 .global new_data_fill
 731              	 .code 16
 732              	 .thumb_func
 734              	new_data_fill:
 735              	.LFB296:
 194:../samuel/samuel_io.c **** 
 195:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 196:../samuel/samuel_io.c ****  {
 736              	 .loc 3 196 0
 737              	 .cfi_startproc
 738 0000 80B5     	 push {r7,lr}
 739              	.LCFI24:
 740              	 .cfi_def_cfa_offset 8
 741              	 .cfi_offset 7,-8
 742              	 .cfi_offset 14,-4
 743 0002 00AF     	 add r7,sp,#0
 744              	.LCFI25:
 745              	 .cfi_def_cfa_register 7
 197:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 746              	 .loc 3 197 0
 747 0004 124B     	 ldr r3,.L25
 748 0006 0B22     	 mov r2,#11
 749 0008 1A70     	 strb r2,[r3]
 198:../samuel/samuel_io.c **** 	 new_data[0]=1;
 750              	 .loc 3 198 0
 751 000a 124B     	 ldr r3,.L25+4
 752 000c 0122     	 mov r2,#1
 753 000e 1A70     	 strb r2,[r3]
 199:../samuel/samuel_io.c **** 	 new_data[1]=2;
 754              	 .loc 3 199 0
 755 0010 104B     	 ldr r3,.L25+4
 756 0012 0222     	 mov r2,#2
 757 0014 5A70     	 strb r2,[r3,#1]
 200:../samuel/samuel_io.c **** 	 new_data[2]=3;
 758              	 .loc 3 200 0
 759 0016 0F4B     	 ldr r3,.L25+4
 760 0018 0322     	 mov r2,#3
 761 001a 9A70     	 strb r2,[r3,#2]
 201:../samuel/samuel_io.c **** 	 new_data[3]=4;
 762              	 .loc 3 201 0
 763 001c 0D4B     	 ldr r3,.L25+4
 764 001e 0422     	 mov r2,#4
 765 0020 DA70     	 strb r2,[r3,#3]
 202:../samuel/samuel_io.c **** 	 new_data[4]=5;
 766              	 .loc 3 202 0
 767 0022 0C4B     	 ldr r3,.L25+4
 768 0024 0522     	 mov r2,#5
 769 0026 1A71     	 strb r2,[r3,#4]
 203:../samuel/samuel_io.c **** 	 new_data[5]=6;
 770              	 .loc 3 203 0
 771 0028 0A4B     	 ldr r3,.L25+4
 772 002a 0622     	 mov r2,#6
 773 002c 5A71     	 strb r2,[r3,#5]
 204:../samuel/samuel_io.c ****  	 new_data[6]=7;
 774              	 .loc 3 204 0
 775 002e 094B     	 ldr r3,.L25+4
 776 0030 0722     	 mov r2,#7
 777 0032 9A71     	 strb r2,[r3,#6]
 205:../samuel/samuel_io.c ****  	 new_data[7]=8;
 778              	 .loc 3 205 0
 779 0034 074B     	 ldr r3,.L25+4
 780 0036 0822     	 mov r2,#8
 781 0038 DA71     	 strb r2,[r3,#7]
 206:../samuel/samuel_io.c ****  	 new_data[8]=9;
 782              	 .loc 3 206 0
 783 003a 064B     	 ldr r3,.L25+4
 784 003c 0922     	 mov r2,#9
 785 003e 1A72     	 strb r2,[r3,#8]
 207:../samuel/samuel_io.c ****  	 new_data[9]='a';
 786              	 .loc 3 207 0
 787 0040 044B     	 ldr r3,.L25+4
 788 0042 6122     	 mov r2,#97
 789 0044 5A72     	 strb r2,[r3,#9]
 208:../samuel/samuel_io.c **** 	 new_data[10]='b';
 790              	 .loc 3 208 0
 791 0046 034B     	 ldr r3,.L25+4
 792 0048 6222     	 mov r2,#98
 793 004a 9A72     	 strb r2,[r3,#10]
 209:../samuel/samuel_io.c ****  }
 794              	 .loc 3 209 0
 795 004c BD46     	 mov sp,r7
 796              	 
 797 004e 80BD     	 pop {r7,pc}
 798              	.L26:
 799              	 .align 2
 800              	.L25:
 801 0050 00000000 	 .word transmit_buf_size
 802 0054 00000000 	 .word new_data
 803              	 .cfi_endproc
 804              	.LFE296:
 806              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 807              	 .align 2
 808              	 .global new_data_unbekanntBack
 809              	 .code 16
 810              	 .thumb_func
 812              	new_data_unbekanntBack:
 813              	.LFB297:
 210:../samuel/samuel_io.c **** 
 211:../samuel/samuel_io.c **** 
 212:../samuel/samuel_io.c **** 
 213:../samuel/samuel_io.c **** 
 214:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 215:../samuel/samuel_io.c ****  {
 814              	 .loc 3 215 0
 815              	 .cfi_startproc
 816 0000 80B5     	 push {r7,lr}
 817              	.LCFI26:
 818              	 .cfi_def_cfa_offset 8
 819              	 .cfi_offset 7,-8
 820              	 .cfi_offset 14,-4
 821 0002 00AF     	 add r7,sp,#0
 822              	.LCFI27:
 823              	 .cfi_def_cfa_register 7
 216:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 824              	 .loc 3 216 0
 825 0004 134B     	 ldr r3,.L28
 826 0006 0B22     	 mov r2,#11
 827 0008 1A70     	 strb r2,[r3]
 217:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 828              	 .loc 3 217 0
 829 000a 134B     	 ldr r3,.L28+4
 830 000c 4C22     	 mov r2,#76
 831 000e 1A70     	 strb r2,[r3]
 218:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 832              	 .loc 3 218 0
 833 0010 114B     	 ldr r3,.L28+4
 834 0012 4922     	 mov r2,#73
 835 0014 5A70     	 strb r2,[r3,#1]
 219:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 836              	 .loc 3 219 0
 837 0016 104B     	 ldr r3,.L28+4
 838 0018 4E22     	 mov r2,#78
 839 001a 9A70     	 strb r2,[r3,#2]
 220:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 840              	 .loc 3 220 0
 841 001c 0F4B     	 ldr r3,.L28+8
 842 001e 1A78     	 ldrb r2,[r3]
 843 0020 0D4B     	 ldr r3,.L28+4
 844 0022 DA70     	 strb r2,[r3,#3]
 221:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 845              	 .loc 3 221 0
 846 0024 0B4B     	 ldr r3,.L28
 847 0026 1A78     	 ldrb r2,[r3]
 848 0028 0B4B     	 ldr r3,.L28+4
 849 002a 1A71     	 strb r2,[r3,#4]
 222:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 850              	 .loc 3 222 0
 851 002c 0A4B     	 ldr r3,.L28+4
 852 002e 3122     	 mov r2,#49
 853 0030 5A71     	 strb r2,[r3,#5]
 223:../samuel/samuel_io.c **** 	 new_data[6]='n';
 854              	 .loc 3 223 0
 855 0032 094B     	 ldr r3,.L28+4
 856 0034 6E22     	 mov r2,#110
 857 0036 9A71     	 strb r2,[r3,#6]
 224:../samuel/samuel_io.c **** 	 new_data[7]='o';
 858              	 .loc 3 224 0
 859 0038 074B     	 ldr r3,.L28+4
 860 003a 6F22     	 mov r2,#111
 861 003c DA71     	 strb r2,[r3,#7]
 225:../samuel/samuel_io.c **** 	 new_data[8]='n';
 862              	 .loc 3 225 0
 863 003e 064B     	 ldr r3,.L28+4
 864 0040 6E22     	 mov r2,#110
 865 0042 1A72     	 strb r2,[r3,#8]
 226:../samuel/samuel_io.c **** 	 new_data[9]='o';
 866              	 .loc 3 226 0
 867 0044 044B     	 ldr r3,.L28+4
 868 0046 6F22     	 mov r2,#111
 869 0048 5A72     	 strb r2,[r3,#9]
 227:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 870              	 .loc 3 227 0
 871 004a 034B     	 ldr r3,.L28+4
 872 004c FF22     	 mov r2,#255
 873 004e 9A72     	 strb r2,[r3,#10]
 228:../samuel/samuel_io.c ****  }
 874              	 .loc 3 228 0
 875 0050 BD46     	 mov sp,r7
 876              	 
 877 0052 80BD     	 pop {r7,pc}
 878              	.L29:
 879              	 .align 2
 880              	.L28:
 881 0054 00000000 	 .word transmit_buf_size
 882 0058 00000000 	 .word new_data
 883 005c 00000000 	 .word node_id
 884              	 .cfi_endproc
 885              	.LFE297:
 887              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 888              	 .align 2
 889              	 .global new_data_BroadcastBack
 890              	 .code 16
 891              	 .thumb_func
 893              	new_data_BroadcastBack:
 894              	.LFB298:
 229:../samuel/samuel_io.c **** 
 230:../samuel/samuel_io.c **** //------------------------------------------
 231:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 232:../samuel/samuel_io.c ****  {
 895              	 .loc 3 232 0
 896              	 .cfi_startproc
 897 0000 80B5     	 push {r7,lr}
 898              	.LCFI28:
 899              	 .cfi_def_cfa_offset 8
 900              	 .cfi_offset 7,-8
 901              	 .cfi_offset 14,-4
 902 0002 00AF     	 add r7,sp,#0
 903              	.LCFI29:
 904              	 .cfi_def_cfa_register 7
 233:../samuel/samuel_io.c **** 
 234:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 905              	 .loc 3 234 0
 906 0004 194B     	 ldr r3,.L31
 907 0006 0B22     	 mov r2,#11
 908 0008 1A70     	 strb r2,[r3]
 235:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 909              	 .loc 3 235 0
 910 000a 194B     	 ldr r3,.L31+4
 911 000c 4C22     	 mov r2,#76
 912 000e 1A70     	 strb r2,[r3]
 236:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 913              	 .loc 3 236 0
 914 0010 174B     	 ldr r3,.L31+4
 915 0012 4922     	 mov r2,#73
 916 0014 5A70     	 strb r2,[r3,#1]
 237:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 917              	 .loc 3 237 0
 918 0016 164B     	 ldr r3,.L31+4
 919 0018 4E22     	 mov r2,#78
 920 001a 9A70     	 strb r2,[r3,#2]
 238:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 921              	 .loc 3 238 0
 922 001c 154B     	 ldr r3,.L31+8
 923 001e 1A78     	 ldrb r2,[r3]
 924 0020 134B     	 ldr r3,.L31+4
 925 0022 DA70     	 strb r2,[r3,#3]
 239:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 926              	 .loc 3 239 0
 927 0024 114B     	 ldr r3,.L31
 928 0026 1A78     	 ldrb r2,[r3]
 929 0028 114B     	 ldr r3,.L31+4
 930 002a 1A71     	 strb r2,[r3,#4]
 240:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 931              	 .loc 3 240 0
 932 002c 104B     	 ldr r3,.L31+4
 933 002e 6F22     	 mov r2,#111
 934 0030 5A71     	 strb r2,[r3,#5]
 241:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 935              	 .loc 3 241 0
 936 0032 114B     	 ldr r3,.L31+12
 937 0034 1B88     	 ldrh r3,[r3]
 938 0036 1B0A     	 lsr r3,r3,#8
 939 0038 9BB2     	 uxth r3,r3
 940 003a DAB2     	 uxtb r2,r3
 941 003c 0C4B     	 ldr r3,.L31+4
 942 003e 9A71     	 strb r2,[r3,#6]
 242:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 943              	 .loc 3 242 0
 944 0040 0D4B     	 ldr r3,.L31+12
 945 0042 1B88     	 ldrh r3,[r3]
 946 0044 DAB2     	 uxtb r2,r3
 947 0046 0A4B     	 ldr r3,.L31+4
 948 0048 DA71     	 strb r2,[r3,#7]
 243:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 949              	 .loc 3 243 0
 950 004a 0C4B     	 ldr r3,.L31+16
 951 004c 1B88     	 ldrh r3,[r3]
 952 004e 1B0A     	 lsr r3,r3,#8
 953 0050 9BB2     	 uxth r3,r3
 954 0052 DAB2     	 uxtb r2,r3
 955 0054 064B     	 ldr r3,.L31+4
 956 0056 1A72     	 strb r2,[r3,#8]
 244:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 957              	 .loc 3 244 0
 958 0058 084B     	 ldr r3,.L31+16
 959 005a 1B88     	 ldrh r3,[r3]
 960 005c DAB2     	 uxtb r2,r3
 961 005e 044B     	 ldr r3,.L31+4
 962 0060 5A72     	 strb r2,[r3,#9]
 245:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 963              	 .loc 3 245 0
 964 0062 034B     	 ldr r3,.L31+4
 965 0064 FF22     	 mov r2,#255
 966 0066 9A72     	 strb r2,[r3,#10]
 246:../samuel/samuel_io.c ****  }
 967              	 .loc 3 246 0
 968 0068 BD46     	 mov sp,r7
 969              	 
 970 006a 80BD     	 pop {r7,pc}
 971              	.L32:
 972              	 .align 2
 973              	.L31:
 974 006c 00000000 	 .word transmit_buf_size
 975 0070 00000000 	 .word new_data
 976 0074 00000000 	 .word node_id
 977 0078 00000000 	 .word Ser_NrH
 978 007c 00000000 	 .word Ser_NrL
 979              	 .cfi_endproc
 980              	.LFE298:
 982              	 .section .text.new_data_analog1Back,"ax",%progbits
 983              	 .align 2
 984              	 .global new_data_analog1Back
 985              	 .code 16
 986              	 .thumb_func
 988              	new_data_analog1Back:
 989              	.LFB299:
 247:../samuel/samuel_io.c ****  //------------------------------------------
 248:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 249:../samuel/samuel_io.c ****  {
 990              	 .loc 3 249 0
 991              	 .cfi_startproc
 992 0000 80B5     	 push {r7,lr}
 993              	.LCFI30:
 994              	 .cfi_def_cfa_offset 8
 995              	 .cfi_offset 7,-8
 996              	 .cfi_offset 14,-4
 997 0002 00AF     	 add r7,sp,#0
 998              	.LCFI31:
 999              	 .cfi_def_cfa_register 7
 250:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1000              	 .loc 3 250 0
 1001 0004 194B     	 ldr r3,.L34
 1002 0006 0B22     	 mov r2,#11
 1003 0008 1A70     	 strb r2,[r3]
 251:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1004              	 .loc 3 251 0
 1005 000a 194B     	 ldr r3,.L34+4
 1006 000c 4C22     	 mov r2,#76
 1007 000e 1A70     	 strb r2,[r3]
 252:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1008              	 .loc 3 252 0
 1009 0010 174B     	 ldr r3,.L34+4
 1010 0012 4922     	 mov r2,#73
 1011 0014 5A70     	 strb r2,[r3,#1]
 253:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1012              	 .loc 3 253 0
 1013 0016 164B     	 ldr r3,.L34+4
 1014 0018 4E22     	 mov r2,#78
 1015 001a 9A70     	 strb r2,[r3,#2]
 254:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1016              	 .loc 3 254 0
 1017 001c 154B     	 ldr r3,.L34+8
 1018 001e 1A78     	 ldrb r2,[r3]
 1019 0020 134B     	 ldr r3,.L34+4
 1020 0022 DA70     	 strb r2,[r3,#3]
 255:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1021              	 .loc 3 255 0
 1022 0024 114B     	 ldr r3,.L34
 1023 0026 1A78     	 ldrb r2,[r3]
 1024 0028 114B     	 ldr r3,.L34+4
 1025 002a 1A71     	 strb r2,[r3,#4]
 256:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1026              	 .loc 3 256 0
 1027 002c 104B     	 ldr r3,.L34+4
 1028 002e 6122     	 mov r2,#97
 1029 0030 5A71     	 strb r2,[r3,#5]
 257:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1030              	 .loc 3 257 0
 1031 0032 114B     	 ldr r3,.L34+12
 1032 0034 1B88     	 ldrh r3,[r3]
 1033 0036 1B0A     	 lsr r3,r3,#8
 1034 0038 9BB2     	 uxth r3,r3
 1035 003a DAB2     	 uxtb r2,r3
 1036 003c 0C4B     	 ldr r3,.L34+4
 1037 003e 9A71     	 strb r2,[r3,#6]
 258:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1038              	 .loc 3 258 0
 1039 0040 0D4B     	 ldr r3,.L34+12
 1040 0042 1B88     	 ldrh r3,[r3]
 1041 0044 DAB2     	 uxtb r2,r3
 1042 0046 0A4B     	 ldr r3,.L34+4
 1043 0048 DA71     	 strb r2,[r3,#7]
 259:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1044              	 .loc 3 259 0
 1045 004a 0C4B     	 ldr r3,.L34+16
 1046 004c 1B88     	 ldrh r3,[r3]
 1047 004e 1B0A     	 lsr r3,r3,#8
 1048 0050 9BB2     	 uxth r3,r3
 1049 0052 DAB2     	 uxtb r2,r3
 1050 0054 064B     	 ldr r3,.L34+4
 1051 0056 1A72     	 strb r2,[r3,#8]
 260:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1052              	 .loc 3 260 0
 1053 0058 084B     	 ldr r3,.L34+16
 1054 005a 1B88     	 ldrh r3,[r3]
 1055 005c DAB2     	 uxtb r2,r3
 1056 005e 044B     	 ldr r3,.L34+4
 1057 0060 5A72     	 strb r2,[r3,#9]
 261:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1058              	 .loc 3 261 0
 1059 0062 034B     	 ldr r3,.L34+4
 1060 0064 FF22     	 mov r2,#255
 1061 0066 9A72     	 strb r2,[r3,#10]
 262:../samuel/samuel_io.c ****  }
 1062              	 .loc 3 262 0
 1063 0068 BD46     	 mov sp,r7
 1064              	 
 1065 006a 80BD     	 pop {r7,pc}
 1066              	.L35:
 1067              	 .align 2
 1068              	.L34:
 1069 006c 00000000 	 .word transmit_buf_size
 1070 0070 00000000 	 .word new_data
 1071 0074 00000000 	 .word node_id
 1072 0078 00000000 	 .word resultA2
 1073 007c 00000000 	 .word resultB2
 1074              	 .cfi_endproc
 1075              	.LFE299:
 1077              	 .section .text.new_data_analog2Back,"ax",%progbits
 1078              	 .align 2
 1079              	 .global new_data_analog2Back
 1080              	 .code 16
 1081              	 .thumb_func
 1083              	new_data_analog2Back:
 1084              	.LFB300:
 263:../samuel/samuel_io.c ****  //------------------------------------------------------
 264:../samuel/samuel_io.c **** 
 265:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 266:../samuel/samuel_io.c ****  {
 1085              	 .loc 3 266 0
 1086              	 .cfi_startproc
 1087 0000 80B5     	 push {r7,lr}
 1088              	.LCFI32:
 1089              	 .cfi_def_cfa_offset 8
 1090              	 .cfi_offset 7,-8
 1091              	 .cfi_offset 14,-4
 1092 0002 00AF     	 add r7,sp,#0
 1093              	.LCFI33:
 1094              	 .cfi_def_cfa_register 7
 267:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1095              	 .loc 3 267 0
 1096 0004 194B     	 ldr r3,.L37
 1097 0006 0B22     	 mov r2,#11
 1098 0008 1A70     	 strb r2,[r3]
 268:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1099              	 .loc 3 268 0
 1100 000a 194B     	 ldr r3,.L37+4
 1101 000c 4C22     	 mov r2,#76
 1102 000e 1A70     	 strb r2,[r3]
 269:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1103              	 .loc 3 269 0
 1104 0010 174B     	 ldr r3,.L37+4
 1105 0012 4922     	 mov r2,#73
 1106 0014 5A70     	 strb r2,[r3,#1]
 270:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1107              	 .loc 3 270 0
 1108 0016 164B     	 ldr r3,.L37+4
 1109 0018 4E22     	 mov r2,#78
 1110 001a 9A70     	 strb r2,[r3,#2]
 271:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1111              	 .loc 3 271 0
 1112 001c 154B     	 ldr r3,.L37+8
 1113 001e 1A78     	 ldrb r2,[r3]
 1114 0020 134B     	 ldr r3,.L37+4
 1115 0022 DA70     	 strb r2,[r3,#3]
 272:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1116              	 .loc 3 272 0
 1117 0024 114B     	 ldr r3,.L37
 1118 0026 1A78     	 ldrb r2,[r3]
 1119 0028 114B     	 ldr r3,.L37+4
 1120 002a 1A71     	 strb r2,[r3,#4]
 273:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1121              	 .loc 3 273 0
 1122 002c 104B     	 ldr r3,.L37+4
 1123 002e 6222     	 mov r2,#98
 1124 0030 5A71     	 strb r2,[r3,#5]
 274:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1125              	 .loc 3 274 0
 1126 0032 114B     	 ldr r3,.L37+12
 1127 0034 1B88     	 ldrh r3,[r3]
 1128 0036 1B0A     	 lsr r3,r3,#8
 1129 0038 9BB2     	 uxth r3,r3
 1130 003a DAB2     	 uxtb r2,r3
 1131 003c 0C4B     	 ldr r3,.L37+4
 1132 003e 9A71     	 strb r2,[r3,#6]
 275:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1133              	 .loc 3 275 0
 1134 0040 0D4B     	 ldr r3,.L37+12
 1135 0042 1B88     	 ldrh r3,[r3]
 1136 0044 DAB2     	 uxtb r2,r3
 1137 0046 0A4B     	 ldr r3,.L37+4
 1138 0048 DA71     	 strb r2,[r3,#7]
 276:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1139              	 .loc 3 276 0
 1140 004a 0C4B     	 ldr r3,.L37+16
 1141 004c 1B88     	 ldrh r3,[r3]
 1142 004e 1B0A     	 lsr r3,r3,#8
 1143 0050 9BB2     	 uxth r3,r3
 1144 0052 DAB2     	 uxtb r2,r3
 1145 0054 064B     	 ldr r3,.L37+4
 1146 0056 1A72     	 strb r2,[r3,#8]
 277:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1147              	 .loc 3 277 0
 1148 0058 084B     	 ldr r3,.L37+16
 1149 005a 1B88     	 ldrh r3,[r3]
 1150 005c DAB2     	 uxtb r2,r3
 1151 005e 044B     	 ldr r3,.L37+4
 1152 0060 5A72     	 strb r2,[r3,#9]
 278:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1153              	 .loc 3 278 0
 1154 0062 034B     	 ldr r3,.L37+4
 1155 0064 FF22     	 mov r2,#255
 1156 0066 9A72     	 strb r2,[r3,#10]
 279:../samuel/samuel_io.c ****  }
 1157              	 .loc 3 279 0
 1158 0068 BD46     	 mov sp,r7
 1159              	 
 1160 006a 80BD     	 pop {r7,pc}
 1161              	.L38:
 1162              	 .align 2
 1163              	.L37:
 1164 006c 00000000 	 .word transmit_buf_size
 1165 0070 00000000 	 .word new_data
 1166 0074 00000000 	 .word node_id
 1167 0078 00000000 	 .word resultC2
 1168 007c 00000000 	 .word resultD2
 1169              	 .cfi_endproc
 1170              	.LFE300:
 1172              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1173              	 .align 2
 1174              	 .global new_data_aktLichtBack
 1175              	 .code 16
 1176              	 .thumb_func
 1178              	new_data_aktLichtBack:
 1179              	.LFB301:
 280:../samuel/samuel_io.c ****  //------------------------------------------------------
 281:../samuel/samuel_io.c **** 
 282:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 283:../samuel/samuel_io.c ****  {
 1180              	 .loc 3 283 0
 1181              	 .cfi_startproc
 1182 0000 80B5     	 push {r7,lr}
 1183              	.LCFI34:
 1184              	 .cfi_def_cfa_offset 8
 1185              	 .cfi_offset 7,-8
 1186              	 .cfi_offset 14,-4
 1187 0002 00AF     	 add r7,sp,#0
 1188              	.LCFI35:
 1189              	 .cfi_def_cfa_register 7
 284:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1190              	 .loc 3 284 0
 1191 0004 194B     	 ldr r3,.L40
 1192 0006 0B22     	 mov r2,#11
 1193 0008 1A70     	 strb r2,[r3]
 285:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1194              	 .loc 3 285 0
 1195 000a 194B     	 ldr r3,.L40+4
 1196 000c 4C22     	 mov r2,#76
 1197 000e 1A70     	 strb r2,[r3]
 286:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1198              	 .loc 3 286 0
 1199 0010 174B     	 ldr r3,.L40+4
 1200 0012 4922     	 mov r2,#73
 1201 0014 5A70     	 strb r2,[r3,#1]
 287:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1202              	 .loc 3 287 0
 1203 0016 164B     	 ldr r3,.L40+4
 1204 0018 4E22     	 mov r2,#78
 1205 001a 9A70     	 strb r2,[r3,#2]
 288:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1206              	 .loc 3 288 0
 1207 001c 154B     	 ldr r3,.L40+8
 1208 001e 1A78     	 ldrb r2,[r3]
 1209 0020 134B     	 ldr r3,.L40+4
 1210 0022 DA70     	 strb r2,[r3,#3]
 289:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1211              	 .loc 3 289 0
 1212 0024 114B     	 ldr r3,.L40
 1213 0026 1A78     	 ldrb r2,[r3]
 1214 0028 114B     	 ldr r3,.L40+4
 1215 002a 1A71     	 strb r2,[r3,#4]
 290:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1216              	 .loc 3 290 0
 1217 002c 104B     	 ldr r3,.L40+4
 1218 002e 6622     	 mov r2,#102
 1219 0030 5A71     	 strb r2,[r3,#5]
 291:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1220              	 .loc 3 291 0
 1221 0032 114B     	 ldr r3,.L40+12
 1222 0034 1B88     	 ldrh r3,[r3]
 1223 0036 1B0A     	 lsr r3,r3,#8
 1224 0038 9BB2     	 uxth r3,r3
 1225 003a DAB2     	 uxtb r2,r3
 1226 003c 0C4B     	 ldr r3,.L40+4
 1227 003e 9A71     	 strb r2,[r3,#6]
 292:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1228              	 .loc 3 292 0
 1229 0040 0D4B     	 ldr r3,.L40+12
 1230 0042 1B88     	 ldrh r3,[r3]
 1231 0044 DAB2     	 uxtb r2,r3
 1232 0046 0A4B     	 ldr r3,.L40+4
 1233 0048 DA71     	 strb r2,[r3,#7]
 293:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1234              	 .loc 3 293 0
 1235 004a 0C4B     	 ldr r3,.L40+16
 1236 004c 1B88     	 ldrh r3,[r3]
 1237 004e 1B0A     	 lsr r3,r3,#8
 1238 0050 9BB2     	 uxth r3,r3
 1239 0052 DAB2     	 uxtb r2,r3
 1240 0054 064B     	 ldr r3,.L40+4
 1241 0056 1A72     	 strb r2,[r3,#8]
 294:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1242              	 .loc 3 294 0
 1243 0058 084B     	 ldr r3,.L40+16
 1244 005a 1B88     	 ldrh r3,[r3]
 1245 005c DAB2     	 uxtb r2,r3
 1246 005e 044B     	 ldr r3,.L40+4
 1247 0060 5A72     	 strb r2,[r3,#9]
 295:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1248              	 .loc 3 295 0
 1249 0062 034B     	 ldr r3,.L40+4
 1250 0064 FF22     	 mov r2,#255
 1251 0066 9A72     	 strb r2,[r3,#10]
 296:../samuel/samuel_io.c ****  }
 1252              	 .loc 3 296 0
 1253 0068 BD46     	 mov sp,r7
 1254              	 
 1255 006a 80BD     	 pop {r7,pc}
 1256              	.L41:
 1257              	 .align 2
 1258              	.L40:
 1259 006c 00000000 	 .word transmit_buf_size
 1260 0070 00000000 	 .word new_data
 1261 0074 00000000 	 .word node_id
 1262 0078 00000000 	 .word dimAkt_Ww
 1263 007c 00000000 	 .word dimAkt_Cw
 1264              	 .cfi_endproc
 1265              	.LFE301:
 1267              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1268              	 .align 2
 1269              	 .global new_data_offLichtBack
 1270              	 .code 16
 1271              	 .thumb_func
 1273              	new_data_offLichtBack:
 1274              	.LFB302:
 297:../samuel/samuel_io.c ****  //------------------------------------------------------
 298:../samuel/samuel_io.c **** 
 299:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 300:../samuel/samuel_io.c ****  {
 1275              	 .loc 3 300 0
 1276              	 .cfi_startproc
 1277 0000 80B5     	 push {r7,lr}
 1278              	.LCFI36:
 1279              	 .cfi_def_cfa_offset 8
 1280              	 .cfi_offset 7,-8
 1281              	 .cfi_offset 14,-4
 1282 0002 00AF     	 add r7,sp,#0
 1283              	.LCFI37:
 1284              	 .cfi_def_cfa_register 7
 301:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1285              	 .loc 3 301 0
 1286 0004 1D4B     	 ldr r3,.L43
 1287 0006 0D22     	 mov r2,#13
 1288 0008 1A70     	 strb r2,[r3]
 302:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1289              	 .loc 3 302 0
 1290 000a 1D4B     	 ldr r3,.L43+4
 1291 000c 4C22     	 mov r2,#76
 1292 000e 1A70     	 strb r2,[r3]
 303:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1293              	 .loc 3 303 0
 1294 0010 1B4B     	 ldr r3,.L43+4
 1295 0012 4922     	 mov r2,#73
 1296 0014 5A70     	 strb r2,[r3,#1]
 304:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1297              	 .loc 3 304 0
 1298 0016 1A4B     	 ldr r3,.L43+4
 1299 0018 4E22     	 mov r2,#78
 1300 001a 9A70     	 strb r2,[r3,#2]
 305:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1301              	 .loc 3 305 0
 1302 001c 194B     	 ldr r3,.L43+8
 1303 001e 1A78     	 ldrb r2,[r3]
 1304 0020 174B     	 ldr r3,.L43+4
 1305 0022 DA70     	 strb r2,[r3,#3]
 306:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1306              	 .loc 3 306 0
 1307 0024 154B     	 ldr r3,.L43
 1308 0026 1A78     	 ldrb r2,[r3]
 1309 0028 154B     	 ldr r3,.L43+4
 1310 002a 1A71     	 strb r2,[r3,#4]
 307:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1311              	 .loc 3 307 0
 1312 002c 144B     	 ldr r3,.L43+4
 1313 002e 6722     	 mov r2,#103
 1314 0030 5A71     	 strb r2,[r3,#5]
 308:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1315              	 .loc 3 308 0
 1316 0032 154B     	 ldr r3,.L43+12
 1317 0034 1B88     	 ldrh r3,[r3]
 1318 0036 1B0A     	 lsr r3,r3,#8
 1319 0038 9BB2     	 uxth r3,r3
 1320 003a DAB2     	 uxtb r2,r3
 1321 003c 104B     	 ldr r3,.L43+4
 1322 003e 9A71     	 strb r2,[r3,#6]
 309:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1323              	 .loc 3 309 0
 1324 0040 114B     	 ldr r3,.L43+12
 1325 0042 1B88     	 ldrh r3,[r3]
 1326 0044 DAB2     	 uxtb r2,r3
 1327 0046 0E4B     	 ldr r3,.L43+4
 1328 0048 DA71     	 strb r2,[r3,#7]
 310:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1329              	 .loc 3 310 0
 1330 004a 104B     	 ldr r3,.L43+16
 1331 004c 1B88     	 ldrh r3,[r3]
 1332 004e 1B0A     	 lsr r3,r3,#8
 1333 0050 9BB2     	 uxth r3,r3
 1334 0052 DAB2     	 uxtb r2,r3
 1335 0054 0A4B     	 ldr r3,.L43+4
 1336 0056 1A72     	 strb r2,[r3,#8]
 311:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1337              	 .loc 3 311 0
 1338 0058 0C4B     	 ldr r3,.L43+16
 1339 005a 1B88     	 ldrh r3,[r3]
 1340 005c DAB2     	 uxtb r2,r3
 1341 005e 084B     	 ldr r3,.L43+4
 1342 0060 5A72     	 strb r2,[r3,#9]
 312:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1343              	 .loc 3 312 0
 1344 0062 0B4B     	 ldr r3,.L43+20
 1345 0064 1A78     	 ldrb r2,[r3]
 1346 0066 064B     	 ldr r3,.L43+4
 1347 0068 9A72     	 strb r2,[r3,#10]
 313:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1348              	 .loc 3 313 0
 1349 006a 0A4B     	 ldr r3,.L43+24
 1350 006c 1A78     	 ldrb r2,[r3]
 1351 006e 044B     	 ldr r3,.L43+4
 1352 0070 DA72     	 strb r2,[r3,#11]
 314:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1353              	 .loc 3 314 0
 1354 0072 034B     	 ldr r3,.L43+4
 1355 0074 FF22     	 mov r2,#255
 1356 0076 1A73     	 strb r2,[r3,#12]
 315:../samuel/samuel_io.c ****  }
 1357              	 .loc 3 315 0
 1358 0078 BD46     	 mov sp,r7
 1359              	 
 1360 007a 80BD     	 pop {r7,pc}
 1361              	.L44:
 1362              	 .align 2
 1363              	.L43:
 1364 007c 00000000 	 .word transmit_buf_size
 1365 0080 00000000 	 .word new_data
 1366 0084 00000000 	 .word node_id
 1367 0088 00000000 	 .word dimOff_Ww
 1368 008c 00000000 	 .word dimOff_Cw
 1369 0090 00000000 	 .word RegOnOff
 1370 0094 00000000 	 .word RegOnOff2
 1371              	 .cfi_endproc
 1372              	.LFE302:
 1374              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1375              	 .align 2
 1376              	 .global new_data_Bright_Color_Back
 1377              	 .code 16
 1378              	 .thumb_func
 1380              	new_data_Bright_Color_Back:
 1381              	.LFB303:
 316:../samuel/samuel_io.c ****  //------------------------------------------------------
 317:../samuel/samuel_io.c **** 
 318:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 319:../samuel/samuel_io.c ****   {
 1382              	 .loc 3 319 0
 1383              	 .cfi_startproc
 1384 0000 80B5     	 push {r7,lr}
 1385              	.LCFI38:
 1386              	 .cfi_def_cfa_offset 8
 1387              	 .cfi_offset 7,-8
 1388              	 .cfi_offset 14,-4
 1389 0002 00AF     	 add r7,sp,#0
 1390              	.LCFI39:
 1391              	 .cfi_def_cfa_register 7
 320:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1392              	 .loc 3 320 0
 1393 0004 194B     	 ldr r3,.L46
 1394 0006 0B22     	 mov r2,#11
 1395 0008 1A70     	 strb r2,[r3]
 321:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1396              	 .loc 3 321 0
 1397 000a 194B     	 ldr r3,.L46+4
 1398 000c 4C22     	 mov r2,#76
 1399 000e 1A70     	 strb r2,[r3]
 322:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1400              	 .loc 3 322 0
 1401 0010 174B     	 ldr r3,.L46+4
 1402 0012 4922     	 mov r2,#73
 1403 0014 5A70     	 strb r2,[r3,#1]
 323:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1404              	 .loc 3 323 0
 1405 0016 164B     	 ldr r3,.L46+4
 1406 0018 4E22     	 mov r2,#78
 1407 001a 9A70     	 strb r2,[r3,#2]
 324:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1408              	 .loc 3 324 0
 1409 001c 154B     	 ldr r3,.L46+8
 1410 001e 1A78     	 ldrb r2,[r3]
 1411 0020 134B     	 ldr r3,.L46+4
 1412 0022 DA70     	 strb r2,[r3,#3]
 325:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1413              	 .loc 3 325 0
 1414 0024 114B     	 ldr r3,.L46
 1415 0026 1A78     	 ldrb r2,[r3]
 1416 0028 114B     	 ldr r3,.L46+4
 1417 002a 1A71     	 strb r2,[r3,#4]
 326:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1418              	 .loc 3 326 0
 1419 002c 104B     	 ldr r3,.L46+4
 1420 002e 6822     	 mov r2,#104
 1421 0030 5A71     	 strb r2,[r3,#5]
 327:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1422              	 .loc 3 327 0
 1423 0032 114B     	 ldr r3,.L46+12
 1424 0034 1B88     	 ldrh r3,[r3]
 1425 0036 1B0A     	 lsr r3,r3,#8
 1426 0038 9BB2     	 uxth r3,r3
 1427 003a DAB2     	 uxtb r2,r3
 1428 003c 0C4B     	 ldr r3,.L46+4
 1429 003e 9A71     	 strb r2,[r3,#6]
 328:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1430              	 .loc 3 328 0
 1431 0040 0D4B     	 ldr r3,.L46+12
 1432 0042 1B88     	 ldrh r3,[r3]
 1433 0044 DAB2     	 uxtb r2,r3
 1434 0046 0A4B     	 ldr r3,.L46+4
 1435 0048 DA71     	 strb r2,[r3,#7]
 329:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1436              	 .loc 3 329 0
 1437 004a 0C4B     	 ldr r3,.L46+16
 1438 004c 1B88     	 ldrh r3,[r3]
 1439 004e 1B0A     	 lsr r3,r3,#8
 1440 0050 9BB2     	 uxth r3,r3
 1441 0052 DAB2     	 uxtb r2,r3
 1442 0054 064B     	 ldr r3,.L46+4
 1443 0056 1A72     	 strb r2,[r3,#8]
 330:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1444              	 .loc 3 330 0
 1445 0058 084B     	 ldr r3,.L46+16
 1446 005a 1B88     	 ldrh r3,[r3]
 1447 005c DAB2     	 uxtb r2,r3
 1448 005e 044B     	 ldr r3,.L46+4
 1449 0060 5A72     	 strb r2,[r3,#9]
 331:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1450              	 .loc 3 331 0
 1451 0062 034B     	 ldr r3,.L46+4
 1452 0064 FF22     	 mov r2,#255
 1453 0066 9A72     	 strb r2,[r3,#10]
 332:../samuel/samuel_io.c ****   }
 1454              	 .loc 3 332 0
 1455 0068 BD46     	 mov sp,r7
 1456              	 
 1457 006a 80BD     	 pop {r7,pc}
 1458              	.L47:
 1459              	 .align 2
 1460              	.L46:
 1461 006c 00000000 	 .word transmit_buf_size
 1462 0070 00000000 	 .word new_data
 1463 0074 00000000 	 .word node_id
 1464 0078 00000000 	 .word Brightness_Gen
 1465 007c 00000000 	 .word ColorQuot_Gen
 1466              	 .cfi_endproc
 1467              	.LFE303:
 1469              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1470              	 .align 2
 1471              	 .global new_data_Quot_Walk_Back
 1472              	 .code 16
 1473              	 .thumb_func
 1475              	new_data_Quot_Walk_Back:
 1476              	.LFB304:
 333:../samuel/samuel_io.c ****   //------------------------------------------------------
 334:../samuel/samuel_io.c **** 
 335:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 336:../samuel/samuel_io.c ****   {
 1477              	 .loc 3 336 0
 1478              	 .cfi_startproc
 1479 0000 80B5     	 push {r7,lr}
 1480              	.LCFI40:
 1481              	 .cfi_def_cfa_offset 8
 1482              	 .cfi_offset 7,-8
 1483              	 .cfi_offset 14,-4
 1484 0002 00AF     	 add r7,sp,#0
 1485              	.LCFI41:
 1486              	 .cfi_def_cfa_register 7
 337:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1487              	 .loc 3 337 0
 1488 0004 194B     	 ldr r3,.L49
 1489 0006 0B22     	 mov r2,#11
 1490 0008 1A70     	 strb r2,[r3]
 338:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1491              	 .loc 3 338 0
 1492 000a 194B     	 ldr r3,.L49+4
 1493 000c 4C22     	 mov r2,#76
 1494 000e 1A70     	 strb r2,[r3]
 339:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1495              	 .loc 3 339 0
 1496 0010 174B     	 ldr r3,.L49+4
 1497 0012 4922     	 mov r2,#73
 1498 0014 5A70     	 strb r2,[r3,#1]
 340:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1499              	 .loc 3 340 0
 1500 0016 164B     	 ldr r3,.L49+4
 1501 0018 4E22     	 mov r2,#78
 1502 001a 9A70     	 strb r2,[r3,#2]
 341:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1503              	 .loc 3 341 0
 1504 001c 154B     	 ldr r3,.L49+8
 1505 001e 1A78     	 ldrb r2,[r3]
 1506 0020 134B     	 ldr r3,.L49+4
 1507 0022 DA70     	 strb r2,[r3,#3]
 342:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1508              	 .loc 3 342 0
 1509 0024 114B     	 ldr r3,.L49
 1510 0026 1A78     	 ldrb r2,[r3]
 1511 0028 114B     	 ldr r3,.L49+4
 1512 002a 1A71     	 strb r2,[r3,#4]
 343:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1513              	 .loc 3 343 0
 1514 002c 104B     	 ldr r3,.L49+4
 1515 002e 6922     	 mov r2,#105
 1516 0030 5A71     	 strb r2,[r3,#5]
 344:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1517              	 .loc 3 344 0
 1518 0032 114B     	 ldr r3,.L49+12
 1519 0034 1B88     	 ldrh r3,[r3]
 1520 0036 1B0A     	 lsr r3,r3,#8
 1521 0038 9BB2     	 uxth r3,r3
 1522 003a DAB2     	 uxtb r2,r3
 1523 003c 0C4B     	 ldr r3,.L49+4
 1524 003e 9A71     	 strb r2,[r3,#6]
 345:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1525              	 .loc 3 345 0
 1526 0040 0D4B     	 ldr r3,.L49+12
 1527 0042 1B88     	 ldrh r3,[r3]
 1528 0044 DAB2     	 uxtb r2,r3
 1529 0046 0A4B     	 ldr r3,.L49+4
 1530 0048 DA71     	 strb r2,[r3,#7]
 346:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1531              	 .loc 3 346 0
 1532 004a 0C4B     	 ldr r3,.L49+16
 1533 004c 1B88     	 ldrh r3,[r3]
 1534 004e 1B0A     	 lsr r3,r3,#8
 1535 0050 9BB2     	 uxth r3,r3
 1536 0052 DAB2     	 uxtb r2,r3
 1537 0054 064B     	 ldr r3,.L49+4
 1538 0056 1A72     	 strb r2,[r3,#8]
 347:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1539              	 .loc 3 347 0
 1540 0058 084B     	 ldr r3,.L49+16
 1541 005a 1B88     	 ldrh r3,[r3]
 1542 005c DAB2     	 uxtb r2,r3
 1543 005e 044B     	 ldr r3,.L49+4
 1544 0060 5A72     	 strb r2,[r3,#9]
 348:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1545              	 .loc 3 348 0
 1546 0062 034B     	 ldr r3,.L49+4
 1547 0064 FF22     	 mov r2,#255
 1548 0066 9A72     	 strb r2,[r3,#10]
 349:../samuel/samuel_io.c ****   }
 1549              	 .loc 3 349 0
 1550 0068 BD46     	 mov sp,r7
 1551              	 
 1552 006a 80BD     	 pop {r7,pc}
 1553              	.L50:
 1554              	 .align 2
 1555              	.L49:
 1556 006c 00000000 	 .word transmit_buf_size
 1557 0070 00000000 	 .word new_data
 1558 0074 00000000 	 .word node_id
 1559 0078 00000000 	 .word linearwalk_gen
 1560 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1561              	 .cfi_endproc
 1562              	.LFE304:
 1564              	 .section .text.new_data_HalloBack,"ax",%progbits
 1565              	 .align 2
 1566              	 .global new_data_HalloBack
 1567              	 .code 16
 1568              	 .thumb_func
 1570              	new_data_HalloBack:
 1571              	.LFB305:
 350:../samuel/samuel_io.c ****  //------------------------------------------
 351:../samuel/samuel_io.c **** 
 352:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 353:../samuel/samuel_io.c ****   {
 1572              	 .loc 3 353 0
 1573              	 .cfi_startproc
 1574 0000 80B5     	 push {r7,lr}
 1575              	.LCFI42:
 1576              	 .cfi_def_cfa_offset 8
 1577              	 .cfi_offset 7,-8
 1578              	 .cfi_offset 14,-4
 1579 0002 00AF     	 add r7,sp,#0
 1580              	.LCFI43:
 1581              	 .cfi_def_cfa_register 7
 354:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1582              	 .loc 3 354 0
 1583 0004 134B     	 ldr r3,.L52
 1584 0006 0B22     	 mov r2,#11
 1585 0008 1A70     	 strb r2,[r3]
 355:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1586              	 .loc 3 355 0
 1587 000a 134B     	 ldr r3,.L52+4
 1588 000c 4C22     	 mov r2,#76
 1589 000e 1A70     	 strb r2,[r3]
 356:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1590              	 .loc 3 356 0
 1591 0010 114B     	 ldr r3,.L52+4
 1592 0012 4922     	 mov r2,#73
 1593 0014 5A70     	 strb r2,[r3,#1]
 357:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1594              	 .loc 3 357 0
 1595 0016 104B     	 ldr r3,.L52+4
 1596 0018 4E22     	 mov r2,#78
 1597 001a 9A70     	 strb r2,[r3,#2]
 358:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1598              	 .loc 3 358 0
 1599 001c 0F4B     	 ldr r3,.L52+8
 1600 001e 1A78     	 ldrb r2,[r3]
 1601 0020 0D4B     	 ldr r3,.L52+4
 1602 0022 DA70     	 strb r2,[r3,#3]
 359:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1603              	 .loc 3 359 0
 1604 0024 0B4B     	 ldr r3,.L52
 1605 0026 1A78     	 ldrb r2,[r3]
 1606 0028 0B4B     	 ldr r3,.L52+4
 1607 002a 1A71     	 strb r2,[r3,#4]
 360:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1608              	 .loc 3 360 0
 1609 002c 0A4B     	 ldr r3,.L52+4
 1610 002e 6A22     	 mov r2,#106
 1611 0030 5A71     	 strb r2,[r3,#5]
 361:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1612              	 .loc 3 361 0
 1613 0032 094B     	 ldr r3,.L52+4
 1614 0034 6F22     	 mov r2,#111
 1615 0036 9A71     	 strb r2,[r3,#6]
 362:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1616              	 .loc 3 362 0
 1617 0038 074B     	 ldr r3,.L52+4
 1618 003a 6B22     	 mov r2,#107
 1619 003c DA71     	 strb r2,[r3,#7]
 363:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1620              	 .loc 3 363 0
 1621 003e 064B     	 ldr r3,.L52+4
 1622 0040 6F22     	 mov r2,#111
 1623 0042 1A72     	 strb r2,[r3,#8]
 364:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1624              	 .loc 3 364 0
 1625 0044 044B     	 ldr r3,.L52+4
 1626 0046 6B22     	 mov r2,#107
 1627 0048 5A72     	 strb r2,[r3,#9]
 365:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1628              	 .loc 3 365 0
 1629 004a 034B     	 ldr r3,.L52+4
 1630 004c FF22     	 mov r2,#255
 1631 004e 9A72     	 strb r2,[r3,#10]
 366:../samuel/samuel_io.c ****   }
 1632              	 .loc 3 366 0
 1633 0050 BD46     	 mov sp,r7
 1634              	 
 1635 0052 80BD     	 pop {r7,pc}
 1636              	.L53:
 1637              	 .align 2
 1638              	.L52:
 1639 0054 00000000 	 .word transmit_buf_size
 1640 0058 00000000 	 .word new_data
 1641 005c 00000000 	 .word node_id
 1642              	 .cfi_endproc
 1643              	.LFE305:
 1645              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 1646              	 .align 2
 1647              	 .global new_data_neuNodeIdBack
 1648              	 .code 16
 1649              	 .thumb_func
 1651              	new_data_neuNodeIdBack:
 1652              	.LFB306:
 367:../samuel/samuel_io.c ****   //------------------------------------------------------
 368:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 369:../samuel/samuel_io.c ****    {
 1653              	 .loc 3 369 0
 1654              	 .cfi_startproc
 1655 0000 80B5     	 push {r7,lr}
 1656              	.LCFI44:
 1657              	 .cfi_def_cfa_offset 8
 1658              	 .cfi_offset 7,-8
 1659              	 .cfi_offset 14,-4
 1660 0002 00AF     	 add r7,sp,#0
 1661              	.LCFI45:
 1662              	 .cfi_def_cfa_register 7
 370:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 1663              	 .loc 3 370 0
 1664 0004 1B4B     	 ldr r3,.L55
 1665 0006 0C22     	 mov r2,#12
 1666 0008 1A70     	 strb r2,[r3]
 371:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1667              	 .loc 3 371 0
 1668 000a 1B4B     	 ldr r3,.L55+4
 1669 000c 4C22     	 mov r2,#76
 1670 000e 1A70     	 strb r2,[r3]
 372:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1671              	 .loc 3 372 0
 1672 0010 194B     	 ldr r3,.L55+4
 1673 0012 4922     	 mov r2,#73
 1674 0014 5A70     	 strb r2,[r3,#1]
 373:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1675              	 .loc 3 373 0
 1676 0016 184B     	 ldr r3,.L55+4
 1677 0018 4E22     	 mov r2,#78
 1678 001a 9A70     	 strb r2,[r3,#2]
 374:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1679              	 .loc 3 374 0
 1680 001c 174B     	 ldr r3,.L55+8
 1681 001e 1A78     	 ldrb r2,[r3]
 1682 0020 154B     	 ldr r3,.L55+4
 1683 0022 DA70     	 strb r2,[r3,#3]
 375:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1684              	 .loc 3 375 0
 1685 0024 134B     	 ldr r3,.L55
 1686 0026 1A78     	 ldrb r2,[r3]
 1687 0028 134B     	 ldr r3,.L55+4
 1688 002a 1A71     	 strb r2,[r3,#4]
 376:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 1689              	 .loc 3 376 0
 1690 002c 124B     	 ldr r3,.L55+4
 1691 002e 6B22     	 mov r2,#107
 1692 0030 5A71     	 strb r2,[r3,#5]
 377:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 1693              	 .loc 3 377 0
 1694 0032 134B     	 ldr r3,.L55+12
 1695 0034 1A78     	 ldrb r2,[r3]
 1696 0036 104B     	 ldr r3,.L55+4
 1697 0038 9A71     	 strb r2,[r3,#6]
 378:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 1698              	 .loc 3 378 0
 1699 003a 124B     	 ldr r3,.L55+16
 1700 003c 1B88     	 ldrh r3,[r3]
 1701 003e 1B0A     	 lsr r3,r3,#8
 1702 0040 9BB2     	 uxth r3,r3
 1703 0042 DAB2     	 uxtb r2,r3
 1704 0044 0C4B     	 ldr r3,.L55+4
 1705 0046 DA71     	 strb r2,[r3,#7]
 379:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 1706              	 .loc 3 379 0
 1707 0048 0E4B     	 ldr r3,.L55+16
 1708 004a 1B88     	 ldrh r3,[r3]
 1709 004c DAB2     	 uxtb r2,r3
 1710 004e 0A4B     	 ldr r3,.L55+4
 1711 0050 1A72     	 strb r2,[r3,#8]
 380:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 1712              	 .loc 3 380 0
 1713 0052 0D4B     	 ldr r3,.L55+20
 1714 0054 1B88     	 ldrh r3,[r3]
 1715 0056 1B0A     	 lsr r3,r3,#8
 1716 0058 9BB2     	 uxth r3,r3
 1717 005a DAB2     	 uxtb r2,r3
 1718 005c 064B     	 ldr r3,.L55+4
 1719 005e 5A72     	 strb r2,[r3,#9]
 381:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 1720              	 .loc 3 381 0
 1721 0060 094B     	 ldr r3,.L55+20
 1722 0062 1B88     	 ldrh r3,[r3]
 1723 0064 DAB2     	 uxtb r2,r3
 1724 0066 044B     	 ldr r3,.L55+4
 1725 0068 9A72     	 strb r2,[r3,#10]
 382:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 1726              	 .loc 3 382 0
 1727 006a 034B     	 ldr r3,.L55+4
 1728 006c FF22     	 mov r2,#255
 1729 006e DA72     	 strb r2,[r3,#11]
 383:../samuel/samuel_io.c ****    }
 1730              	 .loc 3 383 0
 1731 0070 BD46     	 mov sp,r7
 1732              	 
 1733 0072 80BD     	 pop {r7,pc}
 1734              	.L56:
 1735              	 .align 2
 1736              	.L55:
 1737 0074 00000000 	 .word transmit_buf_size
 1738 0078 00000000 	 .word new_data
 1739 007c 00000000 	 .word node_id
 1740 0080 00000000 	 .word node_id_neu
 1741 0084 00000000 	 .word Ser_NrH
 1742 0088 00000000 	 .word Ser_NrL
 1743              	 .cfi_endproc
 1744              	.LFE306:
 1746              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 1747              	 .align 2
 1748              	 .global new_data_neuSerNrBack
 1749              	 .code 16
 1750              	 .thumb_func
 1752              	new_data_neuSerNrBack:
 1753              	.LFB307:
 384:../samuel/samuel_io.c ****    //------------------------------------------------------
 385:../samuel/samuel_io.c **** 
 386:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 387:../samuel/samuel_io.c ****    {
 1754              	 .loc 3 387 0
 1755              	 .cfi_startproc
 1756 0000 80B5     	 push {r7,lr}
 1757              	.LCFI46:
 1758              	 .cfi_def_cfa_offset 8
 1759              	 .cfi_offset 7,-8
 1760              	 .cfi_offset 14,-4
 1761 0002 00AF     	 add r7,sp,#0
 1762              	.LCFI47:
 1763              	 .cfi_def_cfa_register 7
 388:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 1764              	 .loc 3 388 0
 1765 0004 254B     	 ldr r3,.L58
 1766 0006 0F22     	 mov r2,#15
 1767 0008 1A70     	 strb r2,[r3]
 389:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1768              	 .loc 3 389 0
 1769 000a 254B     	 ldr r3,.L58+4
 1770 000c 4C22     	 mov r2,#76
 1771 000e 1A70     	 strb r2,[r3]
 390:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1772              	 .loc 3 390 0
 1773 0010 234B     	 ldr r3,.L58+4
 1774 0012 4922     	 mov r2,#73
 1775 0014 5A70     	 strb r2,[r3,#1]
 391:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1776              	 .loc 3 391 0
 1777 0016 224B     	 ldr r3,.L58+4
 1778 0018 4E22     	 mov r2,#78
 1779 001a 9A70     	 strb r2,[r3,#2]
 392:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1780              	 .loc 3 392 0
 1781 001c 214B     	 ldr r3,.L58+8
 1782 001e 1A78     	 ldrb r2,[r3]
 1783 0020 1F4B     	 ldr r3,.L58+4
 1784 0022 DA70     	 strb r2,[r3,#3]
 393:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1785              	 .loc 3 393 0
 1786 0024 1D4B     	 ldr r3,.L58
 1787 0026 1A78     	 ldrb r2,[r3]
 1788 0028 1D4B     	 ldr r3,.L58+4
 1789 002a 1A71     	 strb r2,[r3,#4]
 394:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 1790              	 .loc 3 394 0
 1791 002c 1C4B     	 ldr r3,.L58+4
 1792 002e 6C22     	 mov r2,#108
 1793 0030 5A71     	 strb r2,[r3,#5]
 395:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 1794              	 .loc 3 395 0
 1795 0032 1D4B     	 ldr r3,.L58+12
 1796 0034 1B88     	 ldrh r3,[r3]
 1797 0036 1B0A     	 lsr r3,r3,#8
 1798 0038 9BB2     	 uxth r3,r3
 1799 003a DAB2     	 uxtb r2,r3
 1800 003c 184B     	 ldr r3,.L58+4
 1801 003e 9A71     	 strb r2,[r3,#6]
 396:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 1802              	 .loc 3 396 0
 1803 0040 194B     	 ldr r3,.L58+12
 1804 0042 1B88     	 ldrh r3,[r3]
 1805 0044 DAB2     	 uxtb r2,r3
 1806 0046 164B     	 ldr r3,.L58+4
 1807 0048 DA71     	 strb r2,[r3,#7]
 397:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 1808              	 .loc 3 397 0
 1809 004a 184B     	 ldr r3,.L58+16
 1810 004c 1B88     	 ldrh r3,[r3]
 1811 004e 1B0A     	 lsr r3,r3,#8
 1812 0050 9BB2     	 uxth r3,r3
 1813 0052 DAB2     	 uxtb r2,r3
 1814 0054 124B     	 ldr r3,.L58+4
 1815 0056 1A72     	 strb r2,[r3,#8]
 398:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 1816              	 .loc 3 398 0
 1817 0058 144B     	 ldr r3,.L58+16
 1818 005a 1B88     	 ldrh r3,[r3]
 1819 005c DAB2     	 uxtb r2,r3
 1820 005e 104B     	 ldr r3,.L58+4
 1821 0060 5A72     	 strb r2,[r3,#9]
 399:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 1822              	 .loc 3 399 0
 1823 0062 134B     	 ldr r3,.L58+20
 1824 0064 1B88     	 ldrh r3,[r3]
 1825 0066 1B0A     	 lsr r3,r3,#8
 1826 0068 9BB2     	 uxth r3,r3
 1827 006a DAB2     	 uxtb r2,r3
 1828 006c 0C4B     	 ldr r3,.L58+4
 1829 006e 9A72     	 strb r2,[r3,#10]
 400:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 1830              	 .loc 3 400 0
 1831 0070 0F4B     	 ldr r3,.L58+20
 1832 0072 1B88     	 ldrh r3,[r3]
 1833 0074 DAB2     	 uxtb r2,r3
 1834 0076 0A4B     	 ldr r3,.L58+4
 1835 0078 DA72     	 strb r2,[r3,#11]
 401:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 1836              	 .loc 3 401 0
 1837 007a 0E4B     	 ldr r3,.L58+24
 1838 007c 1B88     	 ldrh r3,[r3]
 1839 007e 1B0A     	 lsr r3,r3,#8
 1840 0080 9BB2     	 uxth r3,r3
 1841 0082 DAB2     	 uxtb r2,r3
 1842 0084 064B     	 ldr r3,.L58+4
 1843 0086 1A73     	 strb r2,[r3,#12]
 402:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 1844              	 .loc 3 402 0
 1845 0088 0A4B     	 ldr r3,.L58+24
 1846 008a 1B88     	 ldrh r3,[r3]
 1847 008c DAB2     	 uxtb r2,r3
 1848 008e 044B     	 ldr r3,.L58+4
 1849 0090 5A73     	 strb r2,[r3,#13]
 403:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 1850              	 .loc 3 403 0
 1851 0092 034B     	 ldr r3,.L58+4
 1852 0094 FF22     	 mov r2,#255
 1853 0096 9A73     	 strb r2,[r3,#14]
 404:../samuel/samuel_io.c ****    }
 1854              	 .loc 3 404 0
 1855 0098 BD46     	 mov sp,r7
 1856              	 
 1857 009a 80BD     	 pop {r7,pc}
 1858              	.L59:
 1859              	 .align 2
 1860              	.L58:
 1861 009c 00000000 	 .word transmit_buf_size
 1862 00a0 00000000 	 .word new_data
 1863 00a4 00000000 	 .word node_id
 1864 00a8 00000000 	 .word neu_Ser_NrH
 1865 00ac 00000000 	 .word neu_Ser_NrL
 1866 00b0 00000000 	 .word Ser_NrH
 1867 00b4 00000000 	 .word Ser_NrL
 1868              	 .cfi_endproc
 1869              	.LFE307:
 1871              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 1872              	 .align 2
 1873              	 .global new_data_NodeIdBack
 1874              	 .code 16
 1875              	 .thumb_func
 1877              	new_data_NodeIdBack:
 1878              	.LFB308:
 405:../samuel/samuel_io.c ****    //------------------------------------------------------
 406:../samuel/samuel_io.c **** 
 407:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 408:../samuel/samuel_io.c ****    {
 1879              	 .loc 3 408 0
 1880              	 .cfi_startproc
 1881 0000 80B5     	 push {r7,lr}
 1882              	.LCFI48:
 1883              	 .cfi_def_cfa_offset 8
 1884              	 .cfi_offset 7,-8
 1885              	 .cfi_offset 14,-4
 1886 0002 00AF     	 add r7,sp,#0
 1887              	.LCFI49:
 1888              	 .cfi_def_cfa_register 7
 409:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 1889              	 .loc 3 409 0
 1890 0004 1D4B     	 ldr r3,.L61
 1891 0006 0D22     	 mov r2,#13
 1892 0008 1A70     	 strb r2,[r3]
 410:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1893              	 .loc 3 410 0
 1894 000a 1D4B     	 ldr r3,.L61+4
 1895 000c 4C22     	 mov r2,#76
 1896 000e 1A70     	 strb r2,[r3]
 411:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1897              	 .loc 3 411 0
 1898 0010 1B4B     	 ldr r3,.L61+4
 1899 0012 4922     	 mov r2,#73
 1900 0014 5A70     	 strb r2,[r3,#1]
 412:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1901              	 .loc 3 412 0
 1902 0016 1A4B     	 ldr r3,.L61+4
 1903 0018 4E22     	 mov r2,#78
 1904 001a 9A70     	 strb r2,[r3,#2]
 413:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1905              	 .loc 3 413 0
 1906 001c 194B     	 ldr r3,.L61+8
 1907 001e 1A78     	 ldrb r2,[r3]
 1908 0020 174B     	 ldr r3,.L61+4
 1909 0022 DA70     	 strb r2,[r3,#3]
 414:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1910              	 .loc 3 414 0
 1911 0024 154B     	 ldr r3,.L61
 1912 0026 1A78     	 ldrb r2,[r3]
 1913 0028 154B     	 ldr r3,.L61+4
 1914 002a 1A71     	 strb r2,[r3,#4]
 415:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 1915              	 .loc 3 415 0
 1916 002c 144B     	 ldr r3,.L61+4
 1917 002e 6D22     	 mov r2,#109
 1918 0030 5A71     	 strb r2,[r3,#5]
 416:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 1919              	 .loc 3 416 0
 1920 0032 154B     	 ldr r3,.L61+12
 1921 0034 1A78     	 ldrb r2,[r3]
 1922 0036 124B     	 ldr r3,.L61+4
 1923 0038 9A71     	 strb r2,[r3,#6]
 417:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 1924              	 .loc 3 417 0
 1925 003a 124B     	 ldr r3,.L61+8
 1926 003c 1A78     	 ldrb r2,[r3]
 1927 003e 104B     	 ldr r3,.L61+4
 1928 0040 DA71     	 strb r2,[r3,#7]
 418:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 1929              	 .loc 3 418 0
 1930 0042 124B     	 ldr r3,.L61+16
 1931 0044 1B88     	 ldrh r3,[r3]
 1932 0046 1B0A     	 lsr r3,r3,#8
 1933 0048 9BB2     	 uxth r3,r3
 1934 004a DAB2     	 uxtb r2,r3
 1935 004c 0C4B     	 ldr r3,.L61+4
 1936 004e 1A72     	 strb r2,[r3,#8]
 419:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 1937              	 .loc 3 419 0
 1938 0050 0E4B     	 ldr r3,.L61+16
 1939 0052 1B88     	 ldrh r3,[r3]
 1940 0054 DAB2     	 uxtb r2,r3
 1941 0056 0A4B     	 ldr r3,.L61+4
 1942 0058 5A72     	 strb r2,[r3,#9]
 420:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 1943              	 .loc 3 420 0
 1944 005a 0D4B     	 ldr r3,.L61+20
 1945 005c 1B88     	 ldrh r3,[r3]
 1946 005e 1B0A     	 lsr r3,r3,#8
 1947 0060 9BB2     	 uxth r3,r3
 1948 0062 DAB2     	 uxtb r2,r3
 1949 0064 064B     	 ldr r3,.L61+4
 1950 0066 9A72     	 strb r2,[r3,#10]
 421:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 1951              	 .loc 3 421 0
 1952 0068 094B     	 ldr r3,.L61+20
 1953 006a 1B88     	 ldrh r3,[r3]
 1954 006c DAB2     	 uxtb r2,r3
 1955 006e 044B     	 ldr r3,.L61+4
 1956 0070 DA72     	 strb r2,[r3,#11]
 422:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 1957              	 .loc 3 422 0
 1958 0072 034B     	 ldr r3,.L61+4
 1959 0074 FF22     	 mov r2,#255
 1960 0076 1A73     	 strb r2,[r3,#12]
 423:../samuel/samuel_io.c ****    }
 1961              	 .loc 3 423 0
 1962 0078 BD46     	 mov sp,r7
 1963              	 
 1964 007a 80BD     	 pop {r7,pc}
 1965              	.L62:
 1966              	 .align 2
 1967              	.L61:
 1968 007c 00000000 	 .word transmit_buf_size
 1969 0080 00000000 	 .word new_data
 1970 0084 00000000 	 .word node_id
 1971 0088 00000000 	 .word node_id_alt
 1972 008c 00000000 	 .word Ser_NrH
 1973 0090 00000000 	 .word Ser_NrL
 1974              	 .cfi_endproc
 1975              	.LFE308:
 1977              	 .section .text.new_data_SerNrBack,"ax",%progbits
 1978              	 .align 2
 1979              	 .global new_data_SerNrBack
 1980              	 .code 16
 1981              	 .thumb_func
 1983              	new_data_SerNrBack:
 1984              	.LFB309:
 424:../samuel/samuel_io.c **** 
 425:../samuel/samuel_io.c ****    //------------------------------------------------------
 426:../samuel/samuel_io.c **** 
 427:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 428:../samuel/samuel_io.c ****    {
 1985              	 .loc 3 428 0
 1986              	 .cfi_startproc
 1987 0000 80B5     	 push {r7,lr}
 1988              	.LCFI50:
 1989              	 .cfi_def_cfa_offset 8
 1990              	 .cfi_offset 7,-8
 1991              	 .cfi_offset 14,-4
 1992 0002 00AF     	 add r7,sp,#0
 1993              	.LCFI51:
 1994              	 .cfi_def_cfa_register 7
 429:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 1995              	 .loc 3 429 0
 1996 0004 194B     	 ldr r3,.L64
 1997 0006 0B22     	 mov r2,#11
 1998 0008 1A70     	 strb r2,[r3]
 430:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1999              	 .loc 3 430 0
 2000 000a 194B     	 ldr r3,.L64+4
 2001 000c 4C22     	 mov r2,#76
 2002 000e 1A70     	 strb r2,[r3]
 431:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2003              	 .loc 3 431 0
 2004 0010 174B     	 ldr r3,.L64+4
 2005 0012 4922     	 mov r2,#73
 2006 0014 5A70     	 strb r2,[r3,#1]
 432:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2007              	 .loc 3 432 0
 2008 0016 164B     	 ldr r3,.L64+4
 2009 0018 4E22     	 mov r2,#78
 2010 001a 9A70     	 strb r2,[r3,#2]
 433:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2011              	 .loc 3 433 0
 2012 001c 154B     	 ldr r3,.L64+8
 2013 001e 1A78     	 ldrb r2,[r3]
 2014 0020 134B     	 ldr r3,.L64+4
 2015 0022 DA70     	 strb r2,[r3,#3]
 434:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2016              	 .loc 3 434 0
 2017 0024 114B     	 ldr r3,.L64
 2018 0026 1A78     	 ldrb r2,[r3]
 2019 0028 114B     	 ldr r3,.L64+4
 2020 002a 1A71     	 strb r2,[r3,#4]
 435:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2021              	 .loc 3 435 0
 2022 002c 104B     	 ldr r3,.L64+4
 2023 002e 6E22     	 mov r2,#110
 2024 0030 5A71     	 strb r2,[r3,#5]
 436:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2025              	 .loc 3 436 0
 2026 0032 114B     	 ldr r3,.L64+12
 2027 0034 1B88     	 ldrh r3,[r3]
 2028 0036 1B0A     	 lsr r3,r3,#8
 2029 0038 9BB2     	 uxth r3,r3
 2030 003a DAB2     	 uxtb r2,r3
 2031 003c 0C4B     	 ldr r3,.L64+4
 2032 003e 9A71     	 strb r2,[r3,#6]
 437:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2033              	 .loc 3 437 0
 2034 0040 0D4B     	 ldr r3,.L64+12
 2035 0042 1B88     	 ldrh r3,[r3]
 2036 0044 DAB2     	 uxtb r2,r3
 2037 0046 0A4B     	 ldr r3,.L64+4
 2038 0048 DA71     	 strb r2,[r3,#7]
 438:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2039              	 .loc 3 438 0
 2040 004a 0C4B     	 ldr r3,.L64+16
 2041 004c 1B88     	 ldrh r3,[r3]
 2042 004e 1B0A     	 lsr r3,r3,#8
 2043 0050 9BB2     	 uxth r3,r3
 2044 0052 DAB2     	 uxtb r2,r3
 2045 0054 064B     	 ldr r3,.L64+4
 2046 0056 1A72     	 strb r2,[r3,#8]
 439:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2047              	 .loc 3 439 0
 2048 0058 084B     	 ldr r3,.L64+16
 2049 005a 1B88     	 ldrh r3,[r3]
 2050 005c DAB2     	 uxtb r2,r3
 2051 005e 044B     	 ldr r3,.L64+4
 2052 0060 5A72     	 strb r2,[r3,#9]
 440:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2053              	 .loc 3 440 0
 2054 0062 034B     	 ldr r3,.L64+4
 2055 0064 FF22     	 mov r2,#255
 2056 0066 9A72     	 strb r2,[r3,#10]
 441:../samuel/samuel_io.c ****    }
 2057              	 .loc 3 441 0
 2058 0068 BD46     	 mov sp,r7
 2059              	 
 2060 006a 80BD     	 pop {r7,pc}
 2061              	.L65:
 2062              	 .align 2
 2063              	.L64:
 2064 006c 00000000 	 .word transmit_buf_size
 2065 0070 00000000 	 .word new_data
 2066 0074 00000000 	 .word node_id
 2067 0078 00000000 	 .word Ser_NrH
 2068 007c 00000000 	 .word Ser_NrL
 2069              	 .cfi_endproc
 2070              	.LFE309:
 2072              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2073              	 .align 2
 2074              	 .global new_data_readbuff2Back
 2075              	 .code 16
 2076              	 .thumb_func
 2078              	new_data_readbuff2Back:
 2079              	.LFB310:
 442:../samuel/samuel_io.c ****    //-------------------------------------
 443:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 444:../samuel/samuel_io.c ****    {
 2080              	 .loc 3 444 0
 2081              	 .cfi_startproc
 2082 0000 80B5     	 push {r7,lr}
 2083              	.LCFI52:
 2084              	 .cfi_def_cfa_offset 8
 2085              	 .cfi_offset 7,-8
 2086              	 .cfi_offset 14,-4
 2087 0002 00AF     	 add r7,sp,#0
 2088              	.LCFI53:
 2089              	 .cfi_def_cfa_register 7
 445:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2090              	 .loc 3 445 0
 2091 0004 2F4B     	 ldr r3,.L67
 2092 0006 1822     	 mov r2,#24
 2093 0008 1A70     	 strb r2,[r3]
 446:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2094              	 .loc 3 446 0
 2095 000a 2F4B     	 ldr r3,.L67+4
 2096 000c 4C22     	 mov r2,#76
 2097 000e 1A70     	 strb r2,[r3]
 447:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2098              	 .loc 3 447 0
 2099 0010 2D4B     	 ldr r3,.L67+4
 2100 0012 4922     	 mov r2,#73
 2101 0014 5A70     	 strb r2,[r3,#1]
 448:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2102              	 .loc 3 448 0
 2103 0016 2C4B     	 ldr r3,.L67+4
 2104 0018 4E22     	 mov r2,#78
 2105 001a 9A70     	 strb r2,[r3,#2]
 449:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2106              	 .loc 3 449 0
 2107 001c 2B4B     	 ldr r3,.L67+8
 2108 001e 1A78     	 ldrb r2,[r3]
 2109 0020 294B     	 ldr r3,.L67+4
 2110 0022 DA70     	 strb r2,[r3,#3]
 450:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2111              	 .loc 3 450 0
 2112 0024 274B     	 ldr r3,.L67
 2113 0026 1A78     	 ldrb r2,[r3]
 2114 0028 274B     	 ldr r3,.L67+4
 2115 002a 1A71     	 strb r2,[r3,#4]
 451:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2116              	 .loc 3 451 0
 2117 002c 264B     	 ldr r3,.L67+4
 2118 002e 7022     	 mov r2,#112
 2119 0030 5A71     	 strb r2,[r3,#5]
 452:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2120              	 .loc 3 452 0
 2121 0032 254B     	 ldr r3,.L67+4
 2122 0034 0022     	 mov r2,#0
 2123 0036 9A71     	 strb r2,[r3,#6]
 453:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2124              	 .loc 3 453 0
 2125 0038 254B     	 ldr r3,.L67+12
 2126 003a 1A78     	 ldrb r2,[r3]
 2127 003c 224B     	 ldr r3,.L67+4
 2128 003e DA71     	 strb r2,[r3,#7]
 454:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2129              	 .loc 3 454 0
 2130 0040 234B     	 ldr r3,.L67+12
 2131 0042 5A78     	 ldrb r2,[r3,#1]
 2132 0044 204B     	 ldr r3,.L67+4
 2133 0046 1A72     	 strb r2,[r3,#8]
 455:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2134              	 .loc 3 455 0
 2135 0048 214B     	 ldr r3,.L67+12
 2136 004a 9A78     	 ldrb r2,[r3,#2]
 2137 004c 1E4B     	 ldr r3,.L67+4
 2138 004e 5A72     	 strb r2,[r3,#9]
 456:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2139              	 .loc 3 456 0
 2140 0050 1F4B     	 ldr r3,.L67+12
 2141 0052 DA78     	 ldrb r2,[r3,#3]
 2142 0054 1C4B     	 ldr r3,.L67+4
 2143 0056 9A72     	 strb r2,[r3,#10]
 457:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2144              	 .loc 3 457 0
 2145 0058 1D4B     	 ldr r3,.L67+12
 2146 005a 1A79     	 ldrb r2,[r3,#4]
 2147 005c 1A4B     	 ldr r3,.L67+4
 2148 005e DA72     	 strb r2,[r3,#11]
 458:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2149              	 .loc 3 458 0
 2150 0060 1B4B     	 ldr r3,.L67+12
 2151 0062 5A79     	 ldrb r2,[r3,#5]
 2152 0064 184B     	 ldr r3,.L67+4
 2153 0066 1A73     	 strb r2,[r3,#12]
 459:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2154              	 .loc 3 459 0
 2155 0068 194B     	 ldr r3,.L67+12
 2156 006a 9A79     	 ldrb r2,[r3,#6]
 2157 006c 164B     	 ldr r3,.L67+4
 2158 006e 5A73     	 strb r2,[r3,#13]
 460:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2159              	 .loc 3 460 0
 2160 0070 174B     	 ldr r3,.L67+12
 2161 0072 DA79     	 ldrb r2,[r3,#7]
 2162 0074 144B     	 ldr r3,.L67+4
 2163 0076 9A73     	 strb r2,[r3,#14]
 461:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2164              	 .loc 3 461 0
 2165 0078 154B     	 ldr r3,.L67+12
 2166 007a 1A7A     	 ldrb r2,[r3,#8]
 2167 007c 124B     	 ldr r3,.L67+4
 2168 007e DA73     	 strb r2,[r3,#15]
 462:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2169              	 .loc 3 462 0
 2170 0080 134B     	 ldr r3,.L67+12
 2171 0082 5A7A     	 ldrb r2,[r3,#9]
 2172 0084 104B     	 ldr r3,.L67+4
 2173 0086 1A74     	 strb r2,[r3,#16]
 463:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2174              	 .loc 3 463 0
 2175 0088 114B     	 ldr r3,.L67+12
 2176 008a 9A7A     	 ldrb r2,[r3,#10]
 2177 008c 0E4B     	 ldr r3,.L67+4
 2178 008e 5A74     	 strb r2,[r3,#17]
 464:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2179              	 .loc 3 464 0
 2180 0090 0F4B     	 ldr r3,.L67+12
 2181 0092 DA7A     	 ldrb r2,[r3,#11]
 2182 0094 0C4B     	 ldr r3,.L67+4
 2183 0096 9A74     	 strb r2,[r3,#18]
 465:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2184              	 .loc 3 465 0
 2185 0098 0D4B     	 ldr r3,.L67+12
 2186 009a 1A7B     	 ldrb r2,[r3,#12]
 2187 009c 0A4B     	 ldr r3,.L67+4
 2188 009e DA74     	 strb r2,[r3,#19]
 466:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2189              	 .loc 3 466 0
 2190 00a0 0B4B     	 ldr r3,.L67+12
 2191 00a2 5A7B     	 ldrb r2,[r3,#13]
 2192 00a4 084B     	 ldr r3,.L67+4
 2193 00a6 1A75     	 strb r2,[r3,#20]
 467:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2194              	 .loc 3 467 0
 2195 00a8 094B     	 ldr r3,.L67+12
 2196 00aa 9A7B     	 ldrb r2,[r3,#14]
 2197 00ac 064B     	 ldr r3,.L67+4
 2198 00ae 5A75     	 strb r2,[r3,#21]
 468:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2199              	 .loc 3 468 0
 2200 00b0 074B     	 ldr r3,.L67+12
 2201 00b2 DA7B     	 ldrb r2,[r3,#15]
 2202 00b4 044B     	 ldr r3,.L67+4
 2203 00b6 9A75     	 strb r2,[r3,#22]
 469:../samuel/samuel_io.c **** 
 470:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2204              	 .loc 3 470 0
 2205 00b8 034B     	 ldr r3,.L67+4
 2206 00ba FF22     	 mov r2,#255
 2207 00bc DA75     	 strb r2,[r3,#23]
 471:../samuel/samuel_io.c ****    }
 2208              	 .loc 3 471 0
 2209 00be BD46     	 mov sp,r7
 2210              	 
 2211 00c0 80BD     	 pop {r7,pc}
 2212              	.L68:
 2213 00c2 C046     	 .align 2
 2214              	.L67:
 2215 00c4 00000000 	 .word transmit_buf_size
 2216 00c8 00000000 	 .word new_data
 2217 00cc 00000000 	 .word node_id
 2218 00d0 00000000 	 .word ReadBuffer2
 2219              	 .cfi_endproc
 2220              	.LFE310:
 2222              	 .section .text.clearEpromBuffer,"ax",%progbits
 2223              	 .align 2
 2224              	 .global clearEpromBuffer
 2225              	 .code 16
 2226              	 .thumb_func
 2228              	clearEpromBuffer:
 2229              	.LFB311:
 472:../samuel/samuel_io.c **** 
 473:../samuel/samuel_io.c ****  //------------------------------------------------------
 474:../samuel/samuel_io.c **** 
 475:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 476:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 477:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 478:../samuel/samuel_io.c ****  {
 2230              	 .loc 3 478 0
 2231              	 .cfi_startproc
 2232 0000 80B5     	 push {r7,lr}
 2233              	.LCFI54:
 2234              	 .cfi_def_cfa_offset 8
 2235              	 .cfi_offset 7,-8
 2236              	 .cfi_offset 14,-4
 2237 0002 00AF     	 add r7,sp,#0
 2238              	.LCFI55:
 2239              	 .cfi_def_cfa_register 7
 479:../samuel/samuel_io.c **** 
 480:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 481:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2240              	 .loc 3 481 0
 2241 0004 1E4B     	 ldr r3,.L76
 2242 0006 0022     	 mov r2,#0
 2243 0008 1A70     	 strb r2,[r3]
 2244 000a 0BE0     	 b .L70
 2245              	.L71:
 482:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2246              	 .loc 3 482 0 discriminator 3
 2247 000c 1C4B     	 ldr r3,.L76
 2248 000e 1B78     	 ldrb r3,[r3]
 2249 0010 1A1C     	 mov r2,r3
 2250 0012 1C4B     	 ldr r3,.L76+4
 2251 0014 0021     	 mov r1,#0
 2252 0016 9954     	 strb r1,[r3,r2]
 481:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2253              	 .loc 3 481 0 discriminator 3
 2254 0018 194B     	 ldr r3,.L76
 2255 001a 1B78     	 ldrb r3,[r3]
 2256 001c 0133     	 add r3,r3,#1
 2257 001e DAB2     	 uxtb r2,r3
 2258 0020 174B     	 ldr r3,.L76
 2259 0022 1A70     	 strb r2,[r3]
 2260              	.L70:
 481:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2261              	 .loc 3 481 0 is_stmt 0 discriminator 1
 2262 0024 164B     	 ldr r3,.L76
 2263 0026 1B78     	 ldrb r3,[r3]
 2264 0028 0F2B     	 cmp r3,#15
 2265 002a EFD9     	 bls .L71
 483:../samuel/samuel_io.c **** 
 484:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 485:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2266              	 .loc 3 485 0 is_stmt 1
 2267 002c 144B     	 ldr r3,.L76
 2268 002e 0022     	 mov r2,#0
 2269 0030 1A70     	 strb r2,[r3]
 2270 0032 0BE0     	 b .L72
 2271              	.L73:
 486:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2272              	 .loc 3 486 0 discriminator 3
 2273 0034 124B     	 ldr r3,.L76
 2274 0036 1B78     	 ldrb r3,[r3]
 2275 0038 1A1C     	 mov r2,r3
 2276 003a 134B     	 ldr r3,.L76+8
 2277 003c 0021     	 mov r1,#0
 2278 003e 9954     	 strb r1,[r3,r2]
 485:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2279              	 .loc 3 485 0 discriminator 3
 2280 0040 0F4B     	 ldr r3,.L76
 2281 0042 1B78     	 ldrb r3,[r3]
 2282 0044 0133     	 add r3,r3,#1
 2283 0046 DAB2     	 uxtb r2,r3
 2284 0048 0D4B     	 ldr r3,.L76
 2285 004a 1A70     	 strb r2,[r3]
 2286              	.L72:
 485:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2287              	 .loc 3 485 0 is_stmt 0 discriminator 1
 2288 004c 0C4B     	 ldr r3,.L76
 2289 004e 1B78     	 ldrb r3,[r3]
 2290 0050 0F2B     	 cmp r3,#15
 2291 0052 EFD9     	 bls .L73
 487:../samuel/samuel_io.c **** 
 488:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 489:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2292              	 .loc 3 489 0 is_stmt 1
 2293 0054 0A4B     	 ldr r3,.L76
 2294 0056 0022     	 mov r2,#0
 2295 0058 1A70     	 strb r2,[r3]
 2296 005a 0BE0     	 b .L74
 2297              	.L75:
 490:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2298              	 .loc 3 490 0 discriminator 3
 2299 005c 084B     	 ldr r3,.L76
 2300 005e 1B78     	 ldrb r3,[r3]
 2301 0060 1A1C     	 mov r2,r3
 2302 0062 0A4B     	 ldr r3,.L76+12
 2303 0064 0021     	 mov r1,#0
 2304 0066 9954     	 strb r1,[r3,r2]
 489:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2305              	 .loc 3 489 0 discriminator 3
 2306 0068 054B     	 ldr r3,.L76
 2307 006a 1B78     	 ldrb r3,[r3]
 2308 006c 0133     	 add r3,r3,#1
 2309 006e DAB2     	 uxtb r2,r3
 2310 0070 034B     	 ldr r3,.L76
 2311 0072 1A70     	 strb r2,[r3]
 2312              	.L74:
 489:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2313              	 .loc 3 489 0 is_stmt 0 discriminator 1
 2314 0074 024B     	 ldr r3,.L76
 2315 0076 1B78     	 ldrb r3,[r3]
 2316 0078 1F2B     	 cmp r3,#31
 2317 007a EFD9     	 bls .L75
 491:../samuel/samuel_io.c ****  }
 2318              	 .loc 3 491 0 is_stmt 1
 2319 007c BD46     	 mov sp,r7
 2320              	 
 2321 007e 80BD     	 pop {r7,pc}
 2322              	.L77:
 2323              	 .align 2
 2324              	.L76:
 2325 0080 00000000 	 .word Index
 2326 0084 00000000 	 .word ReadBuffer1
 2327 0088 00000000 	 .word ReadBuffer2
 2328 008c 00000000 	 .word ReadBuffer3
 2329              	 .cfi_endproc
 2330              	.LFE311:
 2332              	 .section .text.fillEpromBuffer,"ax",%progbits
 2333              	 .align 2
 2334              	 .global fillEpromBuffer
 2335              	 .code 16
 2336              	 .thumb_func
 2338              	fillEpromBuffer:
 2339              	.LFB312:
 492:../samuel/samuel_io.c **** 
 493:../samuel/samuel_io.c ****  //---------------------------------
 494:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 495:../samuel/samuel_io.c ****  {
 2340              	 .loc 3 495 0
 2341              	 .cfi_startproc
 2342 0000 80B5     	 push {r7,lr}
 2343              	.LCFI56:
 2344              	 .cfi_def_cfa_offset 8
 2345              	 .cfi_offset 7,-8
 2346              	 .cfi_offset 14,-4
 2347 0002 00AF     	 add r7,sp,#0
 2348              	.LCFI57:
 2349              	 .cfi_def_cfa_register 7
 496:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 497:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2350              	 .loc 3 497 0
 2351 0004 0B4B     	 ldr r3,.L81
 2352 0006 0022     	 mov r2,#0
 2353 0008 1A70     	 strb r2,[r3]
 2354 000a 0CE0     	 b .L79
 2355              	.L80:
 498:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2356              	 .loc 3 498 0 discriminator 3
 2357 000c 094B     	 ldr r3,.L81
 2358 000e 1B78     	 ldrb r3,[r3]
 2359 0010 1A1C     	 mov r2,r3
 2360 0012 084B     	 ldr r3,.L81
 2361 0014 1978     	 ldrb r1,[r3]
 2362 0016 084B     	 ldr r3,.L81+4
 2363 0018 9954     	 strb r1,[r3,r2]
 497:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2364              	 .loc 3 497 0 discriminator 3
 2365 001a 064B     	 ldr r3,.L81
 2366 001c 1B78     	 ldrb r3,[r3]
 2367 001e 0133     	 add r3,r3,#1
 2368 0020 DAB2     	 uxtb r2,r3
 2369 0022 044B     	 ldr r3,.L81
 2370 0024 1A70     	 strb r2,[r3]
 2371              	.L79:
 497:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2372              	 .loc 3 497 0 is_stmt 0 discriminator 1
 2373 0026 034B     	 ldr r3,.L81
 2374 0028 1B78     	 ldrb r3,[r3]
 2375 002a 632B     	 cmp r3,#99
 2376 002c EED9     	 bls .L80
 499:../samuel/samuel_io.c ****  }
 2377              	 .loc 3 499 0 is_stmt 1
 2378 002e BD46     	 mov sp,r7
 2379              	 
 2380 0030 80BD     	 pop {r7,pc}
 2381              	.L82:
 2382 0032 C046     	 .align 2
 2383              	.L81:
 2384 0034 00000000 	 .word Index
 2385 0038 00000000 	 .word data_buffer
 2386              	 .cfi_endproc
 2387              	.LFE312:
 2389              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2390              	 .align 2
 2391              	 .global fill2EpromBuffer
 2392              	 .code 16
 2393              	 .thumb_func
 2395              	fill2EpromBuffer:
 2396              	.LFB313:
 500:../samuel/samuel_io.c **** 
 501:../samuel/samuel_io.c ****  //---------------------------------
 502:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 503:../samuel/samuel_io.c ****  {
 2397              	 .loc 3 503 0
 2398              	 .cfi_startproc
 2399 0000 80B5     	 push {r7,lr}
 2400              	.LCFI58:
 2401              	 .cfi_def_cfa_offset 8
 2402              	 .cfi_offset 7,-8
 2403              	 .cfi_offset 14,-4
 2404 0002 00AF     	 add r7,sp,#0
 2405              	.LCFI59:
 2406              	 .cfi_def_cfa_register 7
 504:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 505:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2407              	 .loc 3 505 0
 2408 0004 0C4B     	 ldr r3,.L86
 2409 0006 0022     	 mov r2,#0
 2410 0008 1A70     	 strb r2,[r3]
 2411 000a 0EE0     	 b .L84
 2412              	.L85:
 506:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2413              	 .loc 3 506 0 discriminator 3
 2414 000c 0A4B     	 ldr r3,.L86
 2415 000e 1B78     	 ldrb r3,[r3]
 2416 0010 1A1C     	 mov r2,r3
 2417 0012 094B     	 ldr r3,.L86
 2418 0014 1B78     	 ldrb r3,[r3]
 2419 0016 DB43     	 mvn r3,r3
 2420 0018 D9B2     	 uxtb r1,r3
 2421 001a 084B     	 ldr r3,.L86+4
 2422 001c 9954     	 strb r1,[r3,r2]
 505:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2423              	 .loc 3 505 0 discriminator 3
 2424 001e 064B     	 ldr r3,.L86
 2425 0020 1B78     	 ldrb r3,[r3]
 2426 0022 0133     	 add r3,r3,#1
 2427 0024 DAB2     	 uxtb r2,r3
 2428 0026 044B     	 ldr r3,.L86
 2429 0028 1A70     	 strb r2,[r3]
 2430              	.L84:
 505:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2431              	 .loc 3 505 0 is_stmt 0 discriminator 1
 2432 002a 034B     	 ldr r3,.L86
 2433 002c 1B78     	 ldrb r3,[r3]
 2434 002e 632B     	 cmp r3,#99
 2435 0030 ECD9     	 bls .L85
 507:../samuel/samuel_io.c ****  }
 2436              	 .loc 3 507 0 is_stmt 1
 2437 0032 BD46     	 mov sp,r7
 2438              	 
 2439 0034 80BD     	 pop {r7,pc}
 2440              	.L87:
 2441 0036 C046     	 .align 2
 2442              	.L86:
 2443 0038 00000000 	 .word Index
 2444 003c 00000000 	 .word data_buffer
 2445              	 .cfi_endproc
 2446              	.LFE313:
 2448              	 .section .text.readAllEEprom,"ax",%progbits
 2449              	 .align 2
 2450              	 .global readAllEEprom
 2451              	 .code 16
 2452              	 .thumb_func
 2454              	readAllEEprom:
 2455              	.LFB314:
 508:../samuel/samuel_io.c **** 
 509:../samuel/samuel_io.c **** 
 510:../samuel/samuel_io.c ****  //------------------------------------------------
 511:../samuel/samuel_io.c **** 
 512:../samuel/samuel_io.c **** 
 513:../samuel/samuel_io.c ****  //------------------------------------------------
 514:../samuel/samuel_io.c ****  int readAllEEprom(void)
 515:../samuel/samuel_io.c ****  {
 2456              	 .loc 3 515 0
 2457              	 .cfi_startproc
 2458 0000 80B5     	 push {r7,lr}
 2459              	.LCFI60:
 2460              	 .cfi_def_cfa_offset 8
 2461              	 .cfi_offset 7,-8
 2462              	 .cfi_offset 14,-4
 2463 0002 00AF     	 add r7,sp,#0
 2464              	.LCFI61:
 2465              	 .cfi_def_cfa_register 7
 516:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2466              	 .loc 3 516 0
 2467 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2468 0008 031C     	 mov r3,r0
 2469 000a 1A1C     	 mov r2,r3
 2470 000c 614B     	 ldr r3,.L94
 2471 000e 1A70     	 strb r2,[r3]
 517:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2472              	 .loc 3 517 0
 2473 0010 604B     	 ldr r3,.L94
 2474 0012 1B78     	 ldrb r3,[r3]
 2475 0014 032B     	 cmp r3,#3
 2476 0016 0AD1     	 bne .L89
 518:../samuel/samuel_io.c ****    {
 519:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2477              	 .loc 3 519 0
 2478 0018 5F4B     	 ldr r3,.L94+4
 2479 001a 0120     	 mov r0,#1
 2480 001c 0021     	 mov r1,#0
 2481 001e 1A1C     	 mov r2,r3
 2482 0020 1023     	 mov r3,#16
 2483 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2484 0026 031C     	 mov r3,r0
 2485 0028 1A1C     	 mov r2,r3
 2486 002a 5C4B     	 ldr r3,.L94+8
 2487 002c 1A70     	 strb r2,[r3]
 2488              	.L89:
 520:../samuel/samuel_io.c ****    }
 521:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2489              	 .loc 3 521 0
 2490 002e 5B4B     	 ldr r3,.L94+8
 2491 0030 1B78     	 ldrb r3,[r3]
 2492 0032 002B     	 cmp r3,#0
 2493 0034 14D1     	 bne .L90
 522:../samuel/samuel_io.c ****    {
 523:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2494              	 .loc 3 523 0
 2495 0036 584B     	 ldr r3,.L94+4
 2496 0038 5B78     	 ldrb r3,[r3,#1]
 2497 003a 9AB2     	 uxth r2,r3
 2498 003c 584B     	 ldr r3,.L94+12
 2499 003e 1A80     	 strh r2,[r3]
 524:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2500              	 .loc 3 524 0
 2501 0040 554B     	 ldr r3,.L94+4
 2502 0042 9B78     	 ldrb r3,[r3,#2]
 2503 0044 9AB2     	 uxth r2,r3
 2504 0046 574B     	 ldr r3,.L94+16
 2505 0048 1A80     	 strh r2,[r3]
 525:../samuel/samuel_io.c **** 
 526:../samuel/samuel_io.c **** 
 527:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2506              	 .loc 3 527 0
 2507 004a 574B     	 ldr r3,.L94+20
 2508 004c 0220     	 mov r0,#2
 2509 004e 0021     	 mov r1,#0
 2510 0050 1A1C     	 mov r2,r3
 2511 0052 1023     	 mov r3,#16
 2512 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2513 0058 031C     	 mov r3,r0
 2514 005a 1A1C     	 mov r2,r3
 2515 005c 4F4B     	 ldr r3,.L94+8
 2516 005e 1A70     	 strb r2,[r3]
 2517              	.L90:
 528:../samuel/samuel_io.c ****    }
 529:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2518              	 .loc 3 529 0
 2519 0060 4E4B     	 ldr r3,.L94+8
 2520 0062 1B78     	 ldrb r3,[r3]
 2521 0064 002B     	 cmp r3,#0
 2522 0066 1ED1     	 bne .L91
 530:../samuel/samuel_io.c ****    {
 531:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2523              	 .loc 3 531 0
 2524 0068 4F4B     	 ldr r3,.L94+20
 2525 006a 5A78     	 ldrb r2,[r3,#1]
 2526 006c 4F4B     	 ldr r3,.L94+24
 2527 006e 1A70     	 strb r2,[r3]
 532:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2528              	 .loc 3 532 0
 2529 0070 4D4B     	 ldr r3,.L94+20
 2530 0072 9A78     	 ldrb r2,[r3,#2]
 2531 0074 4E4B     	 ldr r3,.L94+28
 2532 0076 1A70     	 strb r2,[r3]
 533:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2533              	 .loc 3 533 0
 2534 0078 4B4B     	 ldr r3,.L94+20
 2535 007a DB78     	 ldrb r3,[r3,#3]
 2536 007c 9BB2     	 uxth r3,r3
 2537 007e 1B02     	 lsl r3,r3,#8
 2538 0080 9AB2     	 uxth r2,r3
 2539 0082 494B     	 ldr r3,.L94+20
 2540 0084 1B79     	 ldrb r3,[r3,#4]
 2541 0086 9BB2     	 uxth r3,r3
 2542 0088 D318     	 add r3,r2,r3
 2543 008a 9AB2     	 uxth r2,r3
 2544 008c 494B     	 ldr r3,.L94+32
 2545 008e 1A80     	 strh r2,[r3]
 534:../samuel/samuel_io.c **** 
 535:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2546              	 .loc 3 535 0
 2547 0090 494B     	 ldr r3,.L94+36
 2548 0092 0520     	 mov r0,#5
 2549 0094 0021     	 mov r1,#0
 2550 0096 1A1C     	 mov r2,r3
 2551 0098 2023     	 mov r3,#32
 2552 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2553 009e 031C     	 mov r3,r0
 2554 00a0 1A1C     	 mov r2,r3
 2555 00a2 3E4B     	 ldr r3,.L94+8
 2556 00a4 1A70     	 strb r2,[r3]
 2557              	.L91:
 536:../samuel/samuel_io.c ****    }
 537:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2558              	 .loc 3 537 0
 2559 00a6 3D4B     	 ldr r3,.L94+8
 2560 00a8 1B78     	 ldrb r3,[r3]
 2561 00aa 002B     	 cmp r3,#0
 2562 00ac 67D1     	 bne .L92
 538:../samuel/samuel_io.c ****    {
 539:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2563              	 .loc 3 539 0
 2564 00ae 424B     	 ldr r3,.L94+36
 2565 00b0 5A78     	 ldrb r2,[r3,#1]
 2566 00b2 424B     	 ldr r3,.L94+40
 2567 00b4 1A70     	 strb r2,[r3]
 540:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2568              	 .loc 3 540 0
 2569 00b6 404B     	 ldr r3,.L94+36
 2570 00b8 9A78     	 ldrb r2,[r3,#2]
 2571 00ba 414B     	 ldr r3,.L94+44
 2572 00bc 1A70     	 strb r2,[r3]
 541:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2573              	 .loc 3 541 0
 2574 00be 3E4B     	 ldr r3,.L94+36
 2575 00c0 DB78     	 ldrb r3,[r3,#3]
 2576 00c2 9BB2     	 uxth r3,r3
 2577 00c4 1B02     	 lsl r3,r3,#8
 2578 00c6 9AB2     	 uxth r2,r3
 2579 00c8 3B4B     	 ldr r3,.L94+36
 2580 00ca 1B79     	 ldrb r3,[r3,#4]
 2581 00cc 9BB2     	 uxth r3,r3
 2582 00ce D318     	 add r3,r2,r3
 2583 00d0 9AB2     	 uxth r2,r3
 2584 00d2 3C4B     	 ldr r3,.L94+48
 2585 00d4 1A80     	 strh r2,[r3]
 542:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2586              	 .loc 3 542 0
 2587 00d6 384B     	 ldr r3,.L94+36
 2588 00d8 5B79     	 ldrb r3,[r3,#5]
 2589 00da 9BB2     	 uxth r3,r3
 2590 00dc 1B02     	 lsl r3,r3,#8
 2591 00de 9AB2     	 uxth r2,r3
 2592 00e0 354B     	 ldr r3,.L94+36
 2593 00e2 9B79     	 ldrb r3,[r3,#6]
 2594 00e4 9BB2     	 uxth r3,r3
 2595 00e6 D318     	 add r3,r2,r3
 2596 00e8 9AB2     	 uxth r2,r3
 2597 00ea 374B     	 ldr r3,.L94+52
 2598 00ec 1A80     	 strh r2,[r3]
 543:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2599              	 .loc 3 543 0
 2600 00ee 324B     	 ldr r3,.L94+36
 2601 00f0 DB79     	 ldrb r3,[r3,#7]
 2602 00f2 9BB2     	 uxth r3,r3
 2603 00f4 1B02     	 lsl r3,r3,#8
 2604 00f6 9AB2     	 uxth r2,r3
 2605 00f8 2F4B     	 ldr r3,.L94+36
 2606 00fa 1B7A     	 ldrb r3,[r3,#8]
 2607 00fc 9BB2     	 uxth r3,r3
 2608 00fe D318     	 add r3,r2,r3
 2609 0100 9AB2     	 uxth r2,r3
 2610 0102 324B     	 ldr r3,.L94+56
 2611 0104 1A80     	 strh r2,[r3]
 544:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2612              	 .loc 3 544 0
 2613 0106 2C4B     	 ldr r3,.L94+36
 2614 0108 5B7A     	 ldrb r3,[r3,#9]
 2615 010a 9BB2     	 uxth r3,r3
 2616 010c 1B02     	 lsl r3,r3,#8
 2617 010e 9AB2     	 uxth r2,r3
 2618 0110 294B     	 ldr r3,.L94+36
 2619 0112 9B7A     	 ldrb r3,[r3,#10]
 2620 0114 9BB2     	 uxth r3,r3
 2621 0116 D318     	 add r3,r2,r3
 2622 0118 9AB2     	 uxth r2,r3
 2623 011a 2D4B     	 ldr r3,.L94+60
 2624 011c 1A80     	 strh r2,[r3]
 545:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2625              	 .loc 3 545 0
 2626 011e 264B     	 ldr r3,.L94+36
 2627 0120 DB7A     	 ldrb r3,[r3,#11]
 2628 0122 9BB2     	 uxth r3,r3
 2629 0124 1B02     	 lsl r3,r3,#8
 2630 0126 9AB2     	 uxth r2,r3
 2631 0128 234B     	 ldr r3,.L94+36
 2632 012a 1B7B     	 ldrb r3,[r3,#12]
 2633 012c 9BB2     	 uxth r3,r3
 2634 012e D318     	 add r3,r2,r3
 2635 0130 9AB2     	 uxth r2,r3
 2636 0132 284B     	 ldr r3,.L94+64
 2637 0134 1A80     	 strh r2,[r3]
 546:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2638              	 .loc 3 546 0
 2639 0136 204B     	 ldr r3,.L94+36
 2640 0138 5B7B     	 ldrb r3,[r3,#13]
 2641 013a 9BB2     	 uxth r3,r3
 2642 013c 1B02     	 lsl r3,r3,#8
 2643 013e 9AB2     	 uxth r2,r3
 2644 0140 1D4B     	 ldr r3,.L94+36
 2645 0142 9B7B     	 ldrb r3,[r3,#14]
 2646 0144 9BB2     	 uxth r3,r3
 2647 0146 D318     	 add r3,r2,r3
 2648 0148 9AB2     	 uxth r2,r3
 2649 014a 234B     	 ldr r3,.L94+68
 2650 014c 1A80     	 strh r2,[r3]
 547:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 2651              	 .loc 3 547 0
 2652 014e 1A4B     	 ldr r3,.L94+36
 2653 0150 DB7B     	 ldrb r3,[r3,#15]
 2654 0152 9BB2     	 uxth r3,r3
 2655 0154 1B02     	 lsl r3,r3,#8
 2656 0156 9AB2     	 uxth r2,r3
 2657 0158 174B     	 ldr r3,.L94+36
 2658 015a 1B7C     	 ldrb r3,[r3,#16]
 2659 015c 9BB2     	 uxth r3,r3
 2660 015e D318     	 add r3,r2,r3
 2661 0160 9AB2     	 uxth r2,r3
 2662 0162 1E4B     	 ldr r3,.L94+72
 2663 0164 1A80     	 strh r2,[r3]
 548:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 2664              	 .loc 3 548 0
 2665 0166 144B     	 ldr r3,.L94+36
 2666 0168 5B7C     	 ldrb r3,[r3,#17]
 2667 016a 9BB2     	 uxth r3,r3
 2668 016c 1B02     	 lsl r3,r3,#8
 2669 016e 9AB2     	 uxth r2,r3
 2670 0170 114B     	 ldr r3,.L94+36
 2671 0172 9B7C     	 ldrb r3,[r3,#18]
 2672 0174 9BB2     	 uxth r3,r3
 2673 0176 D318     	 add r3,r2,r3
 2674 0178 9AB2     	 uxth r2,r3
 2675 017a 194B     	 ldr r3,.L94+76
 2676 017c 1A80     	 strh r2,[r3]
 2677              	.L92:
 549:../samuel/samuel_io.c **** 
 550:../samuel/samuel_io.c ****    }
 551:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 2678              	 .loc 3 551 0
 2679 017e 054B     	 ldr r3,.L94
 2680 0180 1B78     	 ldrb r3,[r3]
 2681 0182 1A1C     	 mov r2,r3
 2682 0184 054B     	 ldr r3,.L94+8
 2683 0186 1B78     	 ldrb r3,[r3]
 2684 0188 1B01     	 lsl r3,r3,#4
 2685 018a D318     	 add r3,r2,r3
 552:../samuel/samuel_io.c ****  }
 2686              	 .loc 3 552 0
 2687 018c 181C     	 mov r0,r3
 2688 018e BD46     	 mov sp,r7
 2689              	 
 2690 0190 80BD     	 pop {r7,pc}
 2691              	.L95:
 2692 0192 C046     	 .align 2
 2693              	.L94:
 2694 0194 00000000 	 .word EEprom_status
 2695 0198 00000000 	 .word ReadBuffer1
 2696 019c 00000000 	 .word oper_status
 2697 01a0 00000000 	 .word Ser_NrH
 2698 01a4 00000000 	 .word Ser_NrL
 2699 01a8 00000000 	 .word ReadBuffer2
 2700 01ac 00000000 	 .word node_id_alt
 2701 01b0 00000000 	 .word node_id
 2702 01b4 00000000 	 .word node_id_16bit
 2703 01b8 00000000 	 .word ReadBuffer3
 2704 01bc 00000000 	 .word RegOnOff
 2705 01c0 00000000 	 .word RegOnOff2
 2706 01c4 00000000 	 .word dimAkt_Ww
 2707 01c8 00000000 	 .word dimAkt_Cw
 2708 01cc 00000000 	 .word dimOff_Ww
 2709 01d0 00000000 	 .word dimOff_Cw
 2710 01d4 00000000 	 .word dimNorm1_Ww
 2711 01d8 00000000 	 .word dimNorm1_Cw
 2712 01dc 00000000 	 .word dimNorm2_Ww
 2713 01e0 00000000 	 .word dimNorm2_Cw
 2714              	 .cfi_endproc
 2715              	.LFE314:
 2717              	 .section .text.readSerNrEEprom,"ax",%progbits
 2718              	 .align 2
 2719              	 .global readSerNrEEprom
 2720              	 .code 16
 2721              	 .thumb_func
 2723              	readSerNrEEprom:
 2724              	.LFB315:
 553:../samuel/samuel_io.c ****  //------------------------------------------------
 554:../samuel/samuel_io.c **** 
 555:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 556:../samuel/samuel_io.c ****  {
 2725              	 .loc 3 556 0
 2726              	 .cfi_startproc
 2727 0000 80B5     	 push {r7,lr}
 2728              	.LCFI62:
 2729              	 .cfi_def_cfa_offset 8
 2730              	 .cfi_offset 7,-8
 2731              	 .cfi_offset 14,-4
 2732 0002 00AF     	 add r7,sp,#0
 2733              	.LCFI63:
 2734              	 .cfi_def_cfa_register 7
 557:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2735              	 .loc 3 557 0
 2736 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2737 0008 031C     	 mov r3,r0
 2738 000a 1A1C     	 mov r2,r3
 2739 000c 0D4B     	 ldr r3,.L99
 2740 000e 1A70     	 strb r2,[r3]
 558:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2741              	 .loc 3 558 0
 2742 0010 0C4B     	 ldr r3,.L99
 2743 0012 1B78     	 ldrb r3,[r3]
 2744 0014 032B     	 cmp r3,#3
 2745 0016 0AD1     	 bne .L97
 559:../samuel/samuel_io.c **** 	 {
 560:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2746              	 .loc 3 560 0
 2747 0018 0B4B     	 ldr r3,.L99+4
 2748 001a 0120     	 mov r0,#1
 2749 001c 0021     	 mov r1,#0
 2750 001e 1A1C     	 mov r2,r3
 2751 0020 1023     	 mov r3,#16
 2752 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2753 0026 031C     	 mov r3,r0
 2754 0028 1A1C     	 mov r2,r3
 2755 002a 084B     	 ldr r3,.L99+8
 2756 002c 1A70     	 strb r2,[r3]
 2757              	.L97:
 561:../samuel/samuel_io.c ****      }
 562:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 2758              	 .loc 3 562 0
 2759 002e 054B     	 ldr r3,.L99
 2760 0030 1B78     	 ldrb r3,[r3]
 2761 0032 1A1C     	 mov r2,r3
 2762 0034 054B     	 ldr r3,.L99+8
 2763 0036 1B78     	 ldrb r3,[r3]
 2764 0038 1B01     	 lsl r3,r3,#4
 2765 003a D318     	 add r3,r2,r3
 563:../samuel/samuel_io.c ****  }
 2766              	 .loc 3 563 0
 2767 003c 181C     	 mov r0,r3
 2768 003e BD46     	 mov sp,r7
 2769              	 
 2770 0040 80BD     	 pop {r7,pc}
 2771              	.L100:
 2772 0042 C046     	 .align 2
 2773              	.L99:
 2774 0044 00000000 	 .word EEprom_status
 2775 0048 00000000 	 .word ReadBuffer1
 2776 004c 00000000 	 .word oper_status
 2777              	 .cfi_endproc
 2778              	.LFE315:
 2780              	 .section .text.readNodeIdEEprom,"ax",%progbits
 2781              	 .align 2
 2782              	 .global readNodeIdEEprom
 2783              	 .code 16
 2784              	 .thumb_func
 2786              	readNodeIdEEprom:
 2787              	.LFB316:
 564:../samuel/samuel_io.c ****  //------------------------------------------------
 565:../samuel/samuel_io.c **** 
 566:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 567:../samuel/samuel_io.c ****  {
 2788              	 .loc 3 567 0
 2789              	 .cfi_startproc
 2790 0000 80B5     	 push {r7,lr}
 2791              	.LCFI64:
 2792              	 .cfi_def_cfa_offset 8
 2793              	 .cfi_offset 7,-8
 2794              	 .cfi_offset 14,-4
 2795 0002 00AF     	 add r7,sp,#0
 2796              	.LCFI65:
 2797              	 .cfi_def_cfa_register 7
 568:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2798              	 .loc 3 568 0
 2799 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2800 0008 031C     	 mov r3,r0
 2801 000a 1A1C     	 mov r2,r3
 2802 000c 0D4B     	 ldr r3,.L104
 2803 000e 1A70     	 strb r2,[r3]
 569:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2804              	 .loc 3 569 0
 2805 0010 0C4B     	 ldr r3,.L104
 2806 0012 1B78     	 ldrb r3,[r3]
 2807 0014 032B     	 cmp r3,#3
 2808 0016 0AD1     	 bne .L102
 570:../samuel/samuel_io.c **** 	 {
 571:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2809              	 .loc 3 571 0
 2810 0018 0B4B     	 ldr r3,.L104+4
 2811 001a 0220     	 mov r0,#2
 2812 001c 0021     	 mov r1,#0
 2813 001e 1A1C     	 mov r2,r3
 2814 0020 1023     	 mov r3,#16
 2815 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2816 0026 031C     	 mov r3,r0
 2817 0028 1A1C     	 mov r2,r3
 2818 002a 084B     	 ldr r3,.L104+8
 2819 002c 1A70     	 strb r2,[r3]
 2820              	.L102:
 572:../samuel/samuel_io.c ****      }
 573:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2821              	 .loc 3 573 0
 2822 002e 054B     	 ldr r3,.L104
 2823 0030 1B78     	 ldrb r3,[r3]
 2824 0032 1A1C     	 mov r2,r3
 2825 0034 054B     	 ldr r3,.L104+8
 2826 0036 1B78     	 ldrb r3,[r3]
 2827 0038 1B01     	 lsl r3,r3,#4
 2828 003a D318     	 add r3,r2,r3
 574:../samuel/samuel_io.c ****  }
 2829              	 .loc 3 574 0
 2830 003c 181C     	 mov r0,r3
 2831 003e BD46     	 mov sp,r7
 2832              	 
 2833 0040 80BD     	 pop {r7,pc}
 2834              	.L105:
 2835 0042 C046     	 .align 2
 2836              	.L104:
 2837 0044 00000000 	 .word EEprom_status
 2838 0048 00000000 	 .word ReadBuffer2
 2839 004c 00000000 	 .word oper_status
 2840              	 .cfi_endproc
 2841              	.LFE316:
 2843              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 2844              	 .align 2
 2845              	 .global read_akt_light_EEprom
 2846              	 .code 16
 2847              	 .thumb_func
 2849              	read_akt_light_EEprom:
 2850              	.LFB317:
 575:../samuel/samuel_io.c **** 
 576:../samuel/samuel_io.c ****  //------------------------------------------------
 577:../samuel/samuel_io.c **** 
 578:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 579:../samuel/samuel_io.c ****  {
 2851              	 .loc 3 579 0
 2852              	 .cfi_startproc
 2853 0000 80B5     	 push {r7,lr}
 2854              	.LCFI66:
 2855              	 .cfi_def_cfa_offset 8
 2856              	 .cfi_offset 7,-8
 2857              	 .cfi_offset 14,-4
 2858 0002 00AF     	 add r7,sp,#0
 2859              	.LCFI67:
 2860              	 .cfi_def_cfa_register 7
 580:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2861              	 .loc 3 580 0
 2862 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2863 0008 031C     	 mov r3,r0
 2864 000a 1A1C     	 mov r2,r3
 2865 000c 0D4B     	 ldr r3,.L109
 2866 000e 1A70     	 strb r2,[r3]
 581:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2867              	 .loc 3 581 0
 2868 0010 0C4B     	 ldr r3,.L109
 2869 0012 1B78     	 ldrb r3,[r3]
 2870 0014 032B     	 cmp r3,#3
 2871 0016 0AD1     	 bne .L107
 582:../samuel/samuel_io.c **** 	 {
 583:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 2872              	 .loc 3 583 0
 2873 0018 0B4B     	 ldr r3,.L109+4
 2874 001a 0420     	 mov r0,#4
 2875 001c 0021     	 mov r1,#0
 2876 001e 1A1C     	 mov r2,r3
 2877 0020 1023     	 mov r3,#16
 2878 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2879 0026 031C     	 mov r3,r0
 2880 0028 1A1C     	 mov r2,r3
 2881 002a 084B     	 ldr r3,.L109+8
 2882 002c 1A70     	 strb r2,[r3]
 2883              	.L107:
 584:../samuel/samuel_io.c ****      }
 585:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2884              	 .loc 3 585 0
 2885 002e 054B     	 ldr r3,.L109
 2886 0030 1B78     	 ldrb r3,[r3]
 2887 0032 1A1C     	 mov r2,r3
 2888 0034 054B     	 ldr r3,.L109+8
 2889 0036 1B78     	 ldrb r3,[r3]
 2890 0038 1B01     	 lsl r3,r3,#4
 2891 003a D318     	 add r3,r2,r3
 586:../samuel/samuel_io.c ****  }
 2892              	 .loc 3 586 0
 2893 003c 181C     	 mov r0,r3
 2894 003e BD46     	 mov sp,r7
 2895              	 
 2896 0040 80BD     	 pop {r7,pc}
 2897              	.L110:
 2898 0042 C046     	 .align 2
 2899              	.L109:
 2900 0044 00000000 	 .word EEprom_status
 2901 0048 00000000 	 .word ReadBuffer2
 2902 004c 00000000 	 .word oper_status
 2903              	 .cfi_endproc
 2904              	.LFE317:
 2906              	 .section .text.read_off_light_EEprom,"ax",%progbits
 2907              	 .align 2
 2908              	 .global read_off_light_EEprom
 2909              	 .code 16
 2910              	 .thumb_func
 2912              	read_off_light_EEprom:
 2913              	.LFB318:
 587:../samuel/samuel_io.c ****  //------------------------------------------------
 588:../samuel/samuel_io.c **** 
 589:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 590:../samuel/samuel_io.c ****  {
 2914              	 .loc 3 590 0
 2915              	 .cfi_startproc
 2916 0000 80B5     	 push {r7,lr}
 2917              	.LCFI68:
 2918              	 .cfi_def_cfa_offset 8
 2919              	 .cfi_offset 7,-8
 2920              	 .cfi_offset 14,-4
 2921 0002 00AF     	 add r7,sp,#0
 2922              	.LCFI69:
 2923              	 .cfi_def_cfa_register 7
 591:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2924              	 .loc 3 591 0
 2925 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2926 0008 031C     	 mov r3,r0
 2927 000a 1A1C     	 mov r2,r3
 2928 000c 0D4B     	 ldr r3,.L114
 2929 000e 1A70     	 strb r2,[r3]
 592:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2930              	 .loc 3 592 0
 2931 0010 0C4B     	 ldr r3,.L114
 2932 0012 1B78     	 ldrb r3,[r3]
 2933 0014 032B     	 cmp r3,#3
 2934 0016 0AD1     	 bne .L112
 593:../samuel/samuel_io.c **** 	 {
 594:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 2935              	 .loc 3 594 0
 2936 0018 0B4B     	 ldr r3,.L114+4
 2937 001a 0520     	 mov r0,#5
 2938 001c 0021     	 mov r1,#0
 2939 001e 1A1C     	 mov r2,r3
 2940 0020 1023     	 mov r3,#16
 2941 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2942 0026 031C     	 mov r3,r0
 2943 0028 1A1C     	 mov r2,r3
 2944 002a 084B     	 ldr r3,.L114+8
 2945 002c 1A70     	 strb r2,[r3]
 2946              	.L112:
 595:../samuel/samuel_io.c ****      }
 596:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2947              	 .loc 3 596 0
 2948 002e 054B     	 ldr r3,.L114
 2949 0030 1B78     	 ldrb r3,[r3]
 2950 0032 1A1C     	 mov r2,r3
 2951 0034 054B     	 ldr r3,.L114+8
 2952 0036 1B78     	 ldrb r3,[r3]
 2953 0038 1B01     	 lsl r3,r3,#4
 2954 003a D318     	 add r3,r2,r3
 597:../samuel/samuel_io.c ****  }
 2955              	 .loc 3 597 0
 2956 003c 181C     	 mov r0,r3
 2957 003e BD46     	 mov sp,r7
 2958              	 
 2959 0040 80BD     	 pop {r7,pc}
 2960              	.L115:
 2961 0042 C046     	 .align 2
 2962              	.L114:
 2963 0044 00000000 	 .word EEprom_status
 2964 0048 00000000 	 .word ReadBuffer2
 2965 004c 00000000 	 .word oper_status
 2966              	 .cfi_endproc
 2967              	.LFE318:
 2969              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 2970              	 .align 2
 2971              	 .global writeSernr_B1_EEprom
 2972              	 .code 16
 2973              	 .thumb_func
 2975              	writeSernr_B1_EEprom:
 2976              	.LFB319:
 598:../samuel/samuel_io.c **** 
 599:../samuel/samuel_io.c ****  //------------------------------------------------
 600:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 601:../samuel/samuel_io.c ****  {
 2977              	 .loc 3 601 0
 2978              	 .cfi_startproc
 2979 0000 80B5     	 push {r7,lr}
 2980              	.LCFI70:
 2981              	 .cfi_def_cfa_offset 8
 2982              	 .cfi_offset 7,-8
 2983              	 .cfi_offset 14,-4
 2984 0002 82B0     	 sub sp,sp,#8
 2985              	.LCFI71:
 2986              	 .cfi_def_cfa_offset 16
 2987 0004 00AF     	 add r7,sp,#0
 2988              	.LCFI72:
 2989              	 .cfi_def_cfa_register 7
 602:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 2990              	 .loc 3 602 0
 2991 0006 8023     	 mov r3,#128
 2992 0008 7B60     	 str r3,[r7,#4]
 603:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 2993              	 .loc 3 603 0
 2994 000a 144B     	 ldr r3,.L120
 2995 000c 1A88     	 ldrh r2,[r3]
 2996 000e BA23     	 mov r3,#186
 2997 0010 1B01     	 lsl r3,r3,#4
 2998 0012 9A42     	 cmp r2,r3
 2999 0014 14D9     	 bls .L117
 604:../samuel/samuel_io.c ****   {
 605:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3000              	 .loc 3 605 0
 3001 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3002 001a 031C     	 mov r3,r0
 3003 001c 1A1C     	 mov r2,r3
 3004 001e 104B     	 ldr r3,.L120+4
 3005 0020 1A70     	 strb r2,[r3]
 606:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3006              	 .loc 3 606 0
 3007 0022 0F4B     	 ldr r3,.L120+4
 3008 0024 1B78     	 ldrb r3,[r3]
 3009 0026 032B     	 cmp r3,#3
 3010 0028 08D1     	 bne .L118
 607:../samuel/samuel_io.c ****     {
 608:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3011              	 .loc 3 608 0
 3012 002a 0E4B     	 ldr r3,.L120+8
 3013 002c 0120     	 mov r0,#1
 3014 002e 191C     	 mov r1,r3
 3015 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3016 0034 031C     	 mov r3,r0
 3017 0036 1A1C     	 mov r2,r3
 3018 0038 0B4B     	 ldr r3,.L120+12
 3019 003a 1A70     	 strb r2,[r3]
 3020              	.L118:
 609:../samuel/samuel_io.c ****     }
 610:../samuel/samuel_io.c **** 	 a = 0;
 3021              	 .loc 3 610 0
 3022 003c 0023     	 mov r3,#0
 3023 003e 7B60     	 str r3,[r7,#4]
 3024              	.L117:
 611:../samuel/samuel_io.c ****   }
 612:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3025              	 .loc 3 612 0
 3026 0040 074B     	 ldr r3,.L120+4
 3027 0042 1B78     	 ldrb r3,[r3]
 3028 0044 1A1C     	 mov r2,r3
 3029 0046 084B     	 ldr r3,.L120+12
 3030 0048 1B78     	 ldrb r3,[r3]
 3031 004a 1B01     	 lsl r3,r3,#4
 3032 004c D218     	 add r2,r2,r3
 3033 004e 7B68     	 ldr r3,[r7,#4]
 3034 0050 D318     	 add r3,r2,r3
 613:../samuel/samuel_io.c ****  }
 3035              	 .loc 3 613 0
 3036 0052 181C     	 mov r0,r3
 3037 0054 BD46     	 mov sp,r7
 3038 0056 02B0     	 add sp,sp,#8
 3039              	 
 3040 0058 80BD     	 pop {r7,pc}
 3041              	.L121:
 3042 005a C046     	 .align 2
 3043              	.L120:
 3044 005c 00000000 	 .word resultB
 3045 0060 00000000 	 .word EEprom_status
 3046 0064 00000000 	 .word ReadBuffer1
 3047 0068 00000000 	 .word oper_status
 3048              	 .cfi_endproc
 3049              	.LFE319:
 3051              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3052              	 .align 2
 3053              	 .global writeNodeid_B2_EEprom
 3054              	 .code 16
 3055              	 .thumb_func
 3057              	writeNodeid_B2_EEprom:
 3058              	.LFB320:
 614:../samuel/samuel_io.c ****  //------------------------------------------------
 615:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 616:../samuel/samuel_io.c ****  {
 3059              	 .loc 3 616 0
 3060              	 .cfi_startproc
 3061 0000 80B5     	 push {r7,lr}
 3062              	.LCFI73:
 3063              	 .cfi_def_cfa_offset 8
 3064              	 .cfi_offset 7,-8
 3065              	 .cfi_offset 14,-4
 3066 0002 82B0     	 sub sp,sp,#8
 3067              	.LCFI74:
 3068              	 .cfi_def_cfa_offset 16
 3069 0004 00AF     	 add r7,sp,#0
 3070              	.LCFI75:
 3071              	 .cfi_def_cfa_register 7
 617:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3072              	 .loc 3 617 0
 3073 0006 8023     	 mov r3,#128
 3074 0008 7B60     	 str r3,[r7,#4]
 618:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3075              	 .loc 3 618 0
 3076 000a 144B     	 ldr r3,.L126
 3077 000c 1A88     	 ldrh r2,[r3]
 3078 000e BA23     	 mov r3,#186
 3079 0010 1B01     	 lsl r3,r3,#4
 3080 0012 9A42     	 cmp r2,r3
 3081 0014 14D9     	 bls .L123
 619:../samuel/samuel_io.c ****     {
 620:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3082              	 .loc 3 620 0
 3083 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3084 001a 031C     	 mov r3,r0
 3085 001c 1A1C     	 mov r2,r3
 3086 001e 104B     	 ldr r3,.L126+4
 3087 0020 1A70     	 strb r2,[r3]
 621:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3088              	 .loc 3 621 0
 3089 0022 0F4B     	 ldr r3,.L126+4
 3090 0024 1B78     	 ldrb r3,[r3]
 3091 0026 032B     	 cmp r3,#3
 3092 0028 08D1     	 bne .L124
 622:../samuel/samuel_io.c ****       {
 623:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3093              	 .loc 3 623 0
 3094 002a 0E4B     	 ldr r3,.L126+8
 3095 002c 0220     	 mov r0,#2
 3096 002e 191C     	 mov r1,r3
 3097 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3098 0034 031C     	 mov r3,r0
 3099 0036 1A1C     	 mov r2,r3
 3100 0038 0B4B     	 ldr r3,.L126+12
 3101 003a 1A70     	 strb r2,[r3]
 3102              	.L124:
 624:../samuel/samuel_io.c ****       }
 625:../samuel/samuel_io.c **** 	 a = 0;
 3103              	 .loc 3 625 0
 3104 003c 0023     	 mov r3,#0
 3105 003e 7B60     	 str r3,[r7,#4]
 3106              	.L123:
 626:../samuel/samuel_io.c ****     }
 627:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3107              	 .loc 3 627 0
 3108 0040 074B     	 ldr r3,.L126+4
 3109 0042 1B78     	 ldrb r3,[r3]
 3110 0044 1A1C     	 mov r2,r3
 3111 0046 084B     	 ldr r3,.L126+12
 3112 0048 1B78     	 ldrb r3,[r3]
 3113 004a 1B01     	 lsl r3,r3,#4
 3114 004c D218     	 add r2,r2,r3
 3115 004e 7B68     	 ldr r3,[r7,#4]
 3116 0050 D318     	 add r3,r2,r3
 628:../samuel/samuel_io.c ****  }
 3117              	 .loc 3 628 0
 3118 0052 181C     	 mov r0,r3
 3119 0054 BD46     	 mov sp,r7
 3120 0056 02B0     	 add sp,sp,#8
 3121              	 
 3122 0058 80BD     	 pop {r7,pc}
 3123              	.L127:
 3124 005a C046     	 .align 2
 3125              	.L126:
 3126 005c 00000000 	 .word resultB
 3127 0060 00000000 	 .word EEprom_status
 3128 0064 00000000 	 .word ReadBuffer2
 3129 0068 00000000 	 .word oper_status
 3130              	 .cfi_endproc
 3131              	.LFE320:
 3133              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3134              	 .align 2
 3135              	 .global writeLamp_data_B3_EEprom
 3136              	 .code 16
 3137              	 .thumb_func
 3139              	writeLamp_data_B3_EEprom:
 3140              	.LFB321:
 629:../samuel/samuel_io.c ****  //----------------------------
 630:../samuel/samuel_io.c **** 
 631:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 632:../samuel/samuel_io.c ****  {
 3141              	 .loc 3 632 0
 3142              	 .cfi_startproc
 3143 0000 80B5     	 push {r7,lr}
 3144              	.LCFI76:
 3145              	 .cfi_def_cfa_offset 8
 3146              	 .cfi_offset 7,-8
 3147              	 .cfi_offset 14,-4
 3148 0002 82B0     	 sub sp,sp,#8
 3149              	.LCFI77:
 3150              	 .cfi_def_cfa_offset 16
 3151 0004 00AF     	 add r7,sp,#0
 3152              	.LCFI78:
 3153              	 .cfi_def_cfa_register 7
 633:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3154              	 .loc 3 633 0
 3155 0006 8023     	 mov r3,#128
 3156 0008 7B60     	 str r3,[r7,#4]
 634:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3157              	 .loc 3 634 0
 3158 000a 144B     	 ldr r3,.L132
 3159 000c 1A88     	 ldrh r2,[r3]
 3160 000e BA23     	 mov r3,#186
 3161 0010 1B01     	 lsl r3,r3,#4
 3162 0012 9A42     	 cmp r2,r3
 3163 0014 14D9     	 bls .L129
 635:../samuel/samuel_io.c ****   {
 636:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3164              	 .loc 3 636 0
 3165 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3166 001a 031C     	 mov r3,r0
 3167 001c 1A1C     	 mov r2,r3
 3168 001e 104B     	 ldr r3,.L132+4
 3169 0020 1A70     	 strb r2,[r3]
 637:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3170              	 .loc 3 637 0
 3171 0022 0F4B     	 ldr r3,.L132+4
 3172 0024 1B78     	 ldrb r3,[r3]
 3173 0026 032B     	 cmp r3,#3
 3174 0028 08D1     	 bne .L130
 638:../samuel/samuel_io.c ****     {
 639:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3175              	 .loc 3 639 0
 3176 002a 0E4B     	 ldr r3,.L132+8
 3177 002c 0320     	 mov r0,#3
 3178 002e 191C     	 mov r1,r3
 3179 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3180 0034 031C     	 mov r3,r0
 3181 0036 1A1C     	 mov r2,r3
 3182 0038 0B4B     	 ldr r3,.L132+12
 3183 003a 1A70     	 strb r2,[r3]
 3184              	.L130:
 640:../samuel/samuel_io.c ****     }
 641:../samuel/samuel_io.c **** 	 a = 0;
 3185              	 .loc 3 641 0
 3186 003c 0023     	 mov r3,#0
 3187 003e 7B60     	 str r3,[r7,#4]
 3188              	.L129:
 642:../samuel/samuel_io.c ****   }
 643:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3189              	 .loc 3 643 0
 3190 0040 074B     	 ldr r3,.L132+4
 3191 0042 1B78     	 ldrb r3,[r3]
 3192 0044 1A1C     	 mov r2,r3
 3193 0046 084B     	 ldr r3,.L132+12
 3194 0048 1B78     	 ldrb r3,[r3]
 3195 004a 1B01     	 lsl r3,r3,#4
 3196 004c D218     	 add r2,r2,r3
 3197 004e 7B68     	 ldr r3,[r7,#4]
 3198 0050 D318     	 add r3,r2,r3
 644:../samuel/samuel_io.c ****  }
 3199              	 .loc 3 644 0
 3200 0052 181C     	 mov r0,r3
 3201 0054 BD46     	 mov sp,r7
 3202 0056 02B0     	 add sp,sp,#8
 3203              	 
 3204 0058 80BD     	 pop {r7,pc}
 3205              	.L133:
 3206 005a C046     	 .align 2
 3207              	.L132:
 3208 005c 00000000 	 .word resultB
 3209 0060 00000000 	 .word EEprom_status
 3210 0064 00000000 	 .word ReadBuffer3
 3211 0068 00000000 	 .word oper_status
 3212              	 .cfi_endproc
 3213              	.LFE321:
 3215              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3216              	 .align 2
 3217              	 .global writeakt_light_data_B4_EEprom
 3218              	 .code 16
 3219              	 .thumb_func
 3221              	writeakt_light_data_B4_EEprom:
 3222              	.LFB322:
 645:../samuel/samuel_io.c **** 
 646:../samuel/samuel_io.c ****  //------------------------------------------------
 647:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 648:../samuel/samuel_io.c ****  {
 3223              	 .loc 3 648 0
 3224              	 .cfi_startproc
 3225 0000 80B5     	 push {r7,lr}
 3226              	.LCFI79:
 3227              	 .cfi_def_cfa_offset 8
 3228              	 .cfi_offset 7,-8
 3229              	 .cfi_offset 14,-4
 3230 0002 82B0     	 sub sp,sp,#8
 3231              	.LCFI80:
 3232              	 .cfi_def_cfa_offset 16
 3233 0004 00AF     	 add r7,sp,#0
 3234              	.LCFI81:
 3235              	 .cfi_def_cfa_register 7
 649:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3236              	 .loc 3 649 0
 3237 0006 8023     	 mov r3,#128
 3238 0008 7B60     	 str r3,[r7,#4]
 650:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3239              	 .loc 3 650 0
 3240 000a 144B     	 ldr r3,.L138
 3241 000c 1A88     	 ldrh r2,[r3]
 3242 000e BA23     	 mov r3,#186
 3243 0010 1B01     	 lsl r3,r3,#4
 3244 0012 9A42     	 cmp r2,r3
 3245 0014 14D9     	 bls .L135
 651:../samuel/samuel_io.c ****     {
 652:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3246              	 .loc 3 652 0
 3247 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3248 001a 031C     	 mov r3,r0
 3249 001c 1A1C     	 mov r2,r3
 3250 001e 104B     	 ldr r3,.L138+4
 3251 0020 1A70     	 strb r2,[r3]
 653:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3252              	 .loc 3 653 0
 3253 0022 0F4B     	 ldr r3,.L138+4
 3254 0024 1B78     	 ldrb r3,[r3]
 3255 0026 032B     	 cmp r3,#3
 3256 0028 08D1     	 bne .L136
 654:../samuel/samuel_io.c ****       {
 655:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3257              	 .loc 3 655 0
 3258 002a 0E4B     	 ldr r3,.L138+8
 3259 002c 0420     	 mov r0,#4
 3260 002e 191C     	 mov r1,r3
 3261 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3262 0034 031C     	 mov r3,r0
 3263 0036 1A1C     	 mov r2,r3
 3264 0038 0B4B     	 ldr r3,.L138+12
 3265 003a 1A70     	 strb r2,[r3]
 3266              	.L136:
 656:../samuel/samuel_io.c ****       }
 657:../samuel/samuel_io.c **** 	 a = 0;
 3267              	 .loc 3 657 0
 3268 003c 0023     	 mov r3,#0
 3269 003e 7B60     	 str r3,[r7,#4]
 3270              	.L135:
 658:../samuel/samuel_io.c ****     }
 659:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3271              	 .loc 3 659 0
 3272 0040 074B     	 ldr r3,.L138+4
 3273 0042 1B78     	 ldrb r3,[r3]
 3274 0044 1A1C     	 mov r2,r3
 3275 0046 084B     	 ldr r3,.L138+12
 3276 0048 1B78     	 ldrb r3,[r3]
 3277 004a 1B01     	 lsl r3,r3,#4
 3278 004c D218     	 add r2,r2,r3
 3279 004e 7B68     	 ldr r3,[r7,#4]
 3280 0050 D318     	 add r3,r2,r3
 660:../samuel/samuel_io.c ****  }
 3281              	 .loc 3 660 0
 3282 0052 181C     	 mov r0,r3
 3283 0054 BD46     	 mov sp,r7
 3284 0056 02B0     	 add sp,sp,#8
 3285              	 
 3286 0058 80BD     	 pop {r7,pc}
 3287              	.L139:
 3288 005a C046     	 .align 2
 3289              	.L138:
 3290 005c 00000000 	 .word resultB
 3291 0060 00000000 	 .word EEprom_status
 3292 0064 00000000 	 .word ReadBuffer2
 3293 0068 00000000 	 .word oper_status
 3294              	 .cfi_endproc
 3295              	.LFE322:
 3297              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3298              	 .align 2
 3299              	 .global writeOff_light_B5_EEprom
 3300              	 .code 16
 3301              	 .thumb_func
 3303              	writeOff_light_B5_EEprom:
 3304              	.LFB323:
 661:../samuel/samuel_io.c ****  //----------------------------
 662:../samuel/samuel_io.c **** 
 663:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 664:../samuel/samuel_io.c ****  {
 3305              	 .loc 3 664 0
 3306              	 .cfi_startproc
 3307 0000 80B5     	 push {r7,lr}
 3308              	.LCFI82:
 3309              	 .cfi_def_cfa_offset 8
 3310              	 .cfi_offset 7,-8
 3311              	 .cfi_offset 14,-4
 3312 0002 82B0     	 sub sp,sp,#8
 3313              	.LCFI83:
 3314              	 .cfi_def_cfa_offset 16
 3315 0004 00AF     	 add r7,sp,#0
 3316              	.LCFI84:
 3317              	 .cfi_def_cfa_register 7
 665:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3318              	 .loc 3 665 0
 3319 0006 8023     	 mov r3,#128
 3320 0008 7B60     	 str r3,[r7,#4]
 666:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3321              	 .loc 3 666 0
 3322 000a 144B     	 ldr r3,.L144
 3323 000c 1A88     	 ldrh r2,[r3]
 3324 000e BA23     	 mov r3,#186
 3325 0010 1B01     	 lsl r3,r3,#4
 3326 0012 9A42     	 cmp r2,r3
 3327 0014 14D9     	 bls .L141
 667:../samuel/samuel_io.c ****   {
 668:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3328              	 .loc 3 668 0
 3329 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3330 001a 031C     	 mov r3,r0
 3331 001c 1A1C     	 mov r2,r3
 3332 001e 104B     	 ldr r3,.L144+4
 3333 0020 1A70     	 strb r2,[r3]
 669:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3334              	 .loc 3 669 0
 3335 0022 0F4B     	 ldr r3,.L144+4
 3336 0024 1B78     	 ldrb r3,[r3]
 3337 0026 032B     	 cmp r3,#3
 3338 0028 08D1     	 bne .L142
 670:../samuel/samuel_io.c ****     {
 671:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3339              	 .loc 3 671 0
 3340 002a 0E4B     	 ldr r3,.L144+8
 3341 002c 0520     	 mov r0,#5
 3342 002e 191C     	 mov r1,r3
 3343 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3344 0034 031C     	 mov r3,r0
 3345 0036 1A1C     	 mov r2,r3
 3346 0038 0B4B     	 ldr r3,.L144+12
 3347 003a 1A70     	 strb r2,[r3]
 3348              	.L142:
 672:../samuel/samuel_io.c **** 
 673:../samuel/samuel_io.c **** 
 674:../samuel/samuel_io.c **** 
 675:../samuel/samuel_io.c **** 
 676:../samuel/samuel_io.c ****     }
 677:../samuel/samuel_io.c **** 	 a = 0;
 3349              	 .loc 3 677 0
 3350 003c 0023     	 mov r3,#0
 3351 003e 7B60     	 str r3,[r7,#4]
 3352              	.L141:
 678:../samuel/samuel_io.c ****   }
 679:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3353              	 .loc 3 679 0
 3354 0040 074B     	 ldr r3,.L144+4
 3355 0042 1B78     	 ldrb r3,[r3]
 3356 0044 1A1C     	 mov r2,r3
 3357 0046 084B     	 ldr r3,.L144+12
 3358 0048 1B78     	 ldrb r3,[r3]
 3359 004a 1B01     	 lsl r3,r3,#4
 3360 004c D218     	 add r2,r2,r3
 3361 004e 7B68     	 ldr r3,[r7,#4]
 3362 0050 D318     	 add r3,r2,r3
 680:../samuel/samuel_io.c ****  }
 3363              	 .loc 3 680 0
 3364 0052 181C     	 mov r0,r3
 3365 0054 BD46     	 mov sp,r7
 3366 0056 02B0     	 add sp,sp,#8
 3367              	 
 3368 0058 80BD     	 pop {r7,pc}
 3369              	.L145:
 3370 005a C046     	 .align 2
 3371              	.L144:
 3372 005c 00000000 	 .word resultB
 3373 0060 00000000 	 .word EEprom_status
 3374 0064 00000000 	 .word ReadBuffer2
 3375 0068 00000000 	 .word oper_status
 3376              	 .cfi_endproc
 3377              	.LFE323:
 3379              	 .section .text.sysiniValueB1,"ax",%progbits
 3380              	 .align 2
 3381              	 .global sysiniValueB1
 3382              	 .code 16
 3383              	 .thumb_func
 3385              	sysiniValueB1:
 3386              	.LFB324:
 681:../samuel/samuel_io.c **** 
 682:../samuel/samuel_io.c **** ///#############################################
 683:../samuel/samuel_io.c ****  //initialisierung
 684:../samuel/samuel_io.c **** 
 685:../samuel/samuel_io.c **** 
 686:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 687:../samuel/samuel_io.c ****  {
 3387              	 .loc 3 687 0
 3388              	 .cfi_startproc
 3389 0000 80B5     	 push {r7,lr}
 3390              	.LCFI85:
 3391              	 .cfi_def_cfa_offset 8
 3392              	 .cfi_offset 7,-8
 3393              	 .cfi_offset 14,-4
 3394 0002 00AF     	 add r7,sp,#0
 3395              	.LCFI86:
 3396              	 .cfi_def_cfa_register 7
 688:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 689:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 690:../samuel/samuel_io.c **** 
 691:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3397              	 .loc 3 691 0
 3398 0004 124B     	 ldr r3,.L147
 3399 0006 134A     	 ldr r2,.L147+4
 3400 0008 1A80     	 strh r2,[r3]
 692:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3401              	 .loc 3 692 0
 3402 000a 134B     	 ldr r3,.L147+8
 3403 000c 134A     	 ldr r2,.L147+12
 3404 000e 1A80     	 strh r2,[r3]
 693:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3405              	 .loc 3 693 0
 3406 0010 134B     	 ldr r3,.L147+16
 3407 0012 FA22     	 mov r2,#250
 3408 0014 9200     	 lsl r2,r2,#2
 3409 0016 1A80     	 strh r2,[r3]
 694:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3410              	 .loc 3 694 0
 3411 0018 124B     	 ldr r3,.L147+20
 3412 001a FA22     	 mov r2,#250
 3413 001c 9200     	 lsl r2,r2,#2
 3414 001e 1A80     	 strh r2,[r3]
 695:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3415              	 .loc 3 695 0
 3416 0020 114B     	 ldr r3,.L147+24
 3417 0022 FA22     	 mov r2,#250
 3418 0024 9200     	 lsl r2,r2,#2
 3419 0026 1A80     	 strh r2,[r3]
 696:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3420              	 .loc 3 696 0
 3421 0028 104B     	 ldr r3,.L147+28
 3422 002a FA22     	 mov r2,#250
 3423 002c 9200     	 lsl r2,r2,#2
 3424 002e 1A80     	 strh r2,[r3]
 697:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3425              	 .loc 3 697 0
 3426 0030 0F4B     	 ldr r3,.L147+32
 3427 0032 FA22     	 mov r2,#250
 3428 0034 9200     	 lsl r2,r2,#2
 3429 0036 1A80     	 strh r2,[r3]
 698:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3430              	 .loc 3 698 0
 3431 0038 0E4B     	 ldr r3,.L147+36
 3432 003a FA22     	 mov r2,#250
 3433 003c 9200     	 lsl r2,r2,#2
 3434 003e 1A80     	 strh r2,[r3]
 699:../samuel/samuel_io.c **** 
 700:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3435              	 .loc 3 700 0
 3436 0040 0D4B     	 ldr r3,.L147+40
 3437 0042 0022     	 mov r2,#0
 3438 0044 1A80     	 strh r2,[r3]
 701:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3439              	 .loc 3 701 0
 3440 0046 0D4B     	 ldr r3,.L147+44
 3441 0048 0022     	 mov r2,#0
 3442 004a 1A80     	 strh r2,[r3]
 702:../samuel/samuel_io.c **** 
 703:../samuel/samuel_io.c ****  }
 3443              	 .loc 3 703 0
 3444 004c BD46     	 mov sp,r7
 3445              	 
 3446 004e 80BD     	 pop {r7,pc}
 3447              	.L148:
 3448              	 .align 2
 3449              	.L147:
 3450 0050 00000000 	 .word Ser_NrH
 3451 0054 7A7B0000 	 .word 31610
 3452 0058 00000000 	 .word Ser_NrL
 3453 005c 59580000 	 .word 22617
 3454 0060 00000000 	 .word Hard_Vers
 3455 0064 00000000 	 .word Soft_Vers
 3456 0068 00000000 	 .word GEH_Vers
 3457 006c 00000000 	 .word Mon_Vers
 3458 0070 00000000 	 .word LED_WW_Vers
 3459 0074 00000000 	 .word LED_CW_Vers
 3460 0078 00000000 	 .word neu_Ser_NrH
 3461 007c 00000000 	 .word neu_Ser_NrL
 3462              	 .cfi_endproc
 3463              	.LFE324:
 3465              	 .section .text.sysiniValueB2,"ax",%progbits
 3466              	 .align 2
 3467              	 .global sysiniValueB2
 3468              	 .code 16
 3469              	 .thumb_func
 3471              	sysiniValueB2:
 3472              	.LFB325:
 704:../samuel/samuel_io.c **** 
 705:../samuel/samuel_io.c **** 
 706:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 707:../samuel/samuel_io.c ****  {
 3473              	 .loc 3 707 0
 3474              	 .cfi_startproc
 3475 0000 80B5     	 push {r7,lr}
 3476              	.LCFI87:
 3477              	 .cfi_def_cfa_offset 8
 3478              	 .cfi_offset 7,-8
 3479              	 .cfi_offset 14,-4
 3480 0002 00AF     	 add r7,sp,#0
 3481              	.LCFI88:
 3482              	 .cfi_def_cfa_register 7
 708:../samuel/samuel_io.c ****            node_id = 1;
 3483              	 .loc 3 708 0
 3484 0004 114B     	 ldr r3,.L150
 3485 0006 0122     	 mov r2,#1
 3486 0008 1A70     	 strb r2,[r3]
 709:../samuel/samuel_io.c ****            node_id_alt = 1;
 3487              	 .loc 3 709 0
 3488 000a 114B     	 ldr r3,.L150+4
 3489 000c 0122     	 mov r2,#1
 3490 000e 1A70     	 strb r2,[r3]
 710:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3491              	 .loc 3 710 0
 3492 0010 104B     	 ldr r3,.L150+8
 3493 0012 114A     	 ldr r2,.L150+12
 3494 0014 1A80     	 strh r2,[r3]
 711:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3495              	 .loc 3 711 0
 3496 0016 114B     	 ldr r3,.L150+16
 3497 0018 FA22     	 mov r2,#250
 3498 001a D200     	 lsl r2,r2,#3
 3499 001c 1A80     	 strh r2,[r3]
 712:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3500              	 .loc 3 712 0
 3501 001e 104B     	 ldr r3,.L150+20
 3502 0020 FA22     	 mov r2,#250
 3503 0022 D200     	 lsl r2,r2,#3
 3504 0024 1A80     	 strh r2,[r3]
 713:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3505              	 .loc 3 713 0
 3506 0026 0F4B     	 ldr r3,.L150+24
 3507 0028 E122     	 mov r2,#225
 3508 002a 1201     	 lsl r2,r2,#4
 3509 002c 1A80     	 strh r2,[r3]
 714:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3510              	 .loc 3 714 0
 3511 002e 0E4B     	 ldr r3,.L150+28
 3512 0030 0E4A     	 ldr r2,.L150+32
 3513 0032 1A80     	 strh r2,[r3]
 715:../samuel/samuel_io.c **** 		   led_grupp=10;
 3514              	 .loc 3 715 0
 3515 0034 0E4B     	 ldr r3,.L150+36
 3516 0036 0A22     	 mov r2,#10
 3517 0038 1A80     	 strh r2,[r3]
 716:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3518              	 .loc 3 716 0
 3519 003a 0E4B     	 ldr r3,.L150+40
 3520 003c 3522     	 mov r2,#53
 3521 003e 1A80     	 strh r2,[r3]
 717:../samuel/samuel_io.c **** 
 718:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3522              	 .loc 3 718 0
 3523 0040 0D4B     	 ldr r3,.L150+44
 3524 0042 0122     	 mov r2,#1
 3525 0044 1A70     	 strb r2,[r3]
 719:../samuel/samuel_io.c ****  }
 3526              	 .loc 3 719 0
 3527 0046 BD46     	 mov sp,r7
 3528              	 
 3529 0048 80BD     	 pop {r7,pc}
 3530              	.L151:
 3531 004a C046     	 .align 2
 3532              	.L150:
 3533 004c 00000000 	 .word node_id
 3534 0050 00000000 	 .word node_id_alt
 3535 0054 00000000 	 .word node_id_16bit
 3536 0058 34120000 	 .word 4660
 3537 005c 00000000 	 .word val_Pow_Nom
 3538 0060 00000000 	 .word val_Pow_max
 3539 0064 00000000 	 .word val_Spannung_min
 3540 0068 00000000 	 .word val_Spannung_max
 3541 006c 68100000 	 .word 4200
 3542 0070 00000000 	 .word led_grupp
 3543 0074 00000000 	 .word led_Strom
 3544 0078 00000000 	 .word node_id_neu
 3545              	 .cfi_endproc
 3546              	.LFE325:
 3548              	 .section .text.sysiniValueB4,"ax",%progbits
 3549              	 .align 2
 3550              	 .global sysiniValueB4
 3551              	 .code 16
 3552              	 .thumb_func
 3554              	sysiniValueB4:
 3555              	.LFB326:
 720:../samuel/samuel_io.c **** 
 721:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 722:../samuel/samuel_io.c ****  {
 3556              	 .loc 3 722 0
 3557              	 .cfi_startproc
 3558 0000 80B5     	 push {r7,lr}
 3559              	.LCFI89:
 3560              	 .cfi_def_cfa_offset 8
 3561              	 .cfi_offset 7,-8
 3562              	 .cfi_offset 14,-4
 3563 0002 00AF     	 add r7,sp,#0
 3564              	.LCFI90:
 3565              	 .cfi_def_cfa_register 7
 723:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3566              	 .loc 3 723 0
 3567 0004 264B     	 ldr r3,.L153
 3568 0006 0A22     	 mov r2,#10
 3569 0008 1A70     	 strb r2,[r3]
 724:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3570              	 .loc 3 724 0
 3571 000a 264B     	 ldr r3,.L153+4
 3572 000c 0A22     	 mov r2,#10
 3573 000e 1A70     	 strb r2,[r3]
 725:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3574              	 .loc 3 725 0
 3575 0010 254B     	 ldr r3,.L153+8
 3576 0012 0A22     	 mov r2,#10
 3577 0014 1A70     	 strb r2,[r3]
 726:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3578              	 .loc 3 726 0
 3579 0016 254B     	 ldr r3,.L153+12
 3580 0018 0A22     	 mov r2,#10
 3581 001a 1A70     	 strb r2,[r3]
 727:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3582              	 .loc 3 727 0
 3583 001c 244B     	 ldr r3,.L153+16
 3584 001e 0A22     	 mov r2,#10
 3585 0020 1A80     	 strh r2,[r3]
 728:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3586              	 .loc 3 728 0
 3587 0022 244B     	 ldr r3,.L153+20
 3588 0024 B022     	 mov r2,#176
 3589 0026 1A80     	 strh r2,[r3]
 729:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3590              	 .loc 3 729 0
 3591 0028 234B     	 ldr r3,.L153+24
 3592 002a 0122     	 mov r2,#1
 3593 002c 5242     	 neg r2,r2
 3594 002e 1A80     	 strh r2,[r3]
 730:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3595              	 .loc 3 730 0
 3596 0030 224B     	 ldr r3,.L153+28
 3597 0032 0022     	 mov r2,#0
 3598 0034 1A80     	 strh r2,[r3]
 731:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3599              	 .loc 3 731 0
 3600 0036 224B     	 ldr r3,.L153+32
 3601 0038 FA22     	 mov r2,#250
 3602 003a 9200     	 lsl r2,r2,#2
 3603 003c 1A80     	 strh r2,[r3]
 732:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3604              	 .loc 3 732 0
 3605 003e 214B     	 ldr r3,.L153+36
 3606 0040 FA22     	 mov r2,#250
 3607 0042 9200     	 lsl r2,r2,#2
 3608 0044 1A80     	 strh r2,[r3]
 733:../samuel/samuel_io.c **** 
 734:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3609              	 .loc 3 734 0
 3610 0046 1B4B     	 ldr r3,.L153+20
 3611 0048 1A88     	 ldrh r2,[r3]
 3612 004a 1F4B     	 ldr r3,.L153+40
 3613 004c 1A80     	 strh r2,[r3]
 735:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3614              	 .loc 3 735 0
 3615 004e 194B     	 ldr r3,.L153+20
 3616 0050 1A88     	 ldrh r2,[r3]
 3617 0052 1E4B     	 ldr r3,.L153+44
 3618 0054 1A80     	 strh r2,[r3]
 736:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3619              	 .loc 3 736 0
 3620 0056 174B     	 ldr r3,.L153+20
 3621 0058 1A88     	 ldrh r2,[r3]
 3622 005a 1D4B     	 ldr r3,.L153+48
 3623 005c 1A80     	 strh r2,[r3]
 737:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3624              	 .loc 3 737 0
 3625 005e 154B     	 ldr r3,.L153+20
 3626 0060 1A88     	 ldrh r2,[r3]
 3627 0062 1C4B     	 ldr r3,.L153+52
 3628 0064 1A80     	 strh r2,[r3]
 738:../samuel/samuel_io.c **** 
 739:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3629              	 .loc 3 739 0
 3630 0066 144B     	 ldr r3,.L153+24
 3631 0068 1B88     	 ldrh r3,[r3]
 3632 006a 1B0A     	 lsr r3,r3,#8
 3633 006c 9AB2     	 uxth r2,r3
 3634 006e 1A4B     	 ldr r3,.L153+56
 3635 0070 1A80     	 strh r2,[r3]
 740:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3636              	 .loc 3 740 0
 3637 0072 114B     	 ldr r3,.L153+24
 3638 0074 1B88     	 ldrh r3,[r3]
 3639 0076 1B0A     	 lsr r3,r3,#8
 3640 0078 9AB2     	 uxth r2,r3
 3641 007a 184B     	 ldr r3,.L153+60
 3642 007c 1A80     	 strh r2,[r3]
 741:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3643              	 .loc 3 741 0
 3644 007e 0E4B     	 ldr r3,.L153+24
 3645 0080 1B88     	 ldrh r3,[r3]
 3646 0082 FF22     	 mov r2,#255
 3647 0084 1340     	 and r3,r2
 3648 0086 9AB2     	 uxth r2,r3
 3649 0088 154B     	 ldr r3,.L153+64
 3650 008a 1A80     	 strh r2,[r3]
 742:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3651              	 .loc 3 742 0
 3652 008c 0A4B     	 ldr r3,.L153+24
 3653 008e 1B88     	 ldrh r3,[r3]
 3654 0090 FF22     	 mov r2,#255
 3655 0092 1340     	 and r3,r2
 3656 0094 9AB2     	 uxth r2,r3
 3657 0096 134B     	 ldr r3,.L153+68
 3658 0098 1A80     	 strh r2,[r3]
 743:../samuel/samuel_io.c ****  }
 3659              	 .loc 3 743 0
 3660 009a BD46     	 mov sp,r7
 3661              	 
 3662 009c 80BD     	 pop {r7,pc}
 3663              	.L154:
 3664 009e C046     	 .align 2
 3665              	.L153:
 3666 00a0 00000000 	 .word Dimm_Gamma
 3667 00a4 00000000 	 .word Dimm_Stufen
 3668 00a8 00000000 	 .word Dimm_StufenGR
 3669 00ac 00000000 	 .word Dimm_Valu
 3670 00b0 00000000 	 .word Smooth_Value
 3671 00b4 00000000 	 .word linearwalk_gen
 3672 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 3673 00bc 00000000 	 .word Reserve_1
 3674 00c0 00000000 	 .word Dimm_Max_WW
 3675 00c4 00000000 	 .word Dimm_Max_CW
 3676 00c8 00000000 	 .word linearwalk_ww1
 3677 00cc 00000000 	 .word linearwalk_ww2
 3678 00d0 00000000 	 .word linearwalk_cw1
 3679 00d4 00000000 	 .word linearwalk_cw2
 3680 00d8 00000000 	 .word Farbe_ww1_Quot
 3681 00dc 00000000 	 .word Farbe_cw1_Quot
 3682 00e0 00000000 	 .word Farbe_ww2_Quot
 3683 00e4 00000000 	 .word Farbe_cw2_Quot
 3684              	 .cfi_endproc
 3685              	.LFE326:
 3687              	 .section .text.sysiniValueB5,"ax",%progbits
 3688              	 .align 2
 3689              	 .global sysiniValueB5
 3690              	 .code 16
 3691              	 .thumb_func
 3693              	sysiniValueB5:
 3694              	.LFB327:
 744:../samuel/samuel_io.c **** 
 745:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 746:../samuel/samuel_io.c ****  {
 3695              	 .loc 3 746 0
 3696              	 .cfi_startproc
 3697 0000 80B5     	 push {r7,lr}
 3698              	.LCFI91:
 3699              	 .cfi_def_cfa_offset 8
 3700              	 .cfi_offset 7,-8
 3701              	 .cfi_offset 14,-4
 3702 0002 00AF     	 add r7,sp,#0
 3703              	.LCFI92:
 3704              	 .cfi_def_cfa_register 7
 747:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 3705              	 .loc 3 747 0
 3706 0004 0E4B     	 ldr r3,.L156
 3707 0006 0522     	 mov r2,#5
 3708 0008 1A70     	 strb r2,[r3]
 748:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 3709              	 .loc 3 748 0
 3710 000a 0E4B     	 ldr r3,.L156+4
 3711 000c 0022     	 mov r2,#0
 3712 000e 1A70     	 strb r2,[r3]
 749:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 3713              	 .loc 3 749 0
 3714 0010 0D4B     	 ldr r3,.L156+8
 3715 0012 0022     	 mov r2,#0
 3716 0014 1A80     	 strh r2,[r3]
 750:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 3717              	 .loc 3 750 0
 3718 0016 0D4B     	 ldr r3,.L156+12
 3719 0018 0D4A     	 ldr r2,.L156+16
 3720 001a 1A80     	 strh r2,[r3]
 751:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 3721              	 .loc 3 751 0
 3722 001c 0D4B     	 ldr r3,.L156+20
 3723 001e 0C4A     	 ldr r2,.L156+16
 3724 0020 1A80     	 strh r2,[r3]
 752:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 3725              	 .loc 3 752 0
 3726 0022 0D4B     	 ldr r3,.L156+24
 3727 0024 0D4A     	 ldr r2,.L156+28
 3728 0026 1A80     	 strh r2,[r3]
 753:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 3729              	 .loc 3 753 0
 3730 0028 0D4B     	 ldr r3,.L156+32
 3731 002a 0C4A     	 ldr r2,.L156+28
 3732 002c 1A80     	 strh r2,[r3]
 754:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 3733              	 .loc 3 754 0
 3734 002e 0D4B     	 ldr r3,.L156+36
 3735 0030 0D4A     	 ldr r2,.L156+40
 3736 0032 1A80     	 strh r2,[r3]
 755:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 3737              	 .loc 3 755 0
 3738 0034 0D4B     	 ldr r3,.L156+44
 3739 0036 0C4A     	 ldr r2,.L156+40
 3740 0038 1A80     	 strh r2,[r3]
 756:../samuel/samuel_io.c ****  }
 3741              	 .loc 3 756 0
 3742 003a BD46     	 mov sp,r7
 3743              	 
 3744 003c 80BD     	 pop {r7,pc}
 3745              	.L157:
 3746 003e C046     	 .align 2
 3747              	.L156:
 3748 0040 00000000 	 .word RegOnOff
 3749 0044 00000000 	 .word RegOnOff2
 3750 0048 00000000 	 .word Reserve_2
 3751 004c 00000000 	 .word dimOff_Ww
 3752 0050 FF0F0000 	 .word 4095
 3753 0054 00000000 	 .word dimOff_Cw
 3754 0058 00000000 	 .word dimNorm1_Ww
 3755 005c FF010000 	 .word 511
 3756 0060 00000000 	 .word dimNorm1_Cw
 3757 0064 00000000 	 .word dimNorm2_Ww
 3758 0068 FF020000 	 .word 767
 3759 006c 00000000 	 .word dimNorm2_Cw
 3760              	 .cfi_endproc
 3761              	.LFE327:
 3763              	 .section .text.bcuInit,"ax",%progbits
 3764              	 .align 2
 3765              	 .global bcuInit
 3766              	 .code 16
 3767              	 .thumb_func
 3769              	bcuInit:
 3770              	.LFB328:
 757:../samuel/samuel_io.c **** 
 758:../samuel/samuel_io.c ****  //-----------------------------------------------
 759:../samuel/samuel_io.c ****  // BCCU Vorgaben
 760:../samuel/samuel_io.c **** 
 761:../samuel/samuel_io.c ****  void bcuInit(void)
 762:../samuel/samuel_io.c ****  {
 3771              	 .loc 3 762 0
 3772              	 .cfi_startproc
 3773 0000 80B5     	 push {r7,lr}
 3774              	.LCFI93:
 3775              	 .cfi_def_cfa_offset 8
 3776              	 .cfi_offset 7,-8
 3777              	 .cfi_offset 14,-4
 3778 0002 00AF     	 add r7,sp,#0
 3779              	.LCFI94:
 3780              	 .cfi_def_cfa_register 7
 763:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 3781              	 .loc 3 763 0
 3782 0004 194B     	 ldr r3,.L168
 3783 0006 1B78     	 ldrb r3,[r3]
 3784 0008 052B     	 cmp r3,#5
 3785 000a 2CD8     	 bhi .L167
 3786 000c 9A00     	 lsl r2,r3,#2
 3787 000e 184B     	 ldr r3,.L168+4
 3788 0010 D318     	 add r3,r2,r3
 3789 0012 1B68     	 ldr r3,[r3]
 3790 0014 9F46     	 mov pc,r3
 3791              	 .section .rodata.bcuInit,"a",%progbits
 3792              	 .align 2
 3793              	.L161:
 3794 0000 66000000 	 .word .L167
 3795 0004 16000000 	 .word .L160
 3796 0008 24000000 	 .word .L162
 3797 000c 32000000 	 .word .L163
 3798 0010 42000000 	 .word .L164
 3799 0014 54000000 	 .word .L165
 3800              	 .section .text.bcuInit
 3801              	.L160:
 764:../samuel/samuel_io.c **** 		{
 765:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 3802              	 .loc 3 765 0
 3803 0016 174B     	 ldr r3,.L168+8
 3804 0018 0022     	 mov r2,#0
 3805 001a 1A80     	 strh r2,[r3]
 766:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 3806              	 .loc 3 766 0
 3807 001c 164B     	 ldr r3,.L168+12
 3808 001e 0022     	 mov r2,#0
 3809 0020 1A80     	 strh r2,[r3]
 767:../samuel/samuel_io.c **** 									break;
 3810              	 .loc 3 767 0
 3811 0022 21E0     	 b .L158
 3812              	.L162:
 768:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 3813              	 .loc 3 768 0
 3814 0024 134B     	 ldr r3,.L168+8
 3815 0026 154A     	 ldr r2,.L168+16
 3816 0028 1A80     	 strh r2,[r3]
 769:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 3817              	 .loc 3 769 0
 3818 002a 134B     	 ldr r3,.L168+12
 3819 002c 134A     	 ldr r2,.L168+16
 3820 002e 1A80     	 strh r2,[r3]
 770:../samuel/samuel_io.c **** 									break;
 3821              	 .loc 3 770 0
 3822 0030 1AE0     	 b .L158
 3823              	.L163:
 771:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 3824              	 .loc 3 771 0
 3825 0032 134B     	 ldr r3,.L168+20
 3826 0034 1A88     	 ldrh r2,[r3]
 3827 0036 0F4B     	 ldr r3,.L168+8
 3828 0038 1A80     	 strh r2,[r3]
 772:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 3829              	 .loc 3 772 0
 3830 003a 124B     	 ldr r3,.L168+24
 3831 003c 1A88     	 ldrh r2,[r3]
 3832 003e 0E4B     	 ldr r3,.L168+12
 3833 0040 1A80     	 strh r2,[r3]
 3834              	.L164:
 773:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 3835              	 .loc 3 773 0
 3836 0042 114B     	 ldr r3,.L168+28
 3837 0044 1A88     	 ldrh r2,[r3]
 3838 0046 0B4B     	 ldr r3,.L168+8
 3839 0048 1A80     	 strh r2,[r3]
 774:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 3840              	 .loc 3 774 0
 3841 004a 104B     	 ldr r3,.L168+32
 3842 004c 1A88     	 ldrh r2,[r3]
 3843 004e 0A4B     	 ldr r3,.L168+12
 3844 0050 1A80     	 strh r2,[r3]
 775:../samuel/samuel_io.c **** 									break;
 3845              	 .loc 3 775 0
 3846 0052 09E0     	 b .L158
 3847              	.L165:
 776:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 3848              	 .loc 3 776 0
 3849 0054 0E4B     	 ldr r3,.L168+36
 3850 0056 1A88     	 ldrh r2,[r3]
 3851 0058 064B     	 ldr r3,.L168+8
 3852 005a 1A80     	 strh r2,[r3]
 777:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 3853              	 .loc 3 777 0
 3854 005c 0D4B     	 ldr r3,.L168+40
 3855 005e 1A88     	 ldrh r2,[r3]
 3856 0060 054B     	 ldr r3,.L168+12
 3857 0062 1A80     	 strh r2,[r3]
 778:../samuel/samuel_io.c **** 									break;
 3858              	 .loc 3 778 0
 3859 0064 00E0     	 b .L158
 3860              	.L167:
 779:../samuel/samuel_io.c **** 		default:
 780:../samuel/samuel_io.c **** 									break;
 3861              	 .loc 3 780 0
 3862 0066 C046     	 mov r8,r8
 3863              	.L158:
 781:../samuel/samuel_io.c **** 		}
 782:../samuel/samuel_io.c **** 
 783:../samuel/samuel_io.c ****  }
 3864              	 .loc 3 783 0
 3865 0068 BD46     	 mov sp,r7
 3866              	 
 3867 006a 80BD     	 pop {r7,pc}
 3868              	.L169:
 3869              	 .align 2
 3870              	.L168:
 3871 006c 00000000 	 .word RegOnOff
 3872 0070 00000000 	 .word .L161
 3873 0074 00000000 	 .word dimAkt_Ww
 3874 0078 00000000 	 .word dimAkt_Cw
 3875 007c FF7F0000 	 .word 32767
 3876 0080 00000000 	 .word dimNorm1_Ww
 3877 0084 00000000 	 .word dimNorm1_Cw
 3878 0088 00000000 	 .word dimNorm2_Ww
 3879 008c 00000000 	 .word dimNorm2_Cw
 3880 0090 00000000 	 .word dimOff_Ww
 3881 0094 00000000 	 .word dimOff_Cw
 3882              	 .cfi_endproc
 3883              	.LFE328:
 3885              	 .section .text.bcuUebergabe,"ax",%progbits
 3886              	 .align 2
 3887              	 .global bcuUebergabe
 3888              	 .code 16
 3889              	 .thumb_func
 3891              	bcuUebergabe:
 3892              	.LFB329:
 784:../samuel/samuel_io.c ****  //----------------------------------
 785:../samuel/samuel_io.c **** 
 786:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 787:../samuel/samuel_io.c ****  {
 3893              	 .loc 3 787 0
 3894              	 .cfi_startproc
 3895 0000 80B5     	 push {r7,lr}
 3896              	.LCFI95:
 3897              	 .cfi_def_cfa_offset 8
 3898              	 .cfi_offset 7,-8
 3899              	 .cfi_offset 14,-4
 3900 0002 00AF     	 add r7,sp,#0
 3901              	.LCFI96:
 3902              	 .cfi_def_cfa_register 7
 788:../samuel/samuel_io.c **** 
 789:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 790:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 791:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 792:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 793:../samuel/samuel_io.c **** 
 794:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 3903              	 .loc 3 794 0
 3904 0004 204B     	 ldr r3,.L171
 3905 0006 1B88     	 ldrh r3,[r3]
 3906 0008 1A1C     	 mov r2,r3
 3907 000a 204B     	 ldr r3,.L171+4
 3908 000c 181C     	 mov r0,r3
 3909 000e 111C     	 mov r1,r2
 3910 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 795:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 3911              	 .loc 3 795 0
 3912 0014 1E4B     	 ldr r3,.L171+8
 3913 0016 1B88     	 ldrh r3,[r3]
 3914 0018 1A1C     	 mov r2,r3
 3915 001a 1E4B     	 ldr r3,.L171+12
 3916 001c 181C     	 mov r0,r3
 3917 001e 111C     	 mov r1,r2
 3918 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 796:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 3919              	 .loc 3 796 0
 3920 0024 1C4B     	 ldr r3,.L171+16
 3921 0026 1B88     	 ldrh r3,[r3]
 3922 0028 1A1C     	 mov r2,r3
 3923 002a 1C4B     	 ldr r3,.L171+20
 3924 002c 181C     	 mov r0,r3
 3925 002e 111C     	 mov r1,r2
 3926 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 797:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 3927              	 .loc 3 797 0
 3928 0034 1A4B     	 ldr r3,.L171+24
 3929 0036 1B88     	 ldrh r3,[r3]
 3930 0038 1A1C     	 mov r2,r3
 3931 003a 1A4B     	 ldr r3,.L171+28
 3932 003c 181C     	 mov r0,r3
 3933 003e 111C     	 mov r1,r2
 3934 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 798:../samuel/samuel_io.c **** 
 799:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 3935              	 .loc 3 799 0
 3936 0044 184B     	 ldr r3,.L171+32
 3937 0046 1B88     	 ldrh r3,[r3]
 3938 0048 1A1C     	 mov r2,r3
 3939 004a 104B     	 ldr r3,.L171+4
 3940 004c 181C     	 mov r0,r3
 3941 004e 111C     	 mov r1,r2
 3942 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 800:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 3943              	 .loc 3 800 0
 3944 0054 154B     	 ldr r3,.L171+36
 3945 0056 1B88     	 ldrh r3,[r3]
 3946 0058 1A1C     	 mov r2,r3
 3947 005a 0E4B     	 ldr r3,.L171+12
 3948 005c 181C     	 mov r0,r3
 3949 005e 111C     	 mov r1,r2
 3950 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 801:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 3951              	 .loc 3 801 0
 3952 0064 124B     	 ldr r3,.L171+40
 3953 0066 1B88     	 ldrh r3,[r3]
 3954 0068 1A1C     	 mov r2,r3
 3955 006a 0C4B     	 ldr r3,.L171+20
 3956 006c 181C     	 mov r0,r3
 3957 006e 111C     	 mov r1,r2
 3958 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 802:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 3959              	 .loc 3 802 0
 3960 0074 0F4B     	 ldr r3,.L171+44
 3961 0076 1B88     	 ldrh r3,[r3]
 3962 0078 1A1C     	 mov r2,r3
 3963 007a 0A4B     	 ldr r3,.L171+28
 3964 007c 181C     	 mov r0,r3
 3965 007e 111C     	 mov r1,r2
 3966 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 803:../samuel/samuel_io.c **** 
 804:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 805:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 806:../samuel/samuel_io.c **** 
 807:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 808:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 809:../samuel/samuel_io.c ****  }
 3967              	 .loc 3 809 0
 3968 0084 BD46     	 mov sp,r7
 3969              	 
 3970 0086 80BD     	 pop {r7,pc}
 3971              	.L172:
 3972              	 .align 2
 3973              	.L171:
 3974 0088 00000000 	 .word Farbe_ww2
 3975 008c 00000000 	 .word PDM_BCCU_0
 3976 0090 00000000 	 .word Farbe_cw2
 3977 0094 00000000 	 .word PDM_BCCU_1
 3978 0098 00000000 	 .word Farbe_ww1
 3979 009c 00000000 	 .word PDM_BCCU_2
 3980 00a0 00000000 	 .word Farbe_cw1
 3981 00a4 00000000 	 .word PDM_BCCU_3
 3982 00a8 00000000 	 .word linearwalk_ww2
 3983 00ac 00000000 	 .word linearwalk_cw2
 3984 00b0 00000000 	 .word linearwalk_ww1
 3985 00b4 00000000 	 .word linearwalk_cw1
 3986              	 .cfi_endproc
 3987              	.LFE329:
 3989              	 .section .text.bcuAktBerechnung,"ax",%progbits
 3990              	 .align 2
 3991              	 .global bcuAktBerechnung
 3992              	 .code 16
 3993              	 .thumb_func
 3995              	bcuAktBerechnung:
 3996              	.LFB330:
 810:../samuel/samuel_io.c ****  //----------------------------------
 811:../samuel/samuel_io.c **** 
 812:../samuel/samuel_io.c **** 
 813:../samuel/samuel_io.c ****  //----------------------------------
 814:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 815:../samuel/samuel_io.c ****   {
 3997              	 .loc 3 815 0
 3998              	 .cfi_startproc
 3999 0000 80B5     	 push {r7,lr}
 4000              	.LCFI97:
 4001              	 .cfi_def_cfa_offset 8
 4002              	 .cfi_offset 7,-8
 4003              	 .cfi_offset 14,-4
 4004 0002 82B0     	 sub sp,sp,#8
 4005              	.LCFI98:
 4006              	 .cfi_def_cfa_offset 16
 4007 0004 00AF     	 add r7,sp,#0
 4008              	.LCFI99:
 4009              	 .cfi_def_cfa_register 7
 816:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 817:../samuel/samuel_io.c **** 
 818:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4010              	 .loc 3 818 0
 4011 0006 284B     	 ldr r3,.L174
 4012 0008 1B88     	 ldrh r3,[r3]
 4013 000a 1B0A     	 lsr r3,r3,#8
 4014 000c 9AB2     	 uxth r2,r3
 4015 000e 274B     	 ldr r3,.L174+4
 4016 0010 1A80     	 strh r2,[r3]
 819:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4017              	 .loc 3 819 0
 4018 0012 254B     	 ldr r3,.L174
 4019 0014 1B88     	 ldrh r3,[r3]
 4020 0016 1B0A     	 lsr r3,r3,#8
 4021 0018 9AB2     	 uxth r2,r3
 4022 001a 254B     	 ldr r3,.L174+8
 4023 001c 1A80     	 strh r2,[r3]
 820:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4024              	 .loc 3 820 0
 4025 001e 224B     	 ldr r3,.L174
 4026 0020 1B88     	 ldrh r3,[r3]
 4027 0022 FF22     	 mov r2,#255
 4028 0024 1340     	 and r3,r2
 4029 0026 9AB2     	 uxth r2,r3
 4030 0028 224B     	 ldr r3,.L174+12
 4031 002a 1A80     	 strh r2,[r3]
 821:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4032              	 .loc 3 821 0
 4033 002c 1E4B     	 ldr r3,.L174
 4034 002e 1B88     	 ldrh r3,[r3]
 4035 0030 FF22     	 mov r2,#255
 4036 0032 1340     	 and r3,r2
 4037 0034 9AB2     	 uxth r2,r3
 4038 0036 204B     	 ldr r3,.L174+16
 4039 0038 1A80     	 strh r2,[r3]
 822:../samuel/samuel_io.c **** 
 823:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4040              	 .loc 3 823 0
 4041 003a 204B     	 ldr r3,.L174+20
 4042 003c 1B88     	 ldrh r3,[r3]
 4043 003e 1A1C     	 mov r2,r3
 4044 0040 1A4B     	 ldr r3,.L174+4
 4045 0042 1B88     	 ldrh r3,[r3]
 4046 0044 5343     	 mul r3,r2
 4047 0046 7B60     	 str r3,[r7,#4]
 824:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4048              	 .loc 3 824 0
 4049 0048 7B68     	 ldr r3,[r7,#4]
 4050 004a 1B0A     	 lsr r3,r3,#8
 4051 004c 1B09     	 lsr r3,r3,#4
 4052 004e 9AB2     	 uxth r2,r3
 4053 0050 1B4B     	 ldr r3,.L174+24
 4054 0052 1A80     	 strh r2,[r3]
 825:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4055              	 .loc 3 825 0
 4056 0054 194B     	 ldr r3,.L174+20
 4057 0056 1B88     	 ldrh r3,[r3]
 4058 0058 1A1C     	 mov r2,r3
 4059 005a 164B     	 ldr r3,.L174+12
 4060 005c 1B88     	 ldrh r3,[r3]
 4061 005e 5343     	 mul r3,r2
 4062 0060 7B60     	 str r3,[r7,#4]
 826:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4063              	 .loc 3 826 0
 4064 0062 7B68     	 ldr r3,[r7,#4]
 4065 0064 1B0A     	 lsr r3,r3,#8
 4066 0066 1B09     	 lsr r3,r3,#4
 4067 0068 9AB2     	 uxth r2,r3
 4068 006a 164B     	 ldr r3,.L174+28
 4069 006c 1A80     	 strh r2,[r3]
 827:../samuel/samuel_io.c **** 
 828:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4070              	 .loc 3 828 0
 4071 006e 164B     	 ldr r3,.L174+32
 4072 0070 1B88     	 ldrh r3,[r3]
 4073 0072 1A1C     	 mov r2,r3
 4074 0074 0E4B     	 ldr r3,.L174+8
 4075 0076 1B88     	 ldrh r3,[r3]
 4076 0078 5343     	 mul r3,r2
 4077 007a 7B60     	 str r3,[r7,#4]
 829:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4078              	 .loc 3 829 0
 4079 007c 7B68     	 ldr r3,[r7,#4]
 4080 007e 1B0A     	 lsr r3,r3,#8
 4081 0080 1B09     	 lsr r3,r3,#4
 4082 0082 9AB2     	 uxth r2,r3
 4083 0084 114B     	 ldr r3,.L174+36
 4084 0086 1A80     	 strh r2,[r3]
 830:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4085              	 .loc 3 830 0
 4086 0088 0F4B     	 ldr r3,.L174+32
 4087 008a 1B88     	 ldrh r3,[r3]
 4088 008c 1A1C     	 mov r2,r3
 4089 008e 0A4B     	 ldr r3,.L174+16
 4090 0090 1B88     	 ldrh r3,[r3]
 4091 0092 5343     	 mul r3,r2
 4092 0094 7B60     	 str r3,[r7,#4]
 831:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4093              	 .loc 3 831 0
 4094 0096 7B68     	 ldr r3,[r7,#4]
 4095 0098 1B0A     	 lsr r3,r3,#8
 4096 009a 1B09     	 lsr r3,r3,#4
 4097 009c 9AB2     	 uxth r2,r3
 4098 009e 0C4B     	 ldr r3,.L174+40
 4099 00a0 1A80     	 strh r2,[r3]
 832:../samuel/samuel_io.c ****   }
 4100              	 .loc 3 832 0
 4101 00a2 BD46     	 mov sp,r7
 4102 00a4 02B0     	 add sp,sp,#8
 4103              	 
 4104 00a6 80BD     	 pop {r7,pc}
 4105              	.L175:
 4106              	 .align 2
 4107              	.L174:
 4108 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4109 00ac 00000000 	 .word Farbe_ww1_Quot
 4110 00b0 00000000 	 .word Farbe_cw1_Quot
 4111 00b4 00000000 	 .word Farbe_ww2_Quot
 4112 00b8 00000000 	 .word Farbe_cw2_Quot
 4113 00bc 00000000 	 .word dimAkt_Ww
 4114 00c0 00000000 	 .word Farbe_ww1
 4115 00c4 00000000 	 .word Farbe_ww2
 4116 00c8 00000000 	 .word dimAkt_Cw
 4117 00cc 00000000 	 .word Farbe_cw1
 4118 00d0 00000000 	 .word Farbe_cw2
 4119              	 .cfi_endproc
 4120              	.LFE330:
 4122              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4123              	 .align 2
 4124              	 .global bcudirAktBerechnung
 4125              	 .code 16
 4126              	 .thumb_func
 4128              	bcudirAktBerechnung:
 4129              	.LFB331:
 833:../samuel/samuel_io.c **** 
 834:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 835:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 836:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 837:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 838:../samuel/samuel_io.c **** 
 839:../samuel/samuel_io.c ****   {
 4130              	 .loc 3 839 0
 4131              	 .cfi_startproc
 4132 0000 80B5     	 push {r7,lr}
 4133              	.LCFI100:
 4134              	 .cfi_def_cfa_offset 8
 4135              	 .cfi_offset 7,-8
 4136              	 .cfi_offset 14,-4
 4137 0002 82B0     	 sub sp,sp,#8
 4138              	.LCFI101:
 4139              	 .cfi_def_cfa_offset 16
 4140 0004 00AF     	 add r7,sp,#0
 4141              	.LCFI102:
 4142              	 .cfi_def_cfa_register 7
 840:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 841:../samuel/samuel_io.c **** 
 842:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4143              	 .loc 3 842 0
 4144 0006 2A4B     	 ldr r3,.L177
 4145 0008 0122     	 mov r2,#1
 4146 000a 5242     	 neg r2,r2
 4147 000c 1A80     	 strh r2,[r3]
 843:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4148              	 .loc 3 843 0
 4149 000e 284B     	 ldr r3,.L177
 4150 0010 1B88     	 ldrh r3,[r3]
 4151 0012 1B0A     	 lsr r3,r3,#8
 4152 0014 9AB2     	 uxth r2,r3
 4153 0016 274B     	 ldr r3,.L177+4
 4154 0018 1A80     	 strh r2,[r3]
 844:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4155              	 .loc 3 844 0
 4156 001a 254B     	 ldr r3,.L177
 4157 001c 1B88     	 ldrh r3,[r3]
 4158 001e 1B0A     	 lsr r3,r3,#8
 4159 0020 9AB2     	 uxth r2,r3
 4160 0022 254B     	 ldr r3,.L177+8
 4161 0024 1A80     	 strh r2,[r3]
 845:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4162              	 .loc 3 845 0
 4163 0026 224B     	 ldr r3,.L177
 4164 0028 1B88     	 ldrh r3,[r3]
 4165 002a FF22     	 mov r2,#255
 4166 002c 1340     	 and r3,r2
 4167 002e 9AB2     	 uxth r2,r3
 4168 0030 224B     	 ldr r3,.L177+12
 4169 0032 1A80     	 strh r2,[r3]
 846:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4170              	 .loc 3 846 0
 4171 0034 1E4B     	 ldr r3,.L177
 4172 0036 1B88     	 ldrh r3,[r3]
 4173 0038 FF22     	 mov r2,#255
 4174 003a 1340     	 and r3,r2
 4175 003c 9AB2     	 uxth r2,r3
 4176 003e 204B     	 ldr r3,.L177+16
 4177 0040 1A80     	 strh r2,[r3]
 847:../samuel/samuel_io.c **** 
 848:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4178              	 .loc 3 848 0
 4179 0042 204B     	 ldr r3,.L177+20
 4180 0044 1B88     	 ldrh r3,[r3]
 4181 0046 1A1C     	 mov r2,r3
 4182 0048 1A4B     	 ldr r3,.L177+4
 4183 004a 1B88     	 ldrh r3,[r3]
 4184 004c 5343     	 mul r3,r2
 4185 004e 7B60     	 str r3,[r7,#4]
 849:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4186              	 .loc 3 849 0
 4187 0050 7B68     	 ldr r3,[r7,#4]
 4188 0052 1B0A     	 lsr r3,r3,#8
 4189 0054 1B09     	 lsr r3,r3,#4
 4190 0056 9AB2     	 uxth r2,r3
 4191 0058 1B4B     	 ldr r3,.L177+24
 4192 005a 1A80     	 strh r2,[r3]
 850:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4193              	 .loc 3 850 0
 4194 005c 194B     	 ldr r3,.L177+20
 4195 005e 1B88     	 ldrh r3,[r3]
 4196 0060 1A1C     	 mov r2,r3
 4197 0062 164B     	 ldr r3,.L177+12
 4198 0064 1B88     	 ldrh r3,[r3]
 4199 0066 5343     	 mul r3,r2
 4200 0068 7B60     	 str r3,[r7,#4]
 851:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4201              	 .loc 3 851 0
 4202 006a 7B68     	 ldr r3,[r7,#4]
 4203 006c 1B0A     	 lsr r3,r3,#8
 4204 006e 1B09     	 lsr r3,r3,#4
 4205 0070 9AB2     	 uxth r2,r3
 4206 0072 164B     	 ldr r3,.L177+28
 4207 0074 1A80     	 strh r2,[r3]
 852:../samuel/samuel_io.c **** 
 853:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4208              	 .loc 3 853 0
 4209 0076 164B     	 ldr r3,.L177+32
 4210 0078 1B88     	 ldrh r3,[r3]
 4211 007a 1A1C     	 mov r2,r3
 4212 007c 0E4B     	 ldr r3,.L177+8
 4213 007e 1B88     	 ldrh r3,[r3]
 4214 0080 5343     	 mul r3,r2
 4215 0082 7B60     	 str r3,[r7,#4]
 854:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4216              	 .loc 3 854 0
 4217 0084 7B68     	 ldr r3,[r7,#4]
 4218 0086 1B0A     	 lsr r3,r3,#8
 4219 0088 1B09     	 lsr r3,r3,#4
 4220 008a 9AB2     	 uxth r2,r3
 4221 008c 114B     	 ldr r3,.L177+36
 4222 008e 1A80     	 strh r2,[r3]
 855:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4223              	 .loc 3 855 0
 4224 0090 0F4B     	 ldr r3,.L177+32
 4225 0092 1B88     	 ldrh r3,[r3]
 4226 0094 1A1C     	 mov r2,r3
 4227 0096 0A4B     	 ldr r3,.L177+16
 4228 0098 1B88     	 ldrh r3,[r3]
 4229 009a 5343     	 mul r3,r2
 4230 009c 7B60     	 str r3,[r7,#4]
 856:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4231              	 .loc 3 856 0
 4232 009e 7B68     	 ldr r3,[r7,#4]
 4233 00a0 1B0A     	 lsr r3,r3,#8
 4234 00a2 1B09     	 lsr r3,r3,#4
 4235 00a4 9AB2     	 uxth r2,r3
 4236 00a6 0C4B     	 ldr r3,.L177+40
 4237 00a8 1A80     	 strh r2,[r3]
 857:../samuel/samuel_io.c ****   }
 4238              	 .loc 3 857 0
 4239 00aa BD46     	 mov sp,r7
 4240 00ac 02B0     	 add sp,sp,#8
 4241              	 
 4242 00ae 80BD     	 pop {r7,pc}
 4243              	.L178:
 4244              	 .align 2
 4245              	.L177:
 4246 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4247 00b4 00000000 	 .word Farbe_ww1_Quot
 4248 00b8 00000000 	 .word Farbe_cw1_Quot
 4249 00bc 00000000 	 .word Farbe_ww2_Quot
 4250 00c0 00000000 	 .word Farbe_cw2_Quot
 4251 00c4 00000000 	 .word dimAkt_Ww
 4252 00c8 00000000 	 .word Farbe_ww1
 4253 00cc 00000000 	 .word Farbe_ww2
 4254 00d0 00000000 	 .word dimAkt_Cw
 4255 00d4 00000000 	 .word Farbe_cw1
 4256 00d8 00000000 	 .word Farbe_cw2
 4257              	 .cfi_endproc
 4258              	.LFE331:
 4260              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4261              	 .align 2
 4262              	 .global bcuColorBerechnung
 4263              	 .code 16
 4264              	 .thumb_func
 4266              	bcuColorBerechnung:
 4267              	.LFB332:
 858:../samuel/samuel_io.c ****  //----------------------------------
 859:../samuel/samuel_io.c **** 
 860:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 861:../samuel/samuel_io.c ****   {
 4268              	 .loc 3 861 0
 4269              	 .cfi_startproc
 4270 0000 80B5     	 push {r7,lr}
 4271              	.LCFI103:
 4272              	 .cfi_def_cfa_offset 8
 4273              	 .cfi_offset 7,-8
 4274              	 .cfi_offset 14,-4
 4275 0002 82B0     	 sub sp,sp,#8
 4276              	.LCFI104:
 4277              	 .cfi_def_cfa_offset 16
 4278 0004 00AF     	 add r7,sp,#0
 4279              	.LCFI105:
 4280              	 .cfi_def_cfa_register 7
 862:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 863:../samuel/samuel_io.c **** 
 864:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4281              	 .loc 3 864 0
 4282 0006 1E4B     	 ldr r3,.L180
 4283 0008 0122     	 mov r2,#1
 4284 000a 5242     	 neg r2,r2
 4285 000c 1A80     	 strh r2,[r3]
 865:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4286              	 .loc 3 865 0
 4287 000e 1C4B     	 ldr r3,.L180
 4288 0010 1B88     	 ldrh r3,[r3]
 4289 0012 1A1C     	 mov r2,r3
 4290 0014 1B4B     	 ldr r3,.L180+4
 4291 0016 1B88     	 ldrh r3,[r3]
 4292 0018 5343     	 mul r3,r2
 4293 001a 7B60     	 str r3,[r7,#4]
 866:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4294              	 .loc 3 866 0
 4295 001c 7B68     	 ldr r3,[r7,#4]
 4296 001e 1B0C     	 lsr r3,r3,#16
 4297 0020 7B60     	 str r3,[r7,#4]
 867:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4298              	 .loc 3 867 0
 4299 0022 194B     	 ldr r3,.L180+8
 4300 0024 1B88     	 ldrh r3,[r3]
 4301 0026 1A1C     	 mov r2,r3
 4302 0028 184B     	 ldr r3,.L180+12
 4303 002a 9B1A     	 sub r3,r3,r2
 4304 002c 1A1C     	 mov r2,r3
 4305 002e 7B68     	 ldr r3,[r7,#4]
 4306 0030 5343     	 mul r3,r2
 4307 0032 7B60     	 str r3,[r7,#4]
 868:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4308              	 .loc 3 868 0
 4309 0034 7B68     	 ldr r3,[r7,#4]
 4310 0036 1B0C     	 lsr r3,r3,#16
 4311 0038 7B60     	 str r3,[r7,#4]
 869:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4312              	 .loc 3 869 0
 4313 003a 7B68     	 ldr r3,[r7,#4]
 4314 003c 9AB2     	 uxth r2,r3
 4315 003e 104B     	 ldr r3,.L180
 4316 0040 1A80     	 strh r2,[r3]
 870:../samuel/samuel_io.c **** 
 871:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4317              	 .loc 3 871 0
 4318 0042 134B     	 ldr r3,.L180+16
 4319 0044 0122     	 mov r2,#1
 4320 0046 5242     	 neg r2,r2
 4321 0048 1A80     	 strh r2,[r3]
 872:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4322              	 .loc 3 872 0
 4323 004a 114B     	 ldr r3,.L180+16
 4324 004c 1B88     	 ldrh r3,[r3]
 4325 004e 1A1C     	 mov r2,r3
 4326 0050 0C4B     	 ldr r3,.L180+4
 4327 0052 1B88     	 ldrh r3,[r3]
 4328 0054 5343     	 mul r3,r2
 4329 0056 7B60     	 str r3,[r7,#4]
 873:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4330              	 .loc 3 873 0
 4331 0058 7B68     	 ldr r3,[r7,#4]
 4332 005a 1B0C     	 lsr r3,r3,#16
 4333 005c 7B60     	 str r3,[r7,#4]
 874:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4334              	 .loc 3 874 0
 4335 005e 0A4B     	 ldr r3,.L180+8
 4336 0060 1B88     	 ldrh r3,[r3]
 4337 0062 1A1C     	 mov r2,r3
 4338 0064 7B68     	 ldr r3,[r7,#4]
 4339 0066 5343     	 mul r3,r2
 4340 0068 7B60     	 str r3,[r7,#4]
 875:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4341              	 .loc 3 875 0
 4342 006a 7B68     	 ldr r3,[r7,#4]
 4343 006c 1B0C     	 lsr r3,r3,#16
 4344 006e 7B60     	 str r3,[r7,#4]
 876:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4345              	 .loc 3 876 0
 4346 0070 7B68     	 ldr r3,[r7,#4]
 4347 0072 9AB2     	 uxth r2,r3
 4348 0074 064B     	 ldr r3,.L180+16
 4349 0076 1A80     	 strh r2,[r3]
 877:../samuel/samuel_io.c ****   }
 4350              	 .loc 3 877 0
 4351 0078 BD46     	 mov sp,r7
 4352 007a 02B0     	 add sp,sp,#8
 4353              	 
 4354 007c 80BD     	 pop {r7,pc}
 4355              	.L181:
 4356 007e C046     	 .align 2
 4357              	.L180:
 4358 0080 00000000 	 .word dimAkt_Ww
 4359 0084 00000000 	 .word Brightness_Gen
 4360 0088 00000000 	 .word ColorQuot_Gen
 4361 008c FFFF0000 	 .word 65535
 4362 0090 00000000 	 .word dimAkt_Cw
 4363              	 .cfi_endproc
 4364              	.LFE332:
 4366              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4367              	 .align 2
 4368              	 .global Offlight_zahler_write
 4369              	 .code 16
 4370              	 .thumb_func
 4372              	Offlight_zahler_write:
 4373              	.LFB333:
 878:../samuel/samuel_io.c ****  //----------------------------------
 879:../samuel/samuel_io.c **** 
 880:../samuel/samuel_io.c **** 
 881:../samuel/samuel_io.c **** 
 882:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 883:../samuel/samuel_io.c ****  {
 4374              	 .loc 3 883 0
 4375              	 .cfi_startproc
 4376 0000 80B5     	 push {r7,lr}
 4377              	.LCFI106:
 4378              	 .cfi_def_cfa_offset 8
 4379              	 .cfi_offset 7,-8
 4380              	 .cfi_offset 14,-4
 4381 0002 82B0     	 sub sp,sp,#8
 4382              	.LCFI107:
 4383              	 .cfi_def_cfa_offset 16
 4384 0004 00AF     	 add r7,sp,#0
 4385              	.LCFI108:
 4386              	 .cfi_def_cfa_register 7
 884:../samuel/samuel_io.c ****      uint8_t a;
 885:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4387              	 .loc 3 885 0
 4388 0006 3B4B     	 ldr r3,.L188
 4389 0008 1B78     	 ldrb r3,[r3]
 4390 000a 052B     	 cmp r3,#5
 4391 000c 00D0     	 beq .LCB3639
 4392 000e 6EE0     	 b .L182
 4393              	.LCB3639:
 886:../samuel/samuel_io.c **** 	 {
 887:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4394              	 .loc 3 887 0
 4395 0010 394B     	 ldr r3,.L188+4
 4396 0012 1B88     	 ldrh r3,[r3]
 4397 0014 0133     	 add r3,r3,#1
 4398 0016 9AB2     	 uxth r2,r3
 4399 0018 374B     	 ldr r3,.L188+4
 4400 001a 1A80     	 strh r2,[r3]
 888:../samuel/samuel_io.c **** 
 889:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4401              	 .loc 3 889 0
 4402 001c 364B     	 ldr r3,.L188+4
 4403 001e 1B88     	 ldrh r3,[r3]
 4404 0020 3B2B     	 cmp r3,#59
 4405 0022 64D9     	 bls .L182
 890:../samuel/samuel_io.c **** 	  {
 891:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4406              	 .loc 3 891 0
 4407 0024 344B     	 ldr r3,.L188+4
 4408 0026 0022     	 mov r2,#0
 4409 0028 1A80     	 strh r2,[r3]
 892:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4410              	 .loc 3 892 0
 4411 002a FFF7FEFF 	 bl read_off_light_EEprom
 4412 002e 021C     	 mov r2,r0
 4413 0030 FB1D     	 add r3,r7,#7
 4414 0032 1A70     	 strb r2,[r3]
 893:../samuel/samuel_io.c **** 			if (a == 0x03)
 4415              	 .loc 3 893 0
 4416 0034 FB1D     	 add r3,r7,#7
 4417 0036 1B78     	 ldrb r3,[r3]
 4418 0038 032B     	 cmp r3,#3
 4419 003a 52D1     	 bne .L184
 894:../samuel/samuel_io.c **** 			{
 895:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4420              	 .loc 3 895 0
 4421 003c 2F4B     	 ldr r3,.L188+8
 4422 003e 1A88     	 ldrh r2,[r3]
 4423 0040 2F4B     	 ldr r3,.L188+12
 4424 0042 1A80     	 strh r2,[r3]
 896:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4425              	 .loc 3 896 0
 4426 0044 2F4B     	 ldr r3,.L188+16
 4427 0046 1A88     	 ldrh r2,[r3]
 4428 0048 2F4B     	 ldr r3,.L188+20
 4429 004a 1A80     	 strh r2,[r3]
 897:../samuel/samuel_io.c **** 
 898:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4430              	 .loc 3 898 0
 4431 004c 2F4B     	 ldr r3,.L188+24
 4432 004e 1B79     	 ldrb r3,[r3,#4]
 4433 0050 9AB2     	 uxth r2,r3
 4434 0052 2B4B     	 ldr r3,.L188+12
 4435 0054 1B88     	 ldrh r3,[r3]
 4436 0056 1B0A     	 lsr r3,r3,#8
 4437 0058 9BB2     	 uxth r3,r3
 4438 005a 9A42     	 cmp r2,r3
 4439 005c 20D1     	 bne .L185
 4440              	 .loc 3 898 0 is_stmt 0 discriminator 1
 4441 005e 2B4B     	 ldr r3,.L188+24
 4442 0060 5B79     	 ldrb r3,[r3,#5]
 4443 0062 1A1C     	 mov r2,r3
 4444 0064 264B     	 ldr r3,.L188+12
 4445 0066 1B88     	 ldrh r3,[r3]
 4446 0068 191C     	 mov r1,r3
 4447 006a FF23     	 mov r3,#255
 4448 006c 0B40     	 and r3,r1
 4449 006e 9A42     	 cmp r2,r3
 4450 0070 16D1     	 bne .L185
 4451              	 .loc 3 898 0 discriminator 2
 4452 0072 264B     	 ldr r3,.L188+24
 4453 0074 9B79     	 ldrb r3,[r3,#6]
 4454 0076 9AB2     	 uxth r2,r3
 4455 0078 234B     	 ldr r3,.L188+20
 4456 007a 1B88     	 ldrh r3,[r3]
 4457 007c 1B0A     	 lsr r3,r3,#8
 4458 007e 9BB2     	 uxth r3,r3
 4459 0080 9A42     	 cmp r2,r3
 4460 0082 0DD1     	 bne .L185
 4461              	 .loc 3 898 0 discriminator 3
 4462 0084 214B     	 ldr r3,.L188+24
 4463 0086 DB79     	 ldrb r3,[r3,#7]
 4464 0088 1A1C     	 mov r2,r3
 4465 008a 1F4B     	 ldr r3,.L188+20
 4466 008c 1B88     	 ldrh r3,[r3]
 4467 008e 191C     	 mov r1,r3
 4468 0090 FF23     	 mov r3,#255
 4469 0092 0B40     	 and r3,r1
 4470 0094 9A42     	 cmp r2,r3
 4471 0096 03D1     	 bne .L185
 899:../samuel/samuel_io.c **** 			 {
 900:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4472              	 .loc 3 900 0 is_stmt 1
 4473 0098 174B     	 ldr r3,.L188+4
 4474 009a 0022     	 mov r2,#0
 4475 009c 1A80     	 strh r2,[r3]
 4476 009e 23E0     	 b .L187
 4477              	.L185:
 901:../samuel/samuel_io.c **** 			 }
 902:../samuel/samuel_io.c **** 			 else{
 903:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4478              	 .loc 3 903 0
 4479 00a0 174B     	 ldr r3,.L188+12
 4480 00a2 1B88     	 ldrh r3,[r3]
 4481 00a4 1B0A     	 lsr r3,r3,#8
 4482 00a6 9BB2     	 uxth r3,r3
 4483 00a8 DAB2     	 uxtb r2,r3
 4484 00aa 184B     	 ldr r3,.L188+24
 4485 00ac 1A71     	 strb r2,[r3,#4]
 904:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4486              	 .loc 3 904 0
 4487 00ae 144B     	 ldr r3,.L188+12
 4488 00b0 1B88     	 ldrh r3,[r3]
 4489 00b2 DAB2     	 uxtb r2,r3
 4490 00b4 154B     	 ldr r3,.L188+24
 4491 00b6 5A71     	 strb r2,[r3,#5]
 905:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4492              	 .loc 3 905 0
 4493 00b8 134B     	 ldr r3,.L188+20
 4494 00ba 1B88     	 ldrh r3,[r3]
 4495 00bc 1B0A     	 lsr r3,r3,#8
 4496 00be 9BB2     	 uxth r3,r3
 4497 00c0 DAB2     	 uxtb r2,r3
 4498 00c2 124B     	 ldr r3,.L188+24
 4499 00c4 9A71     	 strb r2,[r3,#6]
 906:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4500              	 .loc 3 906 0
 4501 00c6 104B     	 ldr r3,.L188+20
 4502 00c8 1B88     	 ldrh r3,[r3]
 4503 00ca DAB2     	 uxtb r2,r3
 4504 00cc 0F4B     	 ldr r3,.L188+24
 4505 00ce DA71     	 strb r2,[r3,#7]
 907:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4506              	 .loc 3 907 0
 4507 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4508 00d4 021C     	 mov r2,r0
 4509 00d6 FB1D     	 add r3,r7,#7
 4510 00d8 1A70     	 strb r2,[r3]
 908:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4511              	 .loc 3 908 0
 4512 00da 074B     	 ldr r3,.L188+4
 4513 00dc 0022     	 mov r2,#0
 4514 00de 1A80     	 strh r2,[r3]
 4515 00e0 02E0     	 b .L187
 4516              	.L184:
 909:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 910:../samuel/samuel_io.c **** 			 }
 911:../samuel/samuel_io.c **** 			}
 912:../samuel/samuel_io.c **** 			else {
 913:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4517              	 .loc 3 913 0
 4518 00e2 054B     	 ldr r3,.L188+4
 4519 00e4 1E22     	 mov r2,#30
 4520 00e6 1A80     	 strh r2,[r3]
 4521              	.L187:
 914:../samuel/samuel_io.c **** 			}
 915:../samuel/samuel_io.c **** 
 916:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4522              	 .loc 3 916 0
 4523 00e8 034B     	 ldr r3,.L188+4
 4524 00ea 0022     	 mov r2,#0
 4525 00ec 1A80     	 strh r2,[r3]
 4526              	.L182:
 917:../samuel/samuel_io.c **** 	  }//zahler_offlight
 918:../samuel/samuel_io.c **** 	 }//regonoff
 919:../samuel/samuel_io.c ****  }
 4527              	 .loc 3 919 0
 4528 00ee BD46     	 mov sp,r7
 4529 00f0 02B0     	 add sp,sp,#8
 4530              	 
 4531 00f2 80BD     	 pop {r7,pc}
 4532              	.L189:
 4533              	 .align 2
 4534              	.L188:
 4535 00f4 00000000 	 .word RegOnOff
 4536 00f8 00000000 	 .word zahler_offlight
 4537 00fc 00000000 	 .word dimAkt_Ww
 4538 0100 00000000 	 .word dimOff_Ww
 4539 0104 00000000 	 .word dimAkt_Cw
 4540 0108 00000000 	 .word dimOff_Cw
 4541 010c 00000000 	 .word ReadBuffer2
 4542              	 .cfi_endproc
 4543              	.LFE333:
 4545              	 .section .text.plus39V_stop,"ax",%progbits
 4546              	 .align 2
 4547              	 .global plus39V_stop
 4548              	 .code 16
 4549              	 .thumb_func
 4551              	plus39V_stop:
 4552              	.LFB334:
 920:../samuel/samuel_io.c **** 
 921:../samuel/samuel_io.c ****  //----------------------------------------------------
 922:../samuel/samuel_io.c **** 
 923:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
 924:../samuel/samuel_io.c ****   {
 4553              	 .loc 3 924 0
 4554              	 .cfi_startproc
 4555 0000 80B5     	 push {r7,lr}
 4556              	.LCFI109:
 4557              	 .cfi_def_cfa_offset 8
 4558              	 .cfi_offset 7,-8
 4559              	 .cfi_offset 14,-4
 4560 0002 00AF     	 add r7,sp,#0
 4561              	.LCFI110:
 4562              	 .cfi_def_cfa_register 7
 925:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 926:../samuel/samuel_io.c **** 
 927:../samuel/samuel_io.c **** 
 928:../samuel/samuel_io.c ****   }
 4563              	 .loc 3 928 0
 4564 0004 BD46     	 mov sp,r7
 4565              	 
 4566 0006 80BD     	 pop {r7,pc}
 4567              	 .cfi_endproc
 4568              	.LFE334:
 4570              	 .section .text.plus39V_start,"ax",%progbits
 4571              	 .align 2
 4572              	 .global plus39V_start
 4573              	 .code 16
 4574              	 .thumb_func
 4576              	plus39V_start:
 4577              	.LFB335:
 929:../samuel/samuel_io.c **** 
 930:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
 931:../samuel/samuel_io.c ****   {
 4578              	 .loc 3 931 0
 4579              	 .cfi_startproc
 4580 0000 80B5     	 push {r7,lr}
 4581              	.LCFI111:
 4582              	 .cfi_def_cfa_offset 8
 4583              	 .cfi_offset 7,-8
 4584              	 .cfi_offset 14,-4
 4585 0002 00AF     	 add r7,sp,#0
 4586              	.LCFI112:
 4587              	 .cfi_def_cfa_register 7
 932:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 933:../samuel/samuel_io.c **** 
 934:../samuel/samuel_io.c ****   }
 4588              	 .loc 3 934 0
 4589 0004 BD46     	 mov sp,r7
 4590              	 
 4591 0006 80BD     	 pop {r7,pc}
 4592              	 .cfi_endproc
 4593              	.LFE335:
 4595              	 .section .text.Time1msec,"ax",%progbits
 4596              	 .align 2
 4597              	 .global Time1msec
 4598              	 .code 16
 4599              	 .thumb_func
 4601              	Time1msec:
 4602              	.LFB336:
 935:../samuel/samuel_io.c **** 
 936:../samuel/samuel_io.c ****  //----------------------------------
 937:../samuel/samuel_io.c **** 
 938:../samuel/samuel_io.c ****   void Time1msec (void) //
 939:../samuel/samuel_io.c ****   {
 4603              	 .loc 3 939 0
 4604              	 .cfi_startproc
 4605 0000 80B5     	 push {r7,lr}
 4606              	.LCFI113:
 4607              	 .cfi_def_cfa_offset 8
 4608              	 .cfi_offset 7,-8
 4609              	 .cfi_offset 14,-4
 4610 0002 00AF     	 add r7,sp,#0
 4611              	.LCFI114:
 4612              	 .cfi_def_cfa_register 7
 940:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4613              	 .loc 3 940 0
 4614 0004 024B     	 ldr r3,.L193
 4615 0006 181C     	 mov r0,r3
 4616 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
 941:../samuel/samuel_io.c **** 
 942:../samuel/samuel_io.c ****   }
 4617              	 .loc 3 942 0
 4618 000c BD46     	 mov sp,r7
 4619              	 
 4620 000e 80BD     	 pop {r7,pc}
 4621              	.L194:
 4622              	 .align 2
 4623              	.L193:
 4624 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4625              	 .cfi_endproc
 4626              	.LFE336:
 4628              	 .section .text.Time20msec,"ax",%progbits
 4629              	 .align 2
 4630              	 .global Time20msec
 4631              	 .code 16
 4632              	 .thumb_func
 4634              	Time20msec:
 4635              	.LFB337:
 943:../samuel/samuel_io.c ****   //----------------------------------
 944:../samuel/samuel_io.c **** 
 945:../samuel/samuel_io.c ****    void Time20msec (void) //
 946:../samuel/samuel_io.c ****    {
 4636              	 .loc 3 946 0
 4637              	 .cfi_startproc
 4638 0000 80B5     	 push {r7,lr}
 4639              	.LCFI115:
 4640              	 .cfi_def_cfa_offset 8
 4641              	 .cfi_offset 7,-8
 4642              	 .cfi_offset 14,-4
 4643 0002 00AF     	 add r7,sp,#0
 4644              	.LCFI116:
 4645              	 .cfi_def_cfa_register 7
 947:../samuel/samuel_io.c **** 
 948:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 949:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 4646              	 .loc 3 949 0
 4647 0004 364B     	 ldr r3,.L202
 4648 0006 1B88     	 ldrh r3,[r3]
 4649 0008 1A1C     	 mov r2,r3
 4650 000a 131C     	 mov r3,r2
 4651 000c 5B00     	 lsl r3,r3,#1
 4652 000e 9B18     	 add r3,r3,r2
 4653 0010 344A     	 ldr r2,.L202+4
 4654 0012 1288     	 ldrh r2,[r2]
 4655 0014 9B18     	 add r3,r3,r2
 4656 0016 002B     	 cmp r3,#0
 4657 0018 00DA     	 bge .L196
 4658 001a 0333     	 add r3,r3,#3
 4659              	.L196:
 4660 001c 9B10     	 asr r3,r3,#2
 4661 001e 9AB2     	 uxth r2,r3
 4662 0020 2F4B     	 ldr r3,.L202
 4663 0022 1A80     	 strh r2,[r3]
 950:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 4664              	 .loc 3 950 0
 4665 0024 304B     	 ldr r3,.L202+8
 4666 0026 1B88     	 ldrh r3,[r3]
 4667 0028 1A1C     	 mov r2,r3
 4668 002a 131C     	 mov r3,r2
 4669 002c 5B00     	 lsl r3,r3,#1
 4670 002e 9B18     	 add r3,r3,r2
 4671 0030 2E4A     	 ldr r2,.L202+12
 4672 0032 1288     	 ldrh r2,[r2]
 4673 0034 9B18     	 add r3,r3,r2
 4674 0036 002B     	 cmp r3,#0
 4675 0038 00DA     	 bge .L197
 4676 003a 0333     	 add r3,r3,#3
 4677              	.L197:
 4678 003c 9B10     	 asr r3,r3,#2
 4679 003e 9AB2     	 uxth r2,r3
 4680 0040 294B     	 ldr r3,.L202+8
 4681 0042 1A80     	 strh r2,[r3]
 951:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 4682              	 .loc 3 951 0
 4683 0044 2A4B     	 ldr r3,.L202+16
 4684 0046 1B88     	 ldrh r3,[r3]
 4685 0048 1A1C     	 mov r2,r3
 4686 004a 131C     	 mov r3,r2
 4687 004c 5B00     	 lsl r3,r3,#1
 4688 004e 9B18     	 add r3,r3,r2
 4689 0050 284A     	 ldr r2,.L202+20
 4690 0052 1288     	 ldrh r2,[r2]
 4691 0054 9B18     	 add r3,r3,r2
 4692 0056 002B     	 cmp r3,#0
 4693 0058 00DA     	 bge .L198
 4694 005a 0333     	 add r3,r3,#3
 4695              	.L198:
 4696 005c 9B10     	 asr r3,r3,#2
 4697 005e 9AB2     	 uxth r2,r3
 4698 0060 234B     	 ldr r3,.L202+16
 4699 0062 1A80     	 strh r2,[r3]
 952:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 4700              	 .loc 3 952 0
 4701 0064 244B     	 ldr r3,.L202+24
 4702 0066 1B88     	 ldrh r3,[r3]
 4703 0068 1A1C     	 mov r2,r3
 4704 006a 131C     	 mov r3,r2
 4705 006c 5B00     	 lsl r3,r3,#1
 4706 006e 9B18     	 add r3,r3,r2
 4707 0070 224A     	 ldr r2,.L202+28
 4708 0072 1288     	 ldrh r2,[r2]
 4709 0074 9B18     	 add r3,r3,r2
 4710 0076 002B     	 cmp r3,#0
 4711 0078 00DA     	 bge .L199
 4712 007a 0333     	 add r3,r3,#3
 4713              	.L199:
 4714 007c 9B10     	 asr r3,r3,#2
 4715 007e 9AB2     	 uxth r2,r3
 4716 0080 1D4B     	 ldr r3,.L202+24
 4717 0082 1A80     	 strh r2,[r3]
 953:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 4718              	 .loc 3 953 0
 4719 0084 1E4B     	 ldr r3,.L202+32
 4720 0086 1B88     	 ldrh r3,[r3]
 4721 0088 0133     	 add r3,r3,#1
 4722 008a 9AB2     	 uxth r2,r3
 4723 008c 1C4B     	 ldr r3,.L202+32
 4724 008e 1A80     	 strh r2,[r3]
 954:../samuel/samuel_io.c **** 
 955:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 4725              	 .loc 3 955 0
 4726 0090 1B4B     	 ldr r3,.L202+32
 4727 0092 1B88     	 ldrh r3,[r3]
 4728 0094 052B     	 cmp r3,#5
 4729 0096 21D9     	 bls .L195
 956:../samuel/samuel_io.c ****       {
 957:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
 958:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 4730              	 .loc 3 958 0
 4731 0098 194B     	 ldr r3,.L202+32
 4732 009a 0022     	 mov r2,#0
 4733 009c 1A80     	 strh r2,[r3]
 959:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 4734              	 .loc 3 959 0
 4735 009e 104B     	 ldr r3,.L202
 4736 00a0 1B88     	 ldrh r3,[r3]
 4737 00a2 184A     	 ldr r2,.L202+36
 4738 00a4 9342     	 cmp r3,r2
 4739 00a6 09D8     	 bhi .L201
 960:../samuel/samuel_io.c ****      	     {
 961:../samuel/samuel_io.c ****      	     plus39V_stop();
 4740              	 .loc 3 961 0
 4741 00a8 FFF7FEFF 	 bl plus39V_stop
 962:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 4742              	 .loc 3 962 0
 4743 00ac 164B     	 ldr r3,.L202+40
 4744 00ae 0022     	 mov r2,#0
 4745 00b0 1A70     	 strb r2,[r3]
 963:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 4746              	 .loc 3 963 0
 4747 00b2 164B     	 ldr r3,.L202+44
 4748 00b4 181C     	 mov r0,r3
 4749 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4750 00ba 0FE0     	 b .L195
 4751              	.L201:
 964:../samuel/samuel_io.c ****      	     }
 965:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 4752              	 .loc 3 965 0
 4753 00bc 084B     	 ldr r3,.L202
 4754 00be 1A88     	 ldrh r2,[r3]
 4755 00c0 BF23     	 mov r3,#191
 4756 00c2 1B01     	 lsl r3,r3,#4
 4757 00c4 9A42     	 cmp r2,r3
 4758 00c6 09D9     	 bls .L195
 966:../samuel/samuel_io.c ****  			 {
 967:../samuel/samuel_io.c ****      	     plus39V_start();
 4759              	 .loc 3 967 0
 4760 00c8 FFF7FEFF 	 bl plus39V_start
 968:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 4761              	 .loc 3 968 0
 4762 00cc 0E4B     	 ldr r3,.L202+40
 4763 00ce 1B78     	 ldrb r3,[r3]
 4764 00d0 002B     	 cmp r3,#0
 4765 00d2 03D1     	 bne .L195
 969:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 4766              	 .loc 3 969 0
 4767 00d4 0D4B     	 ldr r3,.L202+44
 4768 00d6 181C     	 mov r0,r3
 4769 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4770              	.L195:
 970:../samuel/samuel_io.c ****  			 }
 971:../samuel/samuel_io.c ****       }
 972:../samuel/samuel_io.c **** 
 973:../samuel/samuel_io.c **** 
 974:../samuel/samuel_io.c ****    }
 4771              	 .loc 3 974 0
 4772 00dc BD46     	 mov sp,r7
 4773              	 
 4774 00de 80BD     	 pop {r7,pc}
 4775              	.L203:
 4776              	 .align 2
 4777              	.L202:
 4778 00e0 00000000 	 .word resultA2
 4779 00e4 00000000 	 .word resultAalt
 4780 00e8 00000000 	 .word resultB2
 4781 00ec 00000000 	 .word resultBalt
 4782 00f0 00000000 	 .word resultC2
 4783 00f4 00000000 	 .word resultCalt
 4784 00f8 00000000 	 .word resultD2
 4785 00fc 00000000 	 .word resultDalt
 4786 0100 00000000 	 .word adc_ready20m
 4787 0104 9F0B0000 	 .word 2975
 4788 0108 00000000 	 .word B_nextLedOff
 4789 010c 00000000 	 .word VCC_LED_shtdwn
 4790              	 .cfi_endproc
 4791              	.LFE337:
 4793              	 .section .text.firstuartBack,"ax",%progbits
 4794              	 .align 2
 4795              	 .global firstuartBack
 4796              	 .code 16
 4797              	 .thumb_func
 4799              	firstuartBack:
 4800              	.LFB338:
 975:../samuel/samuel_io.c ****   //------------------------------
 976:../samuel/samuel_io.c **** 
 977:../samuel/samuel_io.c ****    void firstuartBack (void) //
 978:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 4801              	 .loc 3 978 0
 4802              	 .cfi_startproc
 4803 0000 98B5     	 push {r3,r4,r7,lr}
 4804              	.LCFI117:
 4805              	 .cfi_def_cfa_offset 16
 4806              	 .cfi_offset 3,-16
 4807              	 .cfi_offset 4,-12
 4808              	 .cfi_offset 7,-8
 4809              	 .cfi_offset 14,-4
 4810 0002 00AF     	 add r7,sp,#0
 4811              	.LCFI118:
 4812              	 .cfi_def_cfa_register 7
 4813              	 .loc 3 978 0
 4814 0004 174B     	 ldr r3,.L206
 4815 0006 1B78     	 ldrb r3,[r3]
 4816 0008 002B     	 cmp r3,#0
 4817 000a 29D1     	 bne .L204
 979:../samuel/samuel_io.c ****    	   {
 980:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 4818              	 .loc 3 980 0
 4819 000c FFF7FEFF 	 bl new_data_HalloBack
 981:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 4820              	 .loc 3 981 0
 4821 0010 154B     	 ldr r3,.L206+4
 4822 0012 3022     	 mov r2,#48
 4823 0014 5A71     	 strb r2,[r3,#5]
 982:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 4824              	 .loc 3 982 0
 4825 0016 154B     	 ldr r3,.L206+8
 4826 0018 1B88     	 ldrh r3,[r3]
 4827 001a 1B0A     	 lsr r3,r3,#8
 4828 001c 9BB2     	 uxth r3,r3
 4829 001e DAB2     	 uxtb r2,r3
 4830 0020 114B     	 ldr r3,.L206+4
 4831 0022 9A71     	 strb r2,[r3,#6]
 983:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 4832              	 .loc 3 983 0
 4833 0024 114B     	 ldr r3,.L206+8
 4834 0026 1B88     	 ldrh r3,[r3]
 4835 0028 DAB2     	 uxtb r2,r3
 4836 002a 0F4B     	 ldr r3,.L206+4
 4837 002c DA71     	 strb r2,[r3,#7]
 984:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 4838              	 .loc 3 984 0
 4839 002e 104B     	 ldr r3,.L206+12
 4840 0030 1B88     	 ldrh r3,[r3]
 4841 0032 1B0A     	 lsr r3,r3,#8
 4842 0034 9BB2     	 uxth r3,r3
 4843 0036 DAB2     	 uxtb r2,r3
 4844 0038 0B4B     	 ldr r3,.L206+4
 4845 003a 1A72     	 strb r2,[r3,#8]
 985:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 4846              	 .loc 3 985 0
 4847 003c 0C4B     	 ldr r3,.L206+12
 4848 003e 1B88     	 ldrh r3,[r3]
 4849 0040 DAB2     	 uxtb r2,r3
 4850 0042 094B     	 ldr r3,.L206+4
 4851 0044 5A72     	 strb r2,[r3,#9]
 986:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 4852              	 .loc 3 986 0
 4853 0046 0B4B     	 ldr r3,.L206+16
 4854 0048 1B78     	 ldrb r3,[r3]
 4855 004a 1C1C     	 mov r4,r3
 4856 004c 0A4A     	 ldr r2,.L206+20
 4857 004e 064B     	 ldr r3,.L206+4
 4858 0050 101C     	 mov r0,r2
 4859 0052 191C     	 mov r1,r3
 4860 0054 221C     	 mov r2,r4
 4861 0056 FFF7FEFF 	 bl UART_Transmit
 987:../samuel/samuel_io.c ****    	   B_first_uart=1;
 4862              	 .loc 3 987 0
 4863 005a 024B     	 ldr r3,.L206
 4864 005c 0122     	 mov r2,#1
 4865 005e 1A70     	 strb r2,[r3]
 4866              	.L204:
 988:../samuel/samuel_io.c ****    	   }
 989:../samuel/samuel_io.c ****    }
 4867              	 .loc 3 989 0
 4868 0060 BD46     	 mov sp,r7
 4869              	 
 4870 0062 98BD     	 pop {r3,r4,r7,pc}
 4871              	.L207:
 4872              	 .align 2
 4873              	.L206:
 4874 0064 00000000 	 .word B_first_uart
 4875 0068 00000000 	 .word new_data
 4876 006c 00000000 	 .word Ser_NrH
 4877 0070 00000000 	 .word Ser_NrL
 4878 0074 00000000 	 .word transmit_buf_size
 4879 0078 00000000 	 .word UART_1
 4880              	 .cfi_endproc
 4881              	.LFE338:
 4883              	 .text
 4884              	.Letext0:
 4885              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4886              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4887              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 4888              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc/xmc1_gpio.h"
 4889              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc/xmc_usic.h"
 4890              	 .file 9 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc/xmc_uart.h"
 4891              	 .file 10 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/UART/uart.h"
 4892              	 .file 11 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 4893              	 .file 12 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc/xmc_vadc.h"
 4894              	 .file 13 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 4895              	 .file 14 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/XMCLib/inc/xmc_bccu.h"
 4896              	 .file 15 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 4897              	 .file 16 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIM_BCCU/dim_bccu.h"
 4898              	 .file 17 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 4899              	 .file 18 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 4900              	 .file 19 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 4901              	 .file 20 "../samuel/samuel_io.h"
 4902              	 .file 21 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 4903              	 .file 22 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/UART/uart_extern.h"
 4904              	 .file 23 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 4905              	 .file 24 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 4906              	 .file 25 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 4907              	 .file 26 "C:/DAVEv4-64Bit/work/Demo_4_Light_AllWhite/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4372   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:4799   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:603    .text.lightprog01:000000e8 $d
    {standard input}:610    .text.light_aus:00000000 $t
    {standard input}:615    .text.light_aus:00000000 light_aus
    {standard input}:4128   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:3891   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:669    .text.light_aus:00000048 $d
    {standard input}:679    .text.analog_start:00000000 $t
    {standard input}:684    .text.analog_start:00000000 analog_start
    {standard input}:704    .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:709    .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:729    .text.new_data_fill:00000000 $t
    {standard input}:734    .text.new_data_fill:00000000 new_data_fill
    {standard input}:801    .text.new_data_fill:00000050 $d
    {standard input}:807    .text.new_data_unbekanntBack:00000000 $t
    {standard input}:812    .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:881    .text.new_data_unbekanntBack:00000054 $d
    {standard input}:888    .text.new_data_BroadcastBack:00000000 $t
    {standard input}:893    .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:974    .text.new_data_BroadcastBack:0000006c $d
    {standard input}:983    .text.new_data_analog1Back:00000000 $t
    {standard input}:988    .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1069   .text.new_data_analog1Back:0000006c $d
    {standard input}:1078   .text.new_data_analog2Back:00000000 $t
    {standard input}:1083   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1164   .text.new_data_analog2Back:0000006c $d
    {standard input}:1173   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1178   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1259   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1268   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1273   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1364   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1375   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1380   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1461   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1470   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1475   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1556   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1565   .text.new_data_HalloBack:00000000 $t
    {standard input}:1570   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1639   .text.new_data_HalloBack:00000054 $d
    {standard input}:1646   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:1651   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:1737   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:1747   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:1752   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:1861   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:1872   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:1877   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:1968   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:1978   .text.new_data_SerNrBack:00000000 $t
    {standard input}:1983   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2064   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2073   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2078   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2215   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2223   .text.clearEpromBuffer:00000000 $t
    {standard input}:2228   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2325   .text.clearEpromBuffer:00000080 $d
    {standard input}:2333   .text.fillEpromBuffer:00000000 $t
    {standard input}:2338   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2384   .text.fillEpromBuffer:00000034 $d
    {standard input}:2390   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2395   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2443   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2449   .text.readAllEEprom:00000000 $t
    {standard input}:2454   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:2694   .text.readAllEEprom:00000194 $d
    {standard input}:2718   .text.readSerNrEEprom:00000000 $t
    {standard input}:2723   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:2774   .text.readSerNrEEprom:00000044 $d
    {standard input}:2781   .text.readNodeIdEEprom:00000000 $t
    {standard input}:2786   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:2837   .text.readNodeIdEEprom:00000044 $d
    {standard input}:2844   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:2849   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:2900   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:2907   .text.read_off_light_EEprom:00000000 $t
    {standard input}:2912   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:2963   .text.read_off_light_EEprom:00000044 $d
    {standard input}:2970   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:2975   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3044   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3052   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3057   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3126   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3134   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3139   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3208   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3216   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3221   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3290   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3298   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3303   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3372   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3380   .text.sysiniValueB1:00000000 $t
    {standard input}:3385   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3450   .text.sysiniValueB1:00000050 $d
    {standard input}:3466   .text.sysiniValueB2:00000000 $t
    {standard input}:3471   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3533   .text.sysiniValueB2:0000004c $d
    {standard input}:3549   .text.sysiniValueB4:00000000 $t
    {standard input}:3554   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:3666   .text.sysiniValueB4:000000a0 $d
    {standard input}:3688   .text.sysiniValueB5:00000000 $t
    {standard input}:3693   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:3748   .text.sysiniValueB5:00000040 $d
    {standard input}:3764   .text.bcuInit:00000000 $t
    {standard input}:3769   .text.bcuInit:00000000 bcuInit
    {standard input}:3792   .rodata.bcuInit:00000000 $d
    {standard input}:3871   .text.bcuInit:0000006c $d
    {standard input}:3886   .text.bcuUebergabe:00000000 $t
    {standard input}:3974   .text.bcuUebergabe:00000088 $d
    {standard input}:3990   .text.bcuAktBerechnung:00000000 $t
    {standard input}:3995   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4108   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4123   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4246   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4261   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4266   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4358   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4367   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4535   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4546   .text.plus39V_stop:00000000 $t
    {standard input}:4551   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4571   .text.plus39V_start:00000000 $t
    {standard input}:4576   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4596   .text.Time1msec:00000000 $t
    {standard input}:4601   .text.Time1msec:00000000 Time1msec
    {standard input}:4624   .text.Time1msec:00000010 $d
    {standard input}:4629   .text.Time20msec:00000000 $t
    {standard input}:4634   .text.Time20msec:00000000 Time20msec
    {standard input}:4778   .text.Time20msec:000000e0 $d
    {standard input}:4794   .text.firstuartBack:00000000 $t
    {standard input}:4874   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
