   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 6A4B     	 ldr r3,.L20
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c 684B     	 ldr r3,.L20
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 61 )  //ende
 469              	 .loc 3 119 0
 470 0010 674B     	 ldr r3,.L20
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 3D2B     	 cmp r3,#61
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 654B     	 ldr r3,.L20
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e C4E0     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 634B     	 ldr r3,.L20
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 1AD1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 485              	 .loc 3 125 0
 486 0028 624B     	 ldr r3,.L20+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c 0022     	 mov r2,#0
 489 002e 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 490              	 .loc 3 126 0
 491 0030 604B     	 ldr r3,.L20+4
 492 0032 DB6A     	 ldr r3,[r3,#44]
 493 0034 0022     	 mov r2,#0
 494 0036 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 495              	 .loc 3 127 0
 496 0038 5E4B     	 ldr r3,.L20+4
 497 003a DB6A     	 ldr r3,[r3,#44]
 498 003c 0022     	 mov r2,#0
 499 003e 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 500              	 .loc 3 128 0
 501 0040 5C4B     	 ldr r3,.L20+4
 502 0042 DB6A     	 ldr r3,[r3,#44]
 503 0044 0022     	 mov r2,#0
 504 0046 DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				    PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 505              	 .loc 3 129 0
 506 0048 5A4B     	 ldr r3,.L20+4
 507 004a 181C     	 mov r0,r3
 508 004c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 
 131:../samuel/samuel_io.c **** 		 			       PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x3d1);
 509              	 .loc 3 131 0
 510 0050 584B     	 ldr r3,.L20+4
 511 0052 594A     	 ldr r2,.L20+8
 512 0054 181C     	 mov r0,r3
 513 0056 0021     	 mov r1,#0
 514 0058 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 515 005c A5E0     	 b .L12
 516              	.L15:
 132:../samuel/samuel_io.c **** 	 			 }
 133:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 40 )
 517              	 .loc 3 133 0
 518 005e 544B     	 ldr r3,.L20
 519 0060 1B88     	 ldrh r3,[r3]
 520 0062 282B     	 cmp r3,#40
 521 0064 1CD1     	 bne .L16
 134:../samuel/samuel_io.c **** 	 			 {
 135:../samuel/samuel_io.c **** 	 				   PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 522              	 .loc 3 135 0
 523 0066 534B     	 ldr r3,.L20+4
 524 0068 DB6A     	 ldr r3,[r3,#44]
 525 006a 0022     	 mov r2,#0
 526 006c 1A80     	 strh r2,[r3]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] =4000;
 527              	 .loc 3 136 0
 528 006e 514B     	 ldr r3,.L20+4
 529 0070 DB6A     	 ldr r3,[r3,#44]
 530 0072 FA22     	 mov r2,#250
 531 0074 1201     	 lsl r2,r2,#4
 532 0076 5A80     	 strh r2,[r3,#2]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 533              	 .loc 3 137 0
 534 0078 4E4B     	 ldr r3,.L20+4
 535 007a DB6A     	 ldr r3,[r3,#44]
 536 007c 0022     	 mov r2,#0
 537 007e 9A80     	 strh r2,[r3,#4]
 138:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4000;
 538              	 .loc 3 138 0
 539 0080 4C4B     	 ldr r3,.L20+4
 540 0082 DB6A     	 ldr r3,[r3,#44]
 541 0084 FA22     	 mov r2,#250
 542 0086 1201     	 lsl r2,r2,#4
 543 0088 DA80     	 strh r2,[r3,#6]
 139:../samuel/samuel_io.c **** 		 				    PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 544              	 .loc 3 139 0
 545 008a 4A4B     	 ldr r3,.L20+4
 546 008c 181C     	 mov r0,r3
 547 008e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 140:../samuel/samuel_io.c **** 
 141:../samuel/samuel_io.c **** 			 			       PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x3d1);
 548              	 .loc 3 141 0
 549 0092 484B     	 ldr r3,.L20+4
 550 0094 484A     	 ldr r2,.L20+8
 551 0096 181C     	 mov r0,r3
 552 0098 0021     	 mov r1,#0
 553 009a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 554 009e 84E0     	 b .L12
 555              	.L16:
 142:../samuel/samuel_io.c **** 	 			 }
 143:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 45 )
 556              	 .loc 3 143 0
 557 00a0 434B     	 ldr r3,.L20
 558 00a2 1B88     	 ldrh r3,[r3]
 559 00a4 2D2B     	 cmp r3,#45
 560 00a6 1AD1     	 bne .L17
 144:../samuel/samuel_io.c **** 	 			 {
 145:../samuel/samuel_io.c **** 	 				   PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 561              	 .loc 3 145 0
 562 00a8 424B     	 ldr r3,.L20+4
 563 00aa DB6A     	 ldr r3,[r3,#44]
 564 00ac 0022     	 mov r2,#0
 565 00ae 1A80     	 strh r2,[r3]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] =10;
 566              	 .loc 3 146 0
 567 00b0 404B     	 ldr r3,.L20+4
 568 00b2 DB6A     	 ldr r3,[r3,#44]
 569 00b4 0A22     	 mov r2,#10
 570 00b6 5A80     	 strh r2,[r3,#2]
 147:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 571              	 .loc 3 147 0
 572 00b8 3E4B     	 ldr r3,.L20+4
 573 00ba DB6A     	 ldr r3,[r3,#44]
 574 00bc 0022     	 mov r2,#0
 575 00be 9A80     	 strh r2,[r3,#4]
 148:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] =10;
 576              	 .loc 3 148 0
 577 00c0 3C4B     	 ldr r3,.L20+4
 578 00c2 DB6A     	 ldr r3,[r3,#44]
 579 00c4 0A22     	 mov r2,#10
 580 00c6 DA80     	 strh r2,[r3,#6]
 149:../samuel/samuel_io.c **** 		 				    PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 581              	 .loc 3 149 0
 582 00c8 3A4B     	 ldr r3,.L20+4
 583 00ca 181C     	 mov r0,r3
 584 00cc FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 150:../samuel/samuel_io.c **** 
 151:../samuel/samuel_io.c **** 			 			       PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0xB7);
 585              	 .loc 3 151 0
 586 00d0 384B     	 ldr r3,.L20+4
 587 00d2 181C     	 mov r0,r3
 588 00d4 0021     	 mov r1,#0
 589 00d6 B722     	 mov r2,#183
 590 00d8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 591 00dc 65E0     	 b .L12
 592              	.L17:
 152:../samuel/samuel_io.c **** 	 			 }
 153:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 50 )
 593              	 .loc 3 153 0
 594 00de 344B     	 ldr r3,.L20
 595 00e0 1B88     	 ldrh r3,[r3]
 596 00e2 322B     	 cmp r3,#50
 597 00e4 22D1     	 bne .L18
 154:../samuel/samuel_io.c **** 	 			 {
 155:../samuel/samuel_io.c **** 	 				   PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 4000;
 598              	 .loc 3 155 0
 599 00e6 334B     	 ldr r3,.L20+4
 600 00e8 DB6A     	 ldr r3,[r3,#44]
 601 00ea FA22     	 mov r2,#250
 602 00ec 1201     	 lsl r2,r2,#4
 603 00ee 1A80     	 strh r2,[r3]
 156:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4000;
 604              	 .loc 3 156 0
 605 00f0 304B     	 ldr r3,.L20+4
 606 00f2 DB6A     	 ldr r3,[r3,#44]
 607 00f4 FA22     	 mov r2,#250
 608 00f6 1201     	 lsl r2,r2,#4
 609 00f8 5A80     	 strh r2,[r3,#2]
 157:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 4000;
 610              	 .loc 3 157 0
 611 00fa 2E4B     	 ldr r3,.L20+4
 612 00fc DB6A     	 ldr r3,[r3,#44]
 613 00fe FA22     	 mov r2,#250
 614 0100 1201     	 lsl r2,r2,#4
 615 0102 9A80     	 strh r2,[r3,#4]
 158:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4000;
 616              	 .loc 3 158 0
 617 0104 2B4B     	 ldr r3,.L20+4
 618 0106 DB6A     	 ldr r3,[r3,#44]
 619 0108 FA22     	 mov r2,#250
 620 010a 1201     	 lsl r2,r2,#4
 621 010c DA80     	 strh r2,[r3,#6]
 159:../samuel/samuel_io.c **** 		 				    PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 622              	 .loc 3 159 0
 623 010e 294B     	 ldr r3,.L20+4
 624 0110 181C     	 mov r0,r3
 625 0112 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 160:../samuel/samuel_io.c **** 		 				    PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 626              	 .loc 3 160 0
 627 0116 274B     	 ldr r3,.L20+4
 628 0118 181C     	 mov r0,r3
 629 011a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 161:../samuel/samuel_io.c **** 			 				   //  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 162:../samuel/samuel_io.c **** 
 163:../samuel/samuel_io.c **** 			 			       PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0xB7);
 630              	 .loc 3 163 0
 631 011e 254B     	 ldr r3,.L20+4
 632 0120 181C     	 mov r0,r3
 633 0122 0021     	 mov r1,#0
 634 0124 B722     	 mov r2,#183
 635 0126 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 636 012a 3EE0     	 b .L12
 637              	.L18:
 164:../samuel/samuel_io.c **** 	 			 }
 165:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 55 )
 638              	 .loc 3 165 0
 639 012c 204B     	 ldr r3,.L20
 640 012e 1B88     	 ldrh r3,[r3]
 641 0130 372B     	 cmp r3,#55
 642 0132 1AD1     	 bne .L19
 166:../samuel/samuel_io.c **** 	 			 {
 167:../samuel/samuel_io.c **** 	 				   PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 200;
 643              	 .loc 3 167 0
 644 0134 1F4B     	 ldr r3,.L20+4
 645 0136 DB6A     	 ldr r3,[r3,#44]
 646 0138 C822     	 mov r2,#200
 647 013a 1A80     	 strh r2,[r3]
 168:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 648              	 .loc 3 168 0
 649 013c 1D4B     	 ldr r3,.L20+4
 650 013e DB6A     	 ldr r3,[r3,#44]
 651 0140 0022     	 mov r2,#0
 652 0142 5A80     	 strh r2,[r3,#2]
 169:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 200;
 653              	 .loc 3 169 0
 654 0144 1B4B     	 ldr r3,.L20+4
 655 0146 DB6A     	 ldr r3,[r3,#44]
 656 0148 C822     	 mov r2,#200
 657 014a 9A80     	 strh r2,[r3,#4]
 170:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 00;
 658              	 .loc 3 170 0
 659 014c 194B     	 ldr r3,.L20+4
 660 014e DB6A     	 ldr r3,[r3,#44]
 661 0150 0022     	 mov r2,#0
 662 0152 DA80     	 strh r2,[r3,#6]
 171:../samuel/samuel_io.c **** 		 				    PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 663              	 .loc 3 171 0
 664 0154 174B     	 ldr r3,.L20+4
 665 0156 181C     	 mov r0,r3
 666 0158 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 172:../samuel/samuel_io.c **** 			 				   //  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 173:../samuel/samuel_io.c **** 
 174:../samuel/samuel_io.c **** 
 175:../samuel/samuel_io.c **** 			 			       PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0xB7);
 667              	 .loc 3 175 0
 668 015c 154B     	 ldr r3,.L20+4
 669 015e 181C     	 mov r0,r3
 670 0160 0021     	 mov r1,#0
 671 0162 B722     	 mov r2,#183
 672 0164 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 673 0168 1FE0     	 b .L12
 674              	.L19:
 176:../samuel/samuel_io.c **** 	 			 }
 177:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 ==60 )
 675              	 .loc 3 177 0
 676 016a 114B     	 ldr r3,.L20
 677 016c 1B88     	 ldrh r3,[r3]
 678 016e 3C2B     	 cmp r3,#60
 679 0170 1BD1     	 bne .L12
 178:../samuel/samuel_io.c **** 	 			 {
 179:../samuel/samuel_io.c **** 	 				   PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 10;
 680              	 .loc 3 179 0
 681 0172 104B     	 ldr r3,.L20+4
 682 0174 DB6A     	 ldr r3,[r3,#44]
 683 0176 0A22     	 mov r2,#10
 684 0178 1A80     	 strh r2,[r3]
 180:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] =4000;
 685              	 .loc 3 180 0
 686 017a 0E4B     	 ldr r3,.L20+4
 687 017c DB6A     	 ldr r3,[r3,#44]
 688 017e FA22     	 mov r2,#250
 689 0180 1201     	 lsl r2,r2,#4
 690 0182 5A80     	 strh r2,[r3,#2]
 181:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 10;
 691              	 .loc 3 181 0
 692 0184 0B4B     	 ldr r3,.L20+4
 693 0186 DB6A     	 ldr r3,[r3,#44]
 694 0188 0A22     	 mov r2,#10
 695 018a 9A80     	 strh r2,[r3,#4]
 182:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] =4000;
 696              	 .loc 3 182 0
 697 018c 094B     	 ldr r3,.L20+4
 698 018e DB6A     	 ldr r3,[r3,#44]
 699 0190 FA22     	 mov r2,#250
 700 0192 1201     	 lsl r2,r2,#4
 701 0194 DA80     	 strh r2,[r3,#6]
 183:../samuel/samuel_io.c **** 		 				    PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 702              	 .loc 3 183 0
 703 0196 074B     	 ldr r3,.L20+4
 704 0198 181C     	 mov r0,r3
 705 019a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 184:../samuel/samuel_io.c **** 			 				   //  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 185:../samuel/samuel_io.c **** 
 186:../samuel/samuel_io.c **** 
 187:../samuel/samuel_io.c **** 			 			       PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0xB7);
 706              	 .loc 3 187 0
 707 019e 054B     	 ldr r3,.L20+4
 708 01a0 181C     	 mov r0,r3
 709 01a2 0021     	 mov r1,#0
 710 01a4 B722     	 mov r2,#183
 711 01a6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 712              	.L12:
 188:../samuel/samuel_io.c **** 	 			 }
 189:../samuel/samuel_io.c **** 				 else
 190:../samuel/samuel_io.c **** 				 {
 191:../samuel/samuel_io.c **** 
 192:../samuel/samuel_io.c **** 				 }
 193:../samuel/samuel_io.c **** 
 194:../samuel/samuel_io.c ****    }
 713              	 .loc 3 194 0
 714 01aa BD46     	 mov sp,r7
 715              	 
 716 01ac 80BD     	 pop {r7,pc}
 717              	.L21:
 718 01ae C046     	 .align 2
 719              	.L20:
 720 01b0 00000000 	 .word zahler_lightprog01
 721 01b4 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 722 01b8 D1030000 	 .word 977
 723              	 .cfi_endproc
 724              	.LFE292:
 726              	 .section .text.light_aus,"ax",%progbits
 727              	 .align 2
 728              	 .global light_aus
 729              	 .code 16
 730              	 .thumb_func
 732              	light_aus:
 733              	.LFB293:
 195:../samuel/samuel_io.c ****   //------------------------------------------
 196:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 197:../samuel/samuel_io.c ****    {
 734              	 .loc 3 197 0
 735              	 .cfi_startproc
 736 0000 80B5     	 push {r7,lr}
 737              	.LCFI18:
 738              	 .cfi_def_cfa_offset 8
 739              	 .cfi_offset 7,-8
 740              	 .cfi_offset 14,-4
 741 0002 00AF     	 add r7,sp,#0
 742              	.LCFI19:
 743              	 .cfi_def_cfa_register 7
 198:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 744              	 .loc 3 198 0
 745 0004 104B     	 ldr r3,.L23
 746 0006 1A88     	 ldrh r2,[r3]
 747 0008 104B     	 ldr r3,.L23+4
 748 000a 1A80     	 strh r2,[r3]
 199:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 749              	 .loc 3 199 0
 750 000c 0E4B     	 ldr r3,.L23
 751 000e 1A88     	 ldrh r2,[r3]
 752 0010 0F4B     	 ldr r3,.L23+8
 753 0012 1A80     	 strh r2,[r3]
 200:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 754              	 .loc 3 200 0
 755 0014 0C4B     	 ldr r3,.L23
 756 0016 1A88     	 ldrh r2,[r3]
 757 0018 0E4B     	 ldr r3,.L23+12
 758 001a 1A80     	 strh r2,[r3]
 201:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 759              	 .loc 3 201 0
 760 001c 0A4B     	 ldr r3,.L23
 761 001e 1A88     	 ldrh r2,[r3]
 762 0020 0D4B     	 ldr r3,.L23+16
 763 0022 1A80     	 strh r2,[r3]
 202:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 764              	 .loc 3 202 0
 765 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 203:../samuel/samuel_io.c **** 	  bcuUebergabe();
 766              	 .loc 3 203 0
 767 0028 FFF7FEFF 	 bl bcuUebergabe
 204:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 205:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 768              	 .loc 3 205 0
 769 002c 0B4A     	 ldr r2,.L23+20
 770 002e 8023     	 mov r3,#128
 771 0030 1B01     	 lsl r3,r3,#4
 772 0032 101C     	 mov r0,r2
 773 0034 191C     	 mov r1,r3
 774 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 206:../samuel/samuel_io.c **** 	     // Start Dimming
 207:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 775              	 .loc 3 207 0
 776 003a 084B     	 ldr r3,.L23+20
 777 003c 181C     	 mov r0,r3
 778 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 208:../samuel/samuel_io.c **** 
 209:../samuel/samuel_io.c ****    }
 779              	 .loc 3 209 0
 780 0042 BD46     	 mov sp,r7
 781              	 
 782 0044 80BD     	 pop {r7,pc}
 783              	.L24:
 784 0046 C046     	 .align 2
 785              	.L23:
 786 0048 00000000 	 .word linearwalk_gen
 787 004c 00000000 	 .word linearwalk_ww1
 788 0050 00000000 	 .word linearwalk_ww2
 789 0054 00000000 	 .word linearwalk_cw1
 790 0058 00000000 	 .word linearwalk_cw2
 791 005c 00000000 	 .word DIM_BCCU_0
 792              	 .cfi_endproc
 793              	.LFE293:
 795              	 .section .text.analog_start,"ax",%progbits
 796              	 .align 2
 797              	 .global analog_start
 798              	 .code 16
 799              	 .thumb_func
 801              	analog_start:
 802              	.LFB294:
 210:../samuel/samuel_io.c ****   //------------------------------------------
 211:../samuel/samuel_io.c **** 
 212:../samuel/samuel_io.c **** 
 213:../samuel/samuel_io.c **** 
 214:../samuel/samuel_io.c ****  void analog_start (void)
 215:../samuel/samuel_io.c ****   {
 803              	 .loc 3 215 0
 804              	 .cfi_startproc
 805 0000 80B5     	 push {r7,lr}
 806              	.LCFI20:
 807              	 .cfi_def_cfa_offset 8
 808              	 .cfi_offset 7,-8
 809              	 .cfi_offset 14,-4
 810 0002 00AF     	 add r7,sp,#0
 811              	.LCFI21:
 812              	 .cfi_def_cfa_register 7
 216:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 217:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 218:../samuel/samuel_io.c **** 
 219:../samuel/samuel_io.c ****   }
 813              	 .loc 3 219 0
 814 0004 BD46     	 mov sp,r7
 815              	 
 816 0006 80BD     	 pop {r7,pc}
 817              	 .cfi_endproc
 818              	.LFE294:
 820              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 821              	 .align 2
 822              	 .global SCU_0_IRQHandler
 823              	 .code 16
 824              	 .thumb_func
 826              	SCU_0_IRQHandler:
 827              	.LFB295:
 220:../samuel/samuel_io.c **** 
 221:../samuel/samuel_io.c **** 
 222:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 223:../samuel/samuel_io.c ****   {
 828              	 .loc 3 223 0
 829              	 .cfi_startproc
 830 0000 80B5     	 push {r7,lr}
 831              	.LCFI22:
 832              	 .cfi_def_cfa_offset 8
 833              	 .cfi_offset 7,-8
 834              	 .cfi_offset 14,-4
 835 0002 00AF     	 add r7,sp,#0
 836              	.LCFI23:
 837              	 .cfi_def_cfa_register 7
 224:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 225:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 226:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 227:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 228:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 229:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 230:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 231:../samuel/samuel_io.c ****   }
 838              	 .loc 3 231 0
 839 0004 BD46     	 mov sp,r7
 840              	 
 841 0006 80BD     	 pop {r7,pc}
 842              	 .cfi_endproc
 843              	.LFE295:
 845              	 .section .text.new_data_fill,"ax",%progbits
 846              	 .align 2
 847              	 .global new_data_fill
 848              	 .code 16
 849              	 .thumb_func
 851              	new_data_fill:
 852              	.LFB296:
 232:../samuel/samuel_io.c **** 
 233:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 234:../samuel/samuel_io.c ****  {
 853              	 .loc 3 234 0
 854              	 .cfi_startproc
 855 0000 80B5     	 push {r7,lr}
 856              	.LCFI24:
 857              	 .cfi_def_cfa_offset 8
 858              	 .cfi_offset 7,-8
 859              	 .cfi_offset 14,-4
 860 0002 00AF     	 add r7,sp,#0
 861              	.LCFI25:
 862              	 .cfi_def_cfa_register 7
 235:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 863              	 .loc 3 235 0
 864 0004 124B     	 ldr r3,.L28
 865 0006 0B22     	 mov r2,#11
 866 0008 1A70     	 strb r2,[r3]
 236:../samuel/samuel_io.c **** 	 new_data[0]=1;
 867              	 .loc 3 236 0
 868 000a 124B     	 ldr r3,.L28+4
 869 000c 0122     	 mov r2,#1
 870 000e 1A70     	 strb r2,[r3]
 237:../samuel/samuel_io.c **** 	 new_data[1]=2;
 871              	 .loc 3 237 0
 872 0010 104B     	 ldr r3,.L28+4
 873 0012 0222     	 mov r2,#2
 874 0014 5A70     	 strb r2,[r3,#1]
 238:../samuel/samuel_io.c **** 	 new_data[2]=3;
 875              	 .loc 3 238 0
 876 0016 0F4B     	 ldr r3,.L28+4
 877 0018 0322     	 mov r2,#3
 878 001a 9A70     	 strb r2,[r3,#2]
 239:../samuel/samuel_io.c **** 	 new_data[3]=4;
 879              	 .loc 3 239 0
 880 001c 0D4B     	 ldr r3,.L28+4
 881 001e 0422     	 mov r2,#4
 882 0020 DA70     	 strb r2,[r3,#3]
 240:../samuel/samuel_io.c **** 	 new_data[4]=5;
 883              	 .loc 3 240 0
 884 0022 0C4B     	 ldr r3,.L28+4
 885 0024 0522     	 mov r2,#5
 886 0026 1A71     	 strb r2,[r3,#4]
 241:../samuel/samuel_io.c **** 	 new_data[5]=6;
 887              	 .loc 3 241 0
 888 0028 0A4B     	 ldr r3,.L28+4
 889 002a 0622     	 mov r2,#6
 890 002c 5A71     	 strb r2,[r3,#5]
 242:../samuel/samuel_io.c ****  	 new_data[6]=7;
 891              	 .loc 3 242 0
 892 002e 094B     	 ldr r3,.L28+4
 893 0030 0722     	 mov r2,#7
 894 0032 9A71     	 strb r2,[r3,#6]
 243:../samuel/samuel_io.c ****  	 new_data[7]=8;
 895              	 .loc 3 243 0
 896 0034 074B     	 ldr r3,.L28+4
 897 0036 0822     	 mov r2,#8
 898 0038 DA71     	 strb r2,[r3,#7]
 244:../samuel/samuel_io.c ****  	 new_data[8]=9;
 899              	 .loc 3 244 0
 900 003a 064B     	 ldr r3,.L28+4
 901 003c 0922     	 mov r2,#9
 902 003e 1A72     	 strb r2,[r3,#8]
 245:../samuel/samuel_io.c ****  	 new_data[9]='a';
 903              	 .loc 3 245 0
 904 0040 044B     	 ldr r3,.L28+4
 905 0042 6122     	 mov r2,#97
 906 0044 5A72     	 strb r2,[r3,#9]
 246:../samuel/samuel_io.c **** 	 new_data[10]='b';
 907              	 .loc 3 246 0
 908 0046 034B     	 ldr r3,.L28+4
 909 0048 6222     	 mov r2,#98
 910 004a 9A72     	 strb r2,[r3,#10]
 247:../samuel/samuel_io.c ****  }
 911              	 .loc 3 247 0
 912 004c BD46     	 mov sp,r7
 913              	 
 914 004e 80BD     	 pop {r7,pc}
 915              	.L29:
 916              	 .align 2
 917              	.L28:
 918 0050 00000000 	 .word transmit_buf_size
 919 0054 00000000 	 .word new_data
 920              	 .cfi_endproc
 921              	.LFE296:
 923              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 924              	 .align 2
 925              	 .global new_data_unbekanntBack
 926              	 .code 16
 927              	 .thumb_func
 929              	new_data_unbekanntBack:
 930              	.LFB297:
 248:../samuel/samuel_io.c **** 
 249:../samuel/samuel_io.c **** 
 250:../samuel/samuel_io.c **** 
 251:../samuel/samuel_io.c **** 
 252:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 253:../samuel/samuel_io.c ****  {
 931              	 .loc 3 253 0
 932              	 .cfi_startproc
 933 0000 80B5     	 push {r7,lr}
 934              	.LCFI26:
 935              	 .cfi_def_cfa_offset 8
 936              	 .cfi_offset 7,-8
 937              	 .cfi_offset 14,-4
 938 0002 00AF     	 add r7,sp,#0
 939              	.LCFI27:
 940              	 .cfi_def_cfa_register 7
 254:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 941              	 .loc 3 254 0
 942 0004 134B     	 ldr r3,.L31
 943 0006 0B22     	 mov r2,#11
 944 0008 1A70     	 strb r2,[r3]
 255:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 945              	 .loc 3 255 0
 946 000a 134B     	 ldr r3,.L31+4
 947 000c 4C22     	 mov r2,#76
 948 000e 1A70     	 strb r2,[r3]
 256:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 949              	 .loc 3 256 0
 950 0010 114B     	 ldr r3,.L31+4
 951 0012 4922     	 mov r2,#73
 952 0014 5A70     	 strb r2,[r3,#1]
 257:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 953              	 .loc 3 257 0
 954 0016 104B     	 ldr r3,.L31+4
 955 0018 4E22     	 mov r2,#78
 956 001a 9A70     	 strb r2,[r3,#2]
 258:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 957              	 .loc 3 258 0
 958 001c 0F4B     	 ldr r3,.L31+8
 959 001e 1A78     	 ldrb r2,[r3]
 960 0020 0D4B     	 ldr r3,.L31+4
 961 0022 DA70     	 strb r2,[r3,#3]
 259:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 962              	 .loc 3 259 0
 963 0024 0B4B     	 ldr r3,.L31
 964 0026 1A78     	 ldrb r2,[r3]
 965 0028 0B4B     	 ldr r3,.L31+4
 966 002a 1A71     	 strb r2,[r3,#4]
 260:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 967              	 .loc 3 260 0
 968 002c 0A4B     	 ldr r3,.L31+4
 969 002e 3122     	 mov r2,#49
 970 0030 5A71     	 strb r2,[r3,#5]
 261:../samuel/samuel_io.c **** 	 new_data[6]='n';
 971              	 .loc 3 261 0
 972 0032 094B     	 ldr r3,.L31+4
 973 0034 6E22     	 mov r2,#110
 974 0036 9A71     	 strb r2,[r3,#6]
 262:../samuel/samuel_io.c **** 	 new_data[7]='o';
 975              	 .loc 3 262 0
 976 0038 074B     	 ldr r3,.L31+4
 977 003a 6F22     	 mov r2,#111
 978 003c DA71     	 strb r2,[r3,#7]
 263:../samuel/samuel_io.c **** 	 new_data[8]='n';
 979              	 .loc 3 263 0
 980 003e 064B     	 ldr r3,.L31+4
 981 0040 6E22     	 mov r2,#110
 982 0042 1A72     	 strb r2,[r3,#8]
 264:../samuel/samuel_io.c **** 	 new_data[9]='o';
 983              	 .loc 3 264 0
 984 0044 044B     	 ldr r3,.L31+4
 985 0046 6F22     	 mov r2,#111
 986 0048 5A72     	 strb r2,[r3,#9]
 265:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 987              	 .loc 3 265 0
 988 004a 034B     	 ldr r3,.L31+4
 989 004c FF22     	 mov r2,#255
 990 004e 9A72     	 strb r2,[r3,#10]
 266:../samuel/samuel_io.c ****  }
 991              	 .loc 3 266 0
 992 0050 BD46     	 mov sp,r7
 993              	 
 994 0052 80BD     	 pop {r7,pc}
 995              	.L32:
 996              	 .align 2
 997              	.L31:
 998 0054 00000000 	 .word transmit_buf_size
 999 0058 00000000 	 .word new_data
 1000 005c 00000000 	 .word node_id
 1001              	 .cfi_endproc
 1002              	.LFE297:
 1004              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 1005              	 .align 2
 1006              	 .global new_data_BroadcastBack
 1007              	 .code 16
 1008              	 .thumb_func
 1010              	new_data_BroadcastBack:
 1011              	.LFB298:
 267:../samuel/samuel_io.c **** 
 268:../samuel/samuel_io.c **** //------------------------------------------
 269:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 270:../samuel/samuel_io.c ****  {
 1012              	 .loc 3 270 0
 1013              	 .cfi_startproc
 1014 0000 80B5     	 push {r7,lr}
 1015              	.LCFI28:
 1016              	 .cfi_def_cfa_offset 8
 1017              	 .cfi_offset 7,-8
 1018              	 .cfi_offset 14,-4
 1019 0002 00AF     	 add r7,sp,#0
 1020              	.LCFI29:
 1021              	 .cfi_def_cfa_register 7
 271:../samuel/samuel_io.c **** 
 272:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1022              	 .loc 3 272 0
 1023 0004 194B     	 ldr r3,.L34
 1024 0006 0B22     	 mov r2,#11
 1025 0008 1A70     	 strb r2,[r3]
 273:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1026              	 .loc 3 273 0
 1027 000a 194B     	 ldr r3,.L34+4
 1028 000c 4C22     	 mov r2,#76
 1029 000e 1A70     	 strb r2,[r3]
 274:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1030              	 .loc 3 274 0
 1031 0010 174B     	 ldr r3,.L34+4
 1032 0012 4922     	 mov r2,#73
 1033 0014 5A70     	 strb r2,[r3,#1]
 275:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1034              	 .loc 3 275 0
 1035 0016 164B     	 ldr r3,.L34+4
 1036 0018 4E22     	 mov r2,#78
 1037 001a 9A70     	 strb r2,[r3,#2]
 276:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1038              	 .loc 3 276 0
 1039 001c 154B     	 ldr r3,.L34+8
 1040 001e 1A78     	 ldrb r2,[r3]
 1041 0020 134B     	 ldr r3,.L34+4
 1042 0022 DA70     	 strb r2,[r3,#3]
 277:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1043              	 .loc 3 277 0
 1044 0024 114B     	 ldr r3,.L34
 1045 0026 1A78     	 ldrb r2,[r3]
 1046 0028 114B     	 ldr r3,.L34+4
 1047 002a 1A71     	 strb r2,[r3,#4]
 278:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 1048              	 .loc 3 278 0
 1049 002c 104B     	 ldr r3,.L34+4
 1050 002e 6F22     	 mov r2,#111
 1051 0030 5A71     	 strb r2,[r3,#5]
 279:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 1052              	 .loc 3 279 0
 1053 0032 114B     	 ldr r3,.L34+12
 1054 0034 1B88     	 ldrh r3,[r3]
 1055 0036 1B0A     	 lsr r3,r3,#8
 1056 0038 9BB2     	 uxth r3,r3
 1057 003a DAB2     	 uxtb r2,r3
 1058 003c 0C4B     	 ldr r3,.L34+4
 1059 003e 9A71     	 strb r2,[r3,#6]
 280:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 1060              	 .loc 3 280 0
 1061 0040 0D4B     	 ldr r3,.L34+12
 1062 0042 1B88     	 ldrh r3,[r3]
 1063 0044 DAB2     	 uxtb r2,r3
 1064 0046 0A4B     	 ldr r3,.L34+4
 1065 0048 DA71     	 strb r2,[r3,#7]
 281:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 1066              	 .loc 3 281 0
 1067 004a 0C4B     	 ldr r3,.L34+16
 1068 004c 1B88     	 ldrh r3,[r3]
 1069 004e 1B0A     	 lsr r3,r3,#8
 1070 0050 9BB2     	 uxth r3,r3
 1071 0052 DAB2     	 uxtb r2,r3
 1072 0054 064B     	 ldr r3,.L34+4
 1073 0056 1A72     	 strb r2,[r3,#8]
 282:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 1074              	 .loc 3 282 0
 1075 0058 084B     	 ldr r3,.L34+16
 1076 005a 1B88     	 ldrh r3,[r3]
 1077 005c DAB2     	 uxtb r2,r3
 1078 005e 044B     	 ldr r3,.L34+4
 1079 0060 5A72     	 strb r2,[r3,#9]
 283:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1080              	 .loc 3 283 0
 1081 0062 034B     	 ldr r3,.L34+4
 1082 0064 FF22     	 mov r2,#255
 1083 0066 9A72     	 strb r2,[r3,#10]
 284:../samuel/samuel_io.c ****  }
 1084              	 .loc 3 284 0
 1085 0068 BD46     	 mov sp,r7
 1086              	 
 1087 006a 80BD     	 pop {r7,pc}
 1088              	.L35:
 1089              	 .align 2
 1090              	.L34:
 1091 006c 00000000 	 .word transmit_buf_size
 1092 0070 00000000 	 .word new_data
 1093 0074 00000000 	 .word node_id
 1094 0078 00000000 	 .word Ser_NrH
 1095 007c 00000000 	 .word Ser_NrL
 1096              	 .cfi_endproc
 1097              	.LFE298:
 1099              	 .section .text.new_data_analog1Back,"ax",%progbits
 1100              	 .align 2
 1101              	 .global new_data_analog1Back
 1102              	 .code 16
 1103              	 .thumb_func
 1105              	new_data_analog1Back:
 1106              	.LFB299:
 285:../samuel/samuel_io.c ****  //------------------------------------------
 286:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 287:../samuel/samuel_io.c ****  {
 1107              	 .loc 3 287 0
 1108              	 .cfi_startproc
 1109 0000 80B5     	 push {r7,lr}
 1110              	.LCFI30:
 1111              	 .cfi_def_cfa_offset 8
 1112              	 .cfi_offset 7,-8
 1113              	 .cfi_offset 14,-4
 1114 0002 00AF     	 add r7,sp,#0
 1115              	.LCFI31:
 1116              	 .cfi_def_cfa_register 7
 288:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1117              	 .loc 3 288 0
 1118 0004 194B     	 ldr r3,.L37
 1119 0006 0B22     	 mov r2,#11
 1120 0008 1A70     	 strb r2,[r3]
 289:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1121              	 .loc 3 289 0
 1122 000a 194B     	 ldr r3,.L37+4
 1123 000c 4C22     	 mov r2,#76
 1124 000e 1A70     	 strb r2,[r3]
 290:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1125              	 .loc 3 290 0
 1126 0010 174B     	 ldr r3,.L37+4
 1127 0012 4922     	 mov r2,#73
 1128 0014 5A70     	 strb r2,[r3,#1]
 291:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1129              	 .loc 3 291 0
 1130 0016 164B     	 ldr r3,.L37+4
 1131 0018 4E22     	 mov r2,#78
 1132 001a 9A70     	 strb r2,[r3,#2]
 292:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1133              	 .loc 3 292 0
 1134 001c 154B     	 ldr r3,.L37+8
 1135 001e 1A78     	 ldrb r2,[r3]
 1136 0020 134B     	 ldr r3,.L37+4
 1137 0022 DA70     	 strb r2,[r3,#3]
 293:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1138              	 .loc 3 293 0
 1139 0024 114B     	 ldr r3,.L37
 1140 0026 1A78     	 ldrb r2,[r3]
 1141 0028 114B     	 ldr r3,.L37+4
 1142 002a 1A71     	 strb r2,[r3,#4]
 294:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1143              	 .loc 3 294 0
 1144 002c 104B     	 ldr r3,.L37+4
 1145 002e 6122     	 mov r2,#97
 1146 0030 5A71     	 strb r2,[r3,#5]
 295:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1147              	 .loc 3 295 0
 1148 0032 114B     	 ldr r3,.L37+12
 1149 0034 1B88     	 ldrh r3,[r3]
 1150 0036 1B0A     	 lsr r3,r3,#8
 1151 0038 9BB2     	 uxth r3,r3
 1152 003a DAB2     	 uxtb r2,r3
 1153 003c 0C4B     	 ldr r3,.L37+4
 1154 003e 9A71     	 strb r2,[r3,#6]
 296:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1155              	 .loc 3 296 0
 1156 0040 0D4B     	 ldr r3,.L37+12
 1157 0042 1B88     	 ldrh r3,[r3]
 1158 0044 DAB2     	 uxtb r2,r3
 1159 0046 0A4B     	 ldr r3,.L37+4
 1160 0048 DA71     	 strb r2,[r3,#7]
 297:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1161              	 .loc 3 297 0
 1162 004a 0C4B     	 ldr r3,.L37+16
 1163 004c 1B88     	 ldrh r3,[r3]
 1164 004e 1B0A     	 lsr r3,r3,#8
 1165 0050 9BB2     	 uxth r3,r3
 1166 0052 DAB2     	 uxtb r2,r3
 1167 0054 064B     	 ldr r3,.L37+4
 1168 0056 1A72     	 strb r2,[r3,#8]
 298:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1169              	 .loc 3 298 0
 1170 0058 084B     	 ldr r3,.L37+16
 1171 005a 1B88     	 ldrh r3,[r3]
 1172 005c DAB2     	 uxtb r2,r3
 1173 005e 044B     	 ldr r3,.L37+4
 1174 0060 5A72     	 strb r2,[r3,#9]
 299:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1175              	 .loc 3 299 0
 1176 0062 034B     	 ldr r3,.L37+4
 1177 0064 FF22     	 mov r2,#255
 1178 0066 9A72     	 strb r2,[r3,#10]
 300:../samuel/samuel_io.c ****  }
 1179              	 .loc 3 300 0
 1180 0068 BD46     	 mov sp,r7
 1181              	 
 1182 006a 80BD     	 pop {r7,pc}
 1183              	.L38:
 1184              	 .align 2
 1185              	.L37:
 1186 006c 00000000 	 .word transmit_buf_size
 1187 0070 00000000 	 .word new_data
 1188 0074 00000000 	 .word node_id
 1189 0078 00000000 	 .word resultA2
 1190 007c 00000000 	 .word resultB2
 1191              	 .cfi_endproc
 1192              	.LFE299:
 1194              	 .section .text.new_data_analog2Back,"ax",%progbits
 1195              	 .align 2
 1196              	 .global new_data_analog2Back
 1197              	 .code 16
 1198              	 .thumb_func
 1200              	new_data_analog2Back:
 1201              	.LFB300:
 301:../samuel/samuel_io.c ****  //------------------------------------------------------
 302:../samuel/samuel_io.c **** 
 303:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 304:../samuel/samuel_io.c ****  {
 1202              	 .loc 3 304 0
 1203              	 .cfi_startproc
 1204 0000 80B5     	 push {r7,lr}
 1205              	.LCFI32:
 1206              	 .cfi_def_cfa_offset 8
 1207              	 .cfi_offset 7,-8
 1208              	 .cfi_offset 14,-4
 1209 0002 00AF     	 add r7,sp,#0
 1210              	.LCFI33:
 1211              	 .cfi_def_cfa_register 7
 305:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1212              	 .loc 3 305 0
 1213 0004 194B     	 ldr r3,.L40
 1214 0006 0B22     	 mov r2,#11
 1215 0008 1A70     	 strb r2,[r3]
 306:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1216              	 .loc 3 306 0
 1217 000a 194B     	 ldr r3,.L40+4
 1218 000c 4C22     	 mov r2,#76
 1219 000e 1A70     	 strb r2,[r3]
 307:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1220              	 .loc 3 307 0
 1221 0010 174B     	 ldr r3,.L40+4
 1222 0012 4922     	 mov r2,#73
 1223 0014 5A70     	 strb r2,[r3,#1]
 308:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1224              	 .loc 3 308 0
 1225 0016 164B     	 ldr r3,.L40+4
 1226 0018 4E22     	 mov r2,#78
 1227 001a 9A70     	 strb r2,[r3,#2]
 309:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1228              	 .loc 3 309 0
 1229 001c 154B     	 ldr r3,.L40+8
 1230 001e 1A78     	 ldrb r2,[r3]
 1231 0020 134B     	 ldr r3,.L40+4
 1232 0022 DA70     	 strb r2,[r3,#3]
 310:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1233              	 .loc 3 310 0
 1234 0024 114B     	 ldr r3,.L40
 1235 0026 1A78     	 ldrb r2,[r3]
 1236 0028 114B     	 ldr r3,.L40+4
 1237 002a 1A71     	 strb r2,[r3,#4]
 311:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1238              	 .loc 3 311 0
 1239 002c 104B     	 ldr r3,.L40+4
 1240 002e 6222     	 mov r2,#98
 1241 0030 5A71     	 strb r2,[r3,#5]
 312:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1242              	 .loc 3 312 0
 1243 0032 114B     	 ldr r3,.L40+12
 1244 0034 1B88     	 ldrh r3,[r3]
 1245 0036 1B0A     	 lsr r3,r3,#8
 1246 0038 9BB2     	 uxth r3,r3
 1247 003a DAB2     	 uxtb r2,r3
 1248 003c 0C4B     	 ldr r3,.L40+4
 1249 003e 9A71     	 strb r2,[r3,#6]
 313:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1250              	 .loc 3 313 0
 1251 0040 0D4B     	 ldr r3,.L40+12
 1252 0042 1B88     	 ldrh r3,[r3]
 1253 0044 DAB2     	 uxtb r2,r3
 1254 0046 0A4B     	 ldr r3,.L40+4
 1255 0048 DA71     	 strb r2,[r3,#7]
 314:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1256              	 .loc 3 314 0
 1257 004a 0C4B     	 ldr r3,.L40+16
 1258 004c 1B88     	 ldrh r3,[r3]
 1259 004e 1B0A     	 lsr r3,r3,#8
 1260 0050 9BB2     	 uxth r3,r3
 1261 0052 DAB2     	 uxtb r2,r3
 1262 0054 064B     	 ldr r3,.L40+4
 1263 0056 1A72     	 strb r2,[r3,#8]
 315:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1264              	 .loc 3 315 0
 1265 0058 084B     	 ldr r3,.L40+16
 1266 005a 1B88     	 ldrh r3,[r3]
 1267 005c DAB2     	 uxtb r2,r3
 1268 005e 044B     	 ldr r3,.L40+4
 1269 0060 5A72     	 strb r2,[r3,#9]
 316:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1270              	 .loc 3 316 0
 1271 0062 034B     	 ldr r3,.L40+4
 1272 0064 FF22     	 mov r2,#255
 1273 0066 9A72     	 strb r2,[r3,#10]
 317:../samuel/samuel_io.c ****  }
 1274              	 .loc 3 317 0
 1275 0068 BD46     	 mov sp,r7
 1276              	 
 1277 006a 80BD     	 pop {r7,pc}
 1278              	.L41:
 1279              	 .align 2
 1280              	.L40:
 1281 006c 00000000 	 .word transmit_buf_size
 1282 0070 00000000 	 .word new_data
 1283 0074 00000000 	 .word node_id
 1284 0078 00000000 	 .word resultC2
 1285 007c 00000000 	 .word resultD2
 1286              	 .cfi_endproc
 1287              	.LFE300:
 1289              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1290              	 .align 2
 1291              	 .global new_data_aktLichtBack
 1292              	 .code 16
 1293              	 .thumb_func
 1295              	new_data_aktLichtBack:
 1296              	.LFB301:
 318:../samuel/samuel_io.c ****  //------------------------------------------------------
 319:../samuel/samuel_io.c **** 
 320:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 321:../samuel/samuel_io.c ****  {
 1297              	 .loc 3 321 0
 1298              	 .cfi_startproc
 1299 0000 80B5     	 push {r7,lr}
 1300              	.LCFI34:
 1301              	 .cfi_def_cfa_offset 8
 1302              	 .cfi_offset 7,-8
 1303              	 .cfi_offset 14,-4
 1304 0002 00AF     	 add r7,sp,#0
 1305              	.LCFI35:
 1306              	 .cfi_def_cfa_register 7
 322:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1307              	 .loc 3 322 0
 1308 0004 194B     	 ldr r3,.L43
 1309 0006 0B22     	 mov r2,#11
 1310 0008 1A70     	 strb r2,[r3]
 323:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1311              	 .loc 3 323 0
 1312 000a 194B     	 ldr r3,.L43+4
 1313 000c 4C22     	 mov r2,#76
 1314 000e 1A70     	 strb r2,[r3]
 324:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1315              	 .loc 3 324 0
 1316 0010 174B     	 ldr r3,.L43+4
 1317 0012 4922     	 mov r2,#73
 1318 0014 5A70     	 strb r2,[r3,#1]
 325:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1319              	 .loc 3 325 0
 1320 0016 164B     	 ldr r3,.L43+4
 1321 0018 4E22     	 mov r2,#78
 1322 001a 9A70     	 strb r2,[r3,#2]
 326:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1323              	 .loc 3 326 0
 1324 001c 154B     	 ldr r3,.L43+8
 1325 001e 1A78     	 ldrb r2,[r3]
 1326 0020 134B     	 ldr r3,.L43+4
 1327 0022 DA70     	 strb r2,[r3,#3]
 327:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1328              	 .loc 3 327 0
 1329 0024 114B     	 ldr r3,.L43
 1330 0026 1A78     	 ldrb r2,[r3]
 1331 0028 114B     	 ldr r3,.L43+4
 1332 002a 1A71     	 strb r2,[r3,#4]
 328:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1333              	 .loc 3 328 0
 1334 002c 104B     	 ldr r3,.L43+4
 1335 002e 6622     	 mov r2,#102
 1336 0030 5A71     	 strb r2,[r3,#5]
 329:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1337              	 .loc 3 329 0
 1338 0032 114B     	 ldr r3,.L43+12
 1339 0034 1B88     	 ldrh r3,[r3]
 1340 0036 1B0A     	 lsr r3,r3,#8
 1341 0038 9BB2     	 uxth r3,r3
 1342 003a DAB2     	 uxtb r2,r3
 1343 003c 0C4B     	 ldr r3,.L43+4
 1344 003e 9A71     	 strb r2,[r3,#6]
 330:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1345              	 .loc 3 330 0
 1346 0040 0D4B     	 ldr r3,.L43+12
 1347 0042 1B88     	 ldrh r3,[r3]
 1348 0044 DAB2     	 uxtb r2,r3
 1349 0046 0A4B     	 ldr r3,.L43+4
 1350 0048 DA71     	 strb r2,[r3,#7]
 331:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1351              	 .loc 3 331 0
 1352 004a 0C4B     	 ldr r3,.L43+16
 1353 004c 1B88     	 ldrh r3,[r3]
 1354 004e 1B0A     	 lsr r3,r3,#8
 1355 0050 9BB2     	 uxth r3,r3
 1356 0052 DAB2     	 uxtb r2,r3
 1357 0054 064B     	 ldr r3,.L43+4
 1358 0056 1A72     	 strb r2,[r3,#8]
 332:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1359              	 .loc 3 332 0
 1360 0058 084B     	 ldr r3,.L43+16
 1361 005a 1B88     	 ldrh r3,[r3]
 1362 005c DAB2     	 uxtb r2,r3
 1363 005e 044B     	 ldr r3,.L43+4
 1364 0060 5A72     	 strb r2,[r3,#9]
 333:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1365              	 .loc 3 333 0
 1366 0062 034B     	 ldr r3,.L43+4
 1367 0064 FF22     	 mov r2,#255
 1368 0066 9A72     	 strb r2,[r3,#10]
 334:../samuel/samuel_io.c ****  }
 1369              	 .loc 3 334 0
 1370 0068 BD46     	 mov sp,r7
 1371              	 
 1372 006a 80BD     	 pop {r7,pc}
 1373              	.L44:
 1374              	 .align 2
 1375              	.L43:
 1376 006c 00000000 	 .word transmit_buf_size
 1377 0070 00000000 	 .word new_data
 1378 0074 00000000 	 .word node_id
 1379 0078 00000000 	 .word dimAkt_Ww
 1380 007c 00000000 	 .word dimAkt_Cw
 1381              	 .cfi_endproc
 1382              	.LFE301:
 1384              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1385              	 .align 2
 1386              	 .global new_data_offLichtBack
 1387              	 .code 16
 1388              	 .thumb_func
 1390              	new_data_offLichtBack:
 1391              	.LFB302:
 335:../samuel/samuel_io.c ****  //------------------------------------------------------
 336:../samuel/samuel_io.c **** 
 337:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 338:../samuel/samuel_io.c ****  {
 1392              	 .loc 3 338 0
 1393              	 .cfi_startproc
 1394 0000 80B5     	 push {r7,lr}
 1395              	.LCFI36:
 1396              	 .cfi_def_cfa_offset 8
 1397              	 .cfi_offset 7,-8
 1398              	 .cfi_offset 14,-4
 1399 0002 00AF     	 add r7,sp,#0
 1400              	.LCFI37:
 1401              	 .cfi_def_cfa_register 7
 339:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1402              	 .loc 3 339 0
 1403 0004 1D4B     	 ldr r3,.L46
 1404 0006 0D22     	 mov r2,#13
 1405 0008 1A70     	 strb r2,[r3]
 340:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1406              	 .loc 3 340 0
 1407 000a 1D4B     	 ldr r3,.L46+4
 1408 000c 4C22     	 mov r2,#76
 1409 000e 1A70     	 strb r2,[r3]
 341:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1410              	 .loc 3 341 0
 1411 0010 1B4B     	 ldr r3,.L46+4
 1412 0012 4922     	 mov r2,#73
 1413 0014 5A70     	 strb r2,[r3,#1]
 342:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1414              	 .loc 3 342 0
 1415 0016 1A4B     	 ldr r3,.L46+4
 1416 0018 4E22     	 mov r2,#78
 1417 001a 9A70     	 strb r2,[r3,#2]
 343:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1418              	 .loc 3 343 0
 1419 001c 194B     	 ldr r3,.L46+8
 1420 001e 1A78     	 ldrb r2,[r3]
 1421 0020 174B     	 ldr r3,.L46+4
 1422 0022 DA70     	 strb r2,[r3,#3]
 344:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1423              	 .loc 3 344 0
 1424 0024 154B     	 ldr r3,.L46
 1425 0026 1A78     	 ldrb r2,[r3]
 1426 0028 154B     	 ldr r3,.L46+4
 1427 002a 1A71     	 strb r2,[r3,#4]
 345:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1428              	 .loc 3 345 0
 1429 002c 144B     	 ldr r3,.L46+4
 1430 002e 6722     	 mov r2,#103
 1431 0030 5A71     	 strb r2,[r3,#5]
 346:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1432              	 .loc 3 346 0
 1433 0032 154B     	 ldr r3,.L46+12
 1434 0034 1B88     	 ldrh r3,[r3]
 1435 0036 1B0A     	 lsr r3,r3,#8
 1436 0038 9BB2     	 uxth r3,r3
 1437 003a DAB2     	 uxtb r2,r3
 1438 003c 104B     	 ldr r3,.L46+4
 1439 003e 9A71     	 strb r2,[r3,#6]
 347:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1440              	 .loc 3 347 0
 1441 0040 114B     	 ldr r3,.L46+12
 1442 0042 1B88     	 ldrh r3,[r3]
 1443 0044 DAB2     	 uxtb r2,r3
 1444 0046 0E4B     	 ldr r3,.L46+4
 1445 0048 DA71     	 strb r2,[r3,#7]
 348:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1446              	 .loc 3 348 0
 1447 004a 104B     	 ldr r3,.L46+16
 1448 004c 1B88     	 ldrh r3,[r3]
 1449 004e 1B0A     	 lsr r3,r3,#8
 1450 0050 9BB2     	 uxth r3,r3
 1451 0052 DAB2     	 uxtb r2,r3
 1452 0054 0A4B     	 ldr r3,.L46+4
 1453 0056 1A72     	 strb r2,[r3,#8]
 349:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1454              	 .loc 3 349 0
 1455 0058 0C4B     	 ldr r3,.L46+16
 1456 005a 1B88     	 ldrh r3,[r3]
 1457 005c DAB2     	 uxtb r2,r3
 1458 005e 084B     	 ldr r3,.L46+4
 1459 0060 5A72     	 strb r2,[r3,#9]
 350:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1460              	 .loc 3 350 0
 1461 0062 0B4B     	 ldr r3,.L46+20
 1462 0064 1A78     	 ldrb r2,[r3]
 1463 0066 064B     	 ldr r3,.L46+4
 1464 0068 9A72     	 strb r2,[r3,#10]
 351:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1465              	 .loc 3 351 0
 1466 006a 0A4B     	 ldr r3,.L46+24
 1467 006c 1A78     	 ldrb r2,[r3]
 1468 006e 044B     	 ldr r3,.L46+4
 1469 0070 DA72     	 strb r2,[r3,#11]
 352:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1470              	 .loc 3 352 0
 1471 0072 034B     	 ldr r3,.L46+4
 1472 0074 FF22     	 mov r2,#255
 1473 0076 1A73     	 strb r2,[r3,#12]
 353:../samuel/samuel_io.c ****  }
 1474              	 .loc 3 353 0
 1475 0078 BD46     	 mov sp,r7
 1476              	 
 1477 007a 80BD     	 pop {r7,pc}
 1478              	.L47:
 1479              	 .align 2
 1480              	.L46:
 1481 007c 00000000 	 .word transmit_buf_size
 1482 0080 00000000 	 .word new_data
 1483 0084 00000000 	 .word node_id
 1484 0088 00000000 	 .word dimOff_Ww
 1485 008c 00000000 	 .word dimOff_Cw
 1486 0090 00000000 	 .word RegOnOff
 1487 0094 00000000 	 .word RegOnOff2
 1488              	 .cfi_endproc
 1489              	.LFE302:
 1491              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1492              	 .align 2
 1493              	 .global new_data_Bright_Color_Back
 1494              	 .code 16
 1495              	 .thumb_func
 1497              	new_data_Bright_Color_Back:
 1498              	.LFB303:
 354:../samuel/samuel_io.c ****  //------------------------------------------------------
 355:../samuel/samuel_io.c **** 
 356:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 357:../samuel/samuel_io.c ****   {
 1499              	 .loc 3 357 0
 1500              	 .cfi_startproc
 1501 0000 80B5     	 push {r7,lr}
 1502              	.LCFI38:
 1503              	 .cfi_def_cfa_offset 8
 1504              	 .cfi_offset 7,-8
 1505              	 .cfi_offset 14,-4
 1506 0002 00AF     	 add r7,sp,#0
 1507              	.LCFI39:
 1508              	 .cfi_def_cfa_register 7
 358:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1509              	 .loc 3 358 0
 1510 0004 194B     	 ldr r3,.L49
 1511 0006 0B22     	 mov r2,#11
 1512 0008 1A70     	 strb r2,[r3]
 359:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1513              	 .loc 3 359 0
 1514 000a 194B     	 ldr r3,.L49+4
 1515 000c 4C22     	 mov r2,#76
 1516 000e 1A70     	 strb r2,[r3]
 360:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1517              	 .loc 3 360 0
 1518 0010 174B     	 ldr r3,.L49+4
 1519 0012 4922     	 mov r2,#73
 1520 0014 5A70     	 strb r2,[r3,#1]
 361:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1521              	 .loc 3 361 0
 1522 0016 164B     	 ldr r3,.L49+4
 1523 0018 4E22     	 mov r2,#78
 1524 001a 9A70     	 strb r2,[r3,#2]
 362:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1525              	 .loc 3 362 0
 1526 001c 154B     	 ldr r3,.L49+8
 1527 001e 1A78     	 ldrb r2,[r3]
 1528 0020 134B     	 ldr r3,.L49+4
 1529 0022 DA70     	 strb r2,[r3,#3]
 363:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1530              	 .loc 3 363 0
 1531 0024 114B     	 ldr r3,.L49
 1532 0026 1A78     	 ldrb r2,[r3]
 1533 0028 114B     	 ldr r3,.L49+4
 1534 002a 1A71     	 strb r2,[r3,#4]
 364:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1535              	 .loc 3 364 0
 1536 002c 104B     	 ldr r3,.L49+4
 1537 002e 6822     	 mov r2,#104
 1538 0030 5A71     	 strb r2,[r3,#5]
 365:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1539              	 .loc 3 365 0
 1540 0032 114B     	 ldr r3,.L49+12
 1541 0034 1B88     	 ldrh r3,[r3]
 1542 0036 1B0A     	 lsr r3,r3,#8
 1543 0038 9BB2     	 uxth r3,r3
 1544 003a DAB2     	 uxtb r2,r3
 1545 003c 0C4B     	 ldr r3,.L49+4
 1546 003e 9A71     	 strb r2,[r3,#6]
 366:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1547              	 .loc 3 366 0
 1548 0040 0D4B     	 ldr r3,.L49+12
 1549 0042 1B88     	 ldrh r3,[r3]
 1550 0044 DAB2     	 uxtb r2,r3
 1551 0046 0A4B     	 ldr r3,.L49+4
 1552 0048 DA71     	 strb r2,[r3,#7]
 367:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1553              	 .loc 3 367 0
 1554 004a 0C4B     	 ldr r3,.L49+16
 1555 004c 1B88     	 ldrh r3,[r3]
 1556 004e 1B0A     	 lsr r3,r3,#8
 1557 0050 9BB2     	 uxth r3,r3
 1558 0052 DAB2     	 uxtb r2,r3
 1559 0054 064B     	 ldr r3,.L49+4
 1560 0056 1A72     	 strb r2,[r3,#8]
 368:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1561              	 .loc 3 368 0
 1562 0058 084B     	 ldr r3,.L49+16
 1563 005a 1B88     	 ldrh r3,[r3]
 1564 005c DAB2     	 uxtb r2,r3
 1565 005e 044B     	 ldr r3,.L49+4
 1566 0060 5A72     	 strb r2,[r3,#9]
 369:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1567              	 .loc 3 369 0
 1568 0062 034B     	 ldr r3,.L49+4
 1569 0064 FF22     	 mov r2,#255
 1570 0066 9A72     	 strb r2,[r3,#10]
 370:../samuel/samuel_io.c ****   }
 1571              	 .loc 3 370 0
 1572 0068 BD46     	 mov sp,r7
 1573              	 
 1574 006a 80BD     	 pop {r7,pc}
 1575              	.L50:
 1576              	 .align 2
 1577              	.L49:
 1578 006c 00000000 	 .word transmit_buf_size
 1579 0070 00000000 	 .word new_data
 1580 0074 00000000 	 .word node_id
 1581 0078 00000000 	 .word Brightness_Gen
 1582 007c 00000000 	 .word ColorQuot_Gen
 1583              	 .cfi_endproc
 1584              	.LFE303:
 1586              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1587              	 .align 2
 1588              	 .global new_data_Quot_Walk_Back
 1589              	 .code 16
 1590              	 .thumb_func
 1592              	new_data_Quot_Walk_Back:
 1593              	.LFB304:
 371:../samuel/samuel_io.c ****   //------------------------------------------------------
 372:../samuel/samuel_io.c **** 
 373:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 374:../samuel/samuel_io.c ****   {
 1594              	 .loc 3 374 0
 1595              	 .cfi_startproc
 1596 0000 80B5     	 push {r7,lr}
 1597              	.LCFI40:
 1598              	 .cfi_def_cfa_offset 8
 1599              	 .cfi_offset 7,-8
 1600              	 .cfi_offset 14,-4
 1601 0002 00AF     	 add r7,sp,#0
 1602              	.LCFI41:
 1603              	 .cfi_def_cfa_register 7
 375:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1604              	 .loc 3 375 0
 1605 0004 194B     	 ldr r3,.L52
 1606 0006 0B22     	 mov r2,#11
 1607 0008 1A70     	 strb r2,[r3]
 376:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1608              	 .loc 3 376 0
 1609 000a 194B     	 ldr r3,.L52+4
 1610 000c 4C22     	 mov r2,#76
 1611 000e 1A70     	 strb r2,[r3]
 377:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1612              	 .loc 3 377 0
 1613 0010 174B     	 ldr r3,.L52+4
 1614 0012 4922     	 mov r2,#73
 1615 0014 5A70     	 strb r2,[r3,#1]
 378:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1616              	 .loc 3 378 0
 1617 0016 164B     	 ldr r3,.L52+4
 1618 0018 4E22     	 mov r2,#78
 1619 001a 9A70     	 strb r2,[r3,#2]
 379:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1620              	 .loc 3 379 0
 1621 001c 154B     	 ldr r3,.L52+8
 1622 001e 1A78     	 ldrb r2,[r3]
 1623 0020 134B     	 ldr r3,.L52+4
 1624 0022 DA70     	 strb r2,[r3,#3]
 380:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1625              	 .loc 3 380 0
 1626 0024 114B     	 ldr r3,.L52
 1627 0026 1A78     	 ldrb r2,[r3]
 1628 0028 114B     	 ldr r3,.L52+4
 1629 002a 1A71     	 strb r2,[r3,#4]
 381:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1630              	 .loc 3 381 0
 1631 002c 104B     	 ldr r3,.L52+4
 1632 002e 6922     	 mov r2,#105
 1633 0030 5A71     	 strb r2,[r3,#5]
 382:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1634              	 .loc 3 382 0
 1635 0032 114B     	 ldr r3,.L52+12
 1636 0034 1B88     	 ldrh r3,[r3]
 1637 0036 1B0A     	 lsr r3,r3,#8
 1638 0038 9BB2     	 uxth r3,r3
 1639 003a DAB2     	 uxtb r2,r3
 1640 003c 0C4B     	 ldr r3,.L52+4
 1641 003e 9A71     	 strb r2,[r3,#6]
 383:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1642              	 .loc 3 383 0
 1643 0040 0D4B     	 ldr r3,.L52+12
 1644 0042 1B88     	 ldrh r3,[r3]
 1645 0044 DAB2     	 uxtb r2,r3
 1646 0046 0A4B     	 ldr r3,.L52+4
 1647 0048 DA71     	 strb r2,[r3,#7]
 384:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1648              	 .loc 3 384 0
 1649 004a 0C4B     	 ldr r3,.L52+16
 1650 004c 1B88     	 ldrh r3,[r3]
 1651 004e 1B0A     	 lsr r3,r3,#8
 1652 0050 9BB2     	 uxth r3,r3
 1653 0052 DAB2     	 uxtb r2,r3
 1654 0054 064B     	 ldr r3,.L52+4
 1655 0056 1A72     	 strb r2,[r3,#8]
 385:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1656              	 .loc 3 385 0
 1657 0058 084B     	 ldr r3,.L52+16
 1658 005a 1B88     	 ldrh r3,[r3]
 1659 005c DAB2     	 uxtb r2,r3
 1660 005e 044B     	 ldr r3,.L52+4
 1661 0060 5A72     	 strb r2,[r3,#9]
 386:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1662              	 .loc 3 386 0
 1663 0062 034B     	 ldr r3,.L52+4
 1664 0064 FF22     	 mov r2,#255
 1665 0066 9A72     	 strb r2,[r3,#10]
 387:../samuel/samuel_io.c ****   }
 1666              	 .loc 3 387 0
 1667 0068 BD46     	 mov sp,r7
 1668              	 
 1669 006a 80BD     	 pop {r7,pc}
 1670              	.L53:
 1671              	 .align 2
 1672              	.L52:
 1673 006c 00000000 	 .word transmit_buf_size
 1674 0070 00000000 	 .word new_data
 1675 0074 00000000 	 .word node_id
 1676 0078 00000000 	 .word linearwalk_gen
 1677 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1678              	 .cfi_endproc
 1679              	.LFE304:
 1681              	 .section .text.new_data_HalloBack,"ax",%progbits
 1682              	 .align 2
 1683              	 .global new_data_HalloBack
 1684              	 .code 16
 1685              	 .thumb_func
 1687              	new_data_HalloBack:
 1688              	.LFB305:
 388:../samuel/samuel_io.c ****  //------------------------------------------
 389:../samuel/samuel_io.c **** 
 390:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 391:../samuel/samuel_io.c ****   {
 1689              	 .loc 3 391 0
 1690              	 .cfi_startproc
 1691 0000 80B5     	 push {r7,lr}
 1692              	.LCFI42:
 1693              	 .cfi_def_cfa_offset 8
 1694              	 .cfi_offset 7,-8
 1695              	 .cfi_offset 14,-4
 1696 0002 00AF     	 add r7,sp,#0
 1697              	.LCFI43:
 1698              	 .cfi_def_cfa_register 7
 392:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1699              	 .loc 3 392 0
 1700 0004 134B     	 ldr r3,.L55
 1701 0006 0B22     	 mov r2,#11
 1702 0008 1A70     	 strb r2,[r3]
 393:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1703              	 .loc 3 393 0
 1704 000a 134B     	 ldr r3,.L55+4
 1705 000c 4C22     	 mov r2,#76
 1706 000e 1A70     	 strb r2,[r3]
 394:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1707              	 .loc 3 394 0
 1708 0010 114B     	 ldr r3,.L55+4
 1709 0012 4922     	 mov r2,#73
 1710 0014 5A70     	 strb r2,[r3,#1]
 395:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1711              	 .loc 3 395 0
 1712 0016 104B     	 ldr r3,.L55+4
 1713 0018 4E22     	 mov r2,#78
 1714 001a 9A70     	 strb r2,[r3,#2]
 396:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1715              	 .loc 3 396 0
 1716 001c 0F4B     	 ldr r3,.L55+8
 1717 001e 1A78     	 ldrb r2,[r3]
 1718 0020 0D4B     	 ldr r3,.L55+4
 1719 0022 DA70     	 strb r2,[r3,#3]
 397:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1720              	 .loc 3 397 0
 1721 0024 0B4B     	 ldr r3,.L55
 1722 0026 1A78     	 ldrb r2,[r3]
 1723 0028 0B4B     	 ldr r3,.L55+4
 1724 002a 1A71     	 strb r2,[r3,#4]
 398:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1725              	 .loc 3 398 0
 1726 002c 0A4B     	 ldr r3,.L55+4
 1727 002e 6A22     	 mov r2,#106
 1728 0030 5A71     	 strb r2,[r3,#5]
 399:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1729              	 .loc 3 399 0
 1730 0032 094B     	 ldr r3,.L55+4
 1731 0034 6F22     	 mov r2,#111
 1732 0036 9A71     	 strb r2,[r3,#6]
 400:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1733              	 .loc 3 400 0
 1734 0038 074B     	 ldr r3,.L55+4
 1735 003a 6B22     	 mov r2,#107
 1736 003c DA71     	 strb r2,[r3,#7]
 401:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1737              	 .loc 3 401 0
 1738 003e 064B     	 ldr r3,.L55+4
 1739 0040 6F22     	 mov r2,#111
 1740 0042 1A72     	 strb r2,[r3,#8]
 402:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1741              	 .loc 3 402 0
 1742 0044 044B     	 ldr r3,.L55+4
 1743 0046 6B22     	 mov r2,#107
 1744 0048 5A72     	 strb r2,[r3,#9]
 403:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1745              	 .loc 3 403 0
 1746 004a 034B     	 ldr r3,.L55+4
 1747 004c FF22     	 mov r2,#255
 1748 004e 9A72     	 strb r2,[r3,#10]
 404:../samuel/samuel_io.c ****   }
 1749              	 .loc 3 404 0
 1750 0050 BD46     	 mov sp,r7
 1751              	 
 1752 0052 80BD     	 pop {r7,pc}
 1753              	.L56:
 1754              	 .align 2
 1755              	.L55:
 1756 0054 00000000 	 .word transmit_buf_size
 1757 0058 00000000 	 .word new_data
 1758 005c 00000000 	 .word node_id
 1759              	 .cfi_endproc
 1760              	.LFE305:
 1762              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 1763              	 .align 2
 1764              	 .global new_data_neuNodeIdBack
 1765              	 .code 16
 1766              	 .thumb_func
 1768              	new_data_neuNodeIdBack:
 1769              	.LFB306:
 405:../samuel/samuel_io.c ****   //------------------------------------------------------
 406:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 407:../samuel/samuel_io.c ****    {
 1770              	 .loc 3 407 0
 1771              	 .cfi_startproc
 1772 0000 80B5     	 push {r7,lr}
 1773              	.LCFI44:
 1774              	 .cfi_def_cfa_offset 8
 1775              	 .cfi_offset 7,-8
 1776              	 .cfi_offset 14,-4
 1777 0002 00AF     	 add r7,sp,#0
 1778              	.LCFI45:
 1779              	 .cfi_def_cfa_register 7
 408:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 1780              	 .loc 3 408 0
 1781 0004 1B4B     	 ldr r3,.L58
 1782 0006 0C22     	 mov r2,#12
 1783 0008 1A70     	 strb r2,[r3]
 409:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1784              	 .loc 3 409 0
 1785 000a 1B4B     	 ldr r3,.L58+4
 1786 000c 4C22     	 mov r2,#76
 1787 000e 1A70     	 strb r2,[r3]
 410:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1788              	 .loc 3 410 0
 1789 0010 194B     	 ldr r3,.L58+4
 1790 0012 4922     	 mov r2,#73
 1791 0014 5A70     	 strb r2,[r3,#1]
 411:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1792              	 .loc 3 411 0
 1793 0016 184B     	 ldr r3,.L58+4
 1794 0018 4E22     	 mov r2,#78
 1795 001a 9A70     	 strb r2,[r3,#2]
 412:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1796              	 .loc 3 412 0
 1797 001c 174B     	 ldr r3,.L58+8
 1798 001e 1A78     	 ldrb r2,[r3]
 1799 0020 154B     	 ldr r3,.L58+4
 1800 0022 DA70     	 strb r2,[r3,#3]
 413:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1801              	 .loc 3 413 0
 1802 0024 134B     	 ldr r3,.L58
 1803 0026 1A78     	 ldrb r2,[r3]
 1804 0028 134B     	 ldr r3,.L58+4
 1805 002a 1A71     	 strb r2,[r3,#4]
 414:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 1806              	 .loc 3 414 0
 1807 002c 124B     	 ldr r3,.L58+4
 1808 002e 6B22     	 mov r2,#107
 1809 0030 5A71     	 strb r2,[r3,#5]
 415:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 1810              	 .loc 3 415 0
 1811 0032 134B     	 ldr r3,.L58+12
 1812 0034 1A78     	 ldrb r2,[r3]
 1813 0036 104B     	 ldr r3,.L58+4
 1814 0038 9A71     	 strb r2,[r3,#6]
 416:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 1815              	 .loc 3 416 0
 1816 003a 124B     	 ldr r3,.L58+16
 1817 003c 1B88     	 ldrh r3,[r3]
 1818 003e 1B0A     	 lsr r3,r3,#8
 1819 0040 9BB2     	 uxth r3,r3
 1820 0042 DAB2     	 uxtb r2,r3
 1821 0044 0C4B     	 ldr r3,.L58+4
 1822 0046 DA71     	 strb r2,[r3,#7]
 417:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 1823              	 .loc 3 417 0
 1824 0048 0E4B     	 ldr r3,.L58+16
 1825 004a 1B88     	 ldrh r3,[r3]
 1826 004c DAB2     	 uxtb r2,r3
 1827 004e 0A4B     	 ldr r3,.L58+4
 1828 0050 1A72     	 strb r2,[r3,#8]
 418:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 1829              	 .loc 3 418 0
 1830 0052 0D4B     	 ldr r3,.L58+20
 1831 0054 1B88     	 ldrh r3,[r3]
 1832 0056 1B0A     	 lsr r3,r3,#8
 1833 0058 9BB2     	 uxth r3,r3
 1834 005a DAB2     	 uxtb r2,r3
 1835 005c 064B     	 ldr r3,.L58+4
 1836 005e 5A72     	 strb r2,[r3,#9]
 419:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 1837              	 .loc 3 419 0
 1838 0060 094B     	 ldr r3,.L58+20
 1839 0062 1B88     	 ldrh r3,[r3]
 1840 0064 DAB2     	 uxtb r2,r3
 1841 0066 044B     	 ldr r3,.L58+4
 1842 0068 9A72     	 strb r2,[r3,#10]
 420:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 1843              	 .loc 3 420 0
 1844 006a 034B     	 ldr r3,.L58+4
 1845 006c FF22     	 mov r2,#255
 1846 006e DA72     	 strb r2,[r3,#11]
 421:../samuel/samuel_io.c ****    }
 1847              	 .loc 3 421 0
 1848 0070 BD46     	 mov sp,r7
 1849              	 
 1850 0072 80BD     	 pop {r7,pc}
 1851              	.L59:
 1852              	 .align 2
 1853              	.L58:
 1854 0074 00000000 	 .word transmit_buf_size
 1855 0078 00000000 	 .word new_data
 1856 007c 00000000 	 .word node_id
 1857 0080 00000000 	 .word node_id_neu
 1858 0084 00000000 	 .word Ser_NrH
 1859 0088 00000000 	 .word Ser_NrL
 1860              	 .cfi_endproc
 1861              	.LFE306:
 1863              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 1864              	 .align 2
 1865              	 .global new_data_neuSerNrBack
 1866              	 .code 16
 1867              	 .thumb_func
 1869              	new_data_neuSerNrBack:
 1870              	.LFB307:
 422:../samuel/samuel_io.c ****    //------------------------------------------------------
 423:../samuel/samuel_io.c **** 
 424:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 425:../samuel/samuel_io.c ****    {
 1871              	 .loc 3 425 0
 1872              	 .cfi_startproc
 1873 0000 80B5     	 push {r7,lr}
 1874              	.LCFI46:
 1875              	 .cfi_def_cfa_offset 8
 1876              	 .cfi_offset 7,-8
 1877              	 .cfi_offset 14,-4
 1878 0002 00AF     	 add r7,sp,#0
 1879              	.LCFI47:
 1880              	 .cfi_def_cfa_register 7
 426:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 1881              	 .loc 3 426 0
 1882 0004 254B     	 ldr r3,.L61
 1883 0006 0F22     	 mov r2,#15
 1884 0008 1A70     	 strb r2,[r3]
 427:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1885              	 .loc 3 427 0
 1886 000a 254B     	 ldr r3,.L61+4
 1887 000c 4C22     	 mov r2,#76
 1888 000e 1A70     	 strb r2,[r3]
 428:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1889              	 .loc 3 428 0
 1890 0010 234B     	 ldr r3,.L61+4
 1891 0012 4922     	 mov r2,#73
 1892 0014 5A70     	 strb r2,[r3,#1]
 429:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1893              	 .loc 3 429 0
 1894 0016 224B     	 ldr r3,.L61+4
 1895 0018 4E22     	 mov r2,#78
 1896 001a 9A70     	 strb r2,[r3,#2]
 430:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1897              	 .loc 3 430 0
 1898 001c 214B     	 ldr r3,.L61+8
 1899 001e 1A78     	 ldrb r2,[r3]
 1900 0020 1F4B     	 ldr r3,.L61+4
 1901 0022 DA70     	 strb r2,[r3,#3]
 431:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1902              	 .loc 3 431 0
 1903 0024 1D4B     	 ldr r3,.L61
 1904 0026 1A78     	 ldrb r2,[r3]
 1905 0028 1D4B     	 ldr r3,.L61+4
 1906 002a 1A71     	 strb r2,[r3,#4]
 432:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 1907              	 .loc 3 432 0
 1908 002c 1C4B     	 ldr r3,.L61+4
 1909 002e 6C22     	 mov r2,#108
 1910 0030 5A71     	 strb r2,[r3,#5]
 433:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 1911              	 .loc 3 433 0
 1912 0032 1D4B     	 ldr r3,.L61+12
 1913 0034 1B88     	 ldrh r3,[r3]
 1914 0036 1B0A     	 lsr r3,r3,#8
 1915 0038 9BB2     	 uxth r3,r3
 1916 003a DAB2     	 uxtb r2,r3
 1917 003c 184B     	 ldr r3,.L61+4
 1918 003e 9A71     	 strb r2,[r3,#6]
 434:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 1919              	 .loc 3 434 0
 1920 0040 194B     	 ldr r3,.L61+12
 1921 0042 1B88     	 ldrh r3,[r3]
 1922 0044 DAB2     	 uxtb r2,r3
 1923 0046 164B     	 ldr r3,.L61+4
 1924 0048 DA71     	 strb r2,[r3,#7]
 435:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 1925              	 .loc 3 435 0
 1926 004a 184B     	 ldr r3,.L61+16
 1927 004c 1B88     	 ldrh r3,[r3]
 1928 004e 1B0A     	 lsr r3,r3,#8
 1929 0050 9BB2     	 uxth r3,r3
 1930 0052 DAB2     	 uxtb r2,r3
 1931 0054 124B     	 ldr r3,.L61+4
 1932 0056 1A72     	 strb r2,[r3,#8]
 436:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 1933              	 .loc 3 436 0
 1934 0058 144B     	 ldr r3,.L61+16
 1935 005a 1B88     	 ldrh r3,[r3]
 1936 005c DAB2     	 uxtb r2,r3
 1937 005e 104B     	 ldr r3,.L61+4
 1938 0060 5A72     	 strb r2,[r3,#9]
 437:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 1939              	 .loc 3 437 0
 1940 0062 134B     	 ldr r3,.L61+20
 1941 0064 1B88     	 ldrh r3,[r3]
 1942 0066 1B0A     	 lsr r3,r3,#8
 1943 0068 9BB2     	 uxth r3,r3
 1944 006a DAB2     	 uxtb r2,r3
 1945 006c 0C4B     	 ldr r3,.L61+4
 1946 006e 9A72     	 strb r2,[r3,#10]
 438:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 1947              	 .loc 3 438 0
 1948 0070 0F4B     	 ldr r3,.L61+20
 1949 0072 1B88     	 ldrh r3,[r3]
 1950 0074 DAB2     	 uxtb r2,r3
 1951 0076 0A4B     	 ldr r3,.L61+4
 1952 0078 DA72     	 strb r2,[r3,#11]
 439:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 1953              	 .loc 3 439 0
 1954 007a 0E4B     	 ldr r3,.L61+24
 1955 007c 1B88     	 ldrh r3,[r3]
 1956 007e 1B0A     	 lsr r3,r3,#8
 1957 0080 9BB2     	 uxth r3,r3
 1958 0082 DAB2     	 uxtb r2,r3
 1959 0084 064B     	 ldr r3,.L61+4
 1960 0086 1A73     	 strb r2,[r3,#12]
 440:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 1961              	 .loc 3 440 0
 1962 0088 0A4B     	 ldr r3,.L61+24
 1963 008a 1B88     	 ldrh r3,[r3]
 1964 008c DAB2     	 uxtb r2,r3
 1965 008e 044B     	 ldr r3,.L61+4
 1966 0090 5A73     	 strb r2,[r3,#13]
 441:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 1967              	 .loc 3 441 0
 1968 0092 034B     	 ldr r3,.L61+4
 1969 0094 FF22     	 mov r2,#255
 1970 0096 9A73     	 strb r2,[r3,#14]
 442:../samuel/samuel_io.c ****    }
 1971              	 .loc 3 442 0
 1972 0098 BD46     	 mov sp,r7
 1973              	 
 1974 009a 80BD     	 pop {r7,pc}
 1975              	.L62:
 1976              	 .align 2
 1977              	.L61:
 1978 009c 00000000 	 .word transmit_buf_size
 1979 00a0 00000000 	 .word new_data
 1980 00a4 00000000 	 .word node_id
 1981 00a8 00000000 	 .word neu_Ser_NrH
 1982 00ac 00000000 	 .word neu_Ser_NrL
 1983 00b0 00000000 	 .word Ser_NrH
 1984 00b4 00000000 	 .word Ser_NrL
 1985              	 .cfi_endproc
 1986              	.LFE307:
 1988              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 1989              	 .align 2
 1990              	 .global new_data_NodeIdBack
 1991              	 .code 16
 1992              	 .thumb_func
 1994              	new_data_NodeIdBack:
 1995              	.LFB308:
 443:../samuel/samuel_io.c ****    //------------------------------------------------------
 444:../samuel/samuel_io.c **** 
 445:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 446:../samuel/samuel_io.c ****    {
 1996              	 .loc 3 446 0
 1997              	 .cfi_startproc
 1998 0000 80B5     	 push {r7,lr}
 1999              	.LCFI48:
 2000              	 .cfi_def_cfa_offset 8
 2001              	 .cfi_offset 7,-8
 2002              	 .cfi_offset 14,-4
 2003 0002 00AF     	 add r7,sp,#0
 2004              	.LCFI49:
 2005              	 .cfi_def_cfa_register 7
 447:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 2006              	 .loc 3 447 0
 2007 0004 1D4B     	 ldr r3,.L64
 2008 0006 0D22     	 mov r2,#13
 2009 0008 1A70     	 strb r2,[r3]
 448:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2010              	 .loc 3 448 0
 2011 000a 1D4B     	 ldr r3,.L64+4
 2012 000c 4C22     	 mov r2,#76
 2013 000e 1A70     	 strb r2,[r3]
 449:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2014              	 .loc 3 449 0
 2015 0010 1B4B     	 ldr r3,.L64+4
 2016 0012 4922     	 mov r2,#73
 2017 0014 5A70     	 strb r2,[r3,#1]
 450:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2018              	 .loc 3 450 0
 2019 0016 1A4B     	 ldr r3,.L64+4
 2020 0018 4E22     	 mov r2,#78
 2021 001a 9A70     	 strb r2,[r3,#2]
 451:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2022              	 .loc 3 451 0
 2023 001c 194B     	 ldr r3,.L64+8
 2024 001e 1A78     	 ldrb r2,[r3]
 2025 0020 174B     	 ldr r3,.L64+4
 2026 0022 DA70     	 strb r2,[r3,#3]
 452:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2027              	 .loc 3 452 0
 2028 0024 154B     	 ldr r3,.L64
 2029 0026 1A78     	 ldrb r2,[r3]
 2030 0028 154B     	 ldr r3,.L64+4
 2031 002a 1A71     	 strb r2,[r3,#4]
 453:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 2032              	 .loc 3 453 0
 2033 002c 144B     	 ldr r3,.L64+4
 2034 002e 6D22     	 mov r2,#109
 2035 0030 5A71     	 strb r2,[r3,#5]
 454:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 2036              	 .loc 3 454 0
 2037 0032 154B     	 ldr r3,.L64+12
 2038 0034 1A78     	 ldrb r2,[r3]
 2039 0036 124B     	 ldr r3,.L64+4
 2040 0038 9A71     	 strb r2,[r3,#6]
 455:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 2041              	 .loc 3 455 0
 2042 003a 124B     	 ldr r3,.L64+8
 2043 003c 1A78     	 ldrb r2,[r3]
 2044 003e 104B     	 ldr r3,.L64+4
 2045 0040 DA71     	 strb r2,[r3,#7]
 456:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 2046              	 .loc 3 456 0
 2047 0042 124B     	 ldr r3,.L64+16
 2048 0044 1B88     	 ldrh r3,[r3]
 2049 0046 1B0A     	 lsr r3,r3,#8
 2050 0048 9BB2     	 uxth r3,r3
 2051 004a DAB2     	 uxtb r2,r3
 2052 004c 0C4B     	 ldr r3,.L64+4
 2053 004e 1A72     	 strb r2,[r3,#8]
 457:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 2054              	 .loc 3 457 0
 2055 0050 0E4B     	 ldr r3,.L64+16
 2056 0052 1B88     	 ldrh r3,[r3]
 2057 0054 DAB2     	 uxtb r2,r3
 2058 0056 0A4B     	 ldr r3,.L64+4
 2059 0058 5A72     	 strb r2,[r3,#9]
 458:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 2060              	 .loc 3 458 0
 2061 005a 0D4B     	 ldr r3,.L64+20
 2062 005c 1B88     	 ldrh r3,[r3]
 2063 005e 1B0A     	 lsr r3,r3,#8
 2064 0060 9BB2     	 uxth r3,r3
 2065 0062 DAB2     	 uxtb r2,r3
 2066 0064 064B     	 ldr r3,.L64+4
 2067 0066 9A72     	 strb r2,[r3,#10]
 459:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 2068              	 .loc 3 459 0
 2069 0068 094B     	 ldr r3,.L64+20
 2070 006a 1B88     	 ldrh r3,[r3]
 2071 006c DAB2     	 uxtb r2,r3
 2072 006e 044B     	 ldr r3,.L64+4
 2073 0070 DA72     	 strb r2,[r3,#11]
 460:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 2074              	 .loc 3 460 0
 2075 0072 034B     	 ldr r3,.L64+4
 2076 0074 FF22     	 mov r2,#255
 2077 0076 1A73     	 strb r2,[r3,#12]
 461:../samuel/samuel_io.c ****    }
 2078              	 .loc 3 461 0
 2079 0078 BD46     	 mov sp,r7
 2080              	 
 2081 007a 80BD     	 pop {r7,pc}
 2082              	.L65:
 2083              	 .align 2
 2084              	.L64:
 2085 007c 00000000 	 .word transmit_buf_size
 2086 0080 00000000 	 .word new_data
 2087 0084 00000000 	 .word node_id
 2088 0088 00000000 	 .word node_id_alt
 2089 008c 00000000 	 .word Ser_NrH
 2090 0090 00000000 	 .word Ser_NrL
 2091              	 .cfi_endproc
 2092              	.LFE308:
 2094              	 .section .text.new_data_SerNrBack,"ax",%progbits
 2095              	 .align 2
 2096              	 .global new_data_SerNrBack
 2097              	 .code 16
 2098              	 .thumb_func
 2100              	new_data_SerNrBack:
 2101              	.LFB309:
 462:../samuel/samuel_io.c **** 
 463:../samuel/samuel_io.c ****    //------------------------------------------------------
 464:../samuel/samuel_io.c **** 
 465:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 466:../samuel/samuel_io.c ****    {
 2102              	 .loc 3 466 0
 2103              	 .cfi_startproc
 2104 0000 80B5     	 push {r7,lr}
 2105              	.LCFI50:
 2106              	 .cfi_def_cfa_offset 8
 2107              	 .cfi_offset 7,-8
 2108              	 .cfi_offset 14,-4
 2109 0002 00AF     	 add r7,sp,#0
 2110              	.LCFI51:
 2111              	 .cfi_def_cfa_register 7
 467:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 2112              	 .loc 3 467 0
 2113 0004 194B     	 ldr r3,.L67
 2114 0006 0B22     	 mov r2,#11
 2115 0008 1A70     	 strb r2,[r3]
 468:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2116              	 .loc 3 468 0
 2117 000a 194B     	 ldr r3,.L67+4
 2118 000c 4C22     	 mov r2,#76
 2119 000e 1A70     	 strb r2,[r3]
 469:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2120              	 .loc 3 469 0
 2121 0010 174B     	 ldr r3,.L67+4
 2122 0012 4922     	 mov r2,#73
 2123 0014 5A70     	 strb r2,[r3,#1]
 470:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2124              	 .loc 3 470 0
 2125 0016 164B     	 ldr r3,.L67+4
 2126 0018 4E22     	 mov r2,#78
 2127 001a 9A70     	 strb r2,[r3,#2]
 471:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2128              	 .loc 3 471 0
 2129 001c 154B     	 ldr r3,.L67+8
 2130 001e 1A78     	 ldrb r2,[r3]
 2131 0020 134B     	 ldr r3,.L67+4
 2132 0022 DA70     	 strb r2,[r3,#3]
 472:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2133              	 .loc 3 472 0
 2134 0024 114B     	 ldr r3,.L67
 2135 0026 1A78     	 ldrb r2,[r3]
 2136 0028 114B     	 ldr r3,.L67+4
 2137 002a 1A71     	 strb r2,[r3,#4]
 473:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2138              	 .loc 3 473 0
 2139 002c 104B     	 ldr r3,.L67+4
 2140 002e 6E22     	 mov r2,#110
 2141 0030 5A71     	 strb r2,[r3,#5]
 474:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2142              	 .loc 3 474 0
 2143 0032 114B     	 ldr r3,.L67+12
 2144 0034 1B88     	 ldrh r3,[r3]
 2145 0036 1B0A     	 lsr r3,r3,#8
 2146 0038 9BB2     	 uxth r3,r3
 2147 003a DAB2     	 uxtb r2,r3
 2148 003c 0C4B     	 ldr r3,.L67+4
 2149 003e 9A71     	 strb r2,[r3,#6]
 475:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2150              	 .loc 3 475 0
 2151 0040 0D4B     	 ldr r3,.L67+12
 2152 0042 1B88     	 ldrh r3,[r3]
 2153 0044 DAB2     	 uxtb r2,r3
 2154 0046 0A4B     	 ldr r3,.L67+4
 2155 0048 DA71     	 strb r2,[r3,#7]
 476:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2156              	 .loc 3 476 0
 2157 004a 0C4B     	 ldr r3,.L67+16
 2158 004c 1B88     	 ldrh r3,[r3]
 2159 004e 1B0A     	 lsr r3,r3,#8
 2160 0050 9BB2     	 uxth r3,r3
 2161 0052 DAB2     	 uxtb r2,r3
 2162 0054 064B     	 ldr r3,.L67+4
 2163 0056 1A72     	 strb r2,[r3,#8]
 477:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2164              	 .loc 3 477 0
 2165 0058 084B     	 ldr r3,.L67+16
 2166 005a 1B88     	 ldrh r3,[r3]
 2167 005c DAB2     	 uxtb r2,r3
 2168 005e 044B     	 ldr r3,.L67+4
 2169 0060 5A72     	 strb r2,[r3,#9]
 478:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2170              	 .loc 3 478 0
 2171 0062 034B     	 ldr r3,.L67+4
 2172 0064 FF22     	 mov r2,#255
 2173 0066 9A72     	 strb r2,[r3,#10]
 479:../samuel/samuel_io.c ****    }
 2174              	 .loc 3 479 0
 2175 0068 BD46     	 mov sp,r7
 2176              	 
 2177 006a 80BD     	 pop {r7,pc}
 2178              	.L68:
 2179              	 .align 2
 2180              	.L67:
 2181 006c 00000000 	 .word transmit_buf_size
 2182 0070 00000000 	 .word new_data
 2183 0074 00000000 	 .word node_id
 2184 0078 00000000 	 .word Ser_NrH
 2185 007c 00000000 	 .word Ser_NrL
 2186              	 .cfi_endproc
 2187              	.LFE309:
 2189              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2190              	 .align 2
 2191              	 .global new_data_readbuff2Back
 2192              	 .code 16
 2193              	 .thumb_func
 2195              	new_data_readbuff2Back:
 2196              	.LFB310:
 480:../samuel/samuel_io.c ****    //-------------------------------------
 481:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 482:../samuel/samuel_io.c ****    {
 2197              	 .loc 3 482 0
 2198              	 .cfi_startproc
 2199 0000 80B5     	 push {r7,lr}
 2200              	.LCFI52:
 2201              	 .cfi_def_cfa_offset 8
 2202              	 .cfi_offset 7,-8
 2203              	 .cfi_offset 14,-4
 2204 0002 00AF     	 add r7,sp,#0
 2205              	.LCFI53:
 2206              	 .cfi_def_cfa_register 7
 483:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2207              	 .loc 3 483 0
 2208 0004 2F4B     	 ldr r3,.L70
 2209 0006 1822     	 mov r2,#24
 2210 0008 1A70     	 strb r2,[r3]
 484:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2211              	 .loc 3 484 0
 2212 000a 2F4B     	 ldr r3,.L70+4
 2213 000c 4C22     	 mov r2,#76
 2214 000e 1A70     	 strb r2,[r3]
 485:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2215              	 .loc 3 485 0
 2216 0010 2D4B     	 ldr r3,.L70+4
 2217 0012 4922     	 mov r2,#73
 2218 0014 5A70     	 strb r2,[r3,#1]
 486:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2219              	 .loc 3 486 0
 2220 0016 2C4B     	 ldr r3,.L70+4
 2221 0018 4E22     	 mov r2,#78
 2222 001a 9A70     	 strb r2,[r3,#2]
 487:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2223              	 .loc 3 487 0
 2224 001c 2B4B     	 ldr r3,.L70+8
 2225 001e 1A78     	 ldrb r2,[r3]
 2226 0020 294B     	 ldr r3,.L70+4
 2227 0022 DA70     	 strb r2,[r3,#3]
 488:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2228              	 .loc 3 488 0
 2229 0024 274B     	 ldr r3,.L70
 2230 0026 1A78     	 ldrb r2,[r3]
 2231 0028 274B     	 ldr r3,.L70+4
 2232 002a 1A71     	 strb r2,[r3,#4]
 489:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2233              	 .loc 3 489 0
 2234 002c 264B     	 ldr r3,.L70+4
 2235 002e 7022     	 mov r2,#112
 2236 0030 5A71     	 strb r2,[r3,#5]
 490:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2237              	 .loc 3 490 0
 2238 0032 254B     	 ldr r3,.L70+4
 2239 0034 0022     	 mov r2,#0
 2240 0036 9A71     	 strb r2,[r3,#6]
 491:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2241              	 .loc 3 491 0
 2242 0038 254B     	 ldr r3,.L70+12
 2243 003a 1A78     	 ldrb r2,[r3]
 2244 003c 224B     	 ldr r3,.L70+4
 2245 003e DA71     	 strb r2,[r3,#7]
 492:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2246              	 .loc 3 492 0
 2247 0040 234B     	 ldr r3,.L70+12
 2248 0042 5A78     	 ldrb r2,[r3,#1]
 2249 0044 204B     	 ldr r3,.L70+4
 2250 0046 1A72     	 strb r2,[r3,#8]
 493:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2251              	 .loc 3 493 0
 2252 0048 214B     	 ldr r3,.L70+12
 2253 004a 9A78     	 ldrb r2,[r3,#2]
 2254 004c 1E4B     	 ldr r3,.L70+4
 2255 004e 5A72     	 strb r2,[r3,#9]
 494:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2256              	 .loc 3 494 0
 2257 0050 1F4B     	 ldr r3,.L70+12
 2258 0052 DA78     	 ldrb r2,[r3,#3]
 2259 0054 1C4B     	 ldr r3,.L70+4
 2260 0056 9A72     	 strb r2,[r3,#10]
 495:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2261              	 .loc 3 495 0
 2262 0058 1D4B     	 ldr r3,.L70+12
 2263 005a 1A79     	 ldrb r2,[r3,#4]
 2264 005c 1A4B     	 ldr r3,.L70+4
 2265 005e DA72     	 strb r2,[r3,#11]
 496:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2266              	 .loc 3 496 0
 2267 0060 1B4B     	 ldr r3,.L70+12
 2268 0062 5A79     	 ldrb r2,[r3,#5]
 2269 0064 184B     	 ldr r3,.L70+4
 2270 0066 1A73     	 strb r2,[r3,#12]
 497:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2271              	 .loc 3 497 0
 2272 0068 194B     	 ldr r3,.L70+12
 2273 006a 9A79     	 ldrb r2,[r3,#6]
 2274 006c 164B     	 ldr r3,.L70+4
 2275 006e 5A73     	 strb r2,[r3,#13]
 498:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2276              	 .loc 3 498 0
 2277 0070 174B     	 ldr r3,.L70+12
 2278 0072 DA79     	 ldrb r2,[r3,#7]
 2279 0074 144B     	 ldr r3,.L70+4
 2280 0076 9A73     	 strb r2,[r3,#14]
 499:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2281              	 .loc 3 499 0
 2282 0078 154B     	 ldr r3,.L70+12
 2283 007a 1A7A     	 ldrb r2,[r3,#8]
 2284 007c 124B     	 ldr r3,.L70+4
 2285 007e DA73     	 strb r2,[r3,#15]
 500:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2286              	 .loc 3 500 0
 2287 0080 134B     	 ldr r3,.L70+12
 2288 0082 5A7A     	 ldrb r2,[r3,#9]
 2289 0084 104B     	 ldr r3,.L70+4
 2290 0086 1A74     	 strb r2,[r3,#16]
 501:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2291              	 .loc 3 501 0
 2292 0088 114B     	 ldr r3,.L70+12
 2293 008a 9A7A     	 ldrb r2,[r3,#10]
 2294 008c 0E4B     	 ldr r3,.L70+4
 2295 008e 5A74     	 strb r2,[r3,#17]
 502:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2296              	 .loc 3 502 0
 2297 0090 0F4B     	 ldr r3,.L70+12
 2298 0092 DA7A     	 ldrb r2,[r3,#11]
 2299 0094 0C4B     	 ldr r3,.L70+4
 2300 0096 9A74     	 strb r2,[r3,#18]
 503:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2301              	 .loc 3 503 0
 2302 0098 0D4B     	 ldr r3,.L70+12
 2303 009a 1A7B     	 ldrb r2,[r3,#12]
 2304 009c 0A4B     	 ldr r3,.L70+4
 2305 009e DA74     	 strb r2,[r3,#19]
 504:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2306              	 .loc 3 504 0
 2307 00a0 0B4B     	 ldr r3,.L70+12
 2308 00a2 5A7B     	 ldrb r2,[r3,#13]
 2309 00a4 084B     	 ldr r3,.L70+4
 2310 00a6 1A75     	 strb r2,[r3,#20]
 505:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2311              	 .loc 3 505 0
 2312 00a8 094B     	 ldr r3,.L70+12
 2313 00aa 9A7B     	 ldrb r2,[r3,#14]
 2314 00ac 064B     	 ldr r3,.L70+4
 2315 00ae 5A75     	 strb r2,[r3,#21]
 506:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2316              	 .loc 3 506 0
 2317 00b0 074B     	 ldr r3,.L70+12
 2318 00b2 DA7B     	 ldrb r2,[r3,#15]
 2319 00b4 044B     	 ldr r3,.L70+4
 2320 00b6 9A75     	 strb r2,[r3,#22]
 507:../samuel/samuel_io.c **** 
 508:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2321              	 .loc 3 508 0
 2322 00b8 034B     	 ldr r3,.L70+4
 2323 00ba FF22     	 mov r2,#255
 2324 00bc DA75     	 strb r2,[r3,#23]
 509:../samuel/samuel_io.c ****    }
 2325              	 .loc 3 509 0
 2326 00be BD46     	 mov sp,r7
 2327              	 
 2328 00c0 80BD     	 pop {r7,pc}
 2329              	.L71:
 2330 00c2 C046     	 .align 2
 2331              	.L70:
 2332 00c4 00000000 	 .word transmit_buf_size
 2333 00c8 00000000 	 .word new_data
 2334 00cc 00000000 	 .word node_id
 2335 00d0 00000000 	 .word ReadBuffer2
 2336              	 .cfi_endproc
 2337              	.LFE310:
 2339              	 .section .text.clearEpromBuffer,"ax",%progbits
 2340              	 .align 2
 2341              	 .global clearEpromBuffer
 2342              	 .code 16
 2343              	 .thumb_func
 2345              	clearEpromBuffer:
 2346              	.LFB311:
 510:../samuel/samuel_io.c **** 
 511:../samuel/samuel_io.c ****  //------------------------------------------------------
 512:../samuel/samuel_io.c **** 
 513:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 514:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 515:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 516:../samuel/samuel_io.c ****  {
 2347              	 .loc 3 516 0
 2348              	 .cfi_startproc
 2349 0000 80B5     	 push {r7,lr}
 2350              	.LCFI54:
 2351              	 .cfi_def_cfa_offset 8
 2352              	 .cfi_offset 7,-8
 2353              	 .cfi_offset 14,-4
 2354 0002 00AF     	 add r7,sp,#0
 2355              	.LCFI55:
 2356              	 .cfi_def_cfa_register 7
 517:../samuel/samuel_io.c **** 
 518:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 519:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2357              	 .loc 3 519 0
 2358 0004 1E4B     	 ldr r3,.L79
 2359 0006 0022     	 mov r2,#0
 2360 0008 1A70     	 strb r2,[r3]
 2361 000a 0BE0     	 b .L73
 2362              	.L74:
 520:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2363              	 .loc 3 520 0 discriminator 3
 2364 000c 1C4B     	 ldr r3,.L79
 2365 000e 1B78     	 ldrb r3,[r3]
 2366 0010 1A1C     	 mov r2,r3
 2367 0012 1C4B     	 ldr r3,.L79+4
 2368 0014 0021     	 mov r1,#0
 2369 0016 9954     	 strb r1,[r3,r2]
 519:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2370              	 .loc 3 519 0 discriminator 3
 2371 0018 194B     	 ldr r3,.L79
 2372 001a 1B78     	 ldrb r3,[r3]
 2373 001c 0133     	 add r3,r3,#1
 2374 001e DAB2     	 uxtb r2,r3
 2375 0020 174B     	 ldr r3,.L79
 2376 0022 1A70     	 strb r2,[r3]
 2377              	.L73:
 519:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2378              	 .loc 3 519 0 is_stmt 0 discriminator 1
 2379 0024 164B     	 ldr r3,.L79
 2380 0026 1B78     	 ldrb r3,[r3]
 2381 0028 0F2B     	 cmp r3,#15
 2382 002a EFD9     	 bls .L74
 521:../samuel/samuel_io.c **** 
 522:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 523:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2383              	 .loc 3 523 0 is_stmt 1
 2384 002c 144B     	 ldr r3,.L79
 2385 002e 0022     	 mov r2,#0
 2386 0030 1A70     	 strb r2,[r3]
 2387 0032 0BE0     	 b .L75
 2388              	.L76:
 524:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2389              	 .loc 3 524 0 discriminator 3
 2390 0034 124B     	 ldr r3,.L79
 2391 0036 1B78     	 ldrb r3,[r3]
 2392 0038 1A1C     	 mov r2,r3
 2393 003a 134B     	 ldr r3,.L79+8
 2394 003c 0021     	 mov r1,#0
 2395 003e 9954     	 strb r1,[r3,r2]
 523:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2396              	 .loc 3 523 0 discriminator 3
 2397 0040 0F4B     	 ldr r3,.L79
 2398 0042 1B78     	 ldrb r3,[r3]
 2399 0044 0133     	 add r3,r3,#1
 2400 0046 DAB2     	 uxtb r2,r3
 2401 0048 0D4B     	 ldr r3,.L79
 2402 004a 1A70     	 strb r2,[r3]
 2403              	.L75:
 523:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2404              	 .loc 3 523 0 is_stmt 0 discriminator 1
 2405 004c 0C4B     	 ldr r3,.L79
 2406 004e 1B78     	 ldrb r3,[r3]
 2407 0050 0F2B     	 cmp r3,#15
 2408 0052 EFD9     	 bls .L76
 525:../samuel/samuel_io.c **** 
 526:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 527:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2409              	 .loc 3 527 0 is_stmt 1
 2410 0054 0A4B     	 ldr r3,.L79
 2411 0056 0022     	 mov r2,#0
 2412 0058 1A70     	 strb r2,[r3]
 2413 005a 0BE0     	 b .L77
 2414              	.L78:
 528:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2415              	 .loc 3 528 0 discriminator 3
 2416 005c 084B     	 ldr r3,.L79
 2417 005e 1B78     	 ldrb r3,[r3]
 2418 0060 1A1C     	 mov r2,r3
 2419 0062 0A4B     	 ldr r3,.L79+12
 2420 0064 0021     	 mov r1,#0
 2421 0066 9954     	 strb r1,[r3,r2]
 527:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2422              	 .loc 3 527 0 discriminator 3
 2423 0068 054B     	 ldr r3,.L79
 2424 006a 1B78     	 ldrb r3,[r3]
 2425 006c 0133     	 add r3,r3,#1
 2426 006e DAB2     	 uxtb r2,r3
 2427 0070 034B     	 ldr r3,.L79
 2428 0072 1A70     	 strb r2,[r3]
 2429              	.L77:
 527:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2430              	 .loc 3 527 0 is_stmt 0 discriminator 1
 2431 0074 024B     	 ldr r3,.L79
 2432 0076 1B78     	 ldrb r3,[r3]
 2433 0078 1F2B     	 cmp r3,#31
 2434 007a EFD9     	 bls .L78
 529:../samuel/samuel_io.c ****  }
 2435              	 .loc 3 529 0 is_stmt 1
 2436 007c BD46     	 mov sp,r7
 2437              	 
 2438 007e 80BD     	 pop {r7,pc}
 2439              	.L80:
 2440              	 .align 2
 2441              	.L79:
 2442 0080 00000000 	 .word Index
 2443 0084 00000000 	 .word ReadBuffer1
 2444 0088 00000000 	 .word ReadBuffer2
 2445 008c 00000000 	 .word ReadBuffer3
 2446              	 .cfi_endproc
 2447              	.LFE311:
 2449              	 .section .text.fillEpromBuffer,"ax",%progbits
 2450              	 .align 2
 2451              	 .global fillEpromBuffer
 2452              	 .code 16
 2453              	 .thumb_func
 2455              	fillEpromBuffer:
 2456              	.LFB312:
 530:../samuel/samuel_io.c **** 
 531:../samuel/samuel_io.c ****  //---------------------------------
 532:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 533:../samuel/samuel_io.c ****  {
 2457              	 .loc 3 533 0
 2458              	 .cfi_startproc
 2459 0000 80B5     	 push {r7,lr}
 2460              	.LCFI56:
 2461              	 .cfi_def_cfa_offset 8
 2462              	 .cfi_offset 7,-8
 2463              	 .cfi_offset 14,-4
 2464 0002 00AF     	 add r7,sp,#0
 2465              	.LCFI57:
 2466              	 .cfi_def_cfa_register 7
 534:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 535:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2467              	 .loc 3 535 0
 2468 0004 0B4B     	 ldr r3,.L84
 2469 0006 0022     	 mov r2,#0
 2470 0008 1A70     	 strb r2,[r3]
 2471 000a 0CE0     	 b .L82
 2472              	.L83:
 536:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2473              	 .loc 3 536 0 discriminator 3
 2474 000c 094B     	 ldr r3,.L84
 2475 000e 1B78     	 ldrb r3,[r3]
 2476 0010 1A1C     	 mov r2,r3
 2477 0012 084B     	 ldr r3,.L84
 2478 0014 1978     	 ldrb r1,[r3]
 2479 0016 084B     	 ldr r3,.L84+4
 2480 0018 9954     	 strb r1,[r3,r2]
 535:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2481              	 .loc 3 535 0 discriminator 3
 2482 001a 064B     	 ldr r3,.L84
 2483 001c 1B78     	 ldrb r3,[r3]
 2484 001e 0133     	 add r3,r3,#1
 2485 0020 DAB2     	 uxtb r2,r3
 2486 0022 044B     	 ldr r3,.L84
 2487 0024 1A70     	 strb r2,[r3]
 2488              	.L82:
 535:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2489              	 .loc 3 535 0 is_stmt 0 discriminator 1
 2490 0026 034B     	 ldr r3,.L84
 2491 0028 1B78     	 ldrb r3,[r3]
 2492 002a 632B     	 cmp r3,#99
 2493 002c EED9     	 bls .L83
 537:../samuel/samuel_io.c ****  }
 2494              	 .loc 3 537 0 is_stmt 1
 2495 002e BD46     	 mov sp,r7
 2496              	 
 2497 0030 80BD     	 pop {r7,pc}
 2498              	.L85:
 2499 0032 C046     	 .align 2
 2500              	.L84:
 2501 0034 00000000 	 .word Index
 2502 0038 00000000 	 .word data_buffer
 2503              	 .cfi_endproc
 2504              	.LFE312:
 2506              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2507              	 .align 2
 2508              	 .global fill2EpromBuffer
 2509              	 .code 16
 2510              	 .thumb_func
 2512              	fill2EpromBuffer:
 2513              	.LFB313:
 538:../samuel/samuel_io.c **** 
 539:../samuel/samuel_io.c ****  //---------------------------------
 540:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 541:../samuel/samuel_io.c ****  {
 2514              	 .loc 3 541 0
 2515              	 .cfi_startproc
 2516 0000 80B5     	 push {r7,lr}
 2517              	.LCFI58:
 2518              	 .cfi_def_cfa_offset 8
 2519              	 .cfi_offset 7,-8
 2520              	 .cfi_offset 14,-4
 2521 0002 00AF     	 add r7,sp,#0
 2522              	.LCFI59:
 2523              	 .cfi_def_cfa_register 7
 542:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 543:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2524              	 .loc 3 543 0
 2525 0004 0C4B     	 ldr r3,.L89
 2526 0006 0022     	 mov r2,#0
 2527 0008 1A70     	 strb r2,[r3]
 2528 000a 0EE0     	 b .L87
 2529              	.L88:
 544:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2530              	 .loc 3 544 0 discriminator 3
 2531 000c 0A4B     	 ldr r3,.L89
 2532 000e 1B78     	 ldrb r3,[r3]
 2533 0010 1A1C     	 mov r2,r3
 2534 0012 094B     	 ldr r3,.L89
 2535 0014 1B78     	 ldrb r3,[r3]
 2536 0016 DB43     	 mvn r3,r3
 2537 0018 D9B2     	 uxtb r1,r3
 2538 001a 084B     	 ldr r3,.L89+4
 2539 001c 9954     	 strb r1,[r3,r2]
 543:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2540              	 .loc 3 543 0 discriminator 3
 2541 001e 064B     	 ldr r3,.L89
 2542 0020 1B78     	 ldrb r3,[r3]
 2543 0022 0133     	 add r3,r3,#1
 2544 0024 DAB2     	 uxtb r2,r3
 2545 0026 044B     	 ldr r3,.L89
 2546 0028 1A70     	 strb r2,[r3]
 2547              	.L87:
 543:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2548              	 .loc 3 543 0 is_stmt 0 discriminator 1
 2549 002a 034B     	 ldr r3,.L89
 2550 002c 1B78     	 ldrb r3,[r3]
 2551 002e 632B     	 cmp r3,#99
 2552 0030 ECD9     	 bls .L88
 545:../samuel/samuel_io.c ****  }
 2553              	 .loc 3 545 0 is_stmt 1
 2554 0032 BD46     	 mov sp,r7
 2555              	 
 2556 0034 80BD     	 pop {r7,pc}
 2557              	.L90:
 2558 0036 C046     	 .align 2
 2559              	.L89:
 2560 0038 00000000 	 .word Index
 2561 003c 00000000 	 .word data_buffer
 2562              	 .cfi_endproc
 2563              	.LFE313:
 2565              	 .section .text.readAllEEprom,"ax",%progbits
 2566              	 .align 2
 2567              	 .global readAllEEprom
 2568              	 .code 16
 2569              	 .thumb_func
 2571              	readAllEEprom:
 2572              	.LFB314:
 546:../samuel/samuel_io.c **** 
 547:../samuel/samuel_io.c **** 
 548:../samuel/samuel_io.c ****  //------------------------------------------------
 549:../samuel/samuel_io.c **** 
 550:../samuel/samuel_io.c **** 
 551:../samuel/samuel_io.c ****  //------------------------------------------------
 552:../samuel/samuel_io.c ****  int readAllEEprom(void)
 553:../samuel/samuel_io.c ****  {
 2573              	 .loc 3 553 0
 2574              	 .cfi_startproc
 2575 0000 80B5     	 push {r7,lr}
 2576              	.LCFI60:
 2577              	 .cfi_def_cfa_offset 8
 2578              	 .cfi_offset 7,-8
 2579              	 .cfi_offset 14,-4
 2580 0002 00AF     	 add r7,sp,#0
 2581              	.LCFI61:
 2582              	 .cfi_def_cfa_register 7
 554:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2583              	 .loc 3 554 0
 2584 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2585 0008 031C     	 mov r3,r0
 2586 000a 1A1C     	 mov r2,r3
 2587 000c 614B     	 ldr r3,.L97
 2588 000e 1A70     	 strb r2,[r3]
 555:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2589              	 .loc 3 555 0
 2590 0010 604B     	 ldr r3,.L97
 2591 0012 1B78     	 ldrb r3,[r3]
 2592 0014 032B     	 cmp r3,#3
 2593 0016 0AD1     	 bne .L92
 556:../samuel/samuel_io.c ****    {
 557:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2594              	 .loc 3 557 0
 2595 0018 5F4B     	 ldr r3,.L97+4
 2596 001a 0120     	 mov r0,#1
 2597 001c 0021     	 mov r1,#0
 2598 001e 1A1C     	 mov r2,r3
 2599 0020 1023     	 mov r3,#16
 2600 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2601 0026 031C     	 mov r3,r0
 2602 0028 1A1C     	 mov r2,r3
 2603 002a 5C4B     	 ldr r3,.L97+8
 2604 002c 1A70     	 strb r2,[r3]
 2605              	.L92:
 558:../samuel/samuel_io.c ****    }
 559:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2606              	 .loc 3 559 0
 2607 002e 5B4B     	 ldr r3,.L97+8
 2608 0030 1B78     	 ldrb r3,[r3]
 2609 0032 002B     	 cmp r3,#0
 2610 0034 14D1     	 bne .L93
 560:../samuel/samuel_io.c ****    {
 561:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2611              	 .loc 3 561 0
 2612 0036 584B     	 ldr r3,.L97+4
 2613 0038 5B78     	 ldrb r3,[r3,#1]
 2614 003a 9AB2     	 uxth r2,r3
 2615 003c 584B     	 ldr r3,.L97+12
 2616 003e 1A80     	 strh r2,[r3]
 562:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2617              	 .loc 3 562 0
 2618 0040 554B     	 ldr r3,.L97+4
 2619 0042 9B78     	 ldrb r3,[r3,#2]
 2620 0044 9AB2     	 uxth r2,r3
 2621 0046 574B     	 ldr r3,.L97+16
 2622 0048 1A80     	 strh r2,[r3]
 563:../samuel/samuel_io.c **** 
 564:../samuel/samuel_io.c **** 
 565:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2623              	 .loc 3 565 0
 2624 004a 574B     	 ldr r3,.L97+20
 2625 004c 0220     	 mov r0,#2
 2626 004e 0021     	 mov r1,#0
 2627 0050 1A1C     	 mov r2,r3
 2628 0052 1023     	 mov r3,#16
 2629 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2630 0058 031C     	 mov r3,r0
 2631 005a 1A1C     	 mov r2,r3
 2632 005c 4F4B     	 ldr r3,.L97+8
 2633 005e 1A70     	 strb r2,[r3]
 2634              	.L93:
 566:../samuel/samuel_io.c ****    }
 567:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2635              	 .loc 3 567 0
 2636 0060 4E4B     	 ldr r3,.L97+8
 2637 0062 1B78     	 ldrb r3,[r3]
 2638 0064 002B     	 cmp r3,#0
 2639 0066 1ED1     	 bne .L94
 568:../samuel/samuel_io.c ****    {
 569:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2640              	 .loc 3 569 0
 2641 0068 4F4B     	 ldr r3,.L97+20
 2642 006a 5A78     	 ldrb r2,[r3,#1]
 2643 006c 4F4B     	 ldr r3,.L97+24
 2644 006e 1A70     	 strb r2,[r3]
 570:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2645              	 .loc 3 570 0
 2646 0070 4D4B     	 ldr r3,.L97+20
 2647 0072 9A78     	 ldrb r2,[r3,#2]
 2648 0074 4E4B     	 ldr r3,.L97+28
 2649 0076 1A70     	 strb r2,[r3]
 571:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2650              	 .loc 3 571 0
 2651 0078 4B4B     	 ldr r3,.L97+20
 2652 007a DB78     	 ldrb r3,[r3,#3]
 2653 007c 9BB2     	 uxth r3,r3
 2654 007e 1B02     	 lsl r3,r3,#8
 2655 0080 9AB2     	 uxth r2,r3
 2656 0082 494B     	 ldr r3,.L97+20
 2657 0084 1B79     	 ldrb r3,[r3,#4]
 2658 0086 9BB2     	 uxth r3,r3
 2659 0088 D318     	 add r3,r2,r3
 2660 008a 9AB2     	 uxth r2,r3
 2661 008c 494B     	 ldr r3,.L97+32
 2662 008e 1A80     	 strh r2,[r3]
 572:../samuel/samuel_io.c **** 
 573:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2663              	 .loc 3 573 0
 2664 0090 494B     	 ldr r3,.L97+36
 2665 0092 0520     	 mov r0,#5
 2666 0094 0021     	 mov r1,#0
 2667 0096 1A1C     	 mov r2,r3
 2668 0098 2023     	 mov r3,#32
 2669 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2670 009e 031C     	 mov r3,r0
 2671 00a0 1A1C     	 mov r2,r3
 2672 00a2 3E4B     	 ldr r3,.L97+8
 2673 00a4 1A70     	 strb r2,[r3]
 2674              	.L94:
 574:../samuel/samuel_io.c ****    }
 575:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2675              	 .loc 3 575 0
 2676 00a6 3D4B     	 ldr r3,.L97+8
 2677 00a8 1B78     	 ldrb r3,[r3]
 2678 00aa 002B     	 cmp r3,#0
 2679 00ac 67D1     	 bne .L95
 576:../samuel/samuel_io.c ****    {
 577:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2680              	 .loc 3 577 0
 2681 00ae 424B     	 ldr r3,.L97+36
 2682 00b0 5A78     	 ldrb r2,[r3,#1]
 2683 00b2 424B     	 ldr r3,.L97+40
 2684 00b4 1A70     	 strb r2,[r3]
 578:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2685              	 .loc 3 578 0
 2686 00b6 404B     	 ldr r3,.L97+36
 2687 00b8 9A78     	 ldrb r2,[r3,#2]
 2688 00ba 414B     	 ldr r3,.L97+44
 2689 00bc 1A70     	 strb r2,[r3]
 579:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2690              	 .loc 3 579 0
 2691 00be 3E4B     	 ldr r3,.L97+36
 2692 00c0 DB78     	 ldrb r3,[r3,#3]
 2693 00c2 9BB2     	 uxth r3,r3
 2694 00c4 1B02     	 lsl r3,r3,#8
 2695 00c6 9AB2     	 uxth r2,r3
 2696 00c8 3B4B     	 ldr r3,.L97+36
 2697 00ca 1B79     	 ldrb r3,[r3,#4]
 2698 00cc 9BB2     	 uxth r3,r3
 2699 00ce D318     	 add r3,r2,r3
 2700 00d0 9AB2     	 uxth r2,r3
 2701 00d2 3C4B     	 ldr r3,.L97+48
 2702 00d4 1A80     	 strh r2,[r3]
 580:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2703              	 .loc 3 580 0
 2704 00d6 384B     	 ldr r3,.L97+36
 2705 00d8 5B79     	 ldrb r3,[r3,#5]
 2706 00da 9BB2     	 uxth r3,r3
 2707 00dc 1B02     	 lsl r3,r3,#8
 2708 00de 9AB2     	 uxth r2,r3
 2709 00e0 354B     	 ldr r3,.L97+36
 2710 00e2 9B79     	 ldrb r3,[r3,#6]
 2711 00e4 9BB2     	 uxth r3,r3
 2712 00e6 D318     	 add r3,r2,r3
 2713 00e8 9AB2     	 uxth r2,r3
 2714 00ea 374B     	 ldr r3,.L97+52
 2715 00ec 1A80     	 strh r2,[r3]
 581:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2716              	 .loc 3 581 0
 2717 00ee 324B     	 ldr r3,.L97+36
 2718 00f0 DB79     	 ldrb r3,[r3,#7]
 2719 00f2 9BB2     	 uxth r3,r3
 2720 00f4 1B02     	 lsl r3,r3,#8
 2721 00f6 9AB2     	 uxth r2,r3
 2722 00f8 2F4B     	 ldr r3,.L97+36
 2723 00fa 1B7A     	 ldrb r3,[r3,#8]
 2724 00fc 9BB2     	 uxth r3,r3
 2725 00fe D318     	 add r3,r2,r3
 2726 0100 9AB2     	 uxth r2,r3
 2727 0102 324B     	 ldr r3,.L97+56
 2728 0104 1A80     	 strh r2,[r3]
 582:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2729              	 .loc 3 582 0
 2730 0106 2C4B     	 ldr r3,.L97+36
 2731 0108 5B7A     	 ldrb r3,[r3,#9]
 2732 010a 9BB2     	 uxth r3,r3
 2733 010c 1B02     	 lsl r3,r3,#8
 2734 010e 9AB2     	 uxth r2,r3
 2735 0110 294B     	 ldr r3,.L97+36
 2736 0112 9B7A     	 ldrb r3,[r3,#10]
 2737 0114 9BB2     	 uxth r3,r3
 2738 0116 D318     	 add r3,r2,r3
 2739 0118 9AB2     	 uxth r2,r3
 2740 011a 2D4B     	 ldr r3,.L97+60
 2741 011c 1A80     	 strh r2,[r3]
 583:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2742              	 .loc 3 583 0
 2743 011e 264B     	 ldr r3,.L97+36
 2744 0120 DB7A     	 ldrb r3,[r3,#11]
 2745 0122 9BB2     	 uxth r3,r3
 2746 0124 1B02     	 lsl r3,r3,#8
 2747 0126 9AB2     	 uxth r2,r3
 2748 0128 234B     	 ldr r3,.L97+36
 2749 012a 1B7B     	 ldrb r3,[r3,#12]
 2750 012c 9BB2     	 uxth r3,r3
 2751 012e D318     	 add r3,r2,r3
 2752 0130 9AB2     	 uxth r2,r3
 2753 0132 284B     	 ldr r3,.L97+64
 2754 0134 1A80     	 strh r2,[r3]
 584:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2755              	 .loc 3 584 0
 2756 0136 204B     	 ldr r3,.L97+36
 2757 0138 5B7B     	 ldrb r3,[r3,#13]
 2758 013a 9BB2     	 uxth r3,r3
 2759 013c 1B02     	 lsl r3,r3,#8
 2760 013e 9AB2     	 uxth r2,r3
 2761 0140 1D4B     	 ldr r3,.L97+36
 2762 0142 9B7B     	 ldrb r3,[r3,#14]
 2763 0144 9BB2     	 uxth r3,r3
 2764 0146 D318     	 add r3,r2,r3
 2765 0148 9AB2     	 uxth r2,r3
 2766 014a 234B     	 ldr r3,.L97+68
 2767 014c 1A80     	 strh r2,[r3]
 585:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 2768              	 .loc 3 585 0
 2769 014e 1A4B     	 ldr r3,.L97+36
 2770 0150 DB7B     	 ldrb r3,[r3,#15]
 2771 0152 9BB2     	 uxth r3,r3
 2772 0154 1B02     	 lsl r3,r3,#8
 2773 0156 9AB2     	 uxth r2,r3
 2774 0158 174B     	 ldr r3,.L97+36
 2775 015a 1B7C     	 ldrb r3,[r3,#16]
 2776 015c 9BB2     	 uxth r3,r3
 2777 015e D318     	 add r3,r2,r3
 2778 0160 9AB2     	 uxth r2,r3
 2779 0162 1E4B     	 ldr r3,.L97+72
 2780 0164 1A80     	 strh r2,[r3]
 586:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 2781              	 .loc 3 586 0
 2782 0166 144B     	 ldr r3,.L97+36
 2783 0168 5B7C     	 ldrb r3,[r3,#17]
 2784 016a 9BB2     	 uxth r3,r3
 2785 016c 1B02     	 lsl r3,r3,#8
 2786 016e 9AB2     	 uxth r2,r3
 2787 0170 114B     	 ldr r3,.L97+36
 2788 0172 9B7C     	 ldrb r3,[r3,#18]
 2789 0174 9BB2     	 uxth r3,r3
 2790 0176 D318     	 add r3,r2,r3
 2791 0178 9AB2     	 uxth r2,r3
 2792 017a 194B     	 ldr r3,.L97+76
 2793 017c 1A80     	 strh r2,[r3]
 2794              	.L95:
 587:../samuel/samuel_io.c **** 
 588:../samuel/samuel_io.c ****    }
 589:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 2795              	 .loc 3 589 0
 2796 017e 054B     	 ldr r3,.L97
 2797 0180 1B78     	 ldrb r3,[r3]
 2798 0182 1A1C     	 mov r2,r3
 2799 0184 054B     	 ldr r3,.L97+8
 2800 0186 1B78     	 ldrb r3,[r3]
 2801 0188 1B01     	 lsl r3,r3,#4
 2802 018a D318     	 add r3,r2,r3
 590:../samuel/samuel_io.c ****  }
 2803              	 .loc 3 590 0
 2804 018c 181C     	 mov r0,r3
 2805 018e BD46     	 mov sp,r7
 2806              	 
 2807 0190 80BD     	 pop {r7,pc}
 2808              	.L98:
 2809 0192 C046     	 .align 2
 2810              	.L97:
 2811 0194 00000000 	 .word EEprom_status
 2812 0198 00000000 	 .word ReadBuffer1
 2813 019c 00000000 	 .word oper_status
 2814 01a0 00000000 	 .word Ser_NrH
 2815 01a4 00000000 	 .word Ser_NrL
 2816 01a8 00000000 	 .word ReadBuffer2
 2817 01ac 00000000 	 .word node_id_alt
 2818 01b0 00000000 	 .word node_id
 2819 01b4 00000000 	 .word node_id_16bit
 2820 01b8 00000000 	 .word ReadBuffer3
 2821 01bc 00000000 	 .word RegOnOff
 2822 01c0 00000000 	 .word RegOnOff2
 2823 01c4 00000000 	 .word dimAkt_Ww
 2824 01c8 00000000 	 .word dimAkt_Cw
 2825 01cc 00000000 	 .word dimOff_Ww
 2826 01d0 00000000 	 .word dimOff_Cw
 2827 01d4 00000000 	 .word dimNorm1_Ww
 2828 01d8 00000000 	 .word dimNorm1_Cw
 2829 01dc 00000000 	 .word dimNorm2_Ww
 2830 01e0 00000000 	 .word dimNorm2_Cw
 2831              	 .cfi_endproc
 2832              	.LFE314:
 2834              	 .section .text.readSerNrEEprom,"ax",%progbits
 2835              	 .align 2
 2836              	 .global readSerNrEEprom
 2837              	 .code 16
 2838              	 .thumb_func
 2840              	readSerNrEEprom:
 2841              	.LFB315:
 591:../samuel/samuel_io.c ****  //------------------------------------------------
 592:../samuel/samuel_io.c **** 
 593:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 594:../samuel/samuel_io.c ****  {
 2842              	 .loc 3 594 0
 2843              	 .cfi_startproc
 2844 0000 80B5     	 push {r7,lr}
 2845              	.LCFI62:
 2846              	 .cfi_def_cfa_offset 8
 2847              	 .cfi_offset 7,-8
 2848              	 .cfi_offset 14,-4
 2849 0002 00AF     	 add r7,sp,#0
 2850              	.LCFI63:
 2851              	 .cfi_def_cfa_register 7
 595:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2852              	 .loc 3 595 0
 2853 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2854 0008 031C     	 mov r3,r0
 2855 000a 1A1C     	 mov r2,r3
 2856 000c 0D4B     	 ldr r3,.L102
 2857 000e 1A70     	 strb r2,[r3]
 596:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2858              	 .loc 3 596 0
 2859 0010 0C4B     	 ldr r3,.L102
 2860 0012 1B78     	 ldrb r3,[r3]
 2861 0014 032B     	 cmp r3,#3
 2862 0016 0AD1     	 bne .L100
 597:../samuel/samuel_io.c **** 	 {
 598:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2863              	 .loc 3 598 0
 2864 0018 0B4B     	 ldr r3,.L102+4
 2865 001a 0120     	 mov r0,#1
 2866 001c 0021     	 mov r1,#0
 2867 001e 1A1C     	 mov r2,r3
 2868 0020 1023     	 mov r3,#16
 2869 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2870 0026 031C     	 mov r3,r0
 2871 0028 1A1C     	 mov r2,r3
 2872 002a 084B     	 ldr r3,.L102+8
 2873 002c 1A70     	 strb r2,[r3]
 2874              	.L100:
 599:../samuel/samuel_io.c ****      }
 600:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 2875              	 .loc 3 600 0
 2876 002e 054B     	 ldr r3,.L102
 2877 0030 1B78     	 ldrb r3,[r3]
 2878 0032 1A1C     	 mov r2,r3
 2879 0034 054B     	 ldr r3,.L102+8
 2880 0036 1B78     	 ldrb r3,[r3]
 2881 0038 1B01     	 lsl r3,r3,#4
 2882 003a D318     	 add r3,r2,r3
 601:../samuel/samuel_io.c ****  }
 2883              	 .loc 3 601 0
 2884 003c 181C     	 mov r0,r3
 2885 003e BD46     	 mov sp,r7
 2886              	 
 2887 0040 80BD     	 pop {r7,pc}
 2888              	.L103:
 2889 0042 C046     	 .align 2
 2890              	.L102:
 2891 0044 00000000 	 .word EEprom_status
 2892 0048 00000000 	 .word ReadBuffer1
 2893 004c 00000000 	 .word oper_status
 2894              	 .cfi_endproc
 2895              	.LFE315:
 2897              	 .section .text.readNodeIdEEprom,"ax",%progbits
 2898              	 .align 2
 2899              	 .global readNodeIdEEprom
 2900              	 .code 16
 2901              	 .thumb_func
 2903              	readNodeIdEEprom:
 2904              	.LFB316:
 602:../samuel/samuel_io.c ****  //------------------------------------------------
 603:../samuel/samuel_io.c **** 
 604:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 605:../samuel/samuel_io.c ****  {
 2905              	 .loc 3 605 0
 2906              	 .cfi_startproc
 2907 0000 80B5     	 push {r7,lr}
 2908              	.LCFI64:
 2909              	 .cfi_def_cfa_offset 8
 2910              	 .cfi_offset 7,-8
 2911              	 .cfi_offset 14,-4
 2912 0002 00AF     	 add r7,sp,#0
 2913              	.LCFI65:
 2914              	 .cfi_def_cfa_register 7
 606:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2915              	 .loc 3 606 0
 2916 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2917 0008 031C     	 mov r3,r0
 2918 000a 1A1C     	 mov r2,r3
 2919 000c 0D4B     	 ldr r3,.L107
 2920 000e 1A70     	 strb r2,[r3]
 607:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2921              	 .loc 3 607 0
 2922 0010 0C4B     	 ldr r3,.L107
 2923 0012 1B78     	 ldrb r3,[r3]
 2924 0014 032B     	 cmp r3,#3
 2925 0016 0AD1     	 bne .L105
 608:../samuel/samuel_io.c **** 	 {
 609:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2926              	 .loc 3 609 0
 2927 0018 0B4B     	 ldr r3,.L107+4
 2928 001a 0220     	 mov r0,#2
 2929 001c 0021     	 mov r1,#0
 2930 001e 1A1C     	 mov r2,r3
 2931 0020 1023     	 mov r3,#16
 2932 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2933 0026 031C     	 mov r3,r0
 2934 0028 1A1C     	 mov r2,r3
 2935 002a 084B     	 ldr r3,.L107+8
 2936 002c 1A70     	 strb r2,[r3]
 2937              	.L105:
 610:../samuel/samuel_io.c ****      }
 611:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2938              	 .loc 3 611 0
 2939 002e 054B     	 ldr r3,.L107
 2940 0030 1B78     	 ldrb r3,[r3]
 2941 0032 1A1C     	 mov r2,r3
 2942 0034 054B     	 ldr r3,.L107+8
 2943 0036 1B78     	 ldrb r3,[r3]
 2944 0038 1B01     	 lsl r3,r3,#4
 2945 003a D318     	 add r3,r2,r3
 612:../samuel/samuel_io.c ****  }
 2946              	 .loc 3 612 0
 2947 003c 181C     	 mov r0,r3
 2948 003e BD46     	 mov sp,r7
 2949              	 
 2950 0040 80BD     	 pop {r7,pc}
 2951              	.L108:
 2952 0042 C046     	 .align 2
 2953              	.L107:
 2954 0044 00000000 	 .word EEprom_status
 2955 0048 00000000 	 .word ReadBuffer2
 2956 004c 00000000 	 .word oper_status
 2957              	 .cfi_endproc
 2958              	.LFE316:
 2960              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 2961              	 .align 2
 2962              	 .global read_akt_light_EEprom
 2963              	 .code 16
 2964              	 .thumb_func
 2966              	read_akt_light_EEprom:
 2967              	.LFB317:
 613:../samuel/samuel_io.c **** 
 614:../samuel/samuel_io.c ****  //------------------------------------------------
 615:../samuel/samuel_io.c **** 
 616:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 617:../samuel/samuel_io.c ****  {
 2968              	 .loc 3 617 0
 2969              	 .cfi_startproc
 2970 0000 80B5     	 push {r7,lr}
 2971              	.LCFI66:
 2972              	 .cfi_def_cfa_offset 8
 2973              	 .cfi_offset 7,-8
 2974              	 .cfi_offset 14,-4
 2975 0002 00AF     	 add r7,sp,#0
 2976              	.LCFI67:
 2977              	 .cfi_def_cfa_register 7
 618:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2978              	 .loc 3 618 0
 2979 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2980 0008 031C     	 mov r3,r0
 2981 000a 1A1C     	 mov r2,r3
 2982 000c 0D4B     	 ldr r3,.L112
 2983 000e 1A70     	 strb r2,[r3]
 619:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2984              	 .loc 3 619 0
 2985 0010 0C4B     	 ldr r3,.L112
 2986 0012 1B78     	 ldrb r3,[r3]
 2987 0014 032B     	 cmp r3,#3
 2988 0016 0AD1     	 bne .L110
 620:../samuel/samuel_io.c **** 	 {
 621:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 2989              	 .loc 3 621 0
 2990 0018 0B4B     	 ldr r3,.L112+4
 2991 001a 0420     	 mov r0,#4
 2992 001c 0021     	 mov r1,#0
 2993 001e 1A1C     	 mov r2,r3
 2994 0020 1023     	 mov r3,#16
 2995 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2996 0026 031C     	 mov r3,r0
 2997 0028 1A1C     	 mov r2,r3
 2998 002a 084B     	 ldr r3,.L112+8
 2999 002c 1A70     	 strb r2,[r3]
 3000              	.L110:
 622:../samuel/samuel_io.c ****      }
 623:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3001              	 .loc 3 623 0
 3002 002e 054B     	 ldr r3,.L112
 3003 0030 1B78     	 ldrb r3,[r3]
 3004 0032 1A1C     	 mov r2,r3
 3005 0034 054B     	 ldr r3,.L112+8
 3006 0036 1B78     	 ldrb r3,[r3]
 3007 0038 1B01     	 lsl r3,r3,#4
 3008 003a D318     	 add r3,r2,r3
 624:../samuel/samuel_io.c ****  }
 3009              	 .loc 3 624 0
 3010 003c 181C     	 mov r0,r3
 3011 003e BD46     	 mov sp,r7
 3012              	 
 3013 0040 80BD     	 pop {r7,pc}
 3014              	.L113:
 3015 0042 C046     	 .align 2
 3016              	.L112:
 3017 0044 00000000 	 .word EEprom_status
 3018 0048 00000000 	 .word ReadBuffer2
 3019 004c 00000000 	 .word oper_status
 3020              	 .cfi_endproc
 3021              	.LFE317:
 3023              	 .section .text.read_off_light_EEprom,"ax",%progbits
 3024              	 .align 2
 3025              	 .global read_off_light_EEprom
 3026              	 .code 16
 3027              	 .thumb_func
 3029              	read_off_light_EEprom:
 3030              	.LFB318:
 625:../samuel/samuel_io.c ****  //------------------------------------------------
 626:../samuel/samuel_io.c **** 
 627:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 628:../samuel/samuel_io.c ****  {
 3031              	 .loc 3 628 0
 3032              	 .cfi_startproc
 3033 0000 80B5     	 push {r7,lr}
 3034              	.LCFI68:
 3035              	 .cfi_def_cfa_offset 8
 3036              	 .cfi_offset 7,-8
 3037              	 .cfi_offset 14,-4
 3038 0002 00AF     	 add r7,sp,#0
 3039              	.LCFI69:
 3040              	 .cfi_def_cfa_register 7
 629:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3041              	 .loc 3 629 0
 3042 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3043 0008 031C     	 mov r3,r0
 3044 000a 1A1C     	 mov r2,r3
 3045 000c 0D4B     	 ldr r3,.L117
 3046 000e 1A70     	 strb r2,[r3]
 630:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3047              	 .loc 3 630 0
 3048 0010 0C4B     	 ldr r3,.L117
 3049 0012 1B78     	 ldrb r3,[r3]
 3050 0014 032B     	 cmp r3,#3
 3051 0016 0AD1     	 bne .L115
 631:../samuel/samuel_io.c **** 	 {
 632:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 3052              	 .loc 3 632 0
 3053 0018 0B4B     	 ldr r3,.L117+4
 3054 001a 0520     	 mov r0,#5
 3055 001c 0021     	 mov r1,#0
 3056 001e 1A1C     	 mov r2,r3
 3057 0020 1023     	 mov r3,#16
 3058 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3059 0026 031C     	 mov r3,r0
 3060 0028 1A1C     	 mov r2,r3
 3061 002a 084B     	 ldr r3,.L117+8
 3062 002c 1A70     	 strb r2,[r3]
 3063              	.L115:
 633:../samuel/samuel_io.c ****      }
 634:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3064              	 .loc 3 634 0
 3065 002e 054B     	 ldr r3,.L117
 3066 0030 1B78     	 ldrb r3,[r3]
 3067 0032 1A1C     	 mov r2,r3
 3068 0034 054B     	 ldr r3,.L117+8
 3069 0036 1B78     	 ldrb r3,[r3]
 3070 0038 1B01     	 lsl r3,r3,#4
 3071 003a D318     	 add r3,r2,r3
 635:../samuel/samuel_io.c ****  }
 3072              	 .loc 3 635 0
 3073 003c 181C     	 mov r0,r3
 3074 003e BD46     	 mov sp,r7
 3075              	 
 3076 0040 80BD     	 pop {r7,pc}
 3077              	.L118:
 3078 0042 C046     	 .align 2
 3079              	.L117:
 3080 0044 00000000 	 .word EEprom_status
 3081 0048 00000000 	 .word ReadBuffer2
 3082 004c 00000000 	 .word oper_status
 3083              	 .cfi_endproc
 3084              	.LFE318:
 3086              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 3087              	 .align 2
 3088              	 .global writeSernr_B1_EEprom
 3089              	 .code 16
 3090              	 .thumb_func
 3092              	writeSernr_B1_EEprom:
 3093              	.LFB319:
 636:../samuel/samuel_io.c **** 
 637:../samuel/samuel_io.c ****  //------------------------------------------------
 638:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 639:../samuel/samuel_io.c ****  {
 3094              	 .loc 3 639 0
 3095              	 .cfi_startproc
 3096 0000 80B5     	 push {r7,lr}
 3097              	.LCFI70:
 3098              	 .cfi_def_cfa_offset 8
 3099              	 .cfi_offset 7,-8
 3100              	 .cfi_offset 14,-4
 3101 0002 82B0     	 sub sp,sp,#8
 3102              	.LCFI71:
 3103              	 .cfi_def_cfa_offset 16
 3104 0004 00AF     	 add r7,sp,#0
 3105              	.LCFI72:
 3106              	 .cfi_def_cfa_register 7
 640:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3107              	 .loc 3 640 0
 3108 0006 8023     	 mov r3,#128
 3109 0008 7B60     	 str r3,[r7,#4]
 641:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3110              	 .loc 3 641 0
 3111 000a 144B     	 ldr r3,.L123
 3112 000c 1A88     	 ldrh r2,[r3]
 3113 000e BA23     	 mov r3,#186
 3114 0010 1B01     	 lsl r3,r3,#4
 3115 0012 9A42     	 cmp r2,r3
 3116 0014 14D9     	 bls .L120
 642:../samuel/samuel_io.c ****   {
 643:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3117              	 .loc 3 643 0
 3118 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3119 001a 031C     	 mov r3,r0
 3120 001c 1A1C     	 mov r2,r3
 3121 001e 104B     	 ldr r3,.L123+4
 3122 0020 1A70     	 strb r2,[r3]
 644:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3123              	 .loc 3 644 0
 3124 0022 0F4B     	 ldr r3,.L123+4
 3125 0024 1B78     	 ldrb r3,[r3]
 3126 0026 032B     	 cmp r3,#3
 3127 0028 08D1     	 bne .L121
 645:../samuel/samuel_io.c ****     {
 646:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3128              	 .loc 3 646 0
 3129 002a 0E4B     	 ldr r3,.L123+8
 3130 002c 0120     	 mov r0,#1
 3131 002e 191C     	 mov r1,r3
 3132 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3133 0034 031C     	 mov r3,r0
 3134 0036 1A1C     	 mov r2,r3
 3135 0038 0B4B     	 ldr r3,.L123+12
 3136 003a 1A70     	 strb r2,[r3]
 3137              	.L121:
 647:../samuel/samuel_io.c ****     }
 648:../samuel/samuel_io.c **** 	 a = 0;
 3138              	 .loc 3 648 0
 3139 003c 0023     	 mov r3,#0
 3140 003e 7B60     	 str r3,[r7,#4]
 3141              	.L120:
 649:../samuel/samuel_io.c ****   }
 650:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3142              	 .loc 3 650 0
 3143 0040 074B     	 ldr r3,.L123+4
 3144 0042 1B78     	 ldrb r3,[r3]
 3145 0044 1A1C     	 mov r2,r3
 3146 0046 084B     	 ldr r3,.L123+12
 3147 0048 1B78     	 ldrb r3,[r3]
 3148 004a 1B01     	 lsl r3,r3,#4
 3149 004c D218     	 add r2,r2,r3
 3150 004e 7B68     	 ldr r3,[r7,#4]
 3151 0050 D318     	 add r3,r2,r3
 651:../samuel/samuel_io.c ****  }
 3152              	 .loc 3 651 0
 3153 0052 181C     	 mov r0,r3
 3154 0054 BD46     	 mov sp,r7
 3155 0056 02B0     	 add sp,sp,#8
 3156              	 
 3157 0058 80BD     	 pop {r7,pc}
 3158              	.L124:
 3159 005a C046     	 .align 2
 3160              	.L123:
 3161 005c 00000000 	 .word resultB
 3162 0060 00000000 	 .word EEprom_status
 3163 0064 00000000 	 .word ReadBuffer1
 3164 0068 00000000 	 .word oper_status
 3165              	 .cfi_endproc
 3166              	.LFE319:
 3168              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3169              	 .align 2
 3170              	 .global writeNodeid_B2_EEprom
 3171              	 .code 16
 3172              	 .thumb_func
 3174              	writeNodeid_B2_EEprom:
 3175              	.LFB320:
 652:../samuel/samuel_io.c ****  //------------------------------------------------
 653:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 654:../samuel/samuel_io.c ****  {
 3176              	 .loc 3 654 0
 3177              	 .cfi_startproc
 3178 0000 80B5     	 push {r7,lr}
 3179              	.LCFI73:
 3180              	 .cfi_def_cfa_offset 8
 3181              	 .cfi_offset 7,-8
 3182              	 .cfi_offset 14,-4
 3183 0002 82B0     	 sub sp,sp,#8
 3184              	.LCFI74:
 3185              	 .cfi_def_cfa_offset 16
 3186 0004 00AF     	 add r7,sp,#0
 3187              	.LCFI75:
 3188              	 .cfi_def_cfa_register 7
 655:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3189              	 .loc 3 655 0
 3190 0006 8023     	 mov r3,#128
 3191 0008 7B60     	 str r3,[r7,#4]
 656:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3192              	 .loc 3 656 0
 3193 000a 144B     	 ldr r3,.L129
 3194 000c 1A88     	 ldrh r2,[r3]
 3195 000e BA23     	 mov r3,#186
 3196 0010 1B01     	 lsl r3,r3,#4
 3197 0012 9A42     	 cmp r2,r3
 3198 0014 14D9     	 bls .L126
 657:../samuel/samuel_io.c ****     {
 658:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3199              	 .loc 3 658 0
 3200 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3201 001a 031C     	 mov r3,r0
 3202 001c 1A1C     	 mov r2,r3
 3203 001e 104B     	 ldr r3,.L129+4
 3204 0020 1A70     	 strb r2,[r3]
 659:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3205              	 .loc 3 659 0
 3206 0022 0F4B     	 ldr r3,.L129+4
 3207 0024 1B78     	 ldrb r3,[r3]
 3208 0026 032B     	 cmp r3,#3
 3209 0028 08D1     	 bne .L127
 660:../samuel/samuel_io.c ****       {
 661:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3210              	 .loc 3 661 0
 3211 002a 0E4B     	 ldr r3,.L129+8
 3212 002c 0220     	 mov r0,#2
 3213 002e 191C     	 mov r1,r3
 3214 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3215 0034 031C     	 mov r3,r0
 3216 0036 1A1C     	 mov r2,r3
 3217 0038 0B4B     	 ldr r3,.L129+12
 3218 003a 1A70     	 strb r2,[r3]
 3219              	.L127:
 662:../samuel/samuel_io.c ****       }
 663:../samuel/samuel_io.c **** 	 a = 0;
 3220              	 .loc 3 663 0
 3221 003c 0023     	 mov r3,#0
 3222 003e 7B60     	 str r3,[r7,#4]
 3223              	.L126:
 664:../samuel/samuel_io.c ****     }
 665:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3224              	 .loc 3 665 0
 3225 0040 074B     	 ldr r3,.L129+4
 3226 0042 1B78     	 ldrb r3,[r3]
 3227 0044 1A1C     	 mov r2,r3
 3228 0046 084B     	 ldr r3,.L129+12
 3229 0048 1B78     	 ldrb r3,[r3]
 3230 004a 1B01     	 lsl r3,r3,#4
 3231 004c D218     	 add r2,r2,r3
 3232 004e 7B68     	 ldr r3,[r7,#4]
 3233 0050 D318     	 add r3,r2,r3
 666:../samuel/samuel_io.c ****  }
 3234              	 .loc 3 666 0
 3235 0052 181C     	 mov r0,r3
 3236 0054 BD46     	 mov sp,r7
 3237 0056 02B0     	 add sp,sp,#8
 3238              	 
 3239 0058 80BD     	 pop {r7,pc}
 3240              	.L130:
 3241 005a C046     	 .align 2
 3242              	.L129:
 3243 005c 00000000 	 .word resultB
 3244 0060 00000000 	 .word EEprom_status
 3245 0064 00000000 	 .word ReadBuffer2
 3246 0068 00000000 	 .word oper_status
 3247              	 .cfi_endproc
 3248              	.LFE320:
 3250              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3251              	 .align 2
 3252              	 .global writeLamp_data_B3_EEprom
 3253              	 .code 16
 3254              	 .thumb_func
 3256              	writeLamp_data_B3_EEprom:
 3257              	.LFB321:
 667:../samuel/samuel_io.c ****  //----------------------------
 668:../samuel/samuel_io.c **** 
 669:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 670:../samuel/samuel_io.c ****  {
 3258              	 .loc 3 670 0
 3259              	 .cfi_startproc
 3260 0000 80B5     	 push {r7,lr}
 3261              	.LCFI76:
 3262              	 .cfi_def_cfa_offset 8
 3263              	 .cfi_offset 7,-8
 3264              	 .cfi_offset 14,-4
 3265 0002 82B0     	 sub sp,sp,#8
 3266              	.LCFI77:
 3267              	 .cfi_def_cfa_offset 16
 3268 0004 00AF     	 add r7,sp,#0
 3269              	.LCFI78:
 3270              	 .cfi_def_cfa_register 7
 671:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3271              	 .loc 3 671 0
 3272 0006 8023     	 mov r3,#128
 3273 0008 7B60     	 str r3,[r7,#4]
 672:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3274              	 .loc 3 672 0
 3275 000a 144B     	 ldr r3,.L135
 3276 000c 1A88     	 ldrh r2,[r3]
 3277 000e BA23     	 mov r3,#186
 3278 0010 1B01     	 lsl r3,r3,#4
 3279 0012 9A42     	 cmp r2,r3
 3280 0014 14D9     	 bls .L132
 673:../samuel/samuel_io.c ****   {
 674:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3281              	 .loc 3 674 0
 3282 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3283 001a 031C     	 mov r3,r0
 3284 001c 1A1C     	 mov r2,r3
 3285 001e 104B     	 ldr r3,.L135+4
 3286 0020 1A70     	 strb r2,[r3]
 675:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3287              	 .loc 3 675 0
 3288 0022 0F4B     	 ldr r3,.L135+4
 3289 0024 1B78     	 ldrb r3,[r3]
 3290 0026 032B     	 cmp r3,#3
 3291 0028 08D1     	 bne .L133
 676:../samuel/samuel_io.c ****     {
 677:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3292              	 .loc 3 677 0
 3293 002a 0E4B     	 ldr r3,.L135+8
 3294 002c 0320     	 mov r0,#3
 3295 002e 191C     	 mov r1,r3
 3296 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3297 0034 031C     	 mov r3,r0
 3298 0036 1A1C     	 mov r2,r3
 3299 0038 0B4B     	 ldr r3,.L135+12
 3300 003a 1A70     	 strb r2,[r3]
 3301              	.L133:
 678:../samuel/samuel_io.c ****     }
 679:../samuel/samuel_io.c **** 	 a = 0;
 3302              	 .loc 3 679 0
 3303 003c 0023     	 mov r3,#0
 3304 003e 7B60     	 str r3,[r7,#4]
 3305              	.L132:
 680:../samuel/samuel_io.c ****   }
 681:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3306              	 .loc 3 681 0
 3307 0040 074B     	 ldr r3,.L135+4
 3308 0042 1B78     	 ldrb r3,[r3]
 3309 0044 1A1C     	 mov r2,r3
 3310 0046 084B     	 ldr r3,.L135+12
 3311 0048 1B78     	 ldrb r3,[r3]
 3312 004a 1B01     	 lsl r3,r3,#4
 3313 004c D218     	 add r2,r2,r3
 3314 004e 7B68     	 ldr r3,[r7,#4]
 3315 0050 D318     	 add r3,r2,r3
 682:../samuel/samuel_io.c ****  }
 3316              	 .loc 3 682 0
 3317 0052 181C     	 mov r0,r3
 3318 0054 BD46     	 mov sp,r7
 3319 0056 02B0     	 add sp,sp,#8
 3320              	 
 3321 0058 80BD     	 pop {r7,pc}
 3322              	.L136:
 3323 005a C046     	 .align 2
 3324              	.L135:
 3325 005c 00000000 	 .word resultB
 3326 0060 00000000 	 .word EEprom_status
 3327 0064 00000000 	 .word ReadBuffer3
 3328 0068 00000000 	 .word oper_status
 3329              	 .cfi_endproc
 3330              	.LFE321:
 3332              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3333              	 .align 2
 3334              	 .global writeakt_light_data_B4_EEprom
 3335              	 .code 16
 3336              	 .thumb_func
 3338              	writeakt_light_data_B4_EEprom:
 3339              	.LFB322:
 683:../samuel/samuel_io.c **** 
 684:../samuel/samuel_io.c ****  //------------------------------------------------
 685:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 686:../samuel/samuel_io.c ****  {
 3340              	 .loc 3 686 0
 3341              	 .cfi_startproc
 3342 0000 80B5     	 push {r7,lr}
 3343              	.LCFI79:
 3344              	 .cfi_def_cfa_offset 8
 3345              	 .cfi_offset 7,-8
 3346              	 .cfi_offset 14,-4
 3347 0002 82B0     	 sub sp,sp,#8
 3348              	.LCFI80:
 3349              	 .cfi_def_cfa_offset 16
 3350 0004 00AF     	 add r7,sp,#0
 3351              	.LCFI81:
 3352              	 .cfi_def_cfa_register 7
 687:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3353              	 .loc 3 687 0
 3354 0006 8023     	 mov r3,#128
 3355 0008 7B60     	 str r3,[r7,#4]
 688:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3356              	 .loc 3 688 0
 3357 000a 144B     	 ldr r3,.L141
 3358 000c 1A88     	 ldrh r2,[r3]
 3359 000e BA23     	 mov r3,#186
 3360 0010 1B01     	 lsl r3,r3,#4
 3361 0012 9A42     	 cmp r2,r3
 3362 0014 14D9     	 bls .L138
 689:../samuel/samuel_io.c ****     {
 690:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3363              	 .loc 3 690 0
 3364 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3365 001a 031C     	 mov r3,r0
 3366 001c 1A1C     	 mov r2,r3
 3367 001e 104B     	 ldr r3,.L141+4
 3368 0020 1A70     	 strb r2,[r3]
 691:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3369              	 .loc 3 691 0
 3370 0022 0F4B     	 ldr r3,.L141+4
 3371 0024 1B78     	 ldrb r3,[r3]
 3372 0026 032B     	 cmp r3,#3
 3373 0028 08D1     	 bne .L139
 692:../samuel/samuel_io.c ****       {
 693:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3374              	 .loc 3 693 0
 3375 002a 0E4B     	 ldr r3,.L141+8
 3376 002c 0420     	 mov r0,#4
 3377 002e 191C     	 mov r1,r3
 3378 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3379 0034 031C     	 mov r3,r0
 3380 0036 1A1C     	 mov r2,r3
 3381 0038 0B4B     	 ldr r3,.L141+12
 3382 003a 1A70     	 strb r2,[r3]
 3383              	.L139:
 694:../samuel/samuel_io.c ****       }
 695:../samuel/samuel_io.c **** 	 a = 0;
 3384              	 .loc 3 695 0
 3385 003c 0023     	 mov r3,#0
 3386 003e 7B60     	 str r3,[r7,#4]
 3387              	.L138:
 696:../samuel/samuel_io.c ****     }
 697:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3388              	 .loc 3 697 0
 3389 0040 074B     	 ldr r3,.L141+4
 3390 0042 1B78     	 ldrb r3,[r3]
 3391 0044 1A1C     	 mov r2,r3
 3392 0046 084B     	 ldr r3,.L141+12
 3393 0048 1B78     	 ldrb r3,[r3]
 3394 004a 1B01     	 lsl r3,r3,#4
 3395 004c D218     	 add r2,r2,r3
 3396 004e 7B68     	 ldr r3,[r7,#4]
 3397 0050 D318     	 add r3,r2,r3
 698:../samuel/samuel_io.c ****  }
 3398              	 .loc 3 698 0
 3399 0052 181C     	 mov r0,r3
 3400 0054 BD46     	 mov sp,r7
 3401 0056 02B0     	 add sp,sp,#8
 3402              	 
 3403 0058 80BD     	 pop {r7,pc}
 3404              	.L142:
 3405 005a C046     	 .align 2
 3406              	.L141:
 3407 005c 00000000 	 .word resultB
 3408 0060 00000000 	 .word EEprom_status
 3409 0064 00000000 	 .word ReadBuffer2
 3410 0068 00000000 	 .word oper_status
 3411              	 .cfi_endproc
 3412              	.LFE322:
 3414              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3415              	 .align 2
 3416              	 .global writeOff_light_B5_EEprom
 3417              	 .code 16
 3418              	 .thumb_func
 3420              	writeOff_light_B5_EEprom:
 3421              	.LFB323:
 699:../samuel/samuel_io.c ****  //----------------------------
 700:../samuel/samuel_io.c **** 
 701:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 702:../samuel/samuel_io.c ****  {
 3422              	 .loc 3 702 0
 3423              	 .cfi_startproc
 3424 0000 80B5     	 push {r7,lr}
 3425              	.LCFI82:
 3426              	 .cfi_def_cfa_offset 8
 3427              	 .cfi_offset 7,-8
 3428              	 .cfi_offset 14,-4
 3429 0002 82B0     	 sub sp,sp,#8
 3430              	.LCFI83:
 3431              	 .cfi_def_cfa_offset 16
 3432 0004 00AF     	 add r7,sp,#0
 3433              	.LCFI84:
 3434              	 .cfi_def_cfa_register 7
 703:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3435              	 .loc 3 703 0
 3436 0006 8023     	 mov r3,#128
 3437 0008 7B60     	 str r3,[r7,#4]
 704:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3438              	 .loc 3 704 0
 3439 000a 144B     	 ldr r3,.L147
 3440 000c 1A88     	 ldrh r2,[r3]
 3441 000e BA23     	 mov r3,#186
 3442 0010 1B01     	 lsl r3,r3,#4
 3443 0012 9A42     	 cmp r2,r3
 3444 0014 14D9     	 bls .L144
 705:../samuel/samuel_io.c ****   {
 706:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3445              	 .loc 3 706 0
 3446 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3447 001a 031C     	 mov r3,r0
 3448 001c 1A1C     	 mov r2,r3
 3449 001e 104B     	 ldr r3,.L147+4
 3450 0020 1A70     	 strb r2,[r3]
 707:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3451              	 .loc 3 707 0
 3452 0022 0F4B     	 ldr r3,.L147+4
 3453 0024 1B78     	 ldrb r3,[r3]
 3454 0026 032B     	 cmp r3,#3
 3455 0028 08D1     	 bne .L145
 708:../samuel/samuel_io.c ****     {
 709:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3456              	 .loc 3 709 0
 3457 002a 0E4B     	 ldr r3,.L147+8
 3458 002c 0520     	 mov r0,#5
 3459 002e 191C     	 mov r1,r3
 3460 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3461 0034 031C     	 mov r3,r0
 3462 0036 1A1C     	 mov r2,r3
 3463 0038 0B4B     	 ldr r3,.L147+12
 3464 003a 1A70     	 strb r2,[r3]
 3465              	.L145:
 710:../samuel/samuel_io.c **** 
 711:../samuel/samuel_io.c **** 
 712:../samuel/samuel_io.c **** 
 713:../samuel/samuel_io.c **** 
 714:../samuel/samuel_io.c ****     }
 715:../samuel/samuel_io.c **** 	 a = 0;
 3466              	 .loc 3 715 0
 3467 003c 0023     	 mov r3,#0
 3468 003e 7B60     	 str r3,[r7,#4]
 3469              	.L144:
 716:../samuel/samuel_io.c ****   }
 717:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3470              	 .loc 3 717 0
 3471 0040 074B     	 ldr r3,.L147+4
 3472 0042 1B78     	 ldrb r3,[r3]
 3473 0044 1A1C     	 mov r2,r3
 3474 0046 084B     	 ldr r3,.L147+12
 3475 0048 1B78     	 ldrb r3,[r3]
 3476 004a 1B01     	 lsl r3,r3,#4
 3477 004c D218     	 add r2,r2,r3
 3478 004e 7B68     	 ldr r3,[r7,#4]
 3479 0050 D318     	 add r3,r2,r3
 718:../samuel/samuel_io.c ****  }
 3480              	 .loc 3 718 0
 3481 0052 181C     	 mov r0,r3
 3482 0054 BD46     	 mov sp,r7
 3483 0056 02B0     	 add sp,sp,#8
 3484              	 
 3485 0058 80BD     	 pop {r7,pc}
 3486              	.L148:
 3487 005a C046     	 .align 2
 3488              	.L147:
 3489 005c 00000000 	 .word resultB
 3490 0060 00000000 	 .word EEprom_status
 3491 0064 00000000 	 .word ReadBuffer2
 3492 0068 00000000 	 .word oper_status
 3493              	 .cfi_endproc
 3494              	.LFE323:
 3496              	 .section .text.sysiniValueB1,"ax",%progbits
 3497              	 .align 2
 3498              	 .global sysiniValueB1
 3499              	 .code 16
 3500              	 .thumb_func
 3502              	sysiniValueB1:
 3503              	.LFB324:
 719:../samuel/samuel_io.c **** 
 720:../samuel/samuel_io.c **** ///#############################################
 721:../samuel/samuel_io.c ****  //initialisierung
 722:../samuel/samuel_io.c **** 
 723:../samuel/samuel_io.c **** 
 724:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 725:../samuel/samuel_io.c ****  {
 3504              	 .loc 3 725 0
 3505              	 .cfi_startproc
 3506 0000 80B5     	 push {r7,lr}
 3507              	.LCFI85:
 3508              	 .cfi_def_cfa_offset 8
 3509              	 .cfi_offset 7,-8
 3510              	 .cfi_offset 14,-4
 3511 0002 00AF     	 add r7,sp,#0
 3512              	.LCFI86:
 3513              	 .cfi_def_cfa_register 7
 726:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 727:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 728:../samuel/samuel_io.c **** 
 729:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3514              	 .loc 3 729 0
 3515 0004 124B     	 ldr r3,.L150
 3516 0006 134A     	 ldr r2,.L150+4
 3517 0008 1A80     	 strh r2,[r3]
 730:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3518              	 .loc 3 730 0
 3519 000a 134B     	 ldr r3,.L150+8
 3520 000c 134A     	 ldr r2,.L150+12
 3521 000e 1A80     	 strh r2,[r3]
 731:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3522              	 .loc 3 731 0
 3523 0010 134B     	 ldr r3,.L150+16
 3524 0012 FA22     	 mov r2,#250
 3525 0014 9200     	 lsl r2,r2,#2
 3526 0016 1A80     	 strh r2,[r3]
 732:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3527              	 .loc 3 732 0
 3528 0018 124B     	 ldr r3,.L150+20
 3529 001a FA22     	 mov r2,#250
 3530 001c 9200     	 lsl r2,r2,#2
 3531 001e 1A80     	 strh r2,[r3]
 733:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3532              	 .loc 3 733 0
 3533 0020 114B     	 ldr r3,.L150+24
 3534 0022 FA22     	 mov r2,#250
 3535 0024 9200     	 lsl r2,r2,#2
 3536 0026 1A80     	 strh r2,[r3]
 734:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3537              	 .loc 3 734 0
 3538 0028 104B     	 ldr r3,.L150+28
 3539 002a FA22     	 mov r2,#250
 3540 002c 9200     	 lsl r2,r2,#2
 3541 002e 1A80     	 strh r2,[r3]
 735:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3542              	 .loc 3 735 0
 3543 0030 0F4B     	 ldr r3,.L150+32
 3544 0032 FA22     	 mov r2,#250
 3545 0034 9200     	 lsl r2,r2,#2
 3546 0036 1A80     	 strh r2,[r3]
 736:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3547              	 .loc 3 736 0
 3548 0038 0E4B     	 ldr r3,.L150+36
 3549 003a FA22     	 mov r2,#250
 3550 003c 9200     	 lsl r2,r2,#2
 3551 003e 1A80     	 strh r2,[r3]
 737:../samuel/samuel_io.c **** 
 738:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3552              	 .loc 3 738 0
 3553 0040 0D4B     	 ldr r3,.L150+40
 3554 0042 0022     	 mov r2,#0
 3555 0044 1A80     	 strh r2,[r3]
 739:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3556              	 .loc 3 739 0
 3557 0046 0D4B     	 ldr r3,.L150+44
 3558 0048 0022     	 mov r2,#0
 3559 004a 1A80     	 strh r2,[r3]
 740:../samuel/samuel_io.c **** 
 741:../samuel/samuel_io.c ****  }
 3560              	 .loc 3 741 0
 3561 004c BD46     	 mov sp,r7
 3562              	 
 3563 004e 80BD     	 pop {r7,pc}
 3564              	.L151:
 3565              	 .align 2
 3566              	.L150:
 3567 0050 00000000 	 .word Ser_NrH
 3568 0054 7A7B0000 	 .word 31610
 3569 0058 00000000 	 .word Ser_NrL
 3570 005c 59580000 	 .word 22617
 3571 0060 00000000 	 .word Hard_Vers
 3572 0064 00000000 	 .word Soft_Vers
 3573 0068 00000000 	 .word GEH_Vers
 3574 006c 00000000 	 .word Mon_Vers
 3575 0070 00000000 	 .word LED_WW_Vers
 3576 0074 00000000 	 .word LED_CW_Vers
 3577 0078 00000000 	 .word neu_Ser_NrH
 3578 007c 00000000 	 .word neu_Ser_NrL
 3579              	 .cfi_endproc
 3580              	.LFE324:
 3582              	 .section .text.sysiniValueB2,"ax",%progbits
 3583              	 .align 2
 3584              	 .global sysiniValueB2
 3585              	 .code 16
 3586              	 .thumb_func
 3588              	sysiniValueB2:
 3589              	.LFB325:
 742:../samuel/samuel_io.c **** 
 743:../samuel/samuel_io.c **** 
 744:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 745:../samuel/samuel_io.c ****  {
 3590              	 .loc 3 745 0
 3591              	 .cfi_startproc
 3592 0000 80B5     	 push {r7,lr}
 3593              	.LCFI87:
 3594              	 .cfi_def_cfa_offset 8
 3595              	 .cfi_offset 7,-8
 3596              	 .cfi_offset 14,-4
 3597 0002 00AF     	 add r7,sp,#0
 3598              	.LCFI88:
 3599              	 .cfi_def_cfa_register 7
 746:../samuel/samuel_io.c ****            node_id = 1;
 3600              	 .loc 3 746 0
 3601 0004 114B     	 ldr r3,.L153
 3602 0006 0122     	 mov r2,#1
 3603 0008 1A70     	 strb r2,[r3]
 747:../samuel/samuel_io.c ****            node_id_alt = 1;
 3604              	 .loc 3 747 0
 3605 000a 114B     	 ldr r3,.L153+4
 3606 000c 0122     	 mov r2,#1
 3607 000e 1A70     	 strb r2,[r3]
 748:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3608              	 .loc 3 748 0
 3609 0010 104B     	 ldr r3,.L153+8
 3610 0012 114A     	 ldr r2,.L153+12
 3611 0014 1A80     	 strh r2,[r3]
 749:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3612              	 .loc 3 749 0
 3613 0016 114B     	 ldr r3,.L153+16
 3614 0018 FA22     	 mov r2,#250
 3615 001a D200     	 lsl r2,r2,#3
 3616 001c 1A80     	 strh r2,[r3]
 750:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3617              	 .loc 3 750 0
 3618 001e 104B     	 ldr r3,.L153+20
 3619 0020 FA22     	 mov r2,#250
 3620 0022 D200     	 lsl r2,r2,#3
 3621 0024 1A80     	 strh r2,[r3]
 751:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3622              	 .loc 3 751 0
 3623 0026 0F4B     	 ldr r3,.L153+24
 3624 0028 E122     	 mov r2,#225
 3625 002a 1201     	 lsl r2,r2,#4
 3626 002c 1A80     	 strh r2,[r3]
 752:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3627              	 .loc 3 752 0
 3628 002e 0E4B     	 ldr r3,.L153+28
 3629 0030 0E4A     	 ldr r2,.L153+32
 3630 0032 1A80     	 strh r2,[r3]
 753:../samuel/samuel_io.c **** 		   led_grupp=10;
 3631              	 .loc 3 753 0
 3632 0034 0E4B     	 ldr r3,.L153+36
 3633 0036 0A22     	 mov r2,#10
 3634 0038 1A80     	 strh r2,[r3]
 754:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3635              	 .loc 3 754 0
 3636 003a 0E4B     	 ldr r3,.L153+40
 3637 003c 3522     	 mov r2,#53
 3638 003e 1A80     	 strh r2,[r3]
 755:../samuel/samuel_io.c **** 
 756:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3639              	 .loc 3 756 0
 3640 0040 0D4B     	 ldr r3,.L153+44
 3641 0042 0122     	 mov r2,#1
 3642 0044 1A70     	 strb r2,[r3]
 757:../samuel/samuel_io.c ****  }
 3643              	 .loc 3 757 0
 3644 0046 BD46     	 mov sp,r7
 3645              	 
 3646 0048 80BD     	 pop {r7,pc}
 3647              	.L154:
 3648 004a C046     	 .align 2
 3649              	.L153:
 3650 004c 00000000 	 .word node_id
 3651 0050 00000000 	 .word node_id_alt
 3652 0054 00000000 	 .word node_id_16bit
 3653 0058 34120000 	 .word 4660
 3654 005c 00000000 	 .word val_Pow_Nom
 3655 0060 00000000 	 .word val_Pow_max
 3656 0064 00000000 	 .word val_Spannung_min
 3657 0068 00000000 	 .word val_Spannung_max
 3658 006c 68100000 	 .word 4200
 3659 0070 00000000 	 .word led_grupp
 3660 0074 00000000 	 .word led_Strom
 3661 0078 00000000 	 .word node_id_neu
 3662              	 .cfi_endproc
 3663              	.LFE325:
 3665              	 .section .text.sysiniValueB4,"ax",%progbits
 3666              	 .align 2
 3667              	 .global sysiniValueB4
 3668              	 .code 16
 3669              	 .thumb_func
 3671              	sysiniValueB4:
 3672              	.LFB326:
 758:../samuel/samuel_io.c **** 
 759:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 760:../samuel/samuel_io.c ****  {
 3673              	 .loc 3 760 0
 3674              	 .cfi_startproc
 3675 0000 80B5     	 push {r7,lr}
 3676              	.LCFI89:
 3677              	 .cfi_def_cfa_offset 8
 3678              	 .cfi_offset 7,-8
 3679              	 .cfi_offset 14,-4
 3680 0002 00AF     	 add r7,sp,#0
 3681              	.LCFI90:
 3682              	 .cfi_def_cfa_register 7
 761:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3683              	 .loc 3 761 0
 3684 0004 264B     	 ldr r3,.L156
 3685 0006 0A22     	 mov r2,#10
 3686 0008 1A70     	 strb r2,[r3]
 762:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3687              	 .loc 3 762 0
 3688 000a 264B     	 ldr r3,.L156+4
 3689 000c 0A22     	 mov r2,#10
 3690 000e 1A70     	 strb r2,[r3]
 763:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3691              	 .loc 3 763 0
 3692 0010 254B     	 ldr r3,.L156+8
 3693 0012 0A22     	 mov r2,#10
 3694 0014 1A70     	 strb r2,[r3]
 764:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3695              	 .loc 3 764 0
 3696 0016 254B     	 ldr r3,.L156+12
 3697 0018 0A22     	 mov r2,#10
 3698 001a 1A70     	 strb r2,[r3]
 765:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3699              	 .loc 3 765 0
 3700 001c 244B     	 ldr r3,.L156+16
 3701 001e 0A22     	 mov r2,#10
 3702 0020 1A80     	 strh r2,[r3]
 766:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3703              	 .loc 3 766 0
 3704 0022 244B     	 ldr r3,.L156+20
 3705 0024 B022     	 mov r2,#176
 3706 0026 1A80     	 strh r2,[r3]
 767:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3707              	 .loc 3 767 0
 3708 0028 234B     	 ldr r3,.L156+24
 3709 002a 0122     	 mov r2,#1
 3710 002c 5242     	 neg r2,r2
 3711 002e 1A80     	 strh r2,[r3]
 768:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3712              	 .loc 3 768 0
 3713 0030 224B     	 ldr r3,.L156+28
 3714 0032 0022     	 mov r2,#0
 3715 0034 1A80     	 strh r2,[r3]
 769:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3716              	 .loc 3 769 0
 3717 0036 224B     	 ldr r3,.L156+32
 3718 0038 FA22     	 mov r2,#250
 3719 003a 9200     	 lsl r2,r2,#2
 3720 003c 1A80     	 strh r2,[r3]
 770:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3721              	 .loc 3 770 0
 3722 003e 214B     	 ldr r3,.L156+36
 3723 0040 FA22     	 mov r2,#250
 3724 0042 9200     	 lsl r2,r2,#2
 3725 0044 1A80     	 strh r2,[r3]
 771:../samuel/samuel_io.c **** 
 772:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3726              	 .loc 3 772 0
 3727 0046 1B4B     	 ldr r3,.L156+20
 3728 0048 1A88     	 ldrh r2,[r3]
 3729 004a 1F4B     	 ldr r3,.L156+40
 3730 004c 1A80     	 strh r2,[r3]
 773:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3731              	 .loc 3 773 0
 3732 004e 194B     	 ldr r3,.L156+20
 3733 0050 1A88     	 ldrh r2,[r3]
 3734 0052 1E4B     	 ldr r3,.L156+44
 3735 0054 1A80     	 strh r2,[r3]
 774:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3736              	 .loc 3 774 0
 3737 0056 174B     	 ldr r3,.L156+20
 3738 0058 1A88     	 ldrh r2,[r3]
 3739 005a 1D4B     	 ldr r3,.L156+48
 3740 005c 1A80     	 strh r2,[r3]
 775:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3741              	 .loc 3 775 0
 3742 005e 154B     	 ldr r3,.L156+20
 3743 0060 1A88     	 ldrh r2,[r3]
 3744 0062 1C4B     	 ldr r3,.L156+52
 3745 0064 1A80     	 strh r2,[r3]
 776:../samuel/samuel_io.c **** 
 777:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3746              	 .loc 3 777 0
 3747 0066 144B     	 ldr r3,.L156+24
 3748 0068 1B88     	 ldrh r3,[r3]
 3749 006a 1B0A     	 lsr r3,r3,#8
 3750 006c 9AB2     	 uxth r2,r3
 3751 006e 1A4B     	 ldr r3,.L156+56
 3752 0070 1A80     	 strh r2,[r3]
 778:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3753              	 .loc 3 778 0
 3754 0072 114B     	 ldr r3,.L156+24
 3755 0074 1B88     	 ldrh r3,[r3]
 3756 0076 1B0A     	 lsr r3,r3,#8
 3757 0078 9AB2     	 uxth r2,r3
 3758 007a 184B     	 ldr r3,.L156+60
 3759 007c 1A80     	 strh r2,[r3]
 779:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3760              	 .loc 3 779 0
 3761 007e 0E4B     	 ldr r3,.L156+24
 3762 0080 1B88     	 ldrh r3,[r3]
 3763 0082 FF22     	 mov r2,#255
 3764 0084 1340     	 and r3,r2
 3765 0086 9AB2     	 uxth r2,r3
 3766 0088 154B     	 ldr r3,.L156+64
 3767 008a 1A80     	 strh r2,[r3]
 780:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3768              	 .loc 3 780 0
 3769 008c 0A4B     	 ldr r3,.L156+24
 3770 008e 1B88     	 ldrh r3,[r3]
 3771 0090 FF22     	 mov r2,#255
 3772 0092 1340     	 and r3,r2
 3773 0094 9AB2     	 uxth r2,r3
 3774 0096 134B     	 ldr r3,.L156+68
 3775 0098 1A80     	 strh r2,[r3]
 781:../samuel/samuel_io.c ****  }
 3776              	 .loc 3 781 0
 3777 009a BD46     	 mov sp,r7
 3778              	 
 3779 009c 80BD     	 pop {r7,pc}
 3780              	.L157:
 3781 009e C046     	 .align 2
 3782              	.L156:
 3783 00a0 00000000 	 .word Dimm_Gamma
 3784 00a4 00000000 	 .word Dimm_Stufen
 3785 00a8 00000000 	 .word Dimm_StufenGR
 3786 00ac 00000000 	 .word Dimm_Valu
 3787 00b0 00000000 	 .word Smooth_Value
 3788 00b4 00000000 	 .word linearwalk_gen
 3789 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 3790 00bc 00000000 	 .word Reserve_1
 3791 00c0 00000000 	 .word Dimm_Max_WW
 3792 00c4 00000000 	 .word Dimm_Max_CW
 3793 00c8 00000000 	 .word linearwalk_ww1
 3794 00cc 00000000 	 .word linearwalk_ww2
 3795 00d0 00000000 	 .word linearwalk_cw1
 3796 00d4 00000000 	 .word linearwalk_cw2
 3797 00d8 00000000 	 .word Farbe_ww1_Quot
 3798 00dc 00000000 	 .word Farbe_cw1_Quot
 3799 00e0 00000000 	 .word Farbe_ww2_Quot
 3800 00e4 00000000 	 .word Farbe_cw2_Quot
 3801              	 .cfi_endproc
 3802              	.LFE326:
 3804              	 .section .text.sysiniValueB5,"ax",%progbits
 3805              	 .align 2
 3806              	 .global sysiniValueB5
 3807              	 .code 16
 3808              	 .thumb_func
 3810              	sysiniValueB5:
 3811              	.LFB327:
 782:../samuel/samuel_io.c **** 
 783:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 784:../samuel/samuel_io.c ****  {
 3812              	 .loc 3 784 0
 3813              	 .cfi_startproc
 3814 0000 80B5     	 push {r7,lr}
 3815              	.LCFI91:
 3816              	 .cfi_def_cfa_offset 8
 3817              	 .cfi_offset 7,-8
 3818              	 .cfi_offset 14,-4
 3819 0002 00AF     	 add r7,sp,#0
 3820              	.LCFI92:
 3821              	 .cfi_def_cfa_register 7
 785:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 3822              	 .loc 3 785 0
 3823 0004 0E4B     	 ldr r3,.L159
 3824 0006 0522     	 mov r2,#5
 3825 0008 1A70     	 strb r2,[r3]
 786:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 3826              	 .loc 3 786 0
 3827 000a 0E4B     	 ldr r3,.L159+4
 3828 000c 0022     	 mov r2,#0
 3829 000e 1A70     	 strb r2,[r3]
 787:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 3830              	 .loc 3 787 0
 3831 0010 0D4B     	 ldr r3,.L159+8
 3832 0012 0022     	 mov r2,#0
 3833 0014 1A80     	 strh r2,[r3]
 788:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 3834              	 .loc 3 788 0
 3835 0016 0D4B     	 ldr r3,.L159+12
 3836 0018 0D4A     	 ldr r2,.L159+16
 3837 001a 1A80     	 strh r2,[r3]
 789:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 3838              	 .loc 3 789 0
 3839 001c 0D4B     	 ldr r3,.L159+20
 3840 001e 0C4A     	 ldr r2,.L159+16
 3841 0020 1A80     	 strh r2,[r3]
 790:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 3842              	 .loc 3 790 0
 3843 0022 0D4B     	 ldr r3,.L159+24
 3844 0024 0D4A     	 ldr r2,.L159+28
 3845 0026 1A80     	 strh r2,[r3]
 791:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 3846              	 .loc 3 791 0
 3847 0028 0D4B     	 ldr r3,.L159+32
 3848 002a 0C4A     	 ldr r2,.L159+28
 3849 002c 1A80     	 strh r2,[r3]
 792:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 3850              	 .loc 3 792 0
 3851 002e 0D4B     	 ldr r3,.L159+36
 3852 0030 0D4A     	 ldr r2,.L159+40
 3853 0032 1A80     	 strh r2,[r3]
 793:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 3854              	 .loc 3 793 0
 3855 0034 0D4B     	 ldr r3,.L159+44
 3856 0036 0C4A     	 ldr r2,.L159+40
 3857 0038 1A80     	 strh r2,[r3]
 794:../samuel/samuel_io.c ****  }
 3858              	 .loc 3 794 0
 3859 003a BD46     	 mov sp,r7
 3860              	 
 3861 003c 80BD     	 pop {r7,pc}
 3862              	.L160:
 3863 003e C046     	 .align 2
 3864              	.L159:
 3865 0040 00000000 	 .word RegOnOff
 3866 0044 00000000 	 .word RegOnOff2
 3867 0048 00000000 	 .word Reserve_2
 3868 004c 00000000 	 .word dimOff_Ww
 3869 0050 FF0F0000 	 .word 4095
 3870 0054 00000000 	 .word dimOff_Cw
 3871 0058 00000000 	 .word dimNorm1_Ww
 3872 005c FF010000 	 .word 511
 3873 0060 00000000 	 .word dimNorm1_Cw
 3874 0064 00000000 	 .word dimNorm2_Ww
 3875 0068 FF020000 	 .word 767
 3876 006c 00000000 	 .word dimNorm2_Cw
 3877              	 .cfi_endproc
 3878              	.LFE327:
 3880              	 .section .text.bcuInit,"ax",%progbits
 3881              	 .align 2
 3882              	 .global bcuInit
 3883              	 .code 16
 3884              	 .thumb_func
 3886              	bcuInit:
 3887              	.LFB328:
 795:../samuel/samuel_io.c **** 
 796:../samuel/samuel_io.c ****  //-----------------------------------------------
 797:../samuel/samuel_io.c ****  // BCCU Vorgaben
 798:../samuel/samuel_io.c **** 
 799:../samuel/samuel_io.c ****  void bcuInit(void)
 800:../samuel/samuel_io.c ****  {
 3888              	 .loc 3 800 0
 3889              	 .cfi_startproc
 3890 0000 80B5     	 push {r7,lr}
 3891              	.LCFI93:
 3892              	 .cfi_def_cfa_offset 8
 3893              	 .cfi_offset 7,-8
 3894              	 .cfi_offset 14,-4
 3895 0002 00AF     	 add r7,sp,#0
 3896              	.LCFI94:
 3897              	 .cfi_def_cfa_register 7
 801:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 3898              	 .loc 3 801 0
 3899 0004 194B     	 ldr r3,.L171
 3900 0006 1B78     	 ldrb r3,[r3]
 3901 0008 052B     	 cmp r3,#5
 3902 000a 2CD8     	 bhi .L170
 3903 000c 9A00     	 lsl r2,r3,#2
 3904 000e 184B     	 ldr r3,.L171+4
 3905 0010 D318     	 add r3,r2,r3
 3906 0012 1B68     	 ldr r3,[r3]
 3907 0014 9F46     	 mov pc,r3
 3908              	 .section .rodata.bcuInit,"a",%progbits
 3909              	 .align 2
 3910              	.L164:
 3911 0000 66000000 	 .word .L170
 3912 0004 16000000 	 .word .L163
 3913 0008 24000000 	 .word .L165
 3914 000c 32000000 	 .word .L166
 3915 0010 42000000 	 .word .L167
 3916 0014 54000000 	 .word .L168
 3917              	 .section .text.bcuInit
 3918              	.L163:
 802:../samuel/samuel_io.c **** 		{
 803:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 3919              	 .loc 3 803 0
 3920 0016 174B     	 ldr r3,.L171+8
 3921 0018 0022     	 mov r2,#0
 3922 001a 1A80     	 strh r2,[r3]
 804:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 3923              	 .loc 3 804 0
 3924 001c 164B     	 ldr r3,.L171+12
 3925 001e 0022     	 mov r2,#0
 3926 0020 1A80     	 strh r2,[r3]
 805:../samuel/samuel_io.c **** 									break;
 3927              	 .loc 3 805 0
 3928 0022 21E0     	 b .L161
 3929              	.L165:
 806:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 3930              	 .loc 3 806 0
 3931 0024 134B     	 ldr r3,.L171+8
 3932 0026 154A     	 ldr r2,.L171+16
 3933 0028 1A80     	 strh r2,[r3]
 807:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 3934              	 .loc 3 807 0
 3935 002a 134B     	 ldr r3,.L171+12
 3936 002c 134A     	 ldr r2,.L171+16
 3937 002e 1A80     	 strh r2,[r3]
 808:../samuel/samuel_io.c **** 									break;
 3938              	 .loc 3 808 0
 3939 0030 1AE0     	 b .L161
 3940              	.L166:
 809:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 3941              	 .loc 3 809 0
 3942 0032 134B     	 ldr r3,.L171+20
 3943 0034 1A88     	 ldrh r2,[r3]
 3944 0036 0F4B     	 ldr r3,.L171+8
 3945 0038 1A80     	 strh r2,[r3]
 810:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 3946              	 .loc 3 810 0
 3947 003a 124B     	 ldr r3,.L171+24
 3948 003c 1A88     	 ldrh r2,[r3]
 3949 003e 0E4B     	 ldr r3,.L171+12
 3950 0040 1A80     	 strh r2,[r3]
 3951              	.L167:
 811:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 3952              	 .loc 3 811 0
 3953 0042 114B     	 ldr r3,.L171+28
 3954 0044 1A88     	 ldrh r2,[r3]
 3955 0046 0B4B     	 ldr r3,.L171+8
 3956 0048 1A80     	 strh r2,[r3]
 812:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 3957              	 .loc 3 812 0
 3958 004a 104B     	 ldr r3,.L171+32
 3959 004c 1A88     	 ldrh r2,[r3]
 3960 004e 0A4B     	 ldr r3,.L171+12
 3961 0050 1A80     	 strh r2,[r3]
 813:../samuel/samuel_io.c **** 									break;
 3962              	 .loc 3 813 0
 3963 0052 09E0     	 b .L161
 3964              	.L168:
 814:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 3965              	 .loc 3 814 0
 3966 0054 0E4B     	 ldr r3,.L171+36
 3967 0056 1A88     	 ldrh r2,[r3]
 3968 0058 064B     	 ldr r3,.L171+8
 3969 005a 1A80     	 strh r2,[r3]
 815:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 3970              	 .loc 3 815 0
 3971 005c 0D4B     	 ldr r3,.L171+40
 3972 005e 1A88     	 ldrh r2,[r3]
 3973 0060 054B     	 ldr r3,.L171+12
 3974 0062 1A80     	 strh r2,[r3]
 816:../samuel/samuel_io.c **** 									break;
 3975              	 .loc 3 816 0
 3976 0064 00E0     	 b .L161
 3977              	.L170:
 817:../samuel/samuel_io.c **** 		default:
 818:../samuel/samuel_io.c **** 									break;
 3978              	 .loc 3 818 0
 3979 0066 C046     	 mov r8,r8
 3980              	.L161:
 819:../samuel/samuel_io.c **** 		}
 820:../samuel/samuel_io.c **** 
 821:../samuel/samuel_io.c ****  }
 3981              	 .loc 3 821 0
 3982 0068 BD46     	 mov sp,r7
 3983              	 
 3984 006a 80BD     	 pop {r7,pc}
 3985              	.L172:
 3986              	 .align 2
 3987              	.L171:
 3988 006c 00000000 	 .word RegOnOff
 3989 0070 00000000 	 .word .L164
 3990 0074 00000000 	 .word dimAkt_Ww
 3991 0078 00000000 	 .word dimAkt_Cw
 3992 007c FF7F0000 	 .word 32767
 3993 0080 00000000 	 .word dimNorm1_Ww
 3994 0084 00000000 	 .word dimNorm1_Cw
 3995 0088 00000000 	 .word dimNorm2_Ww
 3996 008c 00000000 	 .word dimNorm2_Cw
 3997 0090 00000000 	 .word dimOff_Ww
 3998 0094 00000000 	 .word dimOff_Cw
 3999              	 .cfi_endproc
 4000              	.LFE328:
 4002              	 .section .text.bcuUebergabe,"ax",%progbits
 4003              	 .align 2
 4004              	 .global bcuUebergabe
 4005              	 .code 16
 4006              	 .thumb_func
 4008              	bcuUebergabe:
 4009              	.LFB329:
 822:../samuel/samuel_io.c ****  //----------------------------------
 823:../samuel/samuel_io.c **** 
 824:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 825:../samuel/samuel_io.c ****  {
 4010              	 .loc 3 825 0
 4011              	 .cfi_startproc
 4012 0000 80B5     	 push {r7,lr}
 4013              	.LCFI95:
 4014              	 .cfi_def_cfa_offset 8
 4015              	 .cfi_offset 7,-8
 4016              	 .cfi_offset 14,-4
 4017 0002 00AF     	 add r7,sp,#0
 4018              	.LCFI96:
 4019              	 .cfi_def_cfa_register 7
 826:../samuel/samuel_io.c **** 
 827:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 828:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 829:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 830:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 831:../samuel/samuel_io.c **** 
 832:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 4020              	 .loc 3 832 0
 4021 0004 204B     	 ldr r3,.L174
 4022 0006 1B88     	 ldrh r3,[r3]
 4023 0008 1A1C     	 mov r2,r3
 4024 000a 204B     	 ldr r3,.L174+4
 4025 000c 181C     	 mov r0,r3
 4026 000e 111C     	 mov r1,r2
 4027 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 833:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 4028              	 .loc 3 833 0
 4029 0014 1E4B     	 ldr r3,.L174+8
 4030 0016 1B88     	 ldrh r3,[r3]
 4031 0018 1A1C     	 mov r2,r3
 4032 001a 1E4B     	 ldr r3,.L174+12
 4033 001c 181C     	 mov r0,r3
 4034 001e 111C     	 mov r1,r2
 4035 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 834:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 4036              	 .loc 3 834 0
 4037 0024 1C4B     	 ldr r3,.L174+16
 4038 0026 1B88     	 ldrh r3,[r3]
 4039 0028 1A1C     	 mov r2,r3
 4040 002a 1C4B     	 ldr r3,.L174+20
 4041 002c 181C     	 mov r0,r3
 4042 002e 111C     	 mov r1,r2
 4043 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 835:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 4044              	 .loc 3 835 0
 4045 0034 1A4B     	 ldr r3,.L174+24
 4046 0036 1B88     	 ldrh r3,[r3]
 4047 0038 1A1C     	 mov r2,r3
 4048 003a 1A4B     	 ldr r3,.L174+28
 4049 003c 181C     	 mov r0,r3
 4050 003e 111C     	 mov r1,r2
 4051 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 836:../samuel/samuel_io.c **** 
 837:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 4052              	 .loc 3 837 0
 4053 0044 184B     	 ldr r3,.L174+32
 4054 0046 1B88     	 ldrh r3,[r3]
 4055 0048 1A1C     	 mov r2,r3
 4056 004a 104B     	 ldr r3,.L174+4
 4057 004c 181C     	 mov r0,r3
 4058 004e 111C     	 mov r1,r2
 4059 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 838:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 4060              	 .loc 3 838 0
 4061 0054 154B     	 ldr r3,.L174+36
 4062 0056 1B88     	 ldrh r3,[r3]
 4063 0058 1A1C     	 mov r2,r3
 4064 005a 0E4B     	 ldr r3,.L174+12
 4065 005c 181C     	 mov r0,r3
 4066 005e 111C     	 mov r1,r2
 4067 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 839:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 4068              	 .loc 3 839 0
 4069 0064 124B     	 ldr r3,.L174+40
 4070 0066 1B88     	 ldrh r3,[r3]
 4071 0068 1A1C     	 mov r2,r3
 4072 006a 0C4B     	 ldr r3,.L174+20
 4073 006c 181C     	 mov r0,r3
 4074 006e 111C     	 mov r1,r2
 4075 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 840:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 4076              	 .loc 3 840 0
 4077 0074 0F4B     	 ldr r3,.L174+44
 4078 0076 1B88     	 ldrh r3,[r3]
 4079 0078 1A1C     	 mov r2,r3
 4080 007a 0A4B     	 ldr r3,.L174+28
 4081 007c 181C     	 mov r0,r3
 4082 007e 111C     	 mov r1,r2
 4083 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 841:../samuel/samuel_io.c **** 
 842:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 843:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 844:../samuel/samuel_io.c **** 
 845:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 846:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 847:../samuel/samuel_io.c ****  }
 4084              	 .loc 3 847 0
 4085 0084 BD46     	 mov sp,r7
 4086              	 
 4087 0086 80BD     	 pop {r7,pc}
 4088              	.L175:
 4089              	 .align 2
 4090              	.L174:
 4091 0088 00000000 	 .word Farbe_ww2
 4092 008c 00000000 	 .word PDM_BCCU_0
 4093 0090 00000000 	 .word Farbe_cw2
 4094 0094 00000000 	 .word PDM_BCCU_1
 4095 0098 00000000 	 .word Farbe_ww1
 4096 009c 00000000 	 .word PDM_BCCU_2
 4097 00a0 00000000 	 .word Farbe_cw1
 4098 00a4 00000000 	 .word PDM_BCCU_3
 4099 00a8 00000000 	 .word linearwalk_ww2
 4100 00ac 00000000 	 .word linearwalk_cw2
 4101 00b0 00000000 	 .word linearwalk_ww1
 4102 00b4 00000000 	 .word linearwalk_cw1
 4103              	 .cfi_endproc
 4104              	.LFE329:
 4106              	 .section .text.bcuAktBerechnung,"ax",%progbits
 4107              	 .align 2
 4108              	 .global bcuAktBerechnung
 4109              	 .code 16
 4110              	 .thumb_func
 4112              	bcuAktBerechnung:
 4113              	.LFB330:
 848:../samuel/samuel_io.c ****  //----------------------------------
 849:../samuel/samuel_io.c **** 
 850:../samuel/samuel_io.c **** 
 851:../samuel/samuel_io.c ****  //----------------------------------
 852:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 853:../samuel/samuel_io.c ****   {
 4114              	 .loc 3 853 0
 4115              	 .cfi_startproc
 4116 0000 80B5     	 push {r7,lr}
 4117              	.LCFI97:
 4118              	 .cfi_def_cfa_offset 8
 4119              	 .cfi_offset 7,-8
 4120              	 .cfi_offset 14,-4
 4121 0002 82B0     	 sub sp,sp,#8
 4122              	.LCFI98:
 4123              	 .cfi_def_cfa_offset 16
 4124 0004 00AF     	 add r7,sp,#0
 4125              	.LCFI99:
 4126              	 .cfi_def_cfa_register 7
 854:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 855:../samuel/samuel_io.c **** 
 856:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4127              	 .loc 3 856 0
 4128 0006 284B     	 ldr r3,.L177
 4129 0008 1B88     	 ldrh r3,[r3]
 4130 000a 1B0A     	 lsr r3,r3,#8
 4131 000c 9AB2     	 uxth r2,r3
 4132 000e 274B     	 ldr r3,.L177+4
 4133 0010 1A80     	 strh r2,[r3]
 857:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4134              	 .loc 3 857 0
 4135 0012 254B     	 ldr r3,.L177
 4136 0014 1B88     	 ldrh r3,[r3]
 4137 0016 1B0A     	 lsr r3,r3,#8
 4138 0018 9AB2     	 uxth r2,r3
 4139 001a 254B     	 ldr r3,.L177+8
 4140 001c 1A80     	 strh r2,[r3]
 858:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4141              	 .loc 3 858 0
 4142 001e 224B     	 ldr r3,.L177
 4143 0020 1B88     	 ldrh r3,[r3]
 4144 0022 FF22     	 mov r2,#255
 4145 0024 1340     	 and r3,r2
 4146 0026 9AB2     	 uxth r2,r3
 4147 0028 224B     	 ldr r3,.L177+12
 4148 002a 1A80     	 strh r2,[r3]
 859:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4149              	 .loc 3 859 0
 4150 002c 1E4B     	 ldr r3,.L177
 4151 002e 1B88     	 ldrh r3,[r3]
 4152 0030 FF22     	 mov r2,#255
 4153 0032 1340     	 and r3,r2
 4154 0034 9AB2     	 uxth r2,r3
 4155 0036 204B     	 ldr r3,.L177+16
 4156 0038 1A80     	 strh r2,[r3]
 860:../samuel/samuel_io.c **** 
 861:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4157              	 .loc 3 861 0
 4158 003a 204B     	 ldr r3,.L177+20
 4159 003c 1B88     	 ldrh r3,[r3]
 4160 003e 1A1C     	 mov r2,r3
 4161 0040 1A4B     	 ldr r3,.L177+4
 4162 0042 1B88     	 ldrh r3,[r3]
 4163 0044 5343     	 mul r3,r2
 4164 0046 7B60     	 str r3,[r7,#4]
 862:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4165              	 .loc 3 862 0
 4166 0048 7B68     	 ldr r3,[r7,#4]
 4167 004a 1B0A     	 lsr r3,r3,#8
 4168 004c 1B09     	 lsr r3,r3,#4
 4169 004e 9AB2     	 uxth r2,r3
 4170 0050 1B4B     	 ldr r3,.L177+24
 4171 0052 1A80     	 strh r2,[r3]
 863:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4172              	 .loc 3 863 0
 4173 0054 194B     	 ldr r3,.L177+20
 4174 0056 1B88     	 ldrh r3,[r3]
 4175 0058 1A1C     	 mov r2,r3
 4176 005a 164B     	 ldr r3,.L177+12
 4177 005c 1B88     	 ldrh r3,[r3]
 4178 005e 5343     	 mul r3,r2
 4179 0060 7B60     	 str r3,[r7,#4]
 864:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4180              	 .loc 3 864 0
 4181 0062 7B68     	 ldr r3,[r7,#4]
 4182 0064 1B0A     	 lsr r3,r3,#8
 4183 0066 1B09     	 lsr r3,r3,#4
 4184 0068 9AB2     	 uxth r2,r3
 4185 006a 164B     	 ldr r3,.L177+28
 4186 006c 1A80     	 strh r2,[r3]
 865:../samuel/samuel_io.c **** 
 866:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4187              	 .loc 3 866 0
 4188 006e 164B     	 ldr r3,.L177+32
 4189 0070 1B88     	 ldrh r3,[r3]
 4190 0072 1A1C     	 mov r2,r3
 4191 0074 0E4B     	 ldr r3,.L177+8
 4192 0076 1B88     	 ldrh r3,[r3]
 4193 0078 5343     	 mul r3,r2
 4194 007a 7B60     	 str r3,[r7,#4]
 867:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4195              	 .loc 3 867 0
 4196 007c 7B68     	 ldr r3,[r7,#4]
 4197 007e 1B0A     	 lsr r3,r3,#8
 4198 0080 1B09     	 lsr r3,r3,#4
 4199 0082 9AB2     	 uxth r2,r3
 4200 0084 114B     	 ldr r3,.L177+36
 4201 0086 1A80     	 strh r2,[r3]
 868:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4202              	 .loc 3 868 0
 4203 0088 0F4B     	 ldr r3,.L177+32
 4204 008a 1B88     	 ldrh r3,[r3]
 4205 008c 1A1C     	 mov r2,r3
 4206 008e 0A4B     	 ldr r3,.L177+16
 4207 0090 1B88     	 ldrh r3,[r3]
 4208 0092 5343     	 mul r3,r2
 4209 0094 7B60     	 str r3,[r7,#4]
 869:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4210              	 .loc 3 869 0
 4211 0096 7B68     	 ldr r3,[r7,#4]
 4212 0098 1B0A     	 lsr r3,r3,#8
 4213 009a 1B09     	 lsr r3,r3,#4
 4214 009c 9AB2     	 uxth r2,r3
 4215 009e 0C4B     	 ldr r3,.L177+40
 4216 00a0 1A80     	 strh r2,[r3]
 870:../samuel/samuel_io.c ****   }
 4217              	 .loc 3 870 0
 4218 00a2 BD46     	 mov sp,r7
 4219 00a4 02B0     	 add sp,sp,#8
 4220              	 
 4221 00a6 80BD     	 pop {r7,pc}
 4222              	.L178:
 4223              	 .align 2
 4224              	.L177:
 4225 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4226 00ac 00000000 	 .word Farbe_ww1_Quot
 4227 00b0 00000000 	 .word Farbe_cw1_Quot
 4228 00b4 00000000 	 .word Farbe_ww2_Quot
 4229 00b8 00000000 	 .word Farbe_cw2_Quot
 4230 00bc 00000000 	 .word dimAkt_Ww
 4231 00c0 00000000 	 .word Farbe_ww1
 4232 00c4 00000000 	 .word Farbe_ww2
 4233 00c8 00000000 	 .word dimAkt_Cw
 4234 00cc 00000000 	 .word Farbe_cw1
 4235 00d0 00000000 	 .word Farbe_cw2
 4236              	 .cfi_endproc
 4237              	.LFE330:
 4239              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4240              	 .align 2
 4241              	 .global bcudirAktBerechnung
 4242              	 .code 16
 4243              	 .thumb_func
 4245              	bcudirAktBerechnung:
 4246              	.LFB331:
 871:../samuel/samuel_io.c **** 
 872:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 873:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 874:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 875:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 876:../samuel/samuel_io.c **** 
 877:../samuel/samuel_io.c ****   {
 4247              	 .loc 3 877 0
 4248              	 .cfi_startproc
 4249 0000 80B5     	 push {r7,lr}
 4250              	.LCFI100:
 4251              	 .cfi_def_cfa_offset 8
 4252              	 .cfi_offset 7,-8
 4253              	 .cfi_offset 14,-4
 4254 0002 82B0     	 sub sp,sp,#8
 4255              	.LCFI101:
 4256              	 .cfi_def_cfa_offset 16
 4257 0004 00AF     	 add r7,sp,#0
 4258              	.LCFI102:
 4259              	 .cfi_def_cfa_register 7
 878:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 879:../samuel/samuel_io.c **** 
 880:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4260              	 .loc 3 880 0
 4261 0006 2A4B     	 ldr r3,.L180
 4262 0008 0122     	 mov r2,#1
 4263 000a 5242     	 neg r2,r2
 4264 000c 1A80     	 strh r2,[r3]
 881:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4265              	 .loc 3 881 0
 4266 000e 284B     	 ldr r3,.L180
 4267 0010 1B88     	 ldrh r3,[r3]
 4268 0012 1B0A     	 lsr r3,r3,#8
 4269 0014 9AB2     	 uxth r2,r3
 4270 0016 274B     	 ldr r3,.L180+4
 4271 0018 1A80     	 strh r2,[r3]
 882:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4272              	 .loc 3 882 0
 4273 001a 254B     	 ldr r3,.L180
 4274 001c 1B88     	 ldrh r3,[r3]
 4275 001e 1B0A     	 lsr r3,r3,#8
 4276 0020 9AB2     	 uxth r2,r3
 4277 0022 254B     	 ldr r3,.L180+8
 4278 0024 1A80     	 strh r2,[r3]
 883:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4279              	 .loc 3 883 0
 4280 0026 224B     	 ldr r3,.L180
 4281 0028 1B88     	 ldrh r3,[r3]
 4282 002a FF22     	 mov r2,#255
 4283 002c 1340     	 and r3,r2
 4284 002e 9AB2     	 uxth r2,r3
 4285 0030 224B     	 ldr r3,.L180+12
 4286 0032 1A80     	 strh r2,[r3]
 884:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4287              	 .loc 3 884 0
 4288 0034 1E4B     	 ldr r3,.L180
 4289 0036 1B88     	 ldrh r3,[r3]
 4290 0038 FF22     	 mov r2,#255
 4291 003a 1340     	 and r3,r2
 4292 003c 9AB2     	 uxth r2,r3
 4293 003e 204B     	 ldr r3,.L180+16
 4294 0040 1A80     	 strh r2,[r3]
 885:../samuel/samuel_io.c **** 
 886:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4295              	 .loc 3 886 0
 4296 0042 204B     	 ldr r3,.L180+20
 4297 0044 1B88     	 ldrh r3,[r3]
 4298 0046 1A1C     	 mov r2,r3
 4299 0048 1A4B     	 ldr r3,.L180+4
 4300 004a 1B88     	 ldrh r3,[r3]
 4301 004c 5343     	 mul r3,r2
 4302 004e 7B60     	 str r3,[r7,#4]
 887:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4303              	 .loc 3 887 0
 4304 0050 7B68     	 ldr r3,[r7,#4]
 4305 0052 1B0A     	 lsr r3,r3,#8
 4306 0054 1B09     	 lsr r3,r3,#4
 4307 0056 9AB2     	 uxth r2,r3
 4308 0058 1B4B     	 ldr r3,.L180+24
 4309 005a 1A80     	 strh r2,[r3]
 888:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4310              	 .loc 3 888 0
 4311 005c 194B     	 ldr r3,.L180+20
 4312 005e 1B88     	 ldrh r3,[r3]
 4313 0060 1A1C     	 mov r2,r3
 4314 0062 164B     	 ldr r3,.L180+12
 4315 0064 1B88     	 ldrh r3,[r3]
 4316 0066 5343     	 mul r3,r2
 4317 0068 7B60     	 str r3,[r7,#4]
 889:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4318              	 .loc 3 889 0
 4319 006a 7B68     	 ldr r3,[r7,#4]
 4320 006c 1B0A     	 lsr r3,r3,#8
 4321 006e 1B09     	 lsr r3,r3,#4
 4322 0070 9AB2     	 uxth r2,r3
 4323 0072 164B     	 ldr r3,.L180+28
 4324 0074 1A80     	 strh r2,[r3]
 890:../samuel/samuel_io.c **** 
 891:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4325              	 .loc 3 891 0
 4326 0076 164B     	 ldr r3,.L180+32
 4327 0078 1B88     	 ldrh r3,[r3]
 4328 007a 1A1C     	 mov r2,r3
 4329 007c 0E4B     	 ldr r3,.L180+8
 4330 007e 1B88     	 ldrh r3,[r3]
 4331 0080 5343     	 mul r3,r2
 4332 0082 7B60     	 str r3,[r7,#4]
 892:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4333              	 .loc 3 892 0
 4334 0084 7B68     	 ldr r3,[r7,#4]
 4335 0086 1B0A     	 lsr r3,r3,#8
 4336 0088 1B09     	 lsr r3,r3,#4
 4337 008a 9AB2     	 uxth r2,r3
 4338 008c 114B     	 ldr r3,.L180+36
 4339 008e 1A80     	 strh r2,[r3]
 893:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4340              	 .loc 3 893 0
 4341 0090 0F4B     	 ldr r3,.L180+32
 4342 0092 1B88     	 ldrh r3,[r3]
 4343 0094 1A1C     	 mov r2,r3
 4344 0096 0A4B     	 ldr r3,.L180+16
 4345 0098 1B88     	 ldrh r3,[r3]
 4346 009a 5343     	 mul r3,r2
 4347 009c 7B60     	 str r3,[r7,#4]
 894:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4348              	 .loc 3 894 0
 4349 009e 7B68     	 ldr r3,[r7,#4]
 4350 00a0 1B0A     	 lsr r3,r3,#8
 4351 00a2 1B09     	 lsr r3,r3,#4
 4352 00a4 9AB2     	 uxth r2,r3
 4353 00a6 0C4B     	 ldr r3,.L180+40
 4354 00a8 1A80     	 strh r2,[r3]
 895:../samuel/samuel_io.c ****   }
 4355              	 .loc 3 895 0
 4356 00aa BD46     	 mov sp,r7
 4357 00ac 02B0     	 add sp,sp,#8
 4358              	 
 4359 00ae 80BD     	 pop {r7,pc}
 4360              	.L181:
 4361              	 .align 2
 4362              	.L180:
 4363 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4364 00b4 00000000 	 .word Farbe_ww1_Quot
 4365 00b8 00000000 	 .word Farbe_cw1_Quot
 4366 00bc 00000000 	 .word Farbe_ww2_Quot
 4367 00c0 00000000 	 .word Farbe_cw2_Quot
 4368 00c4 00000000 	 .word dimAkt_Ww
 4369 00c8 00000000 	 .word Farbe_ww1
 4370 00cc 00000000 	 .word Farbe_ww2
 4371 00d0 00000000 	 .word dimAkt_Cw
 4372 00d4 00000000 	 .word Farbe_cw1
 4373 00d8 00000000 	 .word Farbe_cw2
 4374              	 .cfi_endproc
 4375              	.LFE331:
 4377              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4378              	 .align 2
 4379              	 .global bcuColorBerechnung
 4380              	 .code 16
 4381              	 .thumb_func
 4383              	bcuColorBerechnung:
 4384              	.LFB332:
 896:../samuel/samuel_io.c ****  //----------------------------------
 897:../samuel/samuel_io.c **** 
 898:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 899:../samuel/samuel_io.c ****   {
 4385              	 .loc 3 899 0
 4386              	 .cfi_startproc
 4387 0000 80B5     	 push {r7,lr}
 4388              	.LCFI103:
 4389              	 .cfi_def_cfa_offset 8
 4390              	 .cfi_offset 7,-8
 4391              	 .cfi_offset 14,-4
 4392 0002 82B0     	 sub sp,sp,#8
 4393              	.LCFI104:
 4394              	 .cfi_def_cfa_offset 16
 4395 0004 00AF     	 add r7,sp,#0
 4396              	.LCFI105:
 4397              	 .cfi_def_cfa_register 7
 900:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 901:../samuel/samuel_io.c **** 
 902:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4398              	 .loc 3 902 0
 4399 0006 1E4B     	 ldr r3,.L183
 4400 0008 0122     	 mov r2,#1
 4401 000a 5242     	 neg r2,r2
 4402 000c 1A80     	 strh r2,[r3]
 903:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4403              	 .loc 3 903 0
 4404 000e 1C4B     	 ldr r3,.L183
 4405 0010 1B88     	 ldrh r3,[r3]
 4406 0012 1A1C     	 mov r2,r3
 4407 0014 1B4B     	 ldr r3,.L183+4
 4408 0016 1B88     	 ldrh r3,[r3]
 4409 0018 5343     	 mul r3,r2
 4410 001a 7B60     	 str r3,[r7,#4]
 904:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4411              	 .loc 3 904 0
 4412 001c 7B68     	 ldr r3,[r7,#4]
 4413 001e 1B0C     	 lsr r3,r3,#16
 4414 0020 7B60     	 str r3,[r7,#4]
 905:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4415              	 .loc 3 905 0
 4416 0022 194B     	 ldr r3,.L183+8
 4417 0024 1B88     	 ldrh r3,[r3]
 4418 0026 1A1C     	 mov r2,r3
 4419 0028 184B     	 ldr r3,.L183+12
 4420 002a 9B1A     	 sub r3,r3,r2
 4421 002c 1A1C     	 mov r2,r3
 4422 002e 7B68     	 ldr r3,[r7,#4]
 4423 0030 5343     	 mul r3,r2
 4424 0032 7B60     	 str r3,[r7,#4]
 906:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4425              	 .loc 3 906 0
 4426 0034 7B68     	 ldr r3,[r7,#4]
 4427 0036 1B0C     	 lsr r3,r3,#16
 4428 0038 7B60     	 str r3,[r7,#4]
 907:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4429              	 .loc 3 907 0
 4430 003a 7B68     	 ldr r3,[r7,#4]
 4431 003c 9AB2     	 uxth r2,r3
 4432 003e 104B     	 ldr r3,.L183
 4433 0040 1A80     	 strh r2,[r3]
 908:../samuel/samuel_io.c **** 
 909:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4434              	 .loc 3 909 0
 4435 0042 134B     	 ldr r3,.L183+16
 4436 0044 0122     	 mov r2,#1
 4437 0046 5242     	 neg r2,r2
 4438 0048 1A80     	 strh r2,[r3]
 910:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4439              	 .loc 3 910 0
 4440 004a 114B     	 ldr r3,.L183+16
 4441 004c 1B88     	 ldrh r3,[r3]
 4442 004e 1A1C     	 mov r2,r3
 4443 0050 0C4B     	 ldr r3,.L183+4
 4444 0052 1B88     	 ldrh r3,[r3]
 4445 0054 5343     	 mul r3,r2
 4446 0056 7B60     	 str r3,[r7,#4]
 911:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4447              	 .loc 3 911 0
 4448 0058 7B68     	 ldr r3,[r7,#4]
 4449 005a 1B0C     	 lsr r3,r3,#16
 4450 005c 7B60     	 str r3,[r7,#4]
 912:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4451              	 .loc 3 912 0
 4452 005e 0A4B     	 ldr r3,.L183+8
 4453 0060 1B88     	 ldrh r3,[r3]
 4454 0062 1A1C     	 mov r2,r3
 4455 0064 7B68     	 ldr r3,[r7,#4]
 4456 0066 5343     	 mul r3,r2
 4457 0068 7B60     	 str r3,[r7,#4]
 913:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4458              	 .loc 3 913 0
 4459 006a 7B68     	 ldr r3,[r7,#4]
 4460 006c 1B0C     	 lsr r3,r3,#16
 4461 006e 7B60     	 str r3,[r7,#4]
 914:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4462              	 .loc 3 914 0
 4463 0070 7B68     	 ldr r3,[r7,#4]
 4464 0072 9AB2     	 uxth r2,r3
 4465 0074 064B     	 ldr r3,.L183+16
 4466 0076 1A80     	 strh r2,[r3]
 915:../samuel/samuel_io.c ****   }
 4467              	 .loc 3 915 0
 4468 0078 BD46     	 mov sp,r7
 4469 007a 02B0     	 add sp,sp,#8
 4470              	 
 4471 007c 80BD     	 pop {r7,pc}
 4472              	.L184:
 4473 007e C046     	 .align 2
 4474              	.L183:
 4475 0080 00000000 	 .word dimAkt_Ww
 4476 0084 00000000 	 .word Brightness_Gen
 4477 0088 00000000 	 .word ColorQuot_Gen
 4478 008c FFFF0000 	 .word 65535
 4479 0090 00000000 	 .word dimAkt_Cw
 4480              	 .cfi_endproc
 4481              	.LFE332:
 4483              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4484              	 .align 2
 4485              	 .global Offlight_zahler_write
 4486              	 .code 16
 4487              	 .thumb_func
 4489              	Offlight_zahler_write:
 4490              	.LFB333:
 916:../samuel/samuel_io.c ****  //----------------------------------
 917:../samuel/samuel_io.c **** 
 918:../samuel/samuel_io.c **** 
 919:../samuel/samuel_io.c **** 
 920:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 921:../samuel/samuel_io.c ****  {
 4491              	 .loc 3 921 0
 4492              	 .cfi_startproc
 4493 0000 80B5     	 push {r7,lr}
 4494              	.LCFI106:
 4495              	 .cfi_def_cfa_offset 8
 4496              	 .cfi_offset 7,-8
 4497              	 .cfi_offset 14,-4
 4498 0002 82B0     	 sub sp,sp,#8
 4499              	.LCFI107:
 4500              	 .cfi_def_cfa_offset 16
 4501 0004 00AF     	 add r7,sp,#0
 4502              	.LCFI108:
 4503              	 .cfi_def_cfa_register 7
 922:../samuel/samuel_io.c ****      uint8_t a;
 923:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4504              	 .loc 3 923 0
 4505 0006 3B4B     	 ldr r3,.L191
 4506 0008 1B78     	 ldrb r3,[r3]
 4507 000a 052B     	 cmp r3,#5
 4508 000c 00D0     	 beq .LCB3740
 4509 000e 6EE0     	 b .L185
 4510              	.LCB3740:
 924:../samuel/samuel_io.c **** 	 {
 925:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4511              	 .loc 3 925 0
 4512 0010 394B     	 ldr r3,.L191+4
 4513 0012 1B88     	 ldrh r3,[r3]
 4514 0014 0133     	 add r3,r3,#1
 4515 0016 9AB2     	 uxth r2,r3
 4516 0018 374B     	 ldr r3,.L191+4
 4517 001a 1A80     	 strh r2,[r3]
 926:../samuel/samuel_io.c **** 
 927:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4518              	 .loc 3 927 0
 4519 001c 364B     	 ldr r3,.L191+4
 4520 001e 1B88     	 ldrh r3,[r3]
 4521 0020 3B2B     	 cmp r3,#59
 4522 0022 64D9     	 bls .L185
 928:../samuel/samuel_io.c **** 	  {
 929:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4523              	 .loc 3 929 0
 4524 0024 344B     	 ldr r3,.L191+4
 4525 0026 0022     	 mov r2,#0
 4526 0028 1A80     	 strh r2,[r3]
 930:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4527              	 .loc 3 930 0
 4528 002a FFF7FEFF 	 bl read_off_light_EEprom
 4529 002e 021C     	 mov r2,r0
 4530 0030 FB1D     	 add r3,r7,#7
 4531 0032 1A70     	 strb r2,[r3]
 931:../samuel/samuel_io.c **** 			if (a == 0x03)
 4532              	 .loc 3 931 0
 4533 0034 FB1D     	 add r3,r7,#7
 4534 0036 1B78     	 ldrb r3,[r3]
 4535 0038 032B     	 cmp r3,#3
 4536 003a 52D1     	 bne .L187
 932:../samuel/samuel_io.c **** 			{
 933:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4537              	 .loc 3 933 0
 4538 003c 2F4B     	 ldr r3,.L191+8
 4539 003e 1A88     	 ldrh r2,[r3]
 4540 0040 2F4B     	 ldr r3,.L191+12
 4541 0042 1A80     	 strh r2,[r3]
 934:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4542              	 .loc 3 934 0
 4543 0044 2F4B     	 ldr r3,.L191+16
 4544 0046 1A88     	 ldrh r2,[r3]
 4545 0048 2F4B     	 ldr r3,.L191+20
 4546 004a 1A80     	 strh r2,[r3]
 935:../samuel/samuel_io.c **** 
 936:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4547              	 .loc 3 936 0
 4548 004c 2F4B     	 ldr r3,.L191+24
 4549 004e 1B79     	 ldrb r3,[r3,#4]
 4550 0050 9AB2     	 uxth r2,r3
 4551 0052 2B4B     	 ldr r3,.L191+12
 4552 0054 1B88     	 ldrh r3,[r3]
 4553 0056 1B0A     	 lsr r3,r3,#8
 4554 0058 9BB2     	 uxth r3,r3
 4555 005a 9A42     	 cmp r2,r3
 4556 005c 20D1     	 bne .L188
 4557              	 .loc 3 936 0 is_stmt 0 discriminator 1
 4558 005e 2B4B     	 ldr r3,.L191+24
 4559 0060 5B79     	 ldrb r3,[r3,#5]
 4560 0062 1A1C     	 mov r2,r3
 4561 0064 264B     	 ldr r3,.L191+12
 4562 0066 1B88     	 ldrh r3,[r3]
 4563 0068 191C     	 mov r1,r3
 4564 006a FF23     	 mov r3,#255
 4565 006c 0B40     	 and r3,r1
 4566 006e 9A42     	 cmp r2,r3
 4567 0070 16D1     	 bne .L188
 4568              	 .loc 3 936 0 discriminator 2
 4569 0072 264B     	 ldr r3,.L191+24
 4570 0074 9B79     	 ldrb r3,[r3,#6]
 4571 0076 9AB2     	 uxth r2,r3
 4572 0078 234B     	 ldr r3,.L191+20
 4573 007a 1B88     	 ldrh r3,[r3]
 4574 007c 1B0A     	 lsr r3,r3,#8
 4575 007e 9BB2     	 uxth r3,r3
 4576 0080 9A42     	 cmp r2,r3
 4577 0082 0DD1     	 bne .L188
 4578              	 .loc 3 936 0 discriminator 3
 4579 0084 214B     	 ldr r3,.L191+24
 4580 0086 DB79     	 ldrb r3,[r3,#7]
 4581 0088 1A1C     	 mov r2,r3
 4582 008a 1F4B     	 ldr r3,.L191+20
 4583 008c 1B88     	 ldrh r3,[r3]
 4584 008e 191C     	 mov r1,r3
 4585 0090 FF23     	 mov r3,#255
 4586 0092 0B40     	 and r3,r1
 4587 0094 9A42     	 cmp r2,r3
 4588 0096 03D1     	 bne .L188
 937:../samuel/samuel_io.c **** 			 {
 938:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4589              	 .loc 3 938 0 is_stmt 1
 4590 0098 174B     	 ldr r3,.L191+4
 4591 009a 0022     	 mov r2,#0
 4592 009c 1A80     	 strh r2,[r3]
 4593 009e 23E0     	 b .L190
 4594              	.L188:
 939:../samuel/samuel_io.c **** 			 }
 940:../samuel/samuel_io.c **** 			 else{
 941:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4595              	 .loc 3 941 0
 4596 00a0 174B     	 ldr r3,.L191+12
 4597 00a2 1B88     	 ldrh r3,[r3]
 4598 00a4 1B0A     	 lsr r3,r3,#8
 4599 00a6 9BB2     	 uxth r3,r3
 4600 00a8 DAB2     	 uxtb r2,r3
 4601 00aa 184B     	 ldr r3,.L191+24
 4602 00ac 1A71     	 strb r2,[r3,#4]
 942:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4603              	 .loc 3 942 0
 4604 00ae 144B     	 ldr r3,.L191+12
 4605 00b0 1B88     	 ldrh r3,[r3]
 4606 00b2 DAB2     	 uxtb r2,r3
 4607 00b4 154B     	 ldr r3,.L191+24
 4608 00b6 5A71     	 strb r2,[r3,#5]
 943:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4609              	 .loc 3 943 0
 4610 00b8 134B     	 ldr r3,.L191+20
 4611 00ba 1B88     	 ldrh r3,[r3]
 4612 00bc 1B0A     	 lsr r3,r3,#8
 4613 00be 9BB2     	 uxth r3,r3
 4614 00c0 DAB2     	 uxtb r2,r3
 4615 00c2 124B     	 ldr r3,.L191+24
 4616 00c4 9A71     	 strb r2,[r3,#6]
 944:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4617              	 .loc 3 944 0
 4618 00c6 104B     	 ldr r3,.L191+20
 4619 00c8 1B88     	 ldrh r3,[r3]
 4620 00ca DAB2     	 uxtb r2,r3
 4621 00cc 0F4B     	 ldr r3,.L191+24
 4622 00ce DA71     	 strb r2,[r3,#7]
 945:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4623              	 .loc 3 945 0
 4624 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4625 00d4 021C     	 mov r2,r0
 4626 00d6 FB1D     	 add r3,r7,#7
 4627 00d8 1A70     	 strb r2,[r3]
 946:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4628              	 .loc 3 946 0
 4629 00da 074B     	 ldr r3,.L191+4
 4630 00dc 0022     	 mov r2,#0
 4631 00de 1A80     	 strh r2,[r3]
 4632 00e0 02E0     	 b .L190
 4633              	.L187:
 947:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 948:../samuel/samuel_io.c **** 			 }
 949:../samuel/samuel_io.c **** 			}
 950:../samuel/samuel_io.c **** 			else {
 951:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4634              	 .loc 3 951 0
 4635 00e2 054B     	 ldr r3,.L191+4
 4636 00e4 1E22     	 mov r2,#30
 4637 00e6 1A80     	 strh r2,[r3]
 4638              	.L190:
 952:../samuel/samuel_io.c **** 			}
 953:../samuel/samuel_io.c **** 
 954:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4639              	 .loc 3 954 0
 4640 00e8 034B     	 ldr r3,.L191+4
 4641 00ea 0022     	 mov r2,#0
 4642 00ec 1A80     	 strh r2,[r3]
 4643              	.L185:
 955:../samuel/samuel_io.c **** 	  }//zahler_offlight
 956:../samuel/samuel_io.c **** 	 }//regonoff
 957:../samuel/samuel_io.c ****  }
 4644              	 .loc 3 957 0
 4645 00ee BD46     	 mov sp,r7
 4646 00f0 02B0     	 add sp,sp,#8
 4647              	 
 4648 00f2 80BD     	 pop {r7,pc}
 4649              	.L192:
 4650              	 .align 2
 4651              	.L191:
 4652 00f4 00000000 	 .word RegOnOff
 4653 00f8 00000000 	 .word zahler_offlight
 4654 00fc 00000000 	 .word dimAkt_Ww
 4655 0100 00000000 	 .word dimOff_Ww
 4656 0104 00000000 	 .word dimAkt_Cw
 4657 0108 00000000 	 .word dimOff_Cw
 4658 010c 00000000 	 .word ReadBuffer2
 4659              	 .cfi_endproc
 4660              	.LFE333:
 4662              	 .section .text.plus39V_stop,"ax",%progbits
 4663              	 .align 2
 4664              	 .global plus39V_stop
 4665              	 .code 16
 4666              	 .thumb_func
 4668              	plus39V_stop:
 4669              	.LFB334:
 958:../samuel/samuel_io.c **** 
 959:../samuel/samuel_io.c ****  //----------------------------------------------------
 960:../samuel/samuel_io.c **** 
 961:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
 962:../samuel/samuel_io.c ****   {
 4670              	 .loc 3 962 0
 4671              	 .cfi_startproc
 4672 0000 80B5     	 push {r7,lr}
 4673              	.LCFI109:
 4674              	 .cfi_def_cfa_offset 8
 4675              	 .cfi_offset 7,-8
 4676              	 .cfi_offset 14,-4
 4677 0002 00AF     	 add r7,sp,#0
 4678              	.LCFI110:
 4679              	 .cfi_def_cfa_register 7
 963:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 964:../samuel/samuel_io.c **** 
 965:../samuel/samuel_io.c **** 
 966:../samuel/samuel_io.c ****   }
 4680              	 .loc 3 966 0
 4681 0004 BD46     	 mov sp,r7
 4682              	 
 4683 0006 80BD     	 pop {r7,pc}
 4684              	 .cfi_endproc
 4685              	.LFE334:
 4687              	 .section .text.plus39V_start,"ax",%progbits
 4688              	 .align 2
 4689              	 .global plus39V_start
 4690              	 .code 16
 4691              	 .thumb_func
 4693              	plus39V_start:
 4694              	.LFB335:
 967:../samuel/samuel_io.c **** 
 968:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
 969:../samuel/samuel_io.c ****   {
 4695              	 .loc 3 969 0
 4696              	 .cfi_startproc
 4697 0000 80B5     	 push {r7,lr}
 4698              	.LCFI111:
 4699              	 .cfi_def_cfa_offset 8
 4700              	 .cfi_offset 7,-8
 4701              	 .cfi_offset 14,-4
 4702 0002 00AF     	 add r7,sp,#0
 4703              	.LCFI112:
 4704              	 .cfi_def_cfa_register 7
 970:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 971:../samuel/samuel_io.c **** 
 972:../samuel/samuel_io.c ****   }
 4705              	 .loc 3 972 0
 4706 0004 BD46     	 mov sp,r7
 4707              	 
 4708 0006 80BD     	 pop {r7,pc}
 4709              	 .cfi_endproc
 4710              	.LFE335:
 4712              	 .section .text.Time1msec,"ax",%progbits
 4713              	 .align 2
 4714              	 .global Time1msec
 4715              	 .code 16
 4716              	 .thumb_func
 4718              	Time1msec:
 4719              	.LFB336:
 973:../samuel/samuel_io.c **** 
 974:../samuel/samuel_io.c ****  //----------------------------------
 975:../samuel/samuel_io.c **** 
 976:../samuel/samuel_io.c ****   void Time1msec (void) //
 977:../samuel/samuel_io.c ****   {
 4720              	 .loc 3 977 0
 4721              	 .cfi_startproc
 4722 0000 80B5     	 push {r7,lr}
 4723              	.LCFI113:
 4724              	 .cfi_def_cfa_offset 8
 4725              	 .cfi_offset 7,-8
 4726              	 .cfi_offset 14,-4
 4727 0002 00AF     	 add r7,sp,#0
 4728              	.LCFI114:
 4729              	 .cfi_def_cfa_register 7
 978:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4730              	 .loc 3 978 0
 4731 0004 024B     	 ldr r3,.L196
 4732 0006 181C     	 mov r0,r3
 4733 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
 979:../samuel/samuel_io.c **** 
 980:../samuel/samuel_io.c ****   }
 4734              	 .loc 3 980 0
 4735 000c BD46     	 mov sp,r7
 4736              	 
 4737 000e 80BD     	 pop {r7,pc}
 4738              	.L197:
 4739              	 .align 2
 4740              	.L196:
 4741 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4742              	 .cfi_endproc
 4743              	.LFE336:
 4745              	 .section .text.Time20msec,"ax",%progbits
 4746              	 .align 2
 4747              	 .global Time20msec
 4748              	 .code 16
 4749              	 .thumb_func
 4751              	Time20msec:
 4752              	.LFB337:
 981:../samuel/samuel_io.c ****   //----------------------------------
 982:../samuel/samuel_io.c **** 
 983:../samuel/samuel_io.c ****    void Time20msec (void) //
 984:../samuel/samuel_io.c ****    {
 4753              	 .loc 3 984 0
 4754              	 .cfi_startproc
 4755 0000 80B5     	 push {r7,lr}
 4756              	.LCFI115:
 4757              	 .cfi_def_cfa_offset 8
 4758              	 .cfi_offset 7,-8
 4759              	 .cfi_offset 14,-4
 4760 0002 00AF     	 add r7,sp,#0
 4761              	.LCFI116:
 4762              	 .cfi_def_cfa_register 7
 985:../samuel/samuel_io.c **** 
 986:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 987:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 4763              	 .loc 3 987 0
 4764 0004 364B     	 ldr r3,.L205
 4765 0006 1B88     	 ldrh r3,[r3]
 4766 0008 1A1C     	 mov r2,r3
 4767 000a 131C     	 mov r3,r2
 4768 000c 5B00     	 lsl r3,r3,#1
 4769 000e 9B18     	 add r3,r3,r2
 4770 0010 344A     	 ldr r2,.L205+4
 4771 0012 1288     	 ldrh r2,[r2]
 4772 0014 9B18     	 add r3,r3,r2
 4773 0016 002B     	 cmp r3,#0
 4774 0018 00DA     	 bge .L199
 4775 001a 0333     	 add r3,r3,#3
 4776              	.L199:
 4777 001c 9B10     	 asr r3,r3,#2
 4778 001e 9AB2     	 uxth r2,r3
 4779 0020 2F4B     	 ldr r3,.L205
 4780 0022 1A80     	 strh r2,[r3]
 988:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 4781              	 .loc 3 988 0
 4782 0024 304B     	 ldr r3,.L205+8
 4783 0026 1B88     	 ldrh r3,[r3]
 4784 0028 1A1C     	 mov r2,r3
 4785 002a 131C     	 mov r3,r2
 4786 002c 5B00     	 lsl r3,r3,#1
 4787 002e 9B18     	 add r3,r3,r2
 4788 0030 2E4A     	 ldr r2,.L205+12
 4789 0032 1288     	 ldrh r2,[r2]
 4790 0034 9B18     	 add r3,r3,r2
 4791 0036 002B     	 cmp r3,#0
 4792 0038 00DA     	 bge .L200
 4793 003a 0333     	 add r3,r3,#3
 4794              	.L200:
 4795 003c 9B10     	 asr r3,r3,#2
 4796 003e 9AB2     	 uxth r2,r3
 4797 0040 294B     	 ldr r3,.L205+8
 4798 0042 1A80     	 strh r2,[r3]
 989:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 4799              	 .loc 3 989 0
 4800 0044 2A4B     	 ldr r3,.L205+16
 4801 0046 1B88     	 ldrh r3,[r3]
 4802 0048 1A1C     	 mov r2,r3
 4803 004a 131C     	 mov r3,r2
 4804 004c 5B00     	 lsl r3,r3,#1
 4805 004e 9B18     	 add r3,r3,r2
 4806 0050 284A     	 ldr r2,.L205+20
 4807 0052 1288     	 ldrh r2,[r2]
 4808 0054 9B18     	 add r3,r3,r2
 4809 0056 002B     	 cmp r3,#0
 4810 0058 00DA     	 bge .L201
 4811 005a 0333     	 add r3,r3,#3
 4812              	.L201:
 4813 005c 9B10     	 asr r3,r3,#2
 4814 005e 9AB2     	 uxth r2,r3
 4815 0060 234B     	 ldr r3,.L205+16
 4816 0062 1A80     	 strh r2,[r3]
 990:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 4817              	 .loc 3 990 0
 4818 0064 244B     	 ldr r3,.L205+24
 4819 0066 1B88     	 ldrh r3,[r3]
 4820 0068 1A1C     	 mov r2,r3
 4821 006a 131C     	 mov r3,r2
 4822 006c 5B00     	 lsl r3,r3,#1
 4823 006e 9B18     	 add r3,r3,r2
 4824 0070 224A     	 ldr r2,.L205+28
 4825 0072 1288     	 ldrh r2,[r2]
 4826 0074 9B18     	 add r3,r3,r2
 4827 0076 002B     	 cmp r3,#0
 4828 0078 00DA     	 bge .L202
 4829 007a 0333     	 add r3,r3,#3
 4830              	.L202:
 4831 007c 9B10     	 asr r3,r3,#2
 4832 007e 9AB2     	 uxth r2,r3
 4833 0080 1D4B     	 ldr r3,.L205+24
 4834 0082 1A80     	 strh r2,[r3]
 991:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 4835              	 .loc 3 991 0
 4836 0084 1E4B     	 ldr r3,.L205+32
 4837 0086 1B88     	 ldrh r3,[r3]
 4838 0088 0133     	 add r3,r3,#1
 4839 008a 9AB2     	 uxth r2,r3
 4840 008c 1C4B     	 ldr r3,.L205+32
 4841 008e 1A80     	 strh r2,[r3]
 992:../samuel/samuel_io.c **** 
 993:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 4842              	 .loc 3 993 0
 4843 0090 1B4B     	 ldr r3,.L205+32
 4844 0092 1B88     	 ldrh r3,[r3]
 4845 0094 052B     	 cmp r3,#5
 4846 0096 21D9     	 bls .L198
 994:../samuel/samuel_io.c ****       {
 995:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
 996:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 4847              	 .loc 3 996 0
 4848 0098 194B     	 ldr r3,.L205+32
 4849 009a 0022     	 mov r2,#0
 4850 009c 1A80     	 strh r2,[r3]
 997:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 4851              	 .loc 3 997 0
 4852 009e 104B     	 ldr r3,.L205
 4853 00a0 1B88     	 ldrh r3,[r3]
 4854 00a2 184A     	 ldr r2,.L205+36
 4855 00a4 9342     	 cmp r3,r2
 4856 00a6 09D8     	 bhi .L204
 998:../samuel/samuel_io.c ****      	     {
 999:../samuel/samuel_io.c ****      	     plus39V_stop();
 4857              	 .loc 3 999 0
 4858 00a8 FFF7FEFF 	 bl plus39V_stop
1000:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 4859              	 .loc 3 1000 0
 4860 00ac 164B     	 ldr r3,.L205+40
 4861 00ae 0022     	 mov r2,#0
 4862 00b0 1A70     	 strb r2,[r3]
1001:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 4863              	 .loc 3 1001 0
 4864 00b2 164B     	 ldr r3,.L205+44
 4865 00b4 181C     	 mov r0,r3
 4866 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4867 00ba 0FE0     	 b .L198
 4868              	.L204:
1002:../samuel/samuel_io.c ****      	     }
1003:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 4869              	 .loc 3 1003 0
 4870 00bc 084B     	 ldr r3,.L205
 4871 00be 1A88     	 ldrh r2,[r3]
 4872 00c0 BF23     	 mov r3,#191
 4873 00c2 1B01     	 lsl r3,r3,#4
 4874 00c4 9A42     	 cmp r2,r3
 4875 00c6 09D9     	 bls .L198
1004:../samuel/samuel_io.c ****  			 {
1005:../samuel/samuel_io.c ****      	     plus39V_start();
 4876              	 .loc 3 1005 0
 4877 00c8 FFF7FEFF 	 bl plus39V_start
1006:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 4878              	 .loc 3 1006 0
 4879 00cc 0E4B     	 ldr r3,.L205+40
 4880 00ce 1B78     	 ldrb r3,[r3]
 4881 00d0 002B     	 cmp r3,#0
 4882 00d2 03D1     	 bne .L198
1007:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 4883              	 .loc 3 1007 0
 4884 00d4 0D4B     	 ldr r3,.L205+44
 4885 00d6 181C     	 mov r0,r3
 4886 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4887              	.L198:
1008:../samuel/samuel_io.c ****  			 }
1009:../samuel/samuel_io.c ****       }
1010:../samuel/samuel_io.c **** 
1011:../samuel/samuel_io.c **** 
1012:../samuel/samuel_io.c ****    }
 4888              	 .loc 3 1012 0
 4889 00dc BD46     	 mov sp,r7
 4890              	 
 4891 00de 80BD     	 pop {r7,pc}
 4892              	.L206:
 4893              	 .align 2
 4894              	.L205:
 4895 00e0 00000000 	 .word resultA2
 4896 00e4 00000000 	 .word resultAalt
 4897 00e8 00000000 	 .word resultB2
 4898 00ec 00000000 	 .word resultBalt
 4899 00f0 00000000 	 .word resultC2
 4900 00f4 00000000 	 .word resultCalt
 4901 00f8 00000000 	 .word resultD2
 4902 00fc 00000000 	 .word resultDalt
 4903 0100 00000000 	 .word adc_ready20m
 4904 0104 9F0B0000 	 .word 2975
 4905 0108 00000000 	 .word B_nextLedOff
 4906 010c 00000000 	 .word VCC_LED_shtdwn
 4907              	 .cfi_endproc
 4908              	.LFE337:
 4910              	 .section .text.firstuartBack,"ax",%progbits
 4911              	 .align 2
 4912              	 .global firstuartBack
 4913              	 .code 16
 4914              	 .thumb_func
 4916              	firstuartBack:
 4917              	.LFB338:
1013:../samuel/samuel_io.c ****   //------------------------------
1014:../samuel/samuel_io.c **** 
1015:../samuel/samuel_io.c ****    void firstuartBack (void) //
1016:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 4918              	 .loc 3 1016 0
 4919              	 .cfi_startproc
 4920 0000 98B5     	 push {r3,r4,r7,lr}
 4921              	.LCFI117:
 4922              	 .cfi_def_cfa_offset 16
 4923              	 .cfi_offset 3,-16
 4924              	 .cfi_offset 4,-12
 4925              	 .cfi_offset 7,-8
 4926              	 .cfi_offset 14,-4
 4927 0002 00AF     	 add r7,sp,#0
 4928              	.LCFI118:
 4929              	 .cfi_def_cfa_register 7
 4930              	 .loc 3 1016 0
 4931 0004 174B     	 ldr r3,.L209
 4932 0006 1B78     	 ldrb r3,[r3]
 4933 0008 002B     	 cmp r3,#0
 4934 000a 29D1     	 bne .L207
1017:../samuel/samuel_io.c ****    	   {
1018:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 4935              	 .loc 3 1018 0
 4936 000c FFF7FEFF 	 bl new_data_HalloBack
1019:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 4937              	 .loc 3 1019 0
 4938 0010 154B     	 ldr r3,.L209+4
 4939 0012 3022     	 mov r2,#48
 4940 0014 5A71     	 strb r2,[r3,#5]
1020:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 4941              	 .loc 3 1020 0
 4942 0016 154B     	 ldr r3,.L209+8
 4943 0018 1B88     	 ldrh r3,[r3]
 4944 001a 1B0A     	 lsr r3,r3,#8
 4945 001c 9BB2     	 uxth r3,r3
 4946 001e DAB2     	 uxtb r2,r3
 4947 0020 114B     	 ldr r3,.L209+4
 4948 0022 9A71     	 strb r2,[r3,#6]
1021:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 4949              	 .loc 3 1021 0
 4950 0024 114B     	 ldr r3,.L209+8
 4951 0026 1B88     	 ldrh r3,[r3]
 4952 0028 DAB2     	 uxtb r2,r3
 4953 002a 0F4B     	 ldr r3,.L209+4
 4954 002c DA71     	 strb r2,[r3,#7]
1022:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 4955              	 .loc 3 1022 0
 4956 002e 104B     	 ldr r3,.L209+12
 4957 0030 1B88     	 ldrh r3,[r3]
 4958 0032 1B0A     	 lsr r3,r3,#8
 4959 0034 9BB2     	 uxth r3,r3
 4960 0036 DAB2     	 uxtb r2,r3
 4961 0038 0B4B     	 ldr r3,.L209+4
 4962 003a 1A72     	 strb r2,[r3,#8]
1023:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 4963              	 .loc 3 1023 0
 4964 003c 0C4B     	 ldr r3,.L209+12
 4965 003e 1B88     	 ldrh r3,[r3]
 4966 0040 DAB2     	 uxtb r2,r3
 4967 0042 094B     	 ldr r3,.L209+4
 4968 0044 5A72     	 strb r2,[r3,#9]
1024:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 4969              	 .loc 3 1024 0
 4970 0046 0B4B     	 ldr r3,.L209+16
 4971 0048 1B78     	 ldrb r3,[r3]
 4972 004a 1C1C     	 mov r4,r3
 4973 004c 0A4A     	 ldr r2,.L209+20
 4974 004e 064B     	 ldr r3,.L209+4
 4975 0050 101C     	 mov r0,r2
 4976 0052 191C     	 mov r1,r3
 4977 0054 221C     	 mov r2,r4
 4978 0056 FFF7FEFF 	 bl UART_Transmit
1025:../samuel/samuel_io.c ****    	   B_first_uart=1;
 4979              	 .loc 3 1025 0
 4980 005a 024B     	 ldr r3,.L209
 4981 005c 0122     	 mov r2,#1
 4982 005e 1A70     	 strb r2,[r3]
 4983              	.L207:
1026:../samuel/samuel_io.c ****    	   }
1027:../samuel/samuel_io.c ****    }
 4984              	 .loc 3 1027 0
 4985 0060 BD46     	 mov sp,r7
 4986              	 
 4987 0062 98BD     	 pop {r3,r4,r7,pc}
 4988              	.L210:
 4989              	 .align 2
 4990              	.L209:
 4991 0064 00000000 	 .word B_first_uart
 4992 0068 00000000 	 .word new_data
 4993 006c 00000000 	 .word Ser_NrH
 4994 0070 00000000 	 .word Ser_NrL
 4995 0074 00000000 	 .word transmit_buf_size
 4996 0078 00000000 	 .word UART_1
 4997              	 .cfi_endproc
 4998              	.LFE338:
 5000              	 .text
 5001              	.Letext0:
 5002              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5003              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5004              	 .file 6 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 5005              	 .file 7 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc/xmc1_gpio.h"
 5006              	 .file 8 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc/xmc_usic.h"
 5007              	 .file 9 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc/xmc_uart.h"
 5008              	 .file 10 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/UART/uart.h"
 5009              	 .file 11 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 5010              	 .file 12 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc/xmc_vadc.h"
 5011              	 .file 13 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 5012              	 .file 14 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/XMCLib/inc/xmc_bccu.h"
 5013              	 .file 15 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 5014              	 .file 16 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIM_BCCU/dim_bccu.h"
 5015              	 .file 17 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 5016              	 .file 18 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 5017              	 .file 19 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 5018              	 .file 20 "../samuel/samuel_io.h"
 5019              	 .file 21 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5020              	 .file 22 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/UART/uart_extern.h"
 5021              	 .file 23 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 5022              	 .file 24 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 5023              	 .file 25 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 5024              	 .file 26 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4489   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:4916   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:720    .text.lightprog01:000001b0 $d
    {standard input}:727    .text.light_aus:00000000 $t
    {standard input}:732    .text.light_aus:00000000 light_aus
    {standard input}:4245   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:4008   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:786    .text.light_aus:00000048 $d
    {standard input}:796    .text.analog_start:00000000 $t
    {standard input}:801    .text.analog_start:00000000 analog_start
    {standard input}:821    .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:826    .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:846    .text.new_data_fill:00000000 $t
    {standard input}:851    .text.new_data_fill:00000000 new_data_fill
    {standard input}:918    .text.new_data_fill:00000050 $d
    {standard input}:924    .text.new_data_unbekanntBack:00000000 $t
    {standard input}:929    .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:998    .text.new_data_unbekanntBack:00000054 $d
    {standard input}:1005   .text.new_data_BroadcastBack:00000000 $t
    {standard input}:1010   .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:1091   .text.new_data_BroadcastBack:0000006c $d
    {standard input}:1100   .text.new_data_analog1Back:00000000 $t
    {standard input}:1105   .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1186   .text.new_data_analog1Back:0000006c $d
    {standard input}:1195   .text.new_data_analog2Back:00000000 $t
    {standard input}:1200   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1281   .text.new_data_analog2Back:0000006c $d
    {standard input}:1290   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1295   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1376   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1385   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1390   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1481   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1492   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1497   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1578   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1587   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1592   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1673   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1682   .text.new_data_HalloBack:00000000 $t
    {standard input}:1687   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1756   .text.new_data_HalloBack:00000054 $d
    {standard input}:1763   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:1768   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:1854   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:1864   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:1869   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:1978   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:1989   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:1994   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:2085   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:2095   .text.new_data_SerNrBack:00000000 $t
    {standard input}:2100   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2181   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2190   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2195   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2332   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2340   .text.clearEpromBuffer:00000000 $t
    {standard input}:2345   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2442   .text.clearEpromBuffer:00000080 $d
    {standard input}:2450   .text.fillEpromBuffer:00000000 $t
    {standard input}:2455   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2501   .text.fillEpromBuffer:00000034 $d
    {standard input}:2507   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2512   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2560   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2566   .text.readAllEEprom:00000000 $t
    {standard input}:2571   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:2811   .text.readAllEEprom:00000194 $d
    {standard input}:2835   .text.readSerNrEEprom:00000000 $t
    {standard input}:2840   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:2891   .text.readSerNrEEprom:00000044 $d
    {standard input}:2898   .text.readNodeIdEEprom:00000000 $t
    {standard input}:2903   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:2954   .text.readNodeIdEEprom:00000044 $d
    {standard input}:2961   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:2966   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:3017   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:3024   .text.read_off_light_EEprom:00000000 $t
    {standard input}:3029   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:3080   .text.read_off_light_EEprom:00000044 $d
    {standard input}:3087   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:3092   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3161   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3169   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3174   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3243   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3251   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3256   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3325   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3333   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3338   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3407   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3415   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3420   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3489   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3497   .text.sysiniValueB1:00000000 $t
    {standard input}:3502   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3567   .text.sysiniValueB1:00000050 $d
    {standard input}:3583   .text.sysiniValueB2:00000000 $t
    {standard input}:3588   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3650   .text.sysiniValueB2:0000004c $d
    {standard input}:3666   .text.sysiniValueB4:00000000 $t
    {standard input}:3671   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:3783   .text.sysiniValueB4:000000a0 $d
    {standard input}:3805   .text.sysiniValueB5:00000000 $t
    {standard input}:3810   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:3865   .text.sysiniValueB5:00000040 $d
    {standard input}:3881   .text.bcuInit:00000000 $t
    {standard input}:3886   .text.bcuInit:00000000 bcuInit
    {standard input}:3909   .rodata.bcuInit:00000000 $d
    {standard input}:3988   .text.bcuInit:0000006c $d
    {standard input}:4003   .text.bcuUebergabe:00000000 $t
    {standard input}:4091   .text.bcuUebergabe:00000088 $d
    {standard input}:4107   .text.bcuAktBerechnung:00000000 $t
    {standard input}:4112   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4225   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4240   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4363   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4378   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4383   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4475   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4484   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4652   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4663   .text.plus39V_stop:00000000 $t
    {standard input}:4668   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4688   .text.plus39V_start:00000000 $t
    {standard input}:4693   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4713   .text.Time1msec:00000000 $t
    {standard input}:4718   .text.Time1msec:00000000 Time1msec
    {standard input}:4741   .text.Time1msec:00000010 $d
    {standard input}:4746   .text.Time20msec:00000000 $t
    {standard input}:4751   .text.Time20msec:00000000 Time20msec
    {standard input}:4895   .text.Time20msec:000000e0 $d
    {standard input}:4911   .text.firstuartBack:00000000 $t
    {standard input}:4991   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
