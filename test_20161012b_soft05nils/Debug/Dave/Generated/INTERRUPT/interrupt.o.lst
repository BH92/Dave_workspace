   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "interrupt.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.NVIC_EnableIRQ,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	NVIC_EnableIRQ:
  23              	.LFB25:
  24              	 .file 1 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include/core_cm0.h"
   1:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**************************************************************************//**
   2:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  * @file     core_cm0.h
   3:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  * @version  V4.30
   5:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  * @date     20. October 2015
   6:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
   7:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
   9:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    All rights reserved.
  10:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    Redistribution and use in source and binary forms, with or without
  11:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    modification, are permitted provided that the following conditions are met:
  12:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    - Redistributions of source code must retain the above copyright
  13:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****      notice, this list of conditions and the following disclaimer.
  14:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****      documentation and/or other materials provided with the distribution.
  17:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****      to endorse or promote products derived from this software without
  19:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****      specific prior written permission.
  20:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    *
  21:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    ---------------------------------------------------------------------------*/
  33:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  34:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  35:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #if   defined ( __ICCARM__ )
  36:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  39:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif
  40:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  41:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  42:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_GENERIC
  43:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  44:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #include <stdint.h>
  45:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  46:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
  47:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
  48:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif
  49:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  50:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
  51:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  54:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  56:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  57:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****      Unions are used for effective representation of core registers.
  59:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  60:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****      Function-like macros are used to allow more efficient code.
  62:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
  63:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  64:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  65:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
  66:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  *                 CMSIS definitions
  67:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  68:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
  69:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup Cortex_M0
  70:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
  71:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
  72:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  73:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*  CMSIS CM0 definitions */
  74:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  77:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  79:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define __CORTEX_M                (0x00U)                                      /*!< Cortex-M Core *
  80:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  81:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  82:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #if   defined ( __CC_ARM )
  83:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static __inline
  86:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  87:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static __inline
  91:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  92:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
  93:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
  96:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
  97:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
  98:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
 101:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 102:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TMS470__ )
 103:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
 105:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 106:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 107:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
 110:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 111:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __CSMC__ )
 112:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __packed
 113:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define __STATIC_INLINE  static inline
 116:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 117:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #else
 118:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #error Unknown compiler
 119:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif
 120:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 121:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     This core does not support an FPU at all
 123:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** */
 124:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define __FPU_USED       0U
 125:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 126:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #if defined ( __CC_ARM )
 127:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TARGET_FPU_VFP
 128:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 130:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 131:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARM_PCS_VFP
 133:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 135:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 136:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
 137:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 140:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 141:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
 142:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARMVFP__
 143:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 145:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 146:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TMS470__ )
 147:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
 148:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 150:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 151:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 152:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __FPU_VFP__
 153:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 155:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 156:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __CSMC__ )
 157:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 158:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 160:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 161:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif
 162:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 163:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 166:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 167:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** }
 168:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif
 169:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 170:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 171:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 172:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CMSIS_GENERIC
 173:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 174:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 175:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 176:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 177:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 178:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
 179:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif
 180:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 181:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* check device defines and use defaults */
 182:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 183:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __CM0_REV
 184:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #define __CM0_REV               0x0000U
 185:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 186:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 187:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 188:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 189:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 190:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 191:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 192:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 193:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 194:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 195:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 196:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 197:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif
 198:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 199:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 200:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 201:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 202:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 203:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 204:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     \li to specify the access to peripheral variables.
 205:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 206:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** */
 207:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 208:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 209:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #else
 210:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 211:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #endif
 212:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 213:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 214:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 215:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* following defines should be used for structure members */
 216:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 217:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 218:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 219:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 220:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group Cortex_M0 */
 221:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 222:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 223:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 224:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 225:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  *                 Register Abstraction
 226:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   Core Register contain:
 227:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register
 228:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Register
 229:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   - Core SCB Register
 230:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Register
 231:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 232:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 233:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 234:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 235:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** */
 236:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 237:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 238:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 239:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 240:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Core Register type definitions.
 241:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
 242:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 243:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 244:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 245:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 246:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 247:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 248:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 249:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   struct
 250:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   {
 251:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 252:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 253:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 254:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 255:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 256:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 257:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 258:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** } APSR_Type;
 259:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 260:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* APSR Register Definitions */
 261:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 262:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 263:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 264:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 265:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 266:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 267:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 268:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 269:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 270:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 271:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 272:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 273:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 274:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 275:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 276:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 277:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 278:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 279:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   struct
 280:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   {
 281:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 282:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 283:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 284:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 285:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** } IPSR_Type;
 286:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 287:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* IPSR Register Definitions */
 288:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 289:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 290:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 291:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 292:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 293:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 294:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 295:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 296:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 297:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   struct
 298:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   {
 299:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 300:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 301:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 302:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 303:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 304:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 305:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 306:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 307:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 308:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 309:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** } xPSR_Type;
 310:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 311:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* xPSR Register Definitions */
 312:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 313:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 314:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 315:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 316:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 317:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 318:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 319:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 320:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 321:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 322:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 323:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 324:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 325:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 326:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 327:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 328:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 329:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 330:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 331:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 332:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 333:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 334:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 335:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 336:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   struct
 337:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   {
 338:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 339:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 340:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 341:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 342:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 343:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** } CONTROL_Type;
 344:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 345:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* CONTROL Register Definitions */
 346:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 347:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 348:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 349:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CORE */
 350:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 351:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 352:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 353:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 354:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 355:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 356:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
 357:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 358:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 359:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 360:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 361:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 362:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 363:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 364:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 365:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0[31U];
 366:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 367:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RSERVED1[31U];
 368:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 369:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED2[31U];
 370:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 371:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED3[31U];
 372:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED4[64U];
 373:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 374:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** }  NVIC_Type;
 375:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 376:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_NVIC */
 377:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 378:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 379:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 380:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 381:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 382:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 383:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
 384:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 385:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 386:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 387:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 388:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 389:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 390:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 391:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 392:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 393:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0;
 394:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 395:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 396:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 397:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED1;
 398:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 399:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 400:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** } SCB_Type;
 401:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 402:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SCB CPUID Register Definitions */
 403:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 404:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 405:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 406:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 407:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 408:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 409:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 410:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 411:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 412:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 413:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 414:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 415:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 416:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 417:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 418:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 419:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 420:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 421:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 422:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 423:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 424:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 425:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 426:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 427:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 428:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 429:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 430:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 431:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 432:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 433:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 434:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 435:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 436:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 437:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 438:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 439:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 440:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 441:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 442:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 443:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 444:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 445:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 446:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 447:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 448:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 449:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 450:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 451:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 452:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 453:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 454:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 455:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 456:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 457:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 458:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 459:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 460:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 461:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 462:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Control Register Definitions */
 463:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 464:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 465:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 466:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 467:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 468:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 469:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 470:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 471:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 472:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Configuration Control Register Definitions */
 473:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 474:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 475:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 476:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 477:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 478:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 479:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 480:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 481:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 482:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 483:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SCB */
 484:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 485:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 486:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 487:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 488:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 489:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 490:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
 491:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 492:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 493:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 494:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 495:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 496:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 497:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 498:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 499:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 500:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 501:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 502:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** } SysTick_Type;
 503:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 504:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Control / Status Register Definitions */
 505:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 506:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 507:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 508:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 509:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 510:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 511:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 512:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 513:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 514:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 515:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 516:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 517:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Reload Register Definitions */
 518:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 519:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 520:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 521:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Current Register Definitions */
 522:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 523:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 524:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 525:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Calibration Register Definitions */
 526:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 527:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 528:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 529:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 530:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 531:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 532:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 533:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 534:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 535:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SysTick */
 536:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 537:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 538:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 539:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 540:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 541:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 542:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 543:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
 544:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 545:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 546:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 547:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 548:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 549:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 550:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 551:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 552:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
 553:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 554:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 555:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 556:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 557:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 558:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of the bit field.
 559:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted value.
 560:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** */
 561:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
 562:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 563:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 564:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 565:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 566:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of register.
 567:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted bit field value.
 568:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** */
 569:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
 570:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 571:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 572:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 573:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 574:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 575:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 576:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 577:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 578:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
 579:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 580:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 581:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* Memory mapping of Cortex-M0 Hardware */
 582:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 583:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 584:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 585:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 586:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 587:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 588:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 589:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 590:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 591:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 592:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*@} */
 593:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 594:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 595:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 596:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 597:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  *                Hardware Abstraction Layer
 598:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   Core Function Interface contains:
 599:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Functions
 600:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Functions
 601:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register Access Functions
 602:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 603:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 604:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 605:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** */
 606:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 607:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 608:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 609:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 610:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 611:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 612:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 613:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 614:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   @{
 615:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 616:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 617:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 618:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 619:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 620:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 621:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 622:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 623:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 624:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 625:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Enable External Interrupt
 626:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
 627:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 628:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 629:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 630:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
  25              	 .loc 1 630 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 021C     	 mov r2,r0
  39 0008 FB1D     	 add r3,r7,#7
  40 000a 1A70     	 strb r2,[r3]
 631:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
  41              	 .loc 1 631 0
  42 000c 064B     	 ldr r3,.L2
  43 000e FA1D     	 add r2,r7,#7
  44 0010 1278     	 ldrb r2,[r2]
  45 0012 111C     	 mov r1,r2
  46 0014 1F22     	 mov r2,#31
  47 0016 0A40     	 and r2,r1
  48 0018 0121     	 mov r1,#1
  49 001a 9140     	 lsl r1,r1,r2
  50 001c 0A1C     	 mov r2,r1
  51 001e 1A60     	 str r2,[r3]
 632:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** }
  52              	 .loc 1 632 0
  53 0020 BD46     	 mov sp,r7
  54 0022 02B0     	 add sp,sp,#8
  55              	 
  56 0024 80BD     	 pop {r7,pc}
  57              	.L3:
  58 0026 C046     	 .align 2
  59              	.L2:
  60 0028 00E100E0 	 .word -536813312
  61              	 .cfi_endproc
  62              	.LFE25:
  64              	 .section .text.NVIC_SetPriority,"ax",%progbits
  65              	 .align 2
  66              	 .code 16
  67              	 .thumb_func
  69              	NVIC_SetPriority:
  70              	.LFB30:
 633:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 634:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 635:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 636:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Disable External Interrupt
 637:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
 638:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 639:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 640:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
 641:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 642:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 643:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** }
 644:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 645:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 646:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 647:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Pending Interrupt
 648:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
 649:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 650:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt status is not pending.
 651:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt status is pending.
 652:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 653:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
 654:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 655:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL
 656:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** }
 657:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 658:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 659:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 660:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Set Pending Interrupt
 661:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \details Sets the pending bit of an external interrupt.
 662:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
 663:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 664:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
 665:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 666:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 667:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** }
 668:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 669:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 670:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 671:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Clear Pending Interrupt
 672:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \details Clears the pending bit of an external interrupt.
 673:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
 674:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 675:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 676:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
 677:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 678:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** }
 679:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 680:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** 
 681:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** /**
 682:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Set Interrupt Priority
 683:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \details Sets the priority of an interrupt.
 684:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \note    The priority cannot be set for every core interrupt.
 685:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 686:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]  priority  Priority to set.
 687:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****  */
 688:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 689:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** {
  71              	 .loc 1 689 0
  72              	 .cfi_startproc
  73 0000 B0B5     	 push {r4,r5,r7,lr}
  74              	.LCFI3:
  75              	 .cfi_def_cfa_offset 16
  76              	 .cfi_offset 4,-16
  77              	 .cfi_offset 5,-12
  78              	 .cfi_offset 7,-8
  79              	 .cfi_offset 14,-4
  80 0002 82B0     	 sub sp,sp,#8
  81              	.LCFI4:
  82              	 .cfi_def_cfa_offset 24
  83 0004 00AF     	 add r7,sp,#0
  84              	.LCFI5:
  85              	 .cfi_def_cfa_register 7
  86 0006 021C     	 mov r2,r0
  87 0008 3960     	 str r1,[r7]
  88 000a FB1D     	 add r3,r7,#7
  89 000c 1A70     	 strb r2,[r3]
 690:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) < 0)
  90              	 .loc 1 690 0
  91 000e FB1D     	 add r3,r7,#7
  92 0010 1B78     	 ldrb r3,[r3]
  93 0012 7F2B     	 cmp r3,#127
  94 0014 2FD9     	 bls .L5
 691:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   {
 692:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
  95              	 .loc 1 692 0
  96 0016 2D4C     	 ldr r4,.L7
  97 0018 FB1D     	 add r3,r7,#7
  98 001a 1B78     	 ldrb r3,[r3]
  99 001c 1A1C     	 mov r2,r3
 100 001e 0F23     	 mov r3,#15
 101 0020 1340     	 and r3,r2
 102 0022 083B     	 sub r3,r3,#8
 103 0024 9908     	 lsr r1,r3,#2
 104 0026 294A     	 ldr r2,.L7
 105 0028 FB1D     	 add r3,r7,#7
 106 002a 1B78     	 ldrb r3,[r3]
 107 002c 181C     	 mov r0,r3
 108 002e 0F23     	 mov r3,#15
 109 0030 0340     	 and r3,r0
 110 0032 083B     	 sub r3,r3,#8
 111 0034 9B08     	 lsr r3,r3,#2
 112 0036 0633     	 add r3,r3,#6
 113 0038 9B00     	 lsl r3,r3,#2
 114 003a D318     	 add r3,r2,r3
 115 003c 5B68     	 ldr r3,[r3,#4]
 116 003e FA1D     	 add r2,r7,#7
 117 0040 1278     	 ldrb r2,[r2]
 118 0042 101C     	 mov r0,r2
 119 0044 0322     	 mov r2,#3
 120 0046 0240     	 and r2,r0
 121 0048 D200     	 lsl r2,r2,#3
 122 004a 101C     	 mov r0,r2
 123 004c FF22     	 mov r2,#255
 124 004e 8240     	 lsl r2,r2,r0
 125 0050 D243     	 mvn r2,r2
 126 0052 1A40     	 and r2,r3
 693:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 127              	 .loc 1 693 0
 128 0054 3B68     	 ldr r3,[r7]
 129 0056 9B01     	 lsl r3,r3,#6
 130 0058 FF20     	 mov r0,#255
 131 005a 0340     	 and r3,r0
 132 005c F81D     	 add r0,r7,#7
 133 005e 0078     	 ldrb r0,[r0]
 134 0060 051C     	 mov r5,r0
 135 0062 0320     	 mov r0,#3
 136 0064 2840     	 and r0,r5
 137 0066 C000     	 lsl r0,r0,#3
 138 0068 8340     	 lsl r3,r3,r0
 692:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 139              	 .loc 1 692 0
 140 006a 1A43     	 orr r2,r3
 141 006c 8B1D     	 add r3,r1,#6
 142 006e 9B00     	 lsl r3,r3,#2
 143 0070 E318     	 add r3,r4,r3
 144 0072 5A60     	 str r2,[r3,#4]
 145 0074 26E0     	 b .L4
 146              	.L5:
 694:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   }
 695:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   else
 696:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   {
 697:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 147              	 .loc 1 697 0
 148 0076 164C     	 ldr r4,.L7+4
 149 0078 FB1D     	 add r3,r7,#7
 150 007a 1B78     	 ldrb r3,[r3]
 151 007c 5BB2     	 sxtb r3,r3
 152 007e 9B08     	 lsr r3,r3,#2
 153 0080 1349     	 ldr r1,.L7+4
 154 0082 FA1D     	 add r2,r7,#7
 155 0084 1278     	 ldrb r2,[r2]
 156 0086 52B2     	 sxtb r2,r2
 157 0088 9208     	 lsr r2,r2,#2
 158 008a C032     	 add r2,r2,#192
 159 008c 9200     	 lsl r2,r2,#2
 160 008e 5258     	 ldr r2,[r2,r1]
 161 0090 F91D     	 add r1,r7,#7
 162 0092 0978     	 ldrb r1,[r1]
 163 0094 081C     	 mov r0,r1
 164 0096 0321     	 mov r1,#3
 165 0098 0140     	 and r1,r0
 166 009a C900     	 lsl r1,r1,#3
 167 009c 081C     	 mov r0,r1
 168 009e FF21     	 mov r1,#255
 169 00a0 8140     	 lsl r1,r1,r0
 170 00a2 C943     	 mvn r1,r1
 171 00a4 1140     	 and r1,r2
 698:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 172              	 .loc 1 698 0
 173 00a6 3A68     	 ldr r2,[r7]
 174 00a8 9201     	 lsl r2,r2,#6
 175 00aa FF20     	 mov r0,#255
 176 00ac 0240     	 and r2,r0
 177 00ae F81D     	 add r0,r7,#7
 178 00b0 0078     	 ldrb r0,[r0]
 179 00b2 051C     	 mov r5,r0
 180 00b4 0320     	 mov r0,#3
 181 00b6 2840     	 and r0,r5
 182 00b8 C000     	 lsl r0,r0,#3
 183 00ba 8240     	 lsl r2,r2,r0
 697:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 184              	 .loc 1 697 0
 185 00bc 0A43     	 orr r2,r1
 186 00be C033     	 add r3,r3,#192
 187 00c0 9B00     	 lsl r3,r3,#2
 188 00c2 1A51     	 str r2,[r3,r4]
 189              	.L4:
 699:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h ****   }
 700:C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Include\core_cm0.h **** }
 190              	 .loc 1 700 0
 191 00c4 BD46     	 mov sp,r7
 192 00c6 02B0     	 add sp,sp,#8
 193              	 
 194 00c8 B0BD     	 pop {r4,r5,r7,pc}
 195              	.L8:
 196 00ca C046     	 .align 2
 197              	.L7:
 198 00cc 00ED00E0 	 .word -536810240
 199 00d0 00E100E0 	 .word -536813312
 200              	 .cfi_endproc
 201              	.LFE30:
 203              	 .section .text.INTERRUPT_Enable,"ax",%progbits
 204              	 .align 2
 205              	 .code 16
 206              	 .thumb_func
 208              	INTERRUPT_Enable:
 209              	.LFB39:
 210              	 .file 2 "../Dave/Generated/INTERRUPT/interrupt.h"
   1:../Dave/Generated/INTERRUPT/interrupt.h **** /**
   2:../Dave/Generated/INTERRUPT/interrupt.h ****  * @file interrupt.h
   3:../Dave/Generated/INTERRUPT/interrupt.h ****  * @date 2015-10-05
   4:../Dave/Generated/INTERRUPT/interrupt.h ****  *
   5:../Dave/Generated/INTERRUPT/interrupt.h ****  * NOTE:
   6:../Dave/Generated/INTERRUPT/interrupt.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/INTERRUPT/interrupt.h ****  * regenerated.
   8:../Dave/Generated/INTERRUPT/interrupt.h ****  */
   9:../Dave/Generated/INTERRUPT/interrupt.h **** /**
  10:../Dave/Generated/INTERRUPT/interrupt.h ****  * @cond
  11:../Dave/Generated/INTERRUPT/interrupt.h ****  **************************************************************************************************
  12:../Dave/Generated/INTERRUPT/interrupt.h ****  * INTERRUPT v4.0.8 Helps the user to overwrite the provided ISR in system file
  13:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  14:../Dave/Generated/INTERRUPT/interrupt.h ****  * Copyright (c) 2015, Infineon Technologies AG
  15:../Dave/Generated/INTERRUPT/interrupt.h ****  * All rights reserved.
  16:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  17:../Dave/Generated/INTERRUPT/interrupt.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  18:../Dave/Generated/INTERRUPT/interrupt.h ****  * following conditions are met:
  19:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  20:../Dave/Generated/INTERRUPT/interrupt.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  21:../Dave/Generated/INTERRUPT/interrupt.h ****  *   disclaimer.
  22:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  23:../Dave/Generated/INTERRUPT/interrupt.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  24:../Dave/Generated/INTERRUPT/interrupt.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  25:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  26:../Dave/Generated/INTERRUPT/interrupt.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  27:../Dave/Generated/INTERRUPT/interrupt.h ****  *   products derived from this software without specific prior written permission.
  28:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  29:../Dave/Generated/INTERRUPT/interrupt.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  30:../Dave/Generated/INTERRUPT/interrupt.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  31:../Dave/Generated/INTERRUPT/interrupt.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  32:../Dave/Generated/INTERRUPT/interrupt.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  33:../Dave/Generated/INTERRUPT/interrupt.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  34:../Dave/Generated/INTERRUPT/interrupt.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  35:../Dave/Generated/INTERRUPT/interrupt.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  37:../Dave/Generated/INTERRUPT/interrupt.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  38:../Dave/Generated/INTERRUPT/interrupt.h ****  * with Infineon Technologies AG (dave@infineon.com).
  39:../Dave/Generated/INTERRUPT/interrupt.h ****  **************************************************************************************************
  40:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  41:../Dave/Generated/INTERRUPT/interrupt.h ****  * Change History
  42:../Dave/Generated/INTERRUPT/interrupt.h ****  * --------------
  43:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  44:../Dave/Generated/INTERRUPT/interrupt.h ****  * 2015-02-16:
  45:../Dave/Generated/INTERRUPT/interrupt.h ****  *     - Initial version<br>
  46:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  47:../Dave/Generated/INTERRUPT/interrupt.h ****  * 2015-05-08:
  48:../Dave/Generated/INTERRUPT/interrupt.h ****  *     - subpriority field is biased based on family<br>
  49:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  50:../Dave/Generated/INTERRUPT/interrupt.h ****  * 2015-07-30:
  51:../Dave/Generated/INTERRUPT/interrupt.h ****  *     - Added a field named "irqctrl" for XMC1400 devices
  52:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  53:../Dave/Generated/INTERRUPT/interrupt.h ****  * 2015-10-05:
  54:../Dave/Generated/INTERRUPT/interrupt.h ****  *     - Merged config elements into the APP structure
  55:../Dave/Generated/INTERRUPT/interrupt.h ****  * @endcond
  56:../Dave/Generated/INTERRUPT/interrupt.h ****  *
  57:../Dave/Generated/INTERRUPT/interrupt.h ****  */
  58:../Dave/Generated/INTERRUPT/interrupt.h **** 
  59:../Dave/Generated/INTERRUPT/interrupt.h **** #ifndef INTERRUPT_H
  60:../Dave/Generated/INTERRUPT/interrupt.h **** #define INTERRUPT_H
  61:../Dave/Generated/INTERRUPT/interrupt.h **** 
  62:../Dave/Generated/INTERRUPT/interrupt.h **** /**************************************************************************************************
  63:../Dave/Generated/INTERRUPT/interrupt.h ****  * HEADER FILES
  64:../Dave/Generated/INTERRUPT/interrupt.h ****  **************************************************************************************************
  65:../Dave/Generated/INTERRUPT/interrupt.h **** #include <xmc_common.h>
  66:../Dave/Generated/INTERRUPT/interrupt.h **** #include <DAVE_Common.h>
  67:../Dave/Generated/INTERRUPT/interrupt.h **** 
  68:../Dave/Generated/INTERRUPT/interrupt.h **** #if (UC_SERIES == XMC14)
  69:../Dave/Generated/INTERRUPT/interrupt.h **** #include <xmc_scu.h>
  70:../Dave/Generated/INTERRUPT/interrupt.h **** #endif
  71:../Dave/Generated/INTERRUPT/interrupt.h **** 
  72:../Dave/Generated/INTERRUPT/interrupt.h **** #include "interrupt_conf.h"
  73:../Dave/Generated/INTERRUPT/interrupt.h **** 
  74:../Dave/Generated/INTERRUPT/interrupt.h **** 
  75:../Dave/Generated/INTERRUPT/interrupt.h **** /**
  76:../Dave/Generated/INTERRUPT/interrupt.h ****  * @addtogroup INTERRUPT
  77:../Dave/Generated/INTERRUPT/interrupt.h ****  * @{
  78:../Dave/Generated/INTERRUPT/interrupt.h ****  */
  79:../Dave/Generated/INTERRUPT/interrupt.h **** 
  80:../Dave/Generated/INTERRUPT/interrupt.h **** /**************************************************************************************************
  81:../Dave/Generated/INTERRUPT/interrupt.h ****  * MACROS
  82:../Dave/Generated/INTERRUPT/interrupt.h ****  **************************************************************************************************
  83:../Dave/Generated/INTERRUPT/interrupt.h **** 
  84:../Dave/Generated/INTERRUPT/interrupt.h **** /**************************************************************************************************
  85:../Dave/Generated/INTERRUPT/interrupt.h ****  * ENUMS
  86:../Dave/Generated/INTERRUPT/interrupt.h ****  **************************************************************************************************
  87:../Dave/Generated/INTERRUPT/interrupt.h **** /**
  88:../Dave/Generated/INTERRUPT/interrupt.h ****  * @ingroup INTERRUPT_enumerations
  89:../Dave/Generated/INTERRUPT/interrupt.h ****  * @{
  90:../Dave/Generated/INTERRUPT/interrupt.h ****  */
  91:../Dave/Generated/INTERRUPT/interrupt.h **** /**
  92:../Dave/Generated/INTERRUPT/interrupt.h ****  * Initialization status.
  93:../Dave/Generated/INTERRUPT/interrupt.h ****  */
  94:../Dave/Generated/INTERRUPT/interrupt.h **** typedef enum INTERRUPT_STATUS
  95:../Dave/Generated/INTERRUPT/interrupt.h **** {
  96:../Dave/Generated/INTERRUPT/interrupt.h ****   INTERRUPT_STATUS_SUCCESS = 0U,  /**< APP initialization success */
  97:../Dave/Generated/INTERRUPT/interrupt.h ****   INTERRUPT_STATUS_FAILURE = 1U   /**< APP initialization failure */
  98:../Dave/Generated/INTERRUPT/interrupt.h **** } INTERRUPT_STATUS_t;
  99:../Dave/Generated/INTERRUPT/interrupt.h **** /**
 100:../Dave/Generated/INTERRUPT/interrupt.h ****  * @}
 101:../Dave/Generated/INTERRUPT/interrupt.h ****  */
 102:../Dave/Generated/INTERRUPT/interrupt.h **** 
 103:../Dave/Generated/INTERRUPT/interrupt.h **** /**************************************************************************************************
 104:../Dave/Generated/INTERRUPT/interrupt.h ****  * DATA STRUCTURES
 105:../Dave/Generated/INTERRUPT/interrupt.h ****  **************************************************************************************************
 106:../Dave/Generated/INTERRUPT/interrupt.h **** /**
 107:../Dave/Generated/INTERRUPT/interrupt.h ****  * @ingroup INTERRUPT_datastructures
 108:../Dave/Generated/INTERRUPT/interrupt.h ****  * @{
 109:../Dave/Generated/INTERRUPT/interrupt.h ****  */
 110:../Dave/Generated/INTERRUPT/interrupt.h **** 
 111:../Dave/Generated/INTERRUPT/interrupt.h **** /**
 112:../Dave/Generated/INTERRUPT/interrupt.h ****  * @brief This structure holds run-time configurations of INTERRUPT APP.
 113:../Dave/Generated/INTERRUPT/interrupt.h ****  */
 114:../Dave/Generated/INTERRUPT/interrupt.h **** typedef struct INTERRUPT
 115:../Dave/Generated/INTERRUPT/interrupt.h **** {
 116:../Dave/Generated/INTERRUPT/interrupt.h **** #if(UC_SERIES == XMC14)
 117:../Dave/Generated/INTERRUPT/interrupt.h ****   const XMC_SCU_IRQCTRL_t irqctrl;  /**< selects the interrupt source for a NVIC interrupt node*/
 118:../Dave/Generated/INTERRUPT/interrupt.h **** #endif	
 119:../Dave/Generated/INTERRUPT/interrupt.h ****   const IRQn_Type node;       /**< Mapped NVIC Node */
 120:../Dave/Generated/INTERRUPT/interrupt.h ****   const uint8_t priority; 	  /**< Node Interrupt Priority */
 121:../Dave/Generated/INTERRUPT/interrupt.h **** #if(UC_FAMILY == XMC4)
 122:../Dave/Generated/INTERRUPT/interrupt.h ****   const uint8_t subpriority;  /**< Node Interrupt SubPriority only valid for XMC4x */
 123:../Dave/Generated/INTERRUPT/interrupt.h **** #endif  
 124:../Dave/Generated/INTERRUPT/interrupt.h ****   const bool enable_at_init;  /**< Interrupt enable for Node */
 125:../Dave/Generated/INTERRUPT/interrupt.h **** } INTERRUPT_t;
 126:../Dave/Generated/INTERRUPT/interrupt.h **** 
 127:../Dave/Generated/INTERRUPT/interrupt.h **** /**
 128:../Dave/Generated/INTERRUPT/interrupt.h ****  * @}
 129:../Dave/Generated/INTERRUPT/interrupt.h ****  */
 130:../Dave/Generated/INTERRUPT/interrupt.h **** 
 131:../Dave/Generated/INTERRUPT/interrupt.h **** /**************************************************************************************************
 132:../Dave/Generated/INTERRUPT/interrupt.h ****  * API PROTOTYPES
 133:../Dave/Generated/INTERRUPT/interrupt.h ****  **************************************************************************************************
 134:../Dave/Generated/INTERRUPT/interrupt.h **** 
 135:../Dave/Generated/INTERRUPT/interrupt.h **** #ifdef __cplusplus
 136:../Dave/Generated/INTERRUPT/interrupt.h **** extern "C" {
 137:../Dave/Generated/INTERRUPT/interrupt.h **** #endif
 138:../Dave/Generated/INTERRUPT/interrupt.h **** 
 139:../Dave/Generated/INTERRUPT/interrupt.h **** /**
 140:../Dave/Generated/INTERRUPT/interrupt.h ****  * @ingroup INTERRUPT_apidoc
 141:../Dave/Generated/INTERRUPT/interrupt.h ****  * @{
 142:../Dave/Generated/INTERRUPT/interrupt.h ****  */
 143:../Dave/Generated/INTERRUPT/interrupt.h **** 
 144:../Dave/Generated/INTERRUPT/interrupt.h **** /**
 145:../Dave/Generated/INTERRUPT/interrupt.h ****  * @brief Get INTERRUPT APP version.
 146:../Dave/Generated/INTERRUPT/interrupt.h ****  * @return @ref DAVE_APP_VERSION_t APP version information (major, minor and
 147:../Dave/Generated/INTERRUPT/interrupt.h ****  *                                 patch number)
 148:../Dave/Generated/INTERRUPT/interrupt.h ****  *
 149:../Dave/Generated/INTERRUPT/interrupt.h ****  * \par<b>Description: </b><br>
 150:../Dave/Generated/INTERRUPT/interrupt.h ****  * The function can be used to check application software compatibility with a
 151:../Dave/Generated/INTERRUPT/interrupt.h ****  * specific version of the APP.
 152:../Dave/Generated/INTERRUPT/interrupt.h ****  * @code
 153:../Dave/Generated/INTERRUPT/interrupt.h ****  * #include <DAVE.h>
 154:../Dave/Generated/INTERRUPT/interrupt.h ****  *
 155:../Dave/Generated/INTERRUPT/interrupt.h ****  * int main(void)
 156:../Dave/Generated/INTERRUPT/interrupt.h ****  * {
 157:../Dave/Generated/INTERRUPT/interrupt.h ****  *   DAVE_APP_VERSION_t version;
 158:../Dave/Generated/INTERRUPT/interrupt.h ****  *   DAVE_Init();
 159:../Dave/Generated/INTERRUPT/interrupt.h ****  *   version = INTERRUPT_GetAppVersion();
 160:../Dave/Generated/INTERRUPT/interrupt.h ****  *   if(version.major != 4U)
 161:../Dave/Generated/INTERRUPT/interrupt.h ****  *   {
 162:../Dave/Generated/INTERRUPT/interrupt.h ****  *   }
 163:../Dave/Generated/INTERRUPT/interrupt.h ****  *   while(1)
 164:../Dave/Generated/INTERRUPT/interrupt.h ****  *   {}
 165:../Dave/Generated/INTERRUPT/interrupt.h ****  *   return 0;
 166:../Dave/Generated/INTERRUPT/interrupt.h ****  * }
 167:../Dave/Generated/INTERRUPT/interrupt.h ****  * @endcode<BR> </p>
 168:../Dave/Generated/INTERRUPT/interrupt.h ****  */
 169:../Dave/Generated/INTERRUPT/interrupt.h **** DAVE_APP_VERSION_t INTERRUPT_GetAppVersion(void);
 170:../Dave/Generated/INTERRUPT/interrupt.h **** /**
 171:../Dave/Generated/INTERRUPT/interrupt.h ****  * @brief Initializes INTERRUPT APP instance.
 172:../Dave/Generated/INTERRUPT/interrupt.h ****  * @param handle Constant pointer to constant structure of type @ref INTERRUPT_t
 173:../Dave/Generated/INTERRUPT/interrupt.h ****  * @return @ref INTERRUPT_STATUS_t
 174:../Dave/Generated/INTERRUPT/interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 175:../Dave/Generated/INTERRUPT/interrupt.h ****  * Pre-requisite: Instantiate one instance of INTERRUPT APP
 176:../Dave/Generated/INTERRUPT/interrupt.h ****  * @code
 177:../Dave/Generated/INTERRUPT/interrupt.h ****  *  #include <DAVE.h>
 178:../Dave/Generated/INTERRUPT/interrupt.h ****  *
 179:../Dave/Generated/INTERRUPT/interrupt.h ****  *  int main(void)
 180:../Dave/Generated/INTERRUPT/interrupt.h ****  *  {
 181:../Dave/Generated/INTERRUPT/interrupt.h ****  *    DAVE_Init();  // INTERRUPT_Init(&INTERRUPT_0) is called within DAVE_Init()
 182:../Dave/Generated/INTERRUPT/interrupt.h ****  *    while(1)
 183:../Dave/Generated/INTERRUPT/interrupt.h ****  *    {}
 184:../Dave/Generated/INTERRUPT/interrupt.h ****  *    return 0;
 185:../Dave/Generated/INTERRUPT/interrupt.h ****  *  }
 186:../Dave/Generated/INTERRUPT/interrupt.h ****  * @endcode<BR> </p>
 187:../Dave/Generated/INTERRUPT/interrupt.h ****  *
 188:../Dave/Generated/INTERRUPT/interrupt.h ****  */
 189:../Dave/Generated/INTERRUPT/interrupt.h **** INTERRUPT_STATUS_t INTERRUPT_Init(const INTERRUPT_t *const handler);
 190:../Dave/Generated/INTERRUPT/interrupt.h **** 
 191:../Dave/Generated/INTERRUPT/interrupt.h **** /**
 192:../Dave/Generated/INTERRUPT/interrupt.h ****  * @brief Enables the IRQ.
 193:../Dave/Generated/INTERRUPT/interrupt.h ****  * @param handle Constant pointer to constant structure of type @ref INTERRUPT_t
 194:../Dave/Generated/INTERRUPT/interrupt.h ****  * @return None
 195:../Dave/Generated/INTERRUPT/interrupt.h ****  * <BR><P ALIGN="LEFT"><B>Example:</B>
 196:../Dave/Generated/INTERRUPT/interrupt.h ****  * Pre-requisite: Instantiate one instance of INTERRUPT APP
 197:../Dave/Generated/INTERRUPT/interrupt.h ****  * @code
 198:../Dave/Generated/INTERRUPT/interrupt.h ****  *  #include <DAVE.h>
 199:../Dave/Generated/INTERRUPT/interrupt.h ****  *
 200:../Dave/Generated/INTERRUPT/interrupt.h ****  *  int main(void)
 201:../Dave/Generated/INTERRUPT/interrupt.h ****  *  {
 202:../Dave/Generated/INTERRUPT/interrupt.h ****  *    DAVE_Init(); // INTERRUPT_Init() is called within DAVE_Init()
 203:../Dave/Generated/INTERRUPT/interrupt.h ****  *    INTERRUPT_Enable(&INTERRUPT_0);
 204:../Dave/Generated/INTERRUPT/interrupt.h ****  *    while(1)
 205:../Dave/Generated/INTERRUPT/interrupt.h ****  *    {}
 206:../Dave/Generated/INTERRUPT/interrupt.h ****  *    return 0;
 207:../Dave/Generated/INTERRUPT/interrupt.h ****  *  }
 208:../Dave/Generated/INTERRUPT/interrupt.h ****  * @endcode<BR> </p>
 209:../Dave/Generated/INTERRUPT/interrupt.h ****  */
 210:../Dave/Generated/INTERRUPT/interrupt.h **** __STATIC_INLINE void INTERRUPT_Enable(const INTERRUPT_t *const handler)
 211:../Dave/Generated/INTERRUPT/interrupt.h **** {
 211              	 .loc 2 211 0
 212              	 .cfi_startproc
 213 0000 80B5     	 push {r7,lr}
 214              	.LCFI6:
 215              	 .cfi_def_cfa_offset 8
 216              	 .cfi_offset 7,-8
 217              	 .cfi_offset 14,-4
 218 0002 82B0     	 sub sp,sp,#8
 219              	.LCFI7:
 220              	 .cfi_def_cfa_offset 16
 221 0004 00AF     	 add r7,sp,#0
 222              	.LCFI8:
 223              	 .cfi_def_cfa_register 7
 224 0006 7860     	 str r0,[r7,#4]
 212:../Dave/Generated/INTERRUPT/interrupt.h ****   XMC_ASSERT("Handler NULL", (handler != NULL));
 213:../Dave/Generated/INTERRUPT/interrupt.h ****   NVIC_EnableIRQ(handler->node);
 225              	 .loc 2 213 0
 226 0008 7B68     	 ldr r3,[r7,#4]
 227 000a 1B78     	 ldrb r3,[r3]
 228 000c 5BB2     	 sxtb r3,r3
 229 000e 181C     	 mov r0,r3
 230 0010 FFF7FEFF 	 bl NVIC_EnableIRQ
 214:../Dave/Generated/INTERRUPT/interrupt.h **** }
 231              	 .loc 2 214 0
 232 0014 BD46     	 mov sp,r7
 233 0016 02B0     	 add sp,sp,#8
 234              	 
 235 0018 80BD     	 pop {r7,pc}
 236              	 .cfi_endproc
 237              	.LFE39:
 239 001a C046     	 .section .text.INTERRUPT_GetAppVersion,"ax",%progbits
 240              	 .align 2
 241              	 .global INTERRUPT_GetAppVersion
 242              	 .code 16
 243              	 .thumb_func
 245              	INTERRUPT_GetAppVersion:
 246              	.LFB44:
 247              	 .file 3 "../Dave/Generated/INTERRUPT/interrupt.c"
   1:../Dave/Generated/INTERRUPT/interrupt.c **** /**
   2:../Dave/Generated/INTERRUPT/interrupt.c ****  * @file interrupt.c
   3:../Dave/Generated/INTERRUPT/interrupt.c ****  * @date 2015-09-18
   4:../Dave/Generated/INTERRUPT/interrupt.c ****  *
   5:../Dave/Generated/INTERRUPT/interrupt.c ****  * NOTE:
   6:../Dave/Generated/INTERRUPT/interrupt.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/INTERRUPT/interrupt.c ****  */
   8:../Dave/Generated/INTERRUPT/interrupt.c **** /**
   9:../Dave/Generated/INTERRUPT/interrupt.c ****  * @cond
  10:../Dave/Generated/INTERRUPT/interrupt.c ****  **************************************************************************************************
  11:../Dave/Generated/INTERRUPT/interrupt.c ****  * INTERRUPT v4.0.8 Helps the user to overwrite the provided ISR in system file
  12:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  13:../Dave/Generated/INTERRUPT/interrupt.c ****  * Copyright (c) 2015, Infineon Technologies AG
  14:../Dave/Generated/INTERRUPT/interrupt.c ****  * All rights reserved.
  15:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  16:../Dave/Generated/INTERRUPT/interrupt.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/INTERRUPT/interrupt.c ****  * following conditions are met:
  18:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  19:../Dave/Generated/INTERRUPT/interrupt.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/INTERRUPT/interrupt.c ****  *   disclaimer.
  21:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  22:../Dave/Generated/INTERRUPT/interrupt.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/INTERRUPT/interrupt.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  25:../Dave/Generated/INTERRUPT/interrupt.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/INTERRUPT/interrupt.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  28:../Dave/Generated/INTERRUPT/interrupt.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/INTERRUPT/interrupt.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/INTERRUPT/interrupt.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/INTERRUPT/interrupt.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/INTERRUPT/interrupt.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/INTERRUPT/interrupt.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/INTERRUPT/interrupt.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  36:../Dave/Generated/INTERRUPT/interrupt.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/INTERRUPT/interrupt.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/INTERRUPT/interrupt.c ****  **************************************************************************************************
  39:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  40:../Dave/Generated/INTERRUPT/interrupt.c ****  * Change History
  41:../Dave/Generated/INTERRUPT/interrupt.c ****  * --------------
  42:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  43:../Dave/Generated/INTERRUPT/interrupt.c ****  * 2015-02-16:
  44:../Dave/Generated/INTERRUPT/interrupt.c ****  *     - Initial version<br>
  45:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  46:../Dave/Generated/INTERRUPT/interrupt.c ****  * 2015-07-30:
  47:../Dave/Generated/INTERRUPT/interrupt.c ****  *     - Added support for XMC1400 devices
  48:../Dave/Generated/INTERRUPT/interrupt.c ****  * 2015-09-18:
  49:../Dave/Generated/INTERRUPT/interrupt.c ****  *     - Removed config structure access
  50:../Dave/Generated/INTERRUPT/interrupt.c ****  * @endcond
  51:../Dave/Generated/INTERRUPT/interrupt.c ****  *
  52:../Dave/Generated/INTERRUPT/interrupt.c ****  */
  53:../Dave/Generated/INTERRUPT/interrupt.c **** 
  54:../Dave/Generated/INTERRUPT/interrupt.c **** 
  55:../Dave/Generated/INTERRUPT/interrupt.c **** /**************************************************************************************************
  56:../Dave/Generated/INTERRUPT/interrupt.c ****  * HEADER FILES
  57:../Dave/Generated/INTERRUPT/interrupt.c ****  **************************************************************************************************
  58:../Dave/Generated/INTERRUPT/interrupt.c **** 
  59:../Dave/Generated/INTERRUPT/interrupt.c **** #include "interrupt.h"
  60:../Dave/Generated/INTERRUPT/interrupt.c **** 
  61:../Dave/Generated/INTERRUPT/interrupt.c **** /**************************************************************************************************
  62:../Dave/Generated/INTERRUPT/interrupt.c **** 	* MACROS
  63:../Dave/Generated/INTERRUPT/interrupt.c ****  **************************************************************************************************
  64:../Dave/Generated/INTERRUPT/interrupt.c **** 
  65:../Dave/Generated/INTERRUPT/interrupt.c **** /**************************************************************************************************
  66:../Dave/Generated/INTERRUPT/interrupt.c ****  * LOCAL DATA
  67:../Dave/Generated/INTERRUPT/interrupt.c ****  **************************************************************************************************
  68:../Dave/Generated/INTERRUPT/interrupt.c **** 
  69:../Dave/Generated/INTERRUPT/interrupt.c **** /**************************************************************************************************
  70:../Dave/Generated/INTERRUPT/interrupt.c ****  * LOCAL ROUTINES
  71:../Dave/Generated/INTERRUPT/interrupt.c ****  **************************************************************************************************
  72:../Dave/Generated/INTERRUPT/interrupt.c **** 
  73:../Dave/Generated/INTERRUPT/interrupt.c **** /**************************************************************************************************
  74:../Dave/Generated/INTERRUPT/interrupt.c **** * API IMPLEMENTATION
  75:../Dave/Generated/INTERRUPT/interrupt.c **** ***************************************************************************************************
  76:../Dave/Generated/INTERRUPT/interrupt.c **** /*
  77:../Dave/Generated/INTERRUPT/interrupt.c ****  * API to retrieve the version of the INTERRUPT APP
  78:../Dave/Generated/INTERRUPT/interrupt.c ****  */
  79:../Dave/Generated/INTERRUPT/interrupt.c **** DAVE_APP_VERSION_t INTERRUPT_GetAppVersion(void)
  80:../Dave/Generated/INTERRUPT/interrupt.c **** {
 248              	 .loc 3 80 0
 249              	 .cfi_startproc
 250 0000 80B5     	 push {r7,lr}
 251              	.LCFI9:
 252              	 .cfi_def_cfa_offset 8
 253              	 .cfi_offset 7,-8
 254              	 .cfi_offset 14,-4
 255 0002 82B0     	 sub sp,sp,#8
 256              	.LCFI10:
 257              	 .cfi_def_cfa_offset 16
 258 0004 00AF     	 add r7,sp,#0
 259              	.LCFI11:
 260              	 .cfi_def_cfa_register 7
  81:../Dave/Generated/INTERRUPT/interrupt.c ****   DAVE_APP_VERSION_t version;
  82:../Dave/Generated/INTERRUPT/interrupt.c **** 
  83:../Dave/Generated/INTERRUPT/interrupt.c ****   version.major = INTERRUPT_MAJOR_VERSION;
 261              	 .loc 3 83 0
 262 0006 3B1C     	 mov r3,r7
 263 0008 0422     	 mov r2,#4
 264 000a 1A70     	 strb r2,[r3]
  84:../Dave/Generated/INTERRUPT/interrupt.c ****   version.minor = INTERRUPT_MINOR_VERSION;
 265              	 .loc 3 84 0
 266 000c 3B1C     	 mov r3,r7
 267 000e 0022     	 mov r2,#0
 268 0010 5A70     	 strb r2,[r3,#1]
  85:../Dave/Generated/INTERRUPT/interrupt.c ****   version.patch = INTERRUPT_PATCH_VERSION;
 269              	 .loc 3 85 0
 270 0012 3B1C     	 mov r3,r7
 271 0014 0822     	 mov r2,#8
 272 0016 9A70     	 strb r2,[r3,#2]
  86:../Dave/Generated/INTERRUPT/interrupt.c **** 
  87:../Dave/Generated/INTERRUPT/interrupt.c ****   return (version);
 273              	 .loc 3 87 0
 274 0018 3B1D     	 add r3,r7,#4
 275 001a 3A1C     	 mov r2,r7
 276 001c 1188     	 ldrh r1,[r2]
 277 001e 1980     	 strh r1,[r3]
 278 0020 9278     	 ldrb r2,[r2,#2]
 279 0022 9A70     	 strb r2,[r3,#2]
 280 0024 3A1D     	 add r2,r7,#4
 281 0026 0023     	 mov r3,#0
 282 0028 1178     	 ldrb r1,[r2]
 283 002a FF20     	 mov r0,#255
 284 002c 0140     	 and r1,r0
 285 002e FF20     	 mov r0,#255
 286 0030 8343     	 bic r3,r0
 287 0032 0B43     	 orr r3,r1
 288 0034 5178     	 ldrb r1,[r2,#1]
 289 0036 FF20     	 mov r0,#255
 290 0038 0140     	 and r1,r0
 291 003a 0902     	 lsl r1,r1,#8
 292 003c 0648     	 ldr r0,.L12
 293 003e 0340     	 and r3,r0
 294 0040 0B43     	 orr r3,r1
 295 0042 9278     	 ldrb r2,[r2,#2]
 296 0044 FF21     	 mov r1,#255
 297 0046 0A40     	 and r2,r1
 298 0048 1204     	 lsl r2,r2,#16
 299 004a 0449     	 ldr r1,.L12+4
 300 004c 0B40     	 and r3,r1
 301 004e 1343     	 orr r3,r2
  88:../Dave/Generated/INTERRUPT/interrupt.c **** }
 302              	 .loc 3 88 0
 303 0050 181C     	 mov r0,r3
 304 0052 BD46     	 mov sp,r7
 305 0054 02B0     	 add sp,sp,#8
 306              	 
 307 0056 80BD     	 pop {r7,pc}
 308              	.L13:
 309              	 .align 2
 310              	.L12:
 311 0058 FF00FFFF 	 .word -65281
 312 005c FFFF00FF 	 .word -16711681
 313              	 .cfi_endproc
 314              	.LFE44:
 316              	 .section .text.INTERRUPT_Init,"ax",%progbits
 317              	 .align 2
 318              	 .global INTERRUPT_Init
 319              	 .code 16
 320              	 .thumb_func
 322              	INTERRUPT_Init:
 323              	.LFB45:
  89:../Dave/Generated/INTERRUPT/interrupt.c **** 
  90:../Dave/Generated/INTERRUPT/interrupt.c **** /*
  91:../Dave/Generated/INTERRUPT/interrupt.c ****  * API to initialize the INTERRUPT APP
  92:../Dave/Generated/INTERRUPT/interrupt.c ****  */
  93:../Dave/Generated/INTERRUPT/interrupt.c **** INTERRUPT_STATUS_t INTERRUPT_Init(const INTERRUPT_t *const handler)
  94:../Dave/Generated/INTERRUPT/interrupt.c **** {
 324              	 .loc 3 94 0
 325              	 .cfi_startproc
 326 0000 80B5     	 push {r7,lr}
 327              	.LCFI12:
 328              	 .cfi_def_cfa_offset 8
 329              	 .cfi_offset 7,-8
 330              	 .cfi_offset 14,-4
 331 0002 82B0     	 sub sp,sp,#8
 332              	.LCFI13:
 333              	 .cfi_def_cfa_offset 16
 334 0004 00AF     	 add r7,sp,#0
 335              	.LCFI14:
 336              	 .cfi_def_cfa_register 7
 337 0006 7860     	 str r0,[r7,#4]
  95:../Dave/Generated/INTERRUPT/interrupt.c ****   XMC_ASSERT("INTERRUPT_Init:HandlePtr NULL", (handler != NULL));
  96:../Dave/Generated/INTERRUPT/interrupt.c ****   
  97:../Dave/Generated/INTERRUPT/interrupt.c **** #if(UC_FAMILY == XMC4)
  98:../Dave/Generated/INTERRUPT/interrupt.c **** 
  99:../Dave/Generated/INTERRUPT/interrupt.c ****   NVIC_SetPriority(handler->node,
 100:../Dave/Generated/INTERRUPT/interrupt.c ****                    NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 101:../Dave/Generated/INTERRUPT/interrupt.c ****                                        handler->priority,
 102:../Dave/Generated/INTERRUPT/interrupt.c ****                                        handler->subpriority));
 103:../Dave/Generated/INTERRUPT/interrupt.c ****   if (handler->enable_at_init == true)
 104:../Dave/Generated/INTERRUPT/interrupt.c ****   {
 105:../Dave/Generated/INTERRUPT/interrupt.c ****     INTERRUPT_Enable(handler);
 106:../Dave/Generated/INTERRUPT/interrupt.c ****   }
 107:../Dave/Generated/INTERRUPT/interrupt.c **** #endif
 108:../Dave/Generated/INTERRUPT/interrupt.c **** 
 109:../Dave/Generated/INTERRUPT/interrupt.c **** #if(UC_FAMILY == XMC1)
 110:../Dave/Generated/INTERRUPT/interrupt.c ****   NVIC_SetPriority(handler->node, handler->priority);
 338              	 .loc 3 110 0
 339 0008 7B68     	 ldr r3,[r7,#4]
 340 000a 1A78     	 ldrb r2,[r3]
 341 000c 7B68     	 ldr r3,[r7,#4]
 342 000e 5B78     	 ldrb r3,[r3,#1]
 343 0010 191C     	 mov r1,r3
 344 0012 53B2     	 sxtb r3,r2
 345 0014 181C     	 mov r0,r3
 346 0016 FFF7FEFF 	 bl NVIC_SetPriority
 111:../Dave/Generated/INTERRUPT/interrupt.c ****   
 112:../Dave/Generated/INTERRUPT/interrupt.c **** #if (UC_SERIES == XMC14)
 113:../Dave/Generated/INTERRUPT/interrupt.c ****   XMC_SCU_SetInterruptControl((uint8_t)handler->node, (XMC_SCU_IRQCTRL_t)((handler->node << 8) | ha
 114:../Dave/Generated/INTERRUPT/interrupt.c **** #endif
 115:../Dave/Generated/INTERRUPT/interrupt.c **** 
 116:../Dave/Generated/INTERRUPT/interrupt.c ****   /* Enable the interrupt if enable_at_init is enabled */
 117:../Dave/Generated/INTERRUPT/interrupt.c ****   if (handler->enable_at_init == true)
 347              	 .loc 3 117 0
 348 001a 7B68     	 ldr r3,[r7,#4]
 349 001c 9B78     	 ldrb r3,[r3,#2]
 350 001e 002B     	 cmp r3,#0
 351 0020 03D0     	 beq .L15
 118:../Dave/Generated/INTERRUPT/interrupt.c ****   {
 119:../Dave/Generated/INTERRUPT/interrupt.c ****     INTERRUPT_Enable(handler);
 352              	 .loc 3 119 0
 353 0022 7B68     	 ldr r3,[r7,#4]
 354 0024 181C     	 mov r0,r3
 355 0026 FFF7FEFF 	 bl INTERRUPT_Enable
 356              	.L15:
 120:../Dave/Generated/INTERRUPT/interrupt.c ****   }
 121:../Dave/Generated/INTERRUPT/interrupt.c **** #endif
 122:../Dave/Generated/INTERRUPT/interrupt.c **** 
 123:../Dave/Generated/INTERRUPT/interrupt.c ****   return (INTERRUPT_STATUS_SUCCESS);
 357              	 .loc 3 123 0
 358 002a 0023     	 mov r3,#0
 124:../Dave/Generated/INTERRUPT/interrupt.c **** }
 359              	 .loc 3 124 0
 360 002c 181C     	 mov r0,r3
 361 002e BD46     	 mov sp,r7
 362 0030 02B0     	 add sp,sp,#8
 363              	 
 364 0032 80BD     	 pop {r7,pc}
 365              	 .cfi_endproc
 366              	.LFE45:
 368              	 .text
 369              	.Letext0:
 370              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 371              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 372              	 .file 6 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 373              	 .file 7 "C:/DAVEv4-64Bit/work/test_20161012b_soft05nils/Dave/Generated/DAVE_Common.h"
DEFINED SYMBOLS
                            *ABS*:00000000 interrupt.c
    {standard input}:18     .text.NVIC_EnableIRQ:00000000 $t
    {standard input}:22     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
    {standard input}:60     .text.NVIC_EnableIRQ:00000028 $d
    {standard input}:65     .text.NVIC_SetPriority:00000000 $t
    {standard input}:69     .text.NVIC_SetPriority:00000000 NVIC_SetPriority
    {standard input}:198    .text.NVIC_SetPriority:000000cc $d
    {standard input}:204    .text.INTERRUPT_Enable:00000000 $t
    {standard input}:208    .text.INTERRUPT_Enable:00000000 INTERRUPT_Enable
    {standard input}:240    .text.INTERRUPT_GetAppVersion:00000000 $t
    {standard input}:245    .text.INTERRUPT_GetAppVersion:00000000 INTERRUPT_GetAppVersion
    {standard input}:311    .text.INTERRUPT_GetAppVersion:00000058 $d
    {standard input}:317    .text.INTERRUPT_Init:00000000 $t
    {standard input}:322    .text.INTERRUPT_Init:00000000 INTERRUPT_Init
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
