   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 704B     	 ldr r3,.L20
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c 6E4B     	 ldr r3,.L20
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 121 )  //ende
 469              	 .loc 3 119 0
 470 0010 6D4B     	 ldr r3,.L20
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 792B     	 cmp r3,#121
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 6B4B     	 ldr r3,.L20
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e D0E0     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 694B     	 ldr r3,.L20
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 20D1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 2000;
 485              	 .loc 3 125 0
 486 0028 684B     	 ldr r3,.L20+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c FA22     	 mov r2,#250
 489 002e D200     	 lsl r2,r2,#3
 490 0030 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 2000;
 491              	 .loc 3 126 0
 492 0032 664B     	 ldr r3,.L20+4
 493 0034 DB6A     	 ldr r3,[r3,#44]
 494 0036 FA22     	 mov r2,#250
 495 0038 D200     	 lsl r2,r2,#3
 496 003a 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 2000;
 497              	 .loc 3 127 0
 498 003c 634B     	 ldr r3,.L20+4
 499 003e DB6A     	 ldr r3,[r3,#44]
 500 0040 FA22     	 mov r2,#250
 501 0042 D200     	 lsl r2,r2,#3
 502 0044 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 2000;
 503              	 .loc 3 128 0
 504 0046 614B     	 ldr r3,.L20+4
 505 0048 DB6A     	 ldr r3,[r3,#44]
 506 004a FA22     	 mov r2,#250
 507 004c D200     	 lsl r2,r2,#3
 508 004e DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 509              	 .loc 3 129 0
 510 0050 5E4B     	 ldr r3,.L20+4
 511 0052 181C     	 mov r0,r3
 512 0054 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 513              	 .loc 3 130 0
 514 0058 5C4A     	 ldr r2,.L20+4
 515 005a E523     	 mov r3,#229
 516 005c 9B00     	 lsl r3,r3,#2
 517 005e 101C     	 mov r0,r2
 518 0060 0021     	 mov r1,#0
 519 0062 1A1C     	 mov r2,r3
 520 0064 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 521 0068 ABE0     	 b .L12
 522              	.L15:
 131:../samuel/samuel_io.c **** 	 			 }
 132:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 40 )
 523              	 .loc 3 132 0
 524 006a 574B     	 ldr r3,.L20
 525 006c 1B88     	 ldrh r3,[r3]
 526 006e 282B     	 cmp r3,#40
 527 0070 20D1     	 bne .L16
 133:../samuel/samuel_io.c **** 	 			 {
 134:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 1000;
 528              	 .loc 3 134 0
 529 0072 564B     	 ldr r3,.L20+4
 530 0074 DB6A     	 ldr r3,[r3,#44]
 531 0076 FA22     	 mov r2,#250
 532 0078 9200     	 lsl r2,r2,#2
 533 007a 1A80     	 strh r2,[r3]
 135:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 1000;
 534              	 .loc 3 135 0
 535 007c 534B     	 ldr r3,.L20+4
 536 007e DB6A     	 ldr r3,[r3,#44]
 537 0080 FA22     	 mov r2,#250
 538 0082 9200     	 lsl r2,r2,#2
 539 0084 5A80     	 strh r2,[r3,#2]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 1000;
 540              	 .loc 3 136 0
 541 0086 514B     	 ldr r3,.L20+4
 542 0088 DB6A     	 ldr r3,[r3,#44]
 543 008a FA22     	 mov r2,#250
 544 008c 9200     	 lsl r2,r2,#2
 545 008e 9A80     	 strh r2,[r3,#4]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 1000;
 546              	 .loc 3 137 0
 547 0090 4E4B     	 ldr r3,.L20+4
 548 0092 DB6A     	 ldr r3,[r3,#44]
 549 0094 FA22     	 mov r2,#250
 550 0096 9200     	 lsl r2,r2,#2
 551 0098 DA80     	 strh r2,[r3,#6]
 138:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 552              	 .loc 3 138 0
 553 009a 4C4B     	 ldr r3,.L20+4
 554 009c 181C     	 mov r0,r3
 555 009e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 139:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 556              	 .loc 3 139 0
 557 00a2 4A4A     	 ldr r2,.L20+4
 558 00a4 E523     	 mov r3,#229
 559 00a6 9B00     	 lsl r3,r3,#2
 560 00a8 101C     	 mov r0,r2
 561 00aa 0021     	 mov r1,#0
 562 00ac 1A1C     	 mov r2,r3
 563 00ae FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 564 00b2 86E0     	 b .L12
 565              	.L16:
 140:../samuel/samuel_io.c **** 	 			 }
 141:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 60 )
 566              	 .loc 3 141 0
 567 00b4 444B     	 ldr r3,.L20
 568 00b6 1B88     	 ldrh r3,[r3]
 569 00b8 3C2B     	 cmp r3,#60
 570 00ba 1ED1     	 bne .L17
 142:../samuel/samuel_io.c **** 	 			 {
 143:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 2000;
 571              	 .loc 3 143 0
 572 00bc 434B     	 ldr r3,.L20+4
 573 00be DB6A     	 ldr r3,[r3,#44]
 574 00c0 FA22     	 mov r2,#250
 575 00c2 D200     	 lsl r2,r2,#3
 576 00c4 1A80     	 strh r2,[r3]
 144:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 577              	 .loc 3 144 0
 578 00c6 414B     	 ldr r3,.L20+4
 579 00c8 DB6A     	 ldr r3,[r3,#44]
 580 00ca 0022     	 mov r2,#0
 581 00cc 5A80     	 strh r2,[r3,#2]
 145:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 2000;
 582              	 .loc 3 145 0
 583 00ce 3F4B     	 ldr r3,.L20+4
 584 00d0 DB6A     	 ldr r3,[r3,#44]
 585 00d2 FA22     	 mov r2,#250
 586 00d4 D200     	 lsl r2,r2,#3
 587 00d6 9A80     	 strh r2,[r3,#4]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 588              	 .loc 3 146 0
 589 00d8 3C4B     	 ldr r3,.L20+4
 590 00da DB6A     	 ldr r3,[r3,#44]
 591 00dc 0022     	 mov r2,#0
 592 00de DA80     	 strh r2,[r3,#6]
 147:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 593              	 .loc 3 147 0
 594 00e0 3A4B     	 ldr r3,.L20+4
 595 00e2 181C     	 mov r0,r3
 596 00e4 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 148:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 597              	 .loc 3 148 0
 598 00e8 384A     	 ldr r2,.L20+4
 599 00ea E523     	 mov r3,#229
 600 00ec 9B00     	 lsl r3,r3,#2
 601 00ee 101C     	 mov r0,r2
 602 00f0 0021     	 mov r1,#0
 603 00f2 1A1C     	 mov r2,r3
 604 00f4 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 605 00f8 63E0     	 b .L12
 606              	.L17:
 149:../samuel/samuel_io.c **** 	 			 }
 150:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 80 )
 607              	 .loc 3 150 0
 608 00fa 334B     	 ldr r3,.L20
 609 00fc 1B88     	 ldrh r3,[r3]
 610 00fe 502B     	 cmp r3,#80
 611 0100 1ED1     	 bne .L18
 151:../samuel/samuel_io.c **** 	 			 {
 152:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 1000;
 612              	 .loc 3 152 0
 613 0102 324B     	 ldr r3,.L20+4
 614 0104 DB6A     	 ldr r3,[r3,#44]
 615 0106 FA22     	 mov r2,#250
 616 0108 9200     	 lsl r2,r2,#2
 617 010a 1A80     	 strh r2,[r3]
 153:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 618              	 .loc 3 153 0
 619 010c 2F4B     	 ldr r3,.L20+4
 620 010e DB6A     	 ldr r3,[r3,#44]
 621 0110 0022     	 mov r2,#0
 622 0112 5A80     	 strh r2,[r3,#2]
 154:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 1000;
 623              	 .loc 3 154 0
 624 0114 2D4B     	 ldr r3,.L20+4
 625 0116 DB6A     	 ldr r3,[r3,#44]
 626 0118 FA22     	 mov r2,#250
 627 011a 9200     	 lsl r2,r2,#2
 628 011c 9A80     	 strh r2,[r3,#4]
 155:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 629              	 .loc 3 155 0
 630 011e 2B4B     	 ldr r3,.L20+4
 631 0120 DB6A     	 ldr r3,[r3,#44]
 632 0122 0022     	 mov r2,#0
 633 0124 DA80     	 strh r2,[r3,#6]
 156:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 634              	 .loc 3 156 0
 635 0126 294B     	 ldr r3,.L20+4
 636 0128 181C     	 mov r0,r3
 637 012a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 157:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 638              	 .loc 3 157 0
 639 012e 274A     	 ldr r2,.L20+4
 640 0130 E523     	 mov r3,#229
 641 0132 9B00     	 lsl r3,r3,#2
 642 0134 101C     	 mov r0,r2
 643 0136 0021     	 mov r1,#0
 644 0138 1A1C     	 mov r2,r3
 645 013a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 646 013e 40E0     	 b .L12
 647              	.L18:
 158:../samuel/samuel_io.c **** 	 			 }
 159:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 100 )
 648              	 .loc 3 159 0
 649 0140 214B     	 ldr r3,.L20
 650 0142 1B88     	 ldrh r3,[r3]
 651 0144 642B     	 cmp r3,#100
 652 0146 1ED1     	 bne .L19
 160:../samuel/samuel_io.c **** 	 			 {
 161:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 500;
 653              	 .loc 3 161 0
 654 0148 204B     	 ldr r3,.L20+4
 655 014a DB6A     	 ldr r3,[r3,#44]
 656 014c FA22     	 mov r2,#250
 657 014e 5200     	 lsl r2,r2,#1
 658 0150 1A80     	 strh r2,[r3]
 162:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 659              	 .loc 3 162 0
 660 0152 1E4B     	 ldr r3,.L20+4
 661 0154 DB6A     	 ldr r3,[r3,#44]
 662 0156 0022     	 mov r2,#0
 663 0158 5A80     	 strh r2,[r3,#2]
 163:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 500;
 664              	 .loc 3 163 0
 665 015a 1C4B     	 ldr r3,.L20+4
 666 015c DB6A     	 ldr r3,[r3,#44]
 667 015e FA22     	 mov r2,#250
 668 0160 5200     	 lsl r2,r2,#1
 669 0162 9A80     	 strh r2,[r3,#4]
 164:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 670              	 .loc 3 164 0
 671 0164 194B     	 ldr r3,.L20+4
 672 0166 DB6A     	 ldr r3,[r3,#44]
 673 0168 0022     	 mov r2,#0
 674 016a DA80     	 strh r2,[r3,#6]
 165:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 675              	 .loc 3 165 0
 676 016c 174B     	 ldr r3,.L20+4
 677 016e 181C     	 mov r0,r3
 678 0170 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 166:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 679              	 .loc 3 166 0
 680 0174 154A     	 ldr r2,.L20+4
 681 0176 E523     	 mov r3,#229
 682 0178 9B00     	 lsl r3,r3,#2
 683 017a 101C     	 mov r0,r2
 684 017c 0021     	 mov r1,#0
 685 017e 1A1C     	 mov r2,r3
 686 0180 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 687 0184 1DE0     	 b .L12
 688              	.L19:
 167:../samuel/samuel_io.c **** 	 			 }
 168:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 120 )
 689              	 .loc 3 168 0
 690 0186 104B     	 ldr r3,.L20
 691 0188 1B88     	 ldrh r3,[r3]
 692 018a 782B     	 cmp r3,#120
 693 018c 19D1     	 bne .L12
 169:../samuel/samuel_io.c **** 	 			 {
 170:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 694              	 .loc 3 170 0
 695 018e 0F4B     	 ldr r3,.L20+4
 696 0190 DB6A     	 ldr r3,[r3,#44]
 697 0192 0022     	 mov r2,#0
 698 0194 1A80     	 strh r2,[r3]
 171:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 699              	 .loc 3 171 0
 700 0196 0D4B     	 ldr r3,.L20+4
 701 0198 DB6A     	 ldr r3,[r3,#44]
 702 019a 0022     	 mov r2,#0
 703 019c 5A80     	 strh r2,[r3,#2]
 172:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 704              	 .loc 3 172 0
 705 019e 0B4B     	 ldr r3,.L20+4
 706 01a0 DB6A     	 ldr r3,[r3,#44]
 707 01a2 0022     	 mov r2,#0
 708 01a4 9A80     	 strh r2,[r3,#4]
 173:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 709              	 .loc 3 173 0
 710 01a6 094B     	 ldr r3,.L20+4
 711 01a8 DB6A     	 ldr r3,[r3,#44]
 712 01aa 0022     	 mov r2,#0
 713 01ac DA80     	 strh r2,[r3,#6]
 174:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 714              	 .loc 3 174 0
 715 01ae 074B     	 ldr r3,.L20+4
 716 01b0 181C     	 mov r0,r3
 717 01b2 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 175:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x3D1);
 718              	 .loc 3 175 0
 719 01b6 054B     	 ldr r3,.L20+4
 720 01b8 054A     	 ldr r2,.L20+8
 721 01ba 181C     	 mov r0,r3
 722 01bc 0021     	 mov r1,#0
 723 01be FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 724              	.L12:
 176:../samuel/samuel_io.c **** 	 			 }
 177:../samuel/samuel_io.c **** 				 else
 178:../samuel/samuel_io.c **** 
 179:../samuel/samuel_io.c **** 				 {
 180:../samuel/samuel_io.c **** 
 181:../samuel/samuel_io.c **** 				 }
 182:../samuel/samuel_io.c **** 
 183:../samuel/samuel_io.c ****    }
 725              	 .loc 3 183 0
 726 01c2 BD46     	 mov sp,r7
 727              	 
 728 01c4 80BD     	 pop {r7,pc}
 729              	.L21:
 730 01c6 C046     	 .align 2
 731              	.L20:
 732 01c8 00000000 	 .word zahler_lightprog01
 733 01cc 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 734 01d0 D1030000 	 .word 977
 735              	 .cfi_endproc
 736              	.LFE292:
 738              	 .section .text.light_aus,"ax",%progbits
 739              	 .align 2
 740              	 .global light_aus
 741              	 .code 16
 742              	 .thumb_func
 744              	light_aus:
 745              	.LFB293:
 184:../samuel/samuel_io.c ****   //------------------------------------------
 185:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 186:../samuel/samuel_io.c ****    {
 746              	 .loc 3 186 0
 747              	 .cfi_startproc
 748 0000 80B5     	 push {r7,lr}
 749              	.LCFI18:
 750              	 .cfi_def_cfa_offset 8
 751              	 .cfi_offset 7,-8
 752              	 .cfi_offset 14,-4
 753 0002 00AF     	 add r7,sp,#0
 754              	.LCFI19:
 755              	 .cfi_def_cfa_register 7
 187:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 756              	 .loc 3 187 0
 757 0004 104B     	 ldr r3,.L23
 758 0006 1A88     	 ldrh r2,[r3]
 759 0008 104B     	 ldr r3,.L23+4
 760 000a 1A80     	 strh r2,[r3]
 188:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 761              	 .loc 3 188 0
 762 000c 0E4B     	 ldr r3,.L23
 763 000e 1A88     	 ldrh r2,[r3]
 764 0010 0F4B     	 ldr r3,.L23+8
 765 0012 1A80     	 strh r2,[r3]
 189:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 766              	 .loc 3 189 0
 767 0014 0C4B     	 ldr r3,.L23
 768 0016 1A88     	 ldrh r2,[r3]
 769 0018 0E4B     	 ldr r3,.L23+12
 770 001a 1A80     	 strh r2,[r3]
 190:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 771              	 .loc 3 190 0
 772 001c 0A4B     	 ldr r3,.L23
 773 001e 1A88     	 ldrh r2,[r3]
 774 0020 0D4B     	 ldr r3,.L23+16
 775 0022 1A80     	 strh r2,[r3]
 191:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 776              	 .loc 3 191 0
 777 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 192:../samuel/samuel_io.c **** 	  bcuUebergabe();
 778              	 .loc 3 192 0
 779 0028 FFF7FEFF 	 bl bcuUebergabe
 193:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 194:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 780              	 .loc 3 194 0
 781 002c 0B4A     	 ldr r2,.L23+20
 782 002e 8023     	 mov r3,#128
 783 0030 1B01     	 lsl r3,r3,#4
 784 0032 101C     	 mov r0,r2
 785 0034 191C     	 mov r1,r3
 786 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 195:../samuel/samuel_io.c **** 	     // Start Dimming
 196:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 787              	 .loc 3 196 0
 788 003a 084B     	 ldr r3,.L23+20
 789 003c 181C     	 mov r0,r3
 790 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 197:../samuel/samuel_io.c **** 
 198:../samuel/samuel_io.c ****    }
 791              	 .loc 3 198 0
 792 0042 BD46     	 mov sp,r7
 793              	 
 794 0044 80BD     	 pop {r7,pc}
 795              	.L24:
 796 0046 C046     	 .align 2
 797              	.L23:
 798 0048 00000000 	 .word linearwalk_gen
 799 004c 00000000 	 .word linearwalk_ww1
 800 0050 00000000 	 .word linearwalk_ww2
 801 0054 00000000 	 .word linearwalk_cw1
 802 0058 00000000 	 .word linearwalk_cw2
 803 005c 00000000 	 .word DIM_BCCU_0
 804              	 .cfi_endproc
 805              	.LFE293:
 807              	 .section .text.analog_start,"ax",%progbits
 808              	 .align 2
 809              	 .global analog_start
 810              	 .code 16
 811              	 .thumb_func
 813              	analog_start:
 814              	.LFB294:
 199:../samuel/samuel_io.c ****   //------------------------------------------
 200:../samuel/samuel_io.c **** 
 201:../samuel/samuel_io.c **** 
 202:../samuel/samuel_io.c **** 
 203:../samuel/samuel_io.c ****  void analog_start (void)
 204:../samuel/samuel_io.c ****   {
 815              	 .loc 3 204 0
 816              	 .cfi_startproc
 817 0000 80B5     	 push {r7,lr}
 818              	.LCFI20:
 819              	 .cfi_def_cfa_offset 8
 820              	 .cfi_offset 7,-8
 821              	 .cfi_offset 14,-4
 822 0002 00AF     	 add r7,sp,#0
 823              	.LCFI21:
 824              	 .cfi_def_cfa_register 7
 205:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 206:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 207:../samuel/samuel_io.c **** 
 208:../samuel/samuel_io.c ****   }
 825              	 .loc 3 208 0
 826 0004 BD46     	 mov sp,r7
 827              	 
 828 0006 80BD     	 pop {r7,pc}
 829              	 .cfi_endproc
 830              	.LFE294:
 832              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 833              	 .align 2
 834              	 .global SCU_0_IRQHandler
 835              	 .code 16
 836              	 .thumb_func
 838              	SCU_0_IRQHandler:
 839              	.LFB295:
 209:../samuel/samuel_io.c **** 
 210:../samuel/samuel_io.c **** 
 211:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 212:../samuel/samuel_io.c ****   {
 840              	 .loc 3 212 0
 841              	 .cfi_startproc
 842 0000 80B5     	 push {r7,lr}
 843              	.LCFI22:
 844              	 .cfi_def_cfa_offset 8
 845              	 .cfi_offset 7,-8
 846              	 .cfi_offset 14,-4
 847 0002 00AF     	 add r7,sp,#0
 848              	.LCFI23:
 849              	 .cfi_def_cfa_register 7
 213:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 214:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 215:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 216:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 217:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 218:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 219:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 220:../samuel/samuel_io.c ****   }
 850              	 .loc 3 220 0
 851 0004 BD46     	 mov sp,r7
 852              	 
 853 0006 80BD     	 pop {r7,pc}
 854              	 .cfi_endproc
 855              	.LFE295:
 857              	 .section .text.new_data_fill,"ax",%progbits
 858              	 .align 2
 859              	 .global new_data_fill
 860              	 .code 16
 861              	 .thumb_func
 863              	new_data_fill:
 864              	.LFB296:
 221:../samuel/samuel_io.c **** 
 222:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 223:../samuel/samuel_io.c ****  {
 865              	 .loc 3 223 0
 866              	 .cfi_startproc
 867 0000 80B5     	 push {r7,lr}
 868              	.LCFI24:
 869              	 .cfi_def_cfa_offset 8
 870              	 .cfi_offset 7,-8
 871              	 .cfi_offset 14,-4
 872 0002 00AF     	 add r7,sp,#0
 873              	.LCFI25:
 874              	 .cfi_def_cfa_register 7
 224:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 875              	 .loc 3 224 0
 876 0004 124B     	 ldr r3,.L28
 877 0006 0B22     	 mov r2,#11
 878 0008 1A70     	 strb r2,[r3]
 225:../samuel/samuel_io.c **** 	 new_data[0]=1;
 879              	 .loc 3 225 0
 880 000a 124B     	 ldr r3,.L28+4
 881 000c 0122     	 mov r2,#1
 882 000e 1A70     	 strb r2,[r3]
 226:../samuel/samuel_io.c **** 	 new_data[1]=2;
 883              	 .loc 3 226 0
 884 0010 104B     	 ldr r3,.L28+4
 885 0012 0222     	 mov r2,#2
 886 0014 5A70     	 strb r2,[r3,#1]
 227:../samuel/samuel_io.c **** 	 new_data[2]=3;
 887              	 .loc 3 227 0
 888 0016 0F4B     	 ldr r3,.L28+4
 889 0018 0322     	 mov r2,#3
 890 001a 9A70     	 strb r2,[r3,#2]
 228:../samuel/samuel_io.c **** 	 new_data[3]=4;
 891              	 .loc 3 228 0
 892 001c 0D4B     	 ldr r3,.L28+4
 893 001e 0422     	 mov r2,#4
 894 0020 DA70     	 strb r2,[r3,#3]
 229:../samuel/samuel_io.c **** 	 new_data[4]=5;
 895              	 .loc 3 229 0
 896 0022 0C4B     	 ldr r3,.L28+4
 897 0024 0522     	 mov r2,#5
 898 0026 1A71     	 strb r2,[r3,#4]
 230:../samuel/samuel_io.c **** 	 new_data[5]=6;
 899              	 .loc 3 230 0
 900 0028 0A4B     	 ldr r3,.L28+4
 901 002a 0622     	 mov r2,#6
 902 002c 5A71     	 strb r2,[r3,#5]
 231:../samuel/samuel_io.c ****  	 new_data[6]=7;
 903              	 .loc 3 231 0
 904 002e 094B     	 ldr r3,.L28+4
 905 0030 0722     	 mov r2,#7
 906 0032 9A71     	 strb r2,[r3,#6]
 232:../samuel/samuel_io.c ****  	 new_data[7]=8;
 907              	 .loc 3 232 0
 908 0034 074B     	 ldr r3,.L28+4
 909 0036 0822     	 mov r2,#8
 910 0038 DA71     	 strb r2,[r3,#7]
 233:../samuel/samuel_io.c ****  	 new_data[8]=9;
 911              	 .loc 3 233 0
 912 003a 064B     	 ldr r3,.L28+4
 913 003c 0922     	 mov r2,#9
 914 003e 1A72     	 strb r2,[r3,#8]
 234:../samuel/samuel_io.c ****  	 new_data[9]='a';
 915              	 .loc 3 234 0
 916 0040 044B     	 ldr r3,.L28+4
 917 0042 6122     	 mov r2,#97
 918 0044 5A72     	 strb r2,[r3,#9]
 235:../samuel/samuel_io.c **** 	 new_data[10]='b';
 919              	 .loc 3 235 0
 920 0046 034B     	 ldr r3,.L28+4
 921 0048 6222     	 mov r2,#98
 922 004a 9A72     	 strb r2,[r3,#10]
 236:../samuel/samuel_io.c ****  }
 923              	 .loc 3 236 0
 924 004c BD46     	 mov sp,r7
 925              	 
 926 004e 80BD     	 pop {r7,pc}
 927              	.L29:
 928              	 .align 2
 929              	.L28:
 930 0050 00000000 	 .word transmit_buf_size
 931 0054 00000000 	 .word new_data
 932              	 .cfi_endproc
 933              	.LFE296:
 935              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 936              	 .align 2
 937              	 .global new_data_unbekanntBack
 938              	 .code 16
 939              	 .thumb_func
 941              	new_data_unbekanntBack:
 942              	.LFB297:
 237:../samuel/samuel_io.c **** 
 238:../samuel/samuel_io.c **** 
 239:../samuel/samuel_io.c **** 
 240:../samuel/samuel_io.c **** 
 241:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 242:../samuel/samuel_io.c ****  {
 943              	 .loc 3 242 0
 944              	 .cfi_startproc
 945 0000 80B5     	 push {r7,lr}
 946              	.LCFI26:
 947              	 .cfi_def_cfa_offset 8
 948              	 .cfi_offset 7,-8
 949              	 .cfi_offset 14,-4
 950 0002 00AF     	 add r7,sp,#0
 951              	.LCFI27:
 952              	 .cfi_def_cfa_register 7
 243:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 953              	 .loc 3 243 0
 954 0004 134B     	 ldr r3,.L31
 955 0006 0B22     	 mov r2,#11
 956 0008 1A70     	 strb r2,[r3]
 244:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 957              	 .loc 3 244 0
 958 000a 134B     	 ldr r3,.L31+4
 959 000c 4C22     	 mov r2,#76
 960 000e 1A70     	 strb r2,[r3]
 245:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 961              	 .loc 3 245 0
 962 0010 114B     	 ldr r3,.L31+4
 963 0012 4922     	 mov r2,#73
 964 0014 5A70     	 strb r2,[r3,#1]
 246:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 965              	 .loc 3 246 0
 966 0016 104B     	 ldr r3,.L31+4
 967 0018 4E22     	 mov r2,#78
 968 001a 9A70     	 strb r2,[r3,#2]
 247:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 969              	 .loc 3 247 0
 970 001c 0F4B     	 ldr r3,.L31+8
 971 001e 1A78     	 ldrb r2,[r3]
 972 0020 0D4B     	 ldr r3,.L31+4
 973 0022 DA70     	 strb r2,[r3,#3]
 248:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 974              	 .loc 3 248 0
 975 0024 0B4B     	 ldr r3,.L31
 976 0026 1A78     	 ldrb r2,[r3]
 977 0028 0B4B     	 ldr r3,.L31+4
 978 002a 1A71     	 strb r2,[r3,#4]
 249:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 979              	 .loc 3 249 0
 980 002c 0A4B     	 ldr r3,.L31+4
 981 002e 3122     	 mov r2,#49
 982 0030 5A71     	 strb r2,[r3,#5]
 250:../samuel/samuel_io.c **** 	 new_data[6]='n';
 983              	 .loc 3 250 0
 984 0032 094B     	 ldr r3,.L31+4
 985 0034 6E22     	 mov r2,#110
 986 0036 9A71     	 strb r2,[r3,#6]
 251:../samuel/samuel_io.c **** 	 new_data[7]='o';
 987              	 .loc 3 251 0
 988 0038 074B     	 ldr r3,.L31+4
 989 003a 6F22     	 mov r2,#111
 990 003c DA71     	 strb r2,[r3,#7]
 252:../samuel/samuel_io.c **** 	 new_data[8]='n';
 991              	 .loc 3 252 0
 992 003e 064B     	 ldr r3,.L31+4
 993 0040 6E22     	 mov r2,#110
 994 0042 1A72     	 strb r2,[r3,#8]
 253:../samuel/samuel_io.c **** 	 new_data[9]='o';
 995              	 .loc 3 253 0
 996 0044 044B     	 ldr r3,.L31+4
 997 0046 6F22     	 mov r2,#111
 998 0048 5A72     	 strb r2,[r3,#9]
 254:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 999              	 .loc 3 254 0
 1000 004a 034B     	 ldr r3,.L31+4
 1001 004c FF22     	 mov r2,#255
 1002 004e 9A72     	 strb r2,[r3,#10]
 255:../samuel/samuel_io.c ****  }
 1003              	 .loc 3 255 0
 1004 0050 BD46     	 mov sp,r7
 1005              	 
 1006 0052 80BD     	 pop {r7,pc}
 1007              	.L32:
 1008              	 .align 2
 1009              	.L31:
 1010 0054 00000000 	 .word transmit_buf_size
 1011 0058 00000000 	 .word new_data
 1012 005c 00000000 	 .word node_id
 1013              	 .cfi_endproc
 1014              	.LFE297:
 1016              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 1017              	 .align 2
 1018              	 .global new_data_BroadcastBack
 1019              	 .code 16
 1020              	 .thumb_func
 1022              	new_data_BroadcastBack:
 1023              	.LFB298:
 256:../samuel/samuel_io.c **** 
 257:../samuel/samuel_io.c **** //------------------------------------------
 258:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 259:../samuel/samuel_io.c ****  {
 1024              	 .loc 3 259 0
 1025              	 .cfi_startproc
 1026 0000 80B5     	 push {r7,lr}
 1027              	.LCFI28:
 1028              	 .cfi_def_cfa_offset 8
 1029              	 .cfi_offset 7,-8
 1030              	 .cfi_offset 14,-4
 1031 0002 00AF     	 add r7,sp,#0
 1032              	.LCFI29:
 1033              	 .cfi_def_cfa_register 7
 260:../samuel/samuel_io.c **** 
 261:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1034              	 .loc 3 261 0
 1035 0004 194B     	 ldr r3,.L34
 1036 0006 0B22     	 mov r2,#11
 1037 0008 1A70     	 strb r2,[r3]
 262:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1038              	 .loc 3 262 0
 1039 000a 194B     	 ldr r3,.L34+4
 1040 000c 4C22     	 mov r2,#76
 1041 000e 1A70     	 strb r2,[r3]
 263:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1042              	 .loc 3 263 0
 1043 0010 174B     	 ldr r3,.L34+4
 1044 0012 4922     	 mov r2,#73
 1045 0014 5A70     	 strb r2,[r3,#1]
 264:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1046              	 .loc 3 264 0
 1047 0016 164B     	 ldr r3,.L34+4
 1048 0018 4E22     	 mov r2,#78
 1049 001a 9A70     	 strb r2,[r3,#2]
 265:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1050              	 .loc 3 265 0
 1051 001c 154B     	 ldr r3,.L34+8
 1052 001e 1A78     	 ldrb r2,[r3]
 1053 0020 134B     	 ldr r3,.L34+4
 1054 0022 DA70     	 strb r2,[r3,#3]
 266:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1055              	 .loc 3 266 0
 1056 0024 114B     	 ldr r3,.L34
 1057 0026 1A78     	 ldrb r2,[r3]
 1058 0028 114B     	 ldr r3,.L34+4
 1059 002a 1A71     	 strb r2,[r3,#4]
 267:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 1060              	 .loc 3 267 0
 1061 002c 104B     	 ldr r3,.L34+4
 1062 002e 6F22     	 mov r2,#111
 1063 0030 5A71     	 strb r2,[r3,#5]
 268:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 1064              	 .loc 3 268 0
 1065 0032 114B     	 ldr r3,.L34+12
 1066 0034 1B88     	 ldrh r3,[r3]
 1067 0036 1B0A     	 lsr r3,r3,#8
 1068 0038 9BB2     	 uxth r3,r3
 1069 003a DAB2     	 uxtb r2,r3
 1070 003c 0C4B     	 ldr r3,.L34+4
 1071 003e 9A71     	 strb r2,[r3,#6]
 269:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 1072              	 .loc 3 269 0
 1073 0040 0D4B     	 ldr r3,.L34+12
 1074 0042 1B88     	 ldrh r3,[r3]
 1075 0044 DAB2     	 uxtb r2,r3
 1076 0046 0A4B     	 ldr r3,.L34+4
 1077 0048 DA71     	 strb r2,[r3,#7]
 270:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 1078              	 .loc 3 270 0
 1079 004a 0C4B     	 ldr r3,.L34+16
 1080 004c 1B88     	 ldrh r3,[r3]
 1081 004e 1B0A     	 lsr r3,r3,#8
 1082 0050 9BB2     	 uxth r3,r3
 1083 0052 DAB2     	 uxtb r2,r3
 1084 0054 064B     	 ldr r3,.L34+4
 1085 0056 1A72     	 strb r2,[r3,#8]
 271:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 1086              	 .loc 3 271 0
 1087 0058 084B     	 ldr r3,.L34+16
 1088 005a 1B88     	 ldrh r3,[r3]
 1089 005c DAB2     	 uxtb r2,r3
 1090 005e 044B     	 ldr r3,.L34+4
 1091 0060 5A72     	 strb r2,[r3,#9]
 272:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1092              	 .loc 3 272 0
 1093 0062 034B     	 ldr r3,.L34+4
 1094 0064 FF22     	 mov r2,#255
 1095 0066 9A72     	 strb r2,[r3,#10]
 273:../samuel/samuel_io.c ****  }
 1096              	 .loc 3 273 0
 1097 0068 BD46     	 mov sp,r7
 1098              	 
 1099 006a 80BD     	 pop {r7,pc}
 1100              	.L35:
 1101              	 .align 2
 1102              	.L34:
 1103 006c 00000000 	 .word transmit_buf_size
 1104 0070 00000000 	 .word new_data
 1105 0074 00000000 	 .word node_id
 1106 0078 00000000 	 .word Ser_NrH
 1107 007c 00000000 	 .word Ser_NrL
 1108              	 .cfi_endproc
 1109              	.LFE298:
 1111              	 .section .text.new_data_analog1Back,"ax",%progbits
 1112              	 .align 2
 1113              	 .global new_data_analog1Back
 1114              	 .code 16
 1115              	 .thumb_func
 1117              	new_data_analog1Back:
 1118              	.LFB299:
 274:../samuel/samuel_io.c ****  //------------------------------------------
 275:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 276:../samuel/samuel_io.c ****  {
 1119              	 .loc 3 276 0
 1120              	 .cfi_startproc
 1121 0000 80B5     	 push {r7,lr}
 1122              	.LCFI30:
 1123              	 .cfi_def_cfa_offset 8
 1124              	 .cfi_offset 7,-8
 1125              	 .cfi_offset 14,-4
 1126 0002 00AF     	 add r7,sp,#0
 1127              	.LCFI31:
 1128              	 .cfi_def_cfa_register 7
 277:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1129              	 .loc 3 277 0
 1130 0004 194B     	 ldr r3,.L37
 1131 0006 0B22     	 mov r2,#11
 1132 0008 1A70     	 strb r2,[r3]
 278:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1133              	 .loc 3 278 0
 1134 000a 194B     	 ldr r3,.L37+4
 1135 000c 4C22     	 mov r2,#76
 1136 000e 1A70     	 strb r2,[r3]
 279:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1137              	 .loc 3 279 0
 1138 0010 174B     	 ldr r3,.L37+4
 1139 0012 4922     	 mov r2,#73
 1140 0014 5A70     	 strb r2,[r3,#1]
 280:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1141              	 .loc 3 280 0
 1142 0016 164B     	 ldr r3,.L37+4
 1143 0018 4E22     	 mov r2,#78
 1144 001a 9A70     	 strb r2,[r3,#2]
 281:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1145              	 .loc 3 281 0
 1146 001c 154B     	 ldr r3,.L37+8
 1147 001e 1A78     	 ldrb r2,[r3]
 1148 0020 134B     	 ldr r3,.L37+4
 1149 0022 DA70     	 strb r2,[r3,#3]
 282:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1150              	 .loc 3 282 0
 1151 0024 114B     	 ldr r3,.L37
 1152 0026 1A78     	 ldrb r2,[r3]
 1153 0028 114B     	 ldr r3,.L37+4
 1154 002a 1A71     	 strb r2,[r3,#4]
 283:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1155              	 .loc 3 283 0
 1156 002c 104B     	 ldr r3,.L37+4
 1157 002e 6122     	 mov r2,#97
 1158 0030 5A71     	 strb r2,[r3,#5]
 284:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1159              	 .loc 3 284 0
 1160 0032 114B     	 ldr r3,.L37+12
 1161 0034 1B88     	 ldrh r3,[r3]
 1162 0036 1B0A     	 lsr r3,r3,#8
 1163 0038 9BB2     	 uxth r3,r3
 1164 003a DAB2     	 uxtb r2,r3
 1165 003c 0C4B     	 ldr r3,.L37+4
 1166 003e 9A71     	 strb r2,[r3,#6]
 285:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1167              	 .loc 3 285 0
 1168 0040 0D4B     	 ldr r3,.L37+12
 1169 0042 1B88     	 ldrh r3,[r3]
 1170 0044 DAB2     	 uxtb r2,r3
 1171 0046 0A4B     	 ldr r3,.L37+4
 1172 0048 DA71     	 strb r2,[r3,#7]
 286:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1173              	 .loc 3 286 0
 1174 004a 0C4B     	 ldr r3,.L37+16
 1175 004c 1B88     	 ldrh r3,[r3]
 1176 004e 1B0A     	 lsr r3,r3,#8
 1177 0050 9BB2     	 uxth r3,r3
 1178 0052 DAB2     	 uxtb r2,r3
 1179 0054 064B     	 ldr r3,.L37+4
 1180 0056 1A72     	 strb r2,[r3,#8]
 287:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1181              	 .loc 3 287 0
 1182 0058 084B     	 ldr r3,.L37+16
 1183 005a 1B88     	 ldrh r3,[r3]
 1184 005c DAB2     	 uxtb r2,r3
 1185 005e 044B     	 ldr r3,.L37+4
 1186 0060 5A72     	 strb r2,[r3,#9]
 288:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1187              	 .loc 3 288 0
 1188 0062 034B     	 ldr r3,.L37+4
 1189 0064 FF22     	 mov r2,#255
 1190 0066 9A72     	 strb r2,[r3,#10]
 289:../samuel/samuel_io.c ****  }
 1191              	 .loc 3 289 0
 1192 0068 BD46     	 mov sp,r7
 1193              	 
 1194 006a 80BD     	 pop {r7,pc}
 1195              	.L38:
 1196              	 .align 2
 1197              	.L37:
 1198 006c 00000000 	 .word transmit_buf_size
 1199 0070 00000000 	 .word new_data
 1200 0074 00000000 	 .word node_id
 1201 0078 00000000 	 .word resultA2
 1202 007c 00000000 	 .word resultB2
 1203              	 .cfi_endproc
 1204              	.LFE299:
 1206              	 .section .text.new_data_analog2Back,"ax",%progbits
 1207              	 .align 2
 1208              	 .global new_data_analog2Back
 1209              	 .code 16
 1210              	 .thumb_func
 1212              	new_data_analog2Back:
 1213              	.LFB300:
 290:../samuel/samuel_io.c ****  //------------------------------------------------------
 291:../samuel/samuel_io.c **** 
 292:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 293:../samuel/samuel_io.c ****  {
 1214              	 .loc 3 293 0
 1215              	 .cfi_startproc
 1216 0000 80B5     	 push {r7,lr}
 1217              	.LCFI32:
 1218              	 .cfi_def_cfa_offset 8
 1219              	 .cfi_offset 7,-8
 1220              	 .cfi_offset 14,-4
 1221 0002 00AF     	 add r7,sp,#0
 1222              	.LCFI33:
 1223              	 .cfi_def_cfa_register 7
 294:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1224              	 .loc 3 294 0
 1225 0004 194B     	 ldr r3,.L40
 1226 0006 0B22     	 mov r2,#11
 1227 0008 1A70     	 strb r2,[r3]
 295:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1228              	 .loc 3 295 0
 1229 000a 194B     	 ldr r3,.L40+4
 1230 000c 4C22     	 mov r2,#76
 1231 000e 1A70     	 strb r2,[r3]
 296:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1232              	 .loc 3 296 0
 1233 0010 174B     	 ldr r3,.L40+4
 1234 0012 4922     	 mov r2,#73
 1235 0014 5A70     	 strb r2,[r3,#1]
 297:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1236              	 .loc 3 297 0
 1237 0016 164B     	 ldr r3,.L40+4
 1238 0018 4E22     	 mov r2,#78
 1239 001a 9A70     	 strb r2,[r3,#2]
 298:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1240              	 .loc 3 298 0
 1241 001c 154B     	 ldr r3,.L40+8
 1242 001e 1A78     	 ldrb r2,[r3]
 1243 0020 134B     	 ldr r3,.L40+4
 1244 0022 DA70     	 strb r2,[r3,#3]
 299:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1245              	 .loc 3 299 0
 1246 0024 114B     	 ldr r3,.L40
 1247 0026 1A78     	 ldrb r2,[r3]
 1248 0028 114B     	 ldr r3,.L40+4
 1249 002a 1A71     	 strb r2,[r3,#4]
 300:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1250              	 .loc 3 300 0
 1251 002c 104B     	 ldr r3,.L40+4
 1252 002e 6222     	 mov r2,#98
 1253 0030 5A71     	 strb r2,[r3,#5]
 301:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1254              	 .loc 3 301 0
 1255 0032 114B     	 ldr r3,.L40+12
 1256 0034 1B88     	 ldrh r3,[r3]
 1257 0036 1B0A     	 lsr r3,r3,#8
 1258 0038 9BB2     	 uxth r3,r3
 1259 003a DAB2     	 uxtb r2,r3
 1260 003c 0C4B     	 ldr r3,.L40+4
 1261 003e 9A71     	 strb r2,[r3,#6]
 302:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1262              	 .loc 3 302 0
 1263 0040 0D4B     	 ldr r3,.L40+12
 1264 0042 1B88     	 ldrh r3,[r3]
 1265 0044 DAB2     	 uxtb r2,r3
 1266 0046 0A4B     	 ldr r3,.L40+4
 1267 0048 DA71     	 strb r2,[r3,#7]
 303:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1268              	 .loc 3 303 0
 1269 004a 0C4B     	 ldr r3,.L40+16
 1270 004c 1B88     	 ldrh r3,[r3]
 1271 004e 1B0A     	 lsr r3,r3,#8
 1272 0050 9BB2     	 uxth r3,r3
 1273 0052 DAB2     	 uxtb r2,r3
 1274 0054 064B     	 ldr r3,.L40+4
 1275 0056 1A72     	 strb r2,[r3,#8]
 304:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1276              	 .loc 3 304 0
 1277 0058 084B     	 ldr r3,.L40+16
 1278 005a 1B88     	 ldrh r3,[r3]
 1279 005c DAB2     	 uxtb r2,r3
 1280 005e 044B     	 ldr r3,.L40+4
 1281 0060 5A72     	 strb r2,[r3,#9]
 305:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1282              	 .loc 3 305 0
 1283 0062 034B     	 ldr r3,.L40+4
 1284 0064 FF22     	 mov r2,#255
 1285 0066 9A72     	 strb r2,[r3,#10]
 306:../samuel/samuel_io.c ****  }
 1286              	 .loc 3 306 0
 1287 0068 BD46     	 mov sp,r7
 1288              	 
 1289 006a 80BD     	 pop {r7,pc}
 1290              	.L41:
 1291              	 .align 2
 1292              	.L40:
 1293 006c 00000000 	 .word transmit_buf_size
 1294 0070 00000000 	 .word new_data
 1295 0074 00000000 	 .word node_id
 1296 0078 00000000 	 .word resultC2
 1297 007c 00000000 	 .word resultD2
 1298              	 .cfi_endproc
 1299              	.LFE300:
 1301              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1302              	 .align 2
 1303              	 .global new_data_aktLichtBack
 1304              	 .code 16
 1305              	 .thumb_func
 1307              	new_data_aktLichtBack:
 1308              	.LFB301:
 307:../samuel/samuel_io.c ****  //------------------------------------------------------
 308:../samuel/samuel_io.c **** 
 309:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 310:../samuel/samuel_io.c ****  {
 1309              	 .loc 3 310 0
 1310              	 .cfi_startproc
 1311 0000 80B5     	 push {r7,lr}
 1312              	.LCFI34:
 1313              	 .cfi_def_cfa_offset 8
 1314              	 .cfi_offset 7,-8
 1315              	 .cfi_offset 14,-4
 1316 0002 00AF     	 add r7,sp,#0
 1317              	.LCFI35:
 1318              	 .cfi_def_cfa_register 7
 311:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1319              	 .loc 3 311 0
 1320 0004 194B     	 ldr r3,.L43
 1321 0006 0B22     	 mov r2,#11
 1322 0008 1A70     	 strb r2,[r3]
 312:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1323              	 .loc 3 312 0
 1324 000a 194B     	 ldr r3,.L43+4
 1325 000c 4C22     	 mov r2,#76
 1326 000e 1A70     	 strb r2,[r3]
 313:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1327              	 .loc 3 313 0
 1328 0010 174B     	 ldr r3,.L43+4
 1329 0012 4922     	 mov r2,#73
 1330 0014 5A70     	 strb r2,[r3,#1]
 314:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1331              	 .loc 3 314 0
 1332 0016 164B     	 ldr r3,.L43+4
 1333 0018 4E22     	 mov r2,#78
 1334 001a 9A70     	 strb r2,[r3,#2]
 315:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1335              	 .loc 3 315 0
 1336 001c 154B     	 ldr r3,.L43+8
 1337 001e 1A78     	 ldrb r2,[r3]
 1338 0020 134B     	 ldr r3,.L43+4
 1339 0022 DA70     	 strb r2,[r3,#3]
 316:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1340              	 .loc 3 316 0
 1341 0024 114B     	 ldr r3,.L43
 1342 0026 1A78     	 ldrb r2,[r3]
 1343 0028 114B     	 ldr r3,.L43+4
 1344 002a 1A71     	 strb r2,[r3,#4]
 317:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1345              	 .loc 3 317 0
 1346 002c 104B     	 ldr r3,.L43+4
 1347 002e 6622     	 mov r2,#102
 1348 0030 5A71     	 strb r2,[r3,#5]
 318:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1349              	 .loc 3 318 0
 1350 0032 114B     	 ldr r3,.L43+12
 1351 0034 1B88     	 ldrh r3,[r3]
 1352 0036 1B0A     	 lsr r3,r3,#8
 1353 0038 9BB2     	 uxth r3,r3
 1354 003a DAB2     	 uxtb r2,r3
 1355 003c 0C4B     	 ldr r3,.L43+4
 1356 003e 9A71     	 strb r2,[r3,#6]
 319:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1357              	 .loc 3 319 0
 1358 0040 0D4B     	 ldr r3,.L43+12
 1359 0042 1B88     	 ldrh r3,[r3]
 1360 0044 DAB2     	 uxtb r2,r3
 1361 0046 0A4B     	 ldr r3,.L43+4
 1362 0048 DA71     	 strb r2,[r3,#7]
 320:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1363              	 .loc 3 320 0
 1364 004a 0C4B     	 ldr r3,.L43+16
 1365 004c 1B88     	 ldrh r3,[r3]
 1366 004e 1B0A     	 lsr r3,r3,#8
 1367 0050 9BB2     	 uxth r3,r3
 1368 0052 DAB2     	 uxtb r2,r3
 1369 0054 064B     	 ldr r3,.L43+4
 1370 0056 1A72     	 strb r2,[r3,#8]
 321:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1371              	 .loc 3 321 0
 1372 0058 084B     	 ldr r3,.L43+16
 1373 005a 1B88     	 ldrh r3,[r3]
 1374 005c DAB2     	 uxtb r2,r3
 1375 005e 044B     	 ldr r3,.L43+4
 1376 0060 5A72     	 strb r2,[r3,#9]
 322:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1377              	 .loc 3 322 0
 1378 0062 034B     	 ldr r3,.L43+4
 1379 0064 FF22     	 mov r2,#255
 1380 0066 9A72     	 strb r2,[r3,#10]
 323:../samuel/samuel_io.c ****  }
 1381              	 .loc 3 323 0
 1382 0068 BD46     	 mov sp,r7
 1383              	 
 1384 006a 80BD     	 pop {r7,pc}
 1385              	.L44:
 1386              	 .align 2
 1387              	.L43:
 1388 006c 00000000 	 .word transmit_buf_size
 1389 0070 00000000 	 .word new_data
 1390 0074 00000000 	 .word node_id
 1391 0078 00000000 	 .word dimAkt_Ww
 1392 007c 00000000 	 .word dimAkt_Cw
 1393              	 .cfi_endproc
 1394              	.LFE301:
 1396              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1397              	 .align 2
 1398              	 .global new_data_offLichtBack
 1399              	 .code 16
 1400              	 .thumb_func
 1402              	new_data_offLichtBack:
 1403              	.LFB302:
 324:../samuel/samuel_io.c ****  //------------------------------------------------------
 325:../samuel/samuel_io.c **** 
 326:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 327:../samuel/samuel_io.c ****  {
 1404              	 .loc 3 327 0
 1405              	 .cfi_startproc
 1406 0000 80B5     	 push {r7,lr}
 1407              	.LCFI36:
 1408              	 .cfi_def_cfa_offset 8
 1409              	 .cfi_offset 7,-8
 1410              	 .cfi_offset 14,-4
 1411 0002 00AF     	 add r7,sp,#0
 1412              	.LCFI37:
 1413              	 .cfi_def_cfa_register 7
 328:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1414              	 .loc 3 328 0
 1415 0004 1D4B     	 ldr r3,.L46
 1416 0006 0D22     	 mov r2,#13
 1417 0008 1A70     	 strb r2,[r3]
 329:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1418              	 .loc 3 329 0
 1419 000a 1D4B     	 ldr r3,.L46+4
 1420 000c 4C22     	 mov r2,#76
 1421 000e 1A70     	 strb r2,[r3]
 330:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1422              	 .loc 3 330 0
 1423 0010 1B4B     	 ldr r3,.L46+4
 1424 0012 4922     	 mov r2,#73
 1425 0014 5A70     	 strb r2,[r3,#1]
 331:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1426              	 .loc 3 331 0
 1427 0016 1A4B     	 ldr r3,.L46+4
 1428 0018 4E22     	 mov r2,#78
 1429 001a 9A70     	 strb r2,[r3,#2]
 332:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1430              	 .loc 3 332 0
 1431 001c 194B     	 ldr r3,.L46+8
 1432 001e 1A78     	 ldrb r2,[r3]
 1433 0020 174B     	 ldr r3,.L46+4
 1434 0022 DA70     	 strb r2,[r3,#3]
 333:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1435              	 .loc 3 333 0
 1436 0024 154B     	 ldr r3,.L46
 1437 0026 1A78     	 ldrb r2,[r3]
 1438 0028 154B     	 ldr r3,.L46+4
 1439 002a 1A71     	 strb r2,[r3,#4]
 334:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1440              	 .loc 3 334 0
 1441 002c 144B     	 ldr r3,.L46+4
 1442 002e 6722     	 mov r2,#103
 1443 0030 5A71     	 strb r2,[r3,#5]
 335:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1444              	 .loc 3 335 0
 1445 0032 154B     	 ldr r3,.L46+12
 1446 0034 1B88     	 ldrh r3,[r3]
 1447 0036 1B0A     	 lsr r3,r3,#8
 1448 0038 9BB2     	 uxth r3,r3
 1449 003a DAB2     	 uxtb r2,r3
 1450 003c 104B     	 ldr r3,.L46+4
 1451 003e 9A71     	 strb r2,[r3,#6]
 336:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1452              	 .loc 3 336 0
 1453 0040 114B     	 ldr r3,.L46+12
 1454 0042 1B88     	 ldrh r3,[r3]
 1455 0044 DAB2     	 uxtb r2,r3
 1456 0046 0E4B     	 ldr r3,.L46+4
 1457 0048 DA71     	 strb r2,[r3,#7]
 337:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1458              	 .loc 3 337 0
 1459 004a 104B     	 ldr r3,.L46+16
 1460 004c 1B88     	 ldrh r3,[r3]
 1461 004e 1B0A     	 lsr r3,r3,#8
 1462 0050 9BB2     	 uxth r3,r3
 1463 0052 DAB2     	 uxtb r2,r3
 1464 0054 0A4B     	 ldr r3,.L46+4
 1465 0056 1A72     	 strb r2,[r3,#8]
 338:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1466              	 .loc 3 338 0
 1467 0058 0C4B     	 ldr r3,.L46+16
 1468 005a 1B88     	 ldrh r3,[r3]
 1469 005c DAB2     	 uxtb r2,r3
 1470 005e 084B     	 ldr r3,.L46+4
 1471 0060 5A72     	 strb r2,[r3,#9]
 339:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1472              	 .loc 3 339 0
 1473 0062 0B4B     	 ldr r3,.L46+20
 1474 0064 1A78     	 ldrb r2,[r3]
 1475 0066 064B     	 ldr r3,.L46+4
 1476 0068 9A72     	 strb r2,[r3,#10]
 340:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1477              	 .loc 3 340 0
 1478 006a 0A4B     	 ldr r3,.L46+24
 1479 006c 1A78     	 ldrb r2,[r3]
 1480 006e 044B     	 ldr r3,.L46+4
 1481 0070 DA72     	 strb r2,[r3,#11]
 341:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1482              	 .loc 3 341 0
 1483 0072 034B     	 ldr r3,.L46+4
 1484 0074 FF22     	 mov r2,#255
 1485 0076 1A73     	 strb r2,[r3,#12]
 342:../samuel/samuel_io.c ****  }
 1486              	 .loc 3 342 0
 1487 0078 BD46     	 mov sp,r7
 1488              	 
 1489 007a 80BD     	 pop {r7,pc}
 1490              	.L47:
 1491              	 .align 2
 1492              	.L46:
 1493 007c 00000000 	 .word transmit_buf_size
 1494 0080 00000000 	 .word new_data
 1495 0084 00000000 	 .word node_id
 1496 0088 00000000 	 .word dimOff_Ww
 1497 008c 00000000 	 .word dimOff_Cw
 1498 0090 00000000 	 .word RegOnOff
 1499 0094 00000000 	 .word RegOnOff2
 1500              	 .cfi_endproc
 1501              	.LFE302:
 1503              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1504              	 .align 2
 1505              	 .global new_data_Bright_Color_Back
 1506              	 .code 16
 1507              	 .thumb_func
 1509              	new_data_Bright_Color_Back:
 1510              	.LFB303:
 343:../samuel/samuel_io.c ****  //------------------------------------------------------
 344:../samuel/samuel_io.c **** 
 345:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 346:../samuel/samuel_io.c ****   {
 1511              	 .loc 3 346 0
 1512              	 .cfi_startproc
 1513 0000 80B5     	 push {r7,lr}
 1514              	.LCFI38:
 1515              	 .cfi_def_cfa_offset 8
 1516              	 .cfi_offset 7,-8
 1517              	 .cfi_offset 14,-4
 1518 0002 00AF     	 add r7,sp,#0
 1519              	.LCFI39:
 1520              	 .cfi_def_cfa_register 7
 347:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1521              	 .loc 3 347 0
 1522 0004 194B     	 ldr r3,.L49
 1523 0006 0B22     	 mov r2,#11
 1524 0008 1A70     	 strb r2,[r3]
 348:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1525              	 .loc 3 348 0
 1526 000a 194B     	 ldr r3,.L49+4
 1527 000c 4C22     	 mov r2,#76
 1528 000e 1A70     	 strb r2,[r3]
 349:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1529              	 .loc 3 349 0
 1530 0010 174B     	 ldr r3,.L49+4
 1531 0012 4922     	 mov r2,#73
 1532 0014 5A70     	 strb r2,[r3,#1]
 350:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1533              	 .loc 3 350 0
 1534 0016 164B     	 ldr r3,.L49+4
 1535 0018 4E22     	 mov r2,#78
 1536 001a 9A70     	 strb r2,[r3,#2]
 351:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1537              	 .loc 3 351 0
 1538 001c 154B     	 ldr r3,.L49+8
 1539 001e 1A78     	 ldrb r2,[r3]
 1540 0020 134B     	 ldr r3,.L49+4
 1541 0022 DA70     	 strb r2,[r3,#3]
 352:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1542              	 .loc 3 352 0
 1543 0024 114B     	 ldr r3,.L49
 1544 0026 1A78     	 ldrb r2,[r3]
 1545 0028 114B     	 ldr r3,.L49+4
 1546 002a 1A71     	 strb r2,[r3,#4]
 353:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1547              	 .loc 3 353 0
 1548 002c 104B     	 ldr r3,.L49+4
 1549 002e 6822     	 mov r2,#104
 1550 0030 5A71     	 strb r2,[r3,#5]
 354:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1551              	 .loc 3 354 0
 1552 0032 114B     	 ldr r3,.L49+12
 1553 0034 1B88     	 ldrh r3,[r3]
 1554 0036 1B0A     	 lsr r3,r3,#8
 1555 0038 9BB2     	 uxth r3,r3
 1556 003a DAB2     	 uxtb r2,r3
 1557 003c 0C4B     	 ldr r3,.L49+4
 1558 003e 9A71     	 strb r2,[r3,#6]
 355:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1559              	 .loc 3 355 0
 1560 0040 0D4B     	 ldr r3,.L49+12
 1561 0042 1B88     	 ldrh r3,[r3]
 1562 0044 DAB2     	 uxtb r2,r3
 1563 0046 0A4B     	 ldr r3,.L49+4
 1564 0048 DA71     	 strb r2,[r3,#7]
 356:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1565              	 .loc 3 356 0
 1566 004a 0C4B     	 ldr r3,.L49+16
 1567 004c 1B88     	 ldrh r3,[r3]
 1568 004e 1B0A     	 lsr r3,r3,#8
 1569 0050 9BB2     	 uxth r3,r3
 1570 0052 DAB2     	 uxtb r2,r3
 1571 0054 064B     	 ldr r3,.L49+4
 1572 0056 1A72     	 strb r2,[r3,#8]
 357:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1573              	 .loc 3 357 0
 1574 0058 084B     	 ldr r3,.L49+16
 1575 005a 1B88     	 ldrh r3,[r3]
 1576 005c DAB2     	 uxtb r2,r3
 1577 005e 044B     	 ldr r3,.L49+4
 1578 0060 5A72     	 strb r2,[r3,#9]
 358:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1579              	 .loc 3 358 0
 1580 0062 034B     	 ldr r3,.L49+4
 1581 0064 FF22     	 mov r2,#255
 1582 0066 9A72     	 strb r2,[r3,#10]
 359:../samuel/samuel_io.c ****   }
 1583              	 .loc 3 359 0
 1584 0068 BD46     	 mov sp,r7
 1585              	 
 1586 006a 80BD     	 pop {r7,pc}
 1587              	.L50:
 1588              	 .align 2
 1589              	.L49:
 1590 006c 00000000 	 .word transmit_buf_size
 1591 0070 00000000 	 .word new_data
 1592 0074 00000000 	 .word node_id
 1593 0078 00000000 	 .word Brightness_Gen
 1594 007c 00000000 	 .word ColorQuot_Gen
 1595              	 .cfi_endproc
 1596              	.LFE303:
 1598              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1599              	 .align 2
 1600              	 .global new_data_Quot_Walk_Back
 1601              	 .code 16
 1602              	 .thumb_func
 1604              	new_data_Quot_Walk_Back:
 1605              	.LFB304:
 360:../samuel/samuel_io.c ****   //------------------------------------------------------
 361:../samuel/samuel_io.c **** 
 362:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 363:../samuel/samuel_io.c ****   {
 1606              	 .loc 3 363 0
 1607              	 .cfi_startproc
 1608 0000 80B5     	 push {r7,lr}
 1609              	.LCFI40:
 1610              	 .cfi_def_cfa_offset 8
 1611              	 .cfi_offset 7,-8
 1612              	 .cfi_offset 14,-4
 1613 0002 00AF     	 add r7,sp,#0
 1614              	.LCFI41:
 1615              	 .cfi_def_cfa_register 7
 364:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1616              	 .loc 3 364 0
 1617 0004 194B     	 ldr r3,.L52
 1618 0006 0B22     	 mov r2,#11
 1619 0008 1A70     	 strb r2,[r3]
 365:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1620              	 .loc 3 365 0
 1621 000a 194B     	 ldr r3,.L52+4
 1622 000c 4C22     	 mov r2,#76
 1623 000e 1A70     	 strb r2,[r3]
 366:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1624              	 .loc 3 366 0
 1625 0010 174B     	 ldr r3,.L52+4
 1626 0012 4922     	 mov r2,#73
 1627 0014 5A70     	 strb r2,[r3,#1]
 367:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1628              	 .loc 3 367 0
 1629 0016 164B     	 ldr r3,.L52+4
 1630 0018 4E22     	 mov r2,#78
 1631 001a 9A70     	 strb r2,[r3,#2]
 368:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1632              	 .loc 3 368 0
 1633 001c 154B     	 ldr r3,.L52+8
 1634 001e 1A78     	 ldrb r2,[r3]
 1635 0020 134B     	 ldr r3,.L52+4
 1636 0022 DA70     	 strb r2,[r3,#3]
 369:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1637              	 .loc 3 369 0
 1638 0024 114B     	 ldr r3,.L52
 1639 0026 1A78     	 ldrb r2,[r3]
 1640 0028 114B     	 ldr r3,.L52+4
 1641 002a 1A71     	 strb r2,[r3,#4]
 370:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1642              	 .loc 3 370 0
 1643 002c 104B     	 ldr r3,.L52+4
 1644 002e 6922     	 mov r2,#105
 1645 0030 5A71     	 strb r2,[r3,#5]
 371:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1646              	 .loc 3 371 0
 1647 0032 114B     	 ldr r3,.L52+12
 1648 0034 1B88     	 ldrh r3,[r3]
 1649 0036 1B0A     	 lsr r3,r3,#8
 1650 0038 9BB2     	 uxth r3,r3
 1651 003a DAB2     	 uxtb r2,r3
 1652 003c 0C4B     	 ldr r3,.L52+4
 1653 003e 9A71     	 strb r2,[r3,#6]
 372:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1654              	 .loc 3 372 0
 1655 0040 0D4B     	 ldr r3,.L52+12
 1656 0042 1B88     	 ldrh r3,[r3]
 1657 0044 DAB2     	 uxtb r2,r3
 1658 0046 0A4B     	 ldr r3,.L52+4
 1659 0048 DA71     	 strb r2,[r3,#7]
 373:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1660              	 .loc 3 373 0
 1661 004a 0C4B     	 ldr r3,.L52+16
 1662 004c 1B88     	 ldrh r3,[r3]
 1663 004e 1B0A     	 lsr r3,r3,#8
 1664 0050 9BB2     	 uxth r3,r3
 1665 0052 DAB2     	 uxtb r2,r3
 1666 0054 064B     	 ldr r3,.L52+4
 1667 0056 1A72     	 strb r2,[r3,#8]
 374:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1668              	 .loc 3 374 0
 1669 0058 084B     	 ldr r3,.L52+16
 1670 005a 1B88     	 ldrh r3,[r3]
 1671 005c DAB2     	 uxtb r2,r3
 1672 005e 044B     	 ldr r3,.L52+4
 1673 0060 5A72     	 strb r2,[r3,#9]
 375:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1674              	 .loc 3 375 0
 1675 0062 034B     	 ldr r3,.L52+4
 1676 0064 FF22     	 mov r2,#255
 1677 0066 9A72     	 strb r2,[r3,#10]
 376:../samuel/samuel_io.c ****   }
 1678              	 .loc 3 376 0
 1679 0068 BD46     	 mov sp,r7
 1680              	 
 1681 006a 80BD     	 pop {r7,pc}
 1682              	.L53:
 1683              	 .align 2
 1684              	.L52:
 1685 006c 00000000 	 .word transmit_buf_size
 1686 0070 00000000 	 .word new_data
 1687 0074 00000000 	 .word node_id
 1688 0078 00000000 	 .word linearwalk_gen
 1689 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1690              	 .cfi_endproc
 1691              	.LFE304:
 1693              	 .section .text.new_data_HalloBack,"ax",%progbits
 1694              	 .align 2
 1695              	 .global new_data_HalloBack
 1696              	 .code 16
 1697              	 .thumb_func
 1699              	new_data_HalloBack:
 1700              	.LFB305:
 377:../samuel/samuel_io.c ****  //------------------------------------------
 378:../samuel/samuel_io.c **** 
 379:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 380:../samuel/samuel_io.c ****   {
 1701              	 .loc 3 380 0
 1702              	 .cfi_startproc
 1703 0000 80B5     	 push {r7,lr}
 1704              	.LCFI42:
 1705              	 .cfi_def_cfa_offset 8
 1706              	 .cfi_offset 7,-8
 1707              	 .cfi_offset 14,-4
 1708 0002 00AF     	 add r7,sp,#0
 1709              	.LCFI43:
 1710              	 .cfi_def_cfa_register 7
 381:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1711              	 .loc 3 381 0
 1712 0004 134B     	 ldr r3,.L55
 1713 0006 0B22     	 mov r2,#11
 1714 0008 1A70     	 strb r2,[r3]
 382:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1715              	 .loc 3 382 0
 1716 000a 134B     	 ldr r3,.L55+4
 1717 000c 4C22     	 mov r2,#76
 1718 000e 1A70     	 strb r2,[r3]
 383:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1719              	 .loc 3 383 0
 1720 0010 114B     	 ldr r3,.L55+4
 1721 0012 4922     	 mov r2,#73
 1722 0014 5A70     	 strb r2,[r3,#1]
 384:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1723              	 .loc 3 384 0
 1724 0016 104B     	 ldr r3,.L55+4
 1725 0018 4E22     	 mov r2,#78
 1726 001a 9A70     	 strb r2,[r3,#2]
 385:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1727              	 .loc 3 385 0
 1728 001c 0F4B     	 ldr r3,.L55+8
 1729 001e 1A78     	 ldrb r2,[r3]
 1730 0020 0D4B     	 ldr r3,.L55+4
 1731 0022 DA70     	 strb r2,[r3,#3]
 386:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1732              	 .loc 3 386 0
 1733 0024 0B4B     	 ldr r3,.L55
 1734 0026 1A78     	 ldrb r2,[r3]
 1735 0028 0B4B     	 ldr r3,.L55+4
 1736 002a 1A71     	 strb r2,[r3,#4]
 387:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1737              	 .loc 3 387 0
 1738 002c 0A4B     	 ldr r3,.L55+4
 1739 002e 6A22     	 mov r2,#106
 1740 0030 5A71     	 strb r2,[r3,#5]
 388:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1741              	 .loc 3 388 0
 1742 0032 094B     	 ldr r3,.L55+4
 1743 0034 6F22     	 mov r2,#111
 1744 0036 9A71     	 strb r2,[r3,#6]
 389:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1745              	 .loc 3 389 0
 1746 0038 074B     	 ldr r3,.L55+4
 1747 003a 6B22     	 mov r2,#107
 1748 003c DA71     	 strb r2,[r3,#7]
 390:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1749              	 .loc 3 390 0
 1750 003e 064B     	 ldr r3,.L55+4
 1751 0040 6F22     	 mov r2,#111
 1752 0042 1A72     	 strb r2,[r3,#8]
 391:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1753              	 .loc 3 391 0
 1754 0044 044B     	 ldr r3,.L55+4
 1755 0046 6B22     	 mov r2,#107
 1756 0048 5A72     	 strb r2,[r3,#9]
 392:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1757              	 .loc 3 392 0
 1758 004a 034B     	 ldr r3,.L55+4
 1759 004c FF22     	 mov r2,#255
 1760 004e 9A72     	 strb r2,[r3,#10]
 393:../samuel/samuel_io.c ****   }
 1761              	 .loc 3 393 0
 1762 0050 BD46     	 mov sp,r7
 1763              	 
 1764 0052 80BD     	 pop {r7,pc}
 1765              	.L56:
 1766              	 .align 2
 1767              	.L55:
 1768 0054 00000000 	 .word transmit_buf_size
 1769 0058 00000000 	 .word new_data
 1770 005c 00000000 	 .word node_id
 1771              	 .cfi_endproc
 1772              	.LFE305:
 1774              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 1775              	 .align 2
 1776              	 .global new_data_neuNodeIdBack
 1777              	 .code 16
 1778              	 .thumb_func
 1780              	new_data_neuNodeIdBack:
 1781              	.LFB306:
 394:../samuel/samuel_io.c ****   //------------------------------------------------------
 395:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 396:../samuel/samuel_io.c ****    {
 1782              	 .loc 3 396 0
 1783              	 .cfi_startproc
 1784 0000 80B5     	 push {r7,lr}
 1785              	.LCFI44:
 1786              	 .cfi_def_cfa_offset 8
 1787              	 .cfi_offset 7,-8
 1788              	 .cfi_offset 14,-4
 1789 0002 00AF     	 add r7,sp,#0
 1790              	.LCFI45:
 1791              	 .cfi_def_cfa_register 7
 397:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 1792              	 .loc 3 397 0
 1793 0004 1B4B     	 ldr r3,.L58
 1794 0006 0C22     	 mov r2,#12
 1795 0008 1A70     	 strb r2,[r3]
 398:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1796              	 .loc 3 398 0
 1797 000a 1B4B     	 ldr r3,.L58+4
 1798 000c 4C22     	 mov r2,#76
 1799 000e 1A70     	 strb r2,[r3]
 399:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1800              	 .loc 3 399 0
 1801 0010 194B     	 ldr r3,.L58+4
 1802 0012 4922     	 mov r2,#73
 1803 0014 5A70     	 strb r2,[r3,#1]
 400:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1804              	 .loc 3 400 0
 1805 0016 184B     	 ldr r3,.L58+4
 1806 0018 4E22     	 mov r2,#78
 1807 001a 9A70     	 strb r2,[r3,#2]
 401:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1808              	 .loc 3 401 0
 1809 001c 174B     	 ldr r3,.L58+8
 1810 001e 1A78     	 ldrb r2,[r3]
 1811 0020 154B     	 ldr r3,.L58+4
 1812 0022 DA70     	 strb r2,[r3,#3]
 402:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1813              	 .loc 3 402 0
 1814 0024 134B     	 ldr r3,.L58
 1815 0026 1A78     	 ldrb r2,[r3]
 1816 0028 134B     	 ldr r3,.L58+4
 1817 002a 1A71     	 strb r2,[r3,#4]
 403:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 1818              	 .loc 3 403 0
 1819 002c 124B     	 ldr r3,.L58+4
 1820 002e 6B22     	 mov r2,#107
 1821 0030 5A71     	 strb r2,[r3,#5]
 404:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 1822              	 .loc 3 404 0
 1823 0032 134B     	 ldr r3,.L58+12
 1824 0034 1A78     	 ldrb r2,[r3]
 1825 0036 104B     	 ldr r3,.L58+4
 1826 0038 9A71     	 strb r2,[r3,#6]
 405:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 1827              	 .loc 3 405 0
 1828 003a 124B     	 ldr r3,.L58+16
 1829 003c 1B88     	 ldrh r3,[r3]
 1830 003e 1B0A     	 lsr r3,r3,#8
 1831 0040 9BB2     	 uxth r3,r3
 1832 0042 DAB2     	 uxtb r2,r3
 1833 0044 0C4B     	 ldr r3,.L58+4
 1834 0046 DA71     	 strb r2,[r3,#7]
 406:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 1835              	 .loc 3 406 0
 1836 0048 0E4B     	 ldr r3,.L58+16
 1837 004a 1B88     	 ldrh r3,[r3]
 1838 004c DAB2     	 uxtb r2,r3
 1839 004e 0A4B     	 ldr r3,.L58+4
 1840 0050 1A72     	 strb r2,[r3,#8]
 407:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 1841              	 .loc 3 407 0
 1842 0052 0D4B     	 ldr r3,.L58+20
 1843 0054 1B88     	 ldrh r3,[r3]
 1844 0056 1B0A     	 lsr r3,r3,#8
 1845 0058 9BB2     	 uxth r3,r3
 1846 005a DAB2     	 uxtb r2,r3
 1847 005c 064B     	 ldr r3,.L58+4
 1848 005e 5A72     	 strb r2,[r3,#9]
 408:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 1849              	 .loc 3 408 0
 1850 0060 094B     	 ldr r3,.L58+20
 1851 0062 1B88     	 ldrh r3,[r3]
 1852 0064 DAB2     	 uxtb r2,r3
 1853 0066 044B     	 ldr r3,.L58+4
 1854 0068 9A72     	 strb r2,[r3,#10]
 409:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 1855              	 .loc 3 409 0
 1856 006a 034B     	 ldr r3,.L58+4
 1857 006c FF22     	 mov r2,#255
 1858 006e DA72     	 strb r2,[r3,#11]
 410:../samuel/samuel_io.c ****    }
 1859              	 .loc 3 410 0
 1860 0070 BD46     	 mov sp,r7
 1861              	 
 1862 0072 80BD     	 pop {r7,pc}
 1863              	.L59:
 1864              	 .align 2
 1865              	.L58:
 1866 0074 00000000 	 .word transmit_buf_size
 1867 0078 00000000 	 .word new_data
 1868 007c 00000000 	 .word node_id
 1869 0080 00000000 	 .word node_id_neu
 1870 0084 00000000 	 .word Ser_NrH
 1871 0088 00000000 	 .word Ser_NrL
 1872              	 .cfi_endproc
 1873              	.LFE306:
 1875              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 1876              	 .align 2
 1877              	 .global new_data_neuSerNrBack
 1878              	 .code 16
 1879              	 .thumb_func
 1881              	new_data_neuSerNrBack:
 1882              	.LFB307:
 411:../samuel/samuel_io.c ****    //------------------------------------------------------
 412:../samuel/samuel_io.c **** 
 413:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 414:../samuel/samuel_io.c ****    {
 1883              	 .loc 3 414 0
 1884              	 .cfi_startproc
 1885 0000 80B5     	 push {r7,lr}
 1886              	.LCFI46:
 1887              	 .cfi_def_cfa_offset 8
 1888              	 .cfi_offset 7,-8
 1889              	 .cfi_offset 14,-4
 1890 0002 00AF     	 add r7,sp,#0
 1891              	.LCFI47:
 1892              	 .cfi_def_cfa_register 7
 415:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 1893              	 .loc 3 415 0
 1894 0004 254B     	 ldr r3,.L61
 1895 0006 0F22     	 mov r2,#15
 1896 0008 1A70     	 strb r2,[r3]
 416:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1897              	 .loc 3 416 0
 1898 000a 254B     	 ldr r3,.L61+4
 1899 000c 4C22     	 mov r2,#76
 1900 000e 1A70     	 strb r2,[r3]
 417:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1901              	 .loc 3 417 0
 1902 0010 234B     	 ldr r3,.L61+4
 1903 0012 4922     	 mov r2,#73
 1904 0014 5A70     	 strb r2,[r3,#1]
 418:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1905              	 .loc 3 418 0
 1906 0016 224B     	 ldr r3,.L61+4
 1907 0018 4E22     	 mov r2,#78
 1908 001a 9A70     	 strb r2,[r3,#2]
 419:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1909              	 .loc 3 419 0
 1910 001c 214B     	 ldr r3,.L61+8
 1911 001e 1A78     	 ldrb r2,[r3]
 1912 0020 1F4B     	 ldr r3,.L61+4
 1913 0022 DA70     	 strb r2,[r3,#3]
 420:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1914              	 .loc 3 420 0
 1915 0024 1D4B     	 ldr r3,.L61
 1916 0026 1A78     	 ldrb r2,[r3]
 1917 0028 1D4B     	 ldr r3,.L61+4
 1918 002a 1A71     	 strb r2,[r3,#4]
 421:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 1919              	 .loc 3 421 0
 1920 002c 1C4B     	 ldr r3,.L61+4
 1921 002e 6C22     	 mov r2,#108
 1922 0030 5A71     	 strb r2,[r3,#5]
 422:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 1923              	 .loc 3 422 0
 1924 0032 1D4B     	 ldr r3,.L61+12
 1925 0034 1B88     	 ldrh r3,[r3]
 1926 0036 1B0A     	 lsr r3,r3,#8
 1927 0038 9BB2     	 uxth r3,r3
 1928 003a DAB2     	 uxtb r2,r3
 1929 003c 184B     	 ldr r3,.L61+4
 1930 003e 9A71     	 strb r2,[r3,#6]
 423:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 1931              	 .loc 3 423 0
 1932 0040 194B     	 ldr r3,.L61+12
 1933 0042 1B88     	 ldrh r3,[r3]
 1934 0044 DAB2     	 uxtb r2,r3
 1935 0046 164B     	 ldr r3,.L61+4
 1936 0048 DA71     	 strb r2,[r3,#7]
 424:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 1937              	 .loc 3 424 0
 1938 004a 184B     	 ldr r3,.L61+16
 1939 004c 1B88     	 ldrh r3,[r3]
 1940 004e 1B0A     	 lsr r3,r3,#8
 1941 0050 9BB2     	 uxth r3,r3
 1942 0052 DAB2     	 uxtb r2,r3
 1943 0054 124B     	 ldr r3,.L61+4
 1944 0056 1A72     	 strb r2,[r3,#8]
 425:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 1945              	 .loc 3 425 0
 1946 0058 144B     	 ldr r3,.L61+16
 1947 005a 1B88     	 ldrh r3,[r3]
 1948 005c DAB2     	 uxtb r2,r3
 1949 005e 104B     	 ldr r3,.L61+4
 1950 0060 5A72     	 strb r2,[r3,#9]
 426:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 1951              	 .loc 3 426 0
 1952 0062 134B     	 ldr r3,.L61+20
 1953 0064 1B88     	 ldrh r3,[r3]
 1954 0066 1B0A     	 lsr r3,r3,#8
 1955 0068 9BB2     	 uxth r3,r3
 1956 006a DAB2     	 uxtb r2,r3
 1957 006c 0C4B     	 ldr r3,.L61+4
 1958 006e 9A72     	 strb r2,[r3,#10]
 427:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 1959              	 .loc 3 427 0
 1960 0070 0F4B     	 ldr r3,.L61+20
 1961 0072 1B88     	 ldrh r3,[r3]
 1962 0074 DAB2     	 uxtb r2,r3
 1963 0076 0A4B     	 ldr r3,.L61+4
 1964 0078 DA72     	 strb r2,[r3,#11]
 428:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 1965              	 .loc 3 428 0
 1966 007a 0E4B     	 ldr r3,.L61+24
 1967 007c 1B88     	 ldrh r3,[r3]
 1968 007e 1B0A     	 lsr r3,r3,#8
 1969 0080 9BB2     	 uxth r3,r3
 1970 0082 DAB2     	 uxtb r2,r3
 1971 0084 064B     	 ldr r3,.L61+4
 1972 0086 1A73     	 strb r2,[r3,#12]
 429:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 1973              	 .loc 3 429 0
 1974 0088 0A4B     	 ldr r3,.L61+24
 1975 008a 1B88     	 ldrh r3,[r3]
 1976 008c DAB2     	 uxtb r2,r3
 1977 008e 044B     	 ldr r3,.L61+4
 1978 0090 5A73     	 strb r2,[r3,#13]
 430:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 1979              	 .loc 3 430 0
 1980 0092 034B     	 ldr r3,.L61+4
 1981 0094 FF22     	 mov r2,#255
 1982 0096 9A73     	 strb r2,[r3,#14]
 431:../samuel/samuel_io.c ****    }
 1983              	 .loc 3 431 0
 1984 0098 BD46     	 mov sp,r7
 1985              	 
 1986 009a 80BD     	 pop {r7,pc}
 1987              	.L62:
 1988              	 .align 2
 1989              	.L61:
 1990 009c 00000000 	 .word transmit_buf_size
 1991 00a0 00000000 	 .word new_data
 1992 00a4 00000000 	 .word node_id
 1993 00a8 00000000 	 .word neu_Ser_NrH
 1994 00ac 00000000 	 .word neu_Ser_NrL
 1995 00b0 00000000 	 .word Ser_NrH
 1996 00b4 00000000 	 .word Ser_NrL
 1997              	 .cfi_endproc
 1998              	.LFE307:
 2000              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 2001              	 .align 2
 2002              	 .global new_data_NodeIdBack
 2003              	 .code 16
 2004              	 .thumb_func
 2006              	new_data_NodeIdBack:
 2007              	.LFB308:
 432:../samuel/samuel_io.c ****    //------------------------------------------------------
 433:../samuel/samuel_io.c **** 
 434:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 435:../samuel/samuel_io.c ****    {
 2008              	 .loc 3 435 0
 2009              	 .cfi_startproc
 2010 0000 80B5     	 push {r7,lr}
 2011              	.LCFI48:
 2012              	 .cfi_def_cfa_offset 8
 2013              	 .cfi_offset 7,-8
 2014              	 .cfi_offset 14,-4
 2015 0002 00AF     	 add r7,sp,#0
 2016              	.LCFI49:
 2017              	 .cfi_def_cfa_register 7
 436:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 2018              	 .loc 3 436 0
 2019 0004 1D4B     	 ldr r3,.L64
 2020 0006 0D22     	 mov r2,#13
 2021 0008 1A70     	 strb r2,[r3]
 437:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2022              	 .loc 3 437 0
 2023 000a 1D4B     	 ldr r3,.L64+4
 2024 000c 4C22     	 mov r2,#76
 2025 000e 1A70     	 strb r2,[r3]
 438:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2026              	 .loc 3 438 0
 2027 0010 1B4B     	 ldr r3,.L64+4
 2028 0012 4922     	 mov r2,#73
 2029 0014 5A70     	 strb r2,[r3,#1]
 439:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2030              	 .loc 3 439 0
 2031 0016 1A4B     	 ldr r3,.L64+4
 2032 0018 4E22     	 mov r2,#78
 2033 001a 9A70     	 strb r2,[r3,#2]
 440:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2034              	 .loc 3 440 0
 2035 001c 194B     	 ldr r3,.L64+8
 2036 001e 1A78     	 ldrb r2,[r3]
 2037 0020 174B     	 ldr r3,.L64+4
 2038 0022 DA70     	 strb r2,[r3,#3]
 441:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2039              	 .loc 3 441 0
 2040 0024 154B     	 ldr r3,.L64
 2041 0026 1A78     	 ldrb r2,[r3]
 2042 0028 154B     	 ldr r3,.L64+4
 2043 002a 1A71     	 strb r2,[r3,#4]
 442:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 2044              	 .loc 3 442 0
 2045 002c 144B     	 ldr r3,.L64+4
 2046 002e 6D22     	 mov r2,#109
 2047 0030 5A71     	 strb r2,[r3,#5]
 443:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 2048              	 .loc 3 443 0
 2049 0032 154B     	 ldr r3,.L64+12
 2050 0034 1A78     	 ldrb r2,[r3]
 2051 0036 124B     	 ldr r3,.L64+4
 2052 0038 9A71     	 strb r2,[r3,#6]
 444:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 2053              	 .loc 3 444 0
 2054 003a 124B     	 ldr r3,.L64+8
 2055 003c 1A78     	 ldrb r2,[r3]
 2056 003e 104B     	 ldr r3,.L64+4
 2057 0040 DA71     	 strb r2,[r3,#7]
 445:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 2058              	 .loc 3 445 0
 2059 0042 124B     	 ldr r3,.L64+16
 2060 0044 1B88     	 ldrh r3,[r3]
 2061 0046 1B0A     	 lsr r3,r3,#8
 2062 0048 9BB2     	 uxth r3,r3
 2063 004a DAB2     	 uxtb r2,r3
 2064 004c 0C4B     	 ldr r3,.L64+4
 2065 004e 1A72     	 strb r2,[r3,#8]
 446:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 2066              	 .loc 3 446 0
 2067 0050 0E4B     	 ldr r3,.L64+16
 2068 0052 1B88     	 ldrh r3,[r3]
 2069 0054 DAB2     	 uxtb r2,r3
 2070 0056 0A4B     	 ldr r3,.L64+4
 2071 0058 5A72     	 strb r2,[r3,#9]
 447:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 2072              	 .loc 3 447 0
 2073 005a 0D4B     	 ldr r3,.L64+20
 2074 005c 1B88     	 ldrh r3,[r3]
 2075 005e 1B0A     	 lsr r3,r3,#8
 2076 0060 9BB2     	 uxth r3,r3
 2077 0062 DAB2     	 uxtb r2,r3
 2078 0064 064B     	 ldr r3,.L64+4
 2079 0066 9A72     	 strb r2,[r3,#10]
 448:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 2080              	 .loc 3 448 0
 2081 0068 094B     	 ldr r3,.L64+20
 2082 006a 1B88     	 ldrh r3,[r3]
 2083 006c DAB2     	 uxtb r2,r3
 2084 006e 044B     	 ldr r3,.L64+4
 2085 0070 DA72     	 strb r2,[r3,#11]
 449:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 2086              	 .loc 3 449 0
 2087 0072 034B     	 ldr r3,.L64+4
 2088 0074 FF22     	 mov r2,#255
 2089 0076 1A73     	 strb r2,[r3,#12]
 450:../samuel/samuel_io.c ****    }
 2090              	 .loc 3 450 0
 2091 0078 BD46     	 mov sp,r7
 2092              	 
 2093 007a 80BD     	 pop {r7,pc}
 2094              	.L65:
 2095              	 .align 2
 2096              	.L64:
 2097 007c 00000000 	 .word transmit_buf_size
 2098 0080 00000000 	 .word new_data
 2099 0084 00000000 	 .word node_id
 2100 0088 00000000 	 .word node_id_alt
 2101 008c 00000000 	 .word Ser_NrH
 2102 0090 00000000 	 .word Ser_NrL
 2103              	 .cfi_endproc
 2104              	.LFE308:
 2106              	 .section .text.new_data_SerNrBack,"ax",%progbits
 2107              	 .align 2
 2108              	 .global new_data_SerNrBack
 2109              	 .code 16
 2110              	 .thumb_func
 2112              	new_data_SerNrBack:
 2113              	.LFB309:
 451:../samuel/samuel_io.c **** 
 452:../samuel/samuel_io.c ****    //------------------------------------------------------
 453:../samuel/samuel_io.c **** 
 454:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 455:../samuel/samuel_io.c ****    {
 2114              	 .loc 3 455 0
 2115              	 .cfi_startproc
 2116 0000 80B5     	 push {r7,lr}
 2117              	.LCFI50:
 2118              	 .cfi_def_cfa_offset 8
 2119              	 .cfi_offset 7,-8
 2120              	 .cfi_offset 14,-4
 2121 0002 00AF     	 add r7,sp,#0
 2122              	.LCFI51:
 2123              	 .cfi_def_cfa_register 7
 456:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 2124              	 .loc 3 456 0
 2125 0004 194B     	 ldr r3,.L67
 2126 0006 0B22     	 mov r2,#11
 2127 0008 1A70     	 strb r2,[r3]
 457:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2128              	 .loc 3 457 0
 2129 000a 194B     	 ldr r3,.L67+4
 2130 000c 4C22     	 mov r2,#76
 2131 000e 1A70     	 strb r2,[r3]
 458:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2132              	 .loc 3 458 0
 2133 0010 174B     	 ldr r3,.L67+4
 2134 0012 4922     	 mov r2,#73
 2135 0014 5A70     	 strb r2,[r3,#1]
 459:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2136              	 .loc 3 459 0
 2137 0016 164B     	 ldr r3,.L67+4
 2138 0018 4E22     	 mov r2,#78
 2139 001a 9A70     	 strb r2,[r3,#2]
 460:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2140              	 .loc 3 460 0
 2141 001c 154B     	 ldr r3,.L67+8
 2142 001e 1A78     	 ldrb r2,[r3]
 2143 0020 134B     	 ldr r3,.L67+4
 2144 0022 DA70     	 strb r2,[r3,#3]
 461:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2145              	 .loc 3 461 0
 2146 0024 114B     	 ldr r3,.L67
 2147 0026 1A78     	 ldrb r2,[r3]
 2148 0028 114B     	 ldr r3,.L67+4
 2149 002a 1A71     	 strb r2,[r3,#4]
 462:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2150              	 .loc 3 462 0
 2151 002c 104B     	 ldr r3,.L67+4
 2152 002e 6E22     	 mov r2,#110
 2153 0030 5A71     	 strb r2,[r3,#5]
 463:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2154              	 .loc 3 463 0
 2155 0032 114B     	 ldr r3,.L67+12
 2156 0034 1B88     	 ldrh r3,[r3]
 2157 0036 1B0A     	 lsr r3,r3,#8
 2158 0038 9BB2     	 uxth r3,r3
 2159 003a DAB2     	 uxtb r2,r3
 2160 003c 0C4B     	 ldr r3,.L67+4
 2161 003e 9A71     	 strb r2,[r3,#6]
 464:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2162              	 .loc 3 464 0
 2163 0040 0D4B     	 ldr r3,.L67+12
 2164 0042 1B88     	 ldrh r3,[r3]
 2165 0044 DAB2     	 uxtb r2,r3
 2166 0046 0A4B     	 ldr r3,.L67+4
 2167 0048 DA71     	 strb r2,[r3,#7]
 465:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2168              	 .loc 3 465 0
 2169 004a 0C4B     	 ldr r3,.L67+16
 2170 004c 1B88     	 ldrh r3,[r3]
 2171 004e 1B0A     	 lsr r3,r3,#8
 2172 0050 9BB2     	 uxth r3,r3
 2173 0052 DAB2     	 uxtb r2,r3
 2174 0054 064B     	 ldr r3,.L67+4
 2175 0056 1A72     	 strb r2,[r3,#8]
 466:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2176              	 .loc 3 466 0
 2177 0058 084B     	 ldr r3,.L67+16
 2178 005a 1B88     	 ldrh r3,[r3]
 2179 005c DAB2     	 uxtb r2,r3
 2180 005e 044B     	 ldr r3,.L67+4
 2181 0060 5A72     	 strb r2,[r3,#9]
 467:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2182              	 .loc 3 467 0
 2183 0062 034B     	 ldr r3,.L67+4
 2184 0064 FF22     	 mov r2,#255
 2185 0066 9A72     	 strb r2,[r3,#10]
 468:../samuel/samuel_io.c ****    }
 2186              	 .loc 3 468 0
 2187 0068 BD46     	 mov sp,r7
 2188              	 
 2189 006a 80BD     	 pop {r7,pc}
 2190              	.L68:
 2191              	 .align 2
 2192              	.L67:
 2193 006c 00000000 	 .word transmit_buf_size
 2194 0070 00000000 	 .word new_data
 2195 0074 00000000 	 .word node_id
 2196 0078 00000000 	 .word Ser_NrH
 2197 007c 00000000 	 .word Ser_NrL
 2198              	 .cfi_endproc
 2199              	.LFE309:
 2201              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2202              	 .align 2
 2203              	 .global new_data_readbuff2Back
 2204              	 .code 16
 2205              	 .thumb_func
 2207              	new_data_readbuff2Back:
 2208              	.LFB310:
 469:../samuel/samuel_io.c ****    //-------------------------------------
 470:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 471:../samuel/samuel_io.c ****    {
 2209              	 .loc 3 471 0
 2210              	 .cfi_startproc
 2211 0000 80B5     	 push {r7,lr}
 2212              	.LCFI52:
 2213              	 .cfi_def_cfa_offset 8
 2214              	 .cfi_offset 7,-8
 2215              	 .cfi_offset 14,-4
 2216 0002 00AF     	 add r7,sp,#0
 2217              	.LCFI53:
 2218              	 .cfi_def_cfa_register 7
 472:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2219              	 .loc 3 472 0
 2220 0004 2F4B     	 ldr r3,.L70
 2221 0006 1822     	 mov r2,#24
 2222 0008 1A70     	 strb r2,[r3]
 473:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2223              	 .loc 3 473 0
 2224 000a 2F4B     	 ldr r3,.L70+4
 2225 000c 4C22     	 mov r2,#76
 2226 000e 1A70     	 strb r2,[r3]
 474:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2227              	 .loc 3 474 0
 2228 0010 2D4B     	 ldr r3,.L70+4
 2229 0012 4922     	 mov r2,#73
 2230 0014 5A70     	 strb r2,[r3,#1]
 475:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2231              	 .loc 3 475 0
 2232 0016 2C4B     	 ldr r3,.L70+4
 2233 0018 4E22     	 mov r2,#78
 2234 001a 9A70     	 strb r2,[r3,#2]
 476:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2235              	 .loc 3 476 0
 2236 001c 2B4B     	 ldr r3,.L70+8
 2237 001e 1A78     	 ldrb r2,[r3]
 2238 0020 294B     	 ldr r3,.L70+4
 2239 0022 DA70     	 strb r2,[r3,#3]
 477:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2240              	 .loc 3 477 0
 2241 0024 274B     	 ldr r3,.L70
 2242 0026 1A78     	 ldrb r2,[r3]
 2243 0028 274B     	 ldr r3,.L70+4
 2244 002a 1A71     	 strb r2,[r3,#4]
 478:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2245              	 .loc 3 478 0
 2246 002c 264B     	 ldr r3,.L70+4
 2247 002e 7022     	 mov r2,#112
 2248 0030 5A71     	 strb r2,[r3,#5]
 479:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2249              	 .loc 3 479 0
 2250 0032 254B     	 ldr r3,.L70+4
 2251 0034 0022     	 mov r2,#0
 2252 0036 9A71     	 strb r2,[r3,#6]
 480:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2253              	 .loc 3 480 0
 2254 0038 254B     	 ldr r3,.L70+12
 2255 003a 1A78     	 ldrb r2,[r3]
 2256 003c 224B     	 ldr r3,.L70+4
 2257 003e DA71     	 strb r2,[r3,#7]
 481:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2258              	 .loc 3 481 0
 2259 0040 234B     	 ldr r3,.L70+12
 2260 0042 5A78     	 ldrb r2,[r3,#1]
 2261 0044 204B     	 ldr r3,.L70+4
 2262 0046 1A72     	 strb r2,[r3,#8]
 482:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2263              	 .loc 3 482 0
 2264 0048 214B     	 ldr r3,.L70+12
 2265 004a 9A78     	 ldrb r2,[r3,#2]
 2266 004c 1E4B     	 ldr r3,.L70+4
 2267 004e 5A72     	 strb r2,[r3,#9]
 483:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2268              	 .loc 3 483 0
 2269 0050 1F4B     	 ldr r3,.L70+12
 2270 0052 DA78     	 ldrb r2,[r3,#3]
 2271 0054 1C4B     	 ldr r3,.L70+4
 2272 0056 9A72     	 strb r2,[r3,#10]
 484:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2273              	 .loc 3 484 0
 2274 0058 1D4B     	 ldr r3,.L70+12
 2275 005a 1A79     	 ldrb r2,[r3,#4]
 2276 005c 1A4B     	 ldr r3,.L70+4
 2277 005e DA72     	 strb r2,[r3,#11]
 485:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2278              	 .loc 3 485 0
 2279 0060 1B4B     	 ldr r3,.L70+12
 2280 0062 5A79     	 ldrb r2,[r3,#5]
 2281 0064 184B     	 ldr r3,.L70+4
 2282 0066 1A73     	 strb r2,[r3,#12]
 486:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2283              	 .loc 3 486 0
 2284 0068 194B     	 ldr r3,.L70+12
 2285 006a 9A79     	 ldrb r2,[r3,#6]
 2286 006c 164B     	 ldr r3,.L70+4
 2287 006e 5A73     	 strb r2,[r3,#13]
 487:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2288              	 .loc 3 487 0
 2289 0070 174B     	 ldr r3,.L70+12
 2290 0072 DA79     	 ldrb r2,[r3,#7]
 2291 0074 144B     	 ldr r3,.L70+4
 2292 0076 9A73     	 strb r2,[r3,#14]
 488:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2293              	 .loc 3 488 0
 2294 0078 154B     	 ldr r3,.L70+12
 2295 007a 1A7A     	 ldrb r2,[r3,#8]
 2296 007c 124B     	 ldr r3,.L70+4
 2297 007e DA73     	 strb r2,[r3,#15]
 489:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2298              	 .loc 3 489 0
 2299 0080 134B     	 ldr r3,.L70+12
 2300 0082 5A7A     	 ldrb r2,[r3,#9]
 2301 0084 104B     	 ldr r3,.L70+4
 2302 0086 1A74     	 strb r2,[r3,#16]
 490:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2303              	 .loc 3 490 0
 2304 0088 114B     	 ldr r3,.L70+12
 2305 008a 9A7A     	 ldrb r2,[r3,#10]
 2306 008c 0E4B     	 ldr r3,.L70+4
 2307 008e 5A74     	 strb r2,[r3,#17]
 491:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2308              	 .loc 3 491 0
 2309 0090 0F4B     	 ldr r3,.L70+12
 2310 0092 DA7A     	 ldrb r2,[r3,#11]
 2311 0094 0C4B     	 ldr r3,.L70+4
 2312 0096 9A74     	 strb r2,[r3,#18]
 492:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2313              	 .loc 3 492 0
 2314 0098 0D4B     	 ldr r3,.L70+12
 2315 009a 1A7B     	 ldrb r2,[r3,#12]
 2316 009c 0A4B     	 ldr r3,.L70+4
 2317 009e DA74     	 strb r2,[r3,#19]
 493:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2318              	 .loc 3 493 0
 2319 00a0 0B4B     	 ldr r3,.L70+12
 2320 00a2 5A7B     	 ldrb r2,[r3,#13]
 2321 00a4 084B     	 ldr r3,.L70+4
 2322 00a6 1A75     	 strb r2,[r3,#20]
 494:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2323              	 .loc 3 494 0
 2324 00a8 094B     	 ldr r3,.L70+12
 2325 00aa 9A7B     	 ldrb r2,[r3,#14]
 2326 00ac 064B     	 ldr r3,.L70+4
 2327 00ae 5A75     	 strb r2,[r3,#21]
 495:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2328              	 .loc 3 495 0
 2329 00b0 074B     	 ldr r3,.L70+12
 2330 00b2 DA7B     	 ldrb r2,[r3,#15]
 2331 00b4 044B     	 ldr r3,.L70+4
 2332 00b6 9A75     	 strb r2,[r3,#22]
 496:../samuel/samuel_io.c **** 
 497:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2333              	 .loc 3 497 0
 2334 00b8 034B     	 ldr r3,.L70+4
 2335 00ba FF22     	 mov r2,#255
 2336 00bc DA75     	 strb r2,[r3,#23]
 498:../samuel/samuel_io.c ****    }
 2337              	 .loc 3 498 0
 2338 00be BD46     	 mov sp,r7
 2339              	 
 2340 00c0 80BD     	 pop {r7,pc}
 2341              	.L71:
 2342 00c2 C046     	 .align 2
 2343              	.L70:
 2344 00c4 00000000 	 .word transmit_buf_size
 2345 00c8 00000000 	 .word new_data
 2346 00cc 00000000 	 .word node_id
 2347 00d0 00000000 	 .word ReadBuffer2
 2348              	 .cfi_endproc
 2349              	.LFE310:
 2351              	 .section .text.clearEpromBuffer,"ax",%progbits
 2352              	 .align 2
 2353              	 .global clearEpromBuffer
 2354              	 .code 16
 2355              	 .thumb_func
 2357              	clearEpromBuffer:
 2358              	.LFB311:
 499:../samuel/samuel_io.c **** 
 500:../samuel/samuel_io.c ****  //------------------------------------------------------
 501:../samuel/samuel_io.c **** 
 502:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 503:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 504:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 505:../samuel/samuel_io.c ****  {
 2359              	 .loc 3 505 0
 2360              	 .cfi_startproc
 2361 0000 80B5     	 push {r7,lr}
 2362              	.LCFI54:
 2363              	 .cfi_def_cfa_offset 8
 2364              	 .cfi_offset 7,-8
 2365              	 .cfi_offset 14,-4
 2366 0002 00AF     	 add r7,sp,#0
 2367              	.LCFI55:
 2368              	 .cfi_def_cfa_register 7
 506:../samuel/samuel_io.c **** 
 507:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 508:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2369              	 .loc 3 508 0
 2370 0004 1E4B     	 ldr r3,.L79
 2371 0006 0022     	 mov r2,#0
 2372 0008 1A70     	 strb r2,[r3]
 2373 000a 0BE0     	 b .L73
 2374              	.L74:
 509:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2375              	 .loc 3 509 0 discriminator 3
 2376 000c 1C4B     	 ldr r3,.L79
 2377 000e 1B78     	 ldrb r3,[r3]
 2378 0010 1A1C     	 mov r2,r3
 2379 0012 1C4B     	 ldr r3,.L79+4
 2380 0014 0021     	 mov r1,#0
 2381 0016 9954     	 strb r1,[r3,r2]
 508:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2382              	 .loc 3 508 0 discriminator 3
 2383 0018 194B     	 ldr r3,.L79
 2384 001a 1B78     	 ldrb r3,[r3]
 2385 001c 0133     	 add r3,r3,#1
 2386 001e DAB2     	 uxtb r2,r3
 2387 0020 174B     	 ldr r3,.L79
 2388 0022 1A70     	 strb r2,[r3]
 2389              	.L73:
 508:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2390              	 .loc 3 508 0 is_stmt 0 discriminator 1
 2391 0024 164B     	 ldr r3,.L79
 2392 0026 1B78     	 ldrb r3,[r3]
 2393 0028 0F2B     	 cmp r3,#15
 2394 002a EFD9     	 bls .L74
 510:../samuel/samuel_io.c **** 
 511:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 512:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2395              	 .loc 3 512 0 is_stmt 1
 2396 002c 144B     	 ldr r3,.L79
 2397 002e 0022     	 mov r2,#0
 2398 0030 1A70     	 strb r2,[r3]
 2399 0032 0BE0     	 b .L75
 2400              	.L76:
 513:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2401              	 .loc 3 513 0 discriminator 3
 2402 0034 124B     	 ldr r3,.L79
 2403 0036 1B78     	 ldrb r3,[r3]
 2404 0038 1A1C     	 mov r2,r3
 2405 003a 134B     	 ldr r3,.L79+8
 2406 003c 0021     	 mov r1,#0
 2407 003e 9954     	 strb r1,[r3,r2]
 512:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2408              	 .loc 3 512 0 discriminator 3
 2409 0040 0F4B     	 ldr r3,.L79
 2410 0042 1B78     	 ldrb r3,[r3]
 2411 0044 0133     	 add r3,r3,#1
 2412 0046 DAB2     	 uxtb r2,r3
 2413 0048 0D4B     	 ldr r3,.L79
 2414 004a 1A70     	 strb r2,[r3]
 2415              	.L75:
 512:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2416              	 .loc 3 512 0 is_stmt 0 discriminator 1
 2417 004c 0C4B     	 ldr r3,.L79
 2418 004e 1B78     	 ldrb r3,[r3]
 2419 0050 0F2B     	 cmp r3,#15
 2420 0052 EFD9     	 bls .L76
 514:../samuel/samuel_io.c **** 
 515:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 516:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2421              	 .loc 3 516 0 is_stmt 1
 2422 0054 0A4B     	 ldr r3,.L79
 2423 0056 0022     	 mov r2,#0
 2424 0058 1A70     	 strb r2,[r3]
 2425 005a 0BE0     	 b .L77
 2426              	.L78:
 517:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2427              	 .loc 3 517 0 discriminator 3
 2428 005c 084B     	 ldr r3,.L79
 2429 005e 1B78     	 ldrb r3,[r3]
 2430 0060 1A1C     	 mov r2,r3
 2431 0062 0A4B     	 ldr r3,.L79+12
 2432 0064 0021     	 mov r1,#0
 2433 0066 9954     	 strb r1,[r3,r2]
 516:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2434              	 .loc 3 516 0 discriminator 3
 2435 0068 054B     	 ldr r3,.L79
 2436 006a 1B78     	 ldrb r3,[r3]
 2437 006c 0133     	 add r3,r3,#1
 2438 006e DAB2     	 uxtb r2,r3
 2439 0070 034B     	 ldr r3,.L79
 2440 0072 1A70     	 strb r2,[r3]
 2441              	.L77:
 516:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2442              	 .loc 3 516 0 is_stmt 0 discriminator 1
 2443 0074 024B     	 ldr r3,.L79
 2444 0076 1B78     	 ldrb r3,[r3]
 2445 0078 1F2B     	 cmp r3,#31
 2446 007a EFD9     	 bls .L78
 518:../samuel/samuel_io.c ****  }
 2447              	 .loc 3 518 0 is_stmt 1
 2448 007c BD46     	 mov sp,r7
 2449              	 
 2450 007e 80BD     	 pop {r7,pc}
 2451              	.L80:
 2452              	 .align 2
 2453              	.L79:
 2454 0080 00000000 	 .word Index
 2455 0084 00000000 	 .word ReadBuffer1
 2456 0088 00000000 	 .word ReadBuffer2
 2457 008c 00000000 	 .word ReadBuffer3
 2458              	 .cfi_endproc
 2459              	.LFE311:
 2461              	 .section .text.fillEpromBuffer,"ax",%progbits
 2462              	 .align 2
 2463              	 .global fillEpromBuffer
 2464              	 .code 16
 2465              	 .thumb_func
 2467              	fillEpromBuffer:
 2468              	.LFB312:
 519:../samuel/samuel_io.c **** 
 520:../samuel/samuel_io.c ****  //---------------------------------
 521:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 522:../samuel/samuel_io.c ****  {
 2469              	 .loc 3 522 0
 2470              	 .cfi_startproc
 2471 0000 80B5     	 push {r7,lr}
 2472              	.LCFI56:
 2473              	 .cfi_def_cfa_offset 8
 2474              	 .cfi_offset 7,-8
 2475              	 .cfi_offset 14,-4
 2476 0002 00AF     	 add r7,sp,#0
 2477              	.LCFI57:
 2478              	 .cfi_def_cfa_register 7
 523:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 524:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2479              	 .loc 3 524 0
 2480 0004 0B4B     	 ldr r3,.L84
 2481 0006 0022     	 mov r2,#0
 2482 0008 1A70     	 strb r2,[r3]
 2483 000a 0CE0     	 b .L82
 2484              	.L83:
 525:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2485              	 .loc 3 525 0 discriminator 3
 2486 000c 094B     	 ldr r3,.L84
 2487 000e 1B78     	 ldrb r3,[r3]
 2488 0010 1A1C     	 mov r2,r3
 2489 0012 084B     	 ldr r3,.L84
 2490 0014 1978     	 ldrb r1,[r3]
 2491 0016 084B     	 ldr r3,.L84+4
 2492 0018 9954     	 strb r1,[r3,r2]
 524:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2493              	 .loc 3 524 0 discriminator 3
 2494 001a 064B     	 ldr r3,.L84
 2495 001c 1B78     	 ldrb r3,[r3]
 2496 001e 0133     	 add r3,r3,#1
 2497 0020 DAB2     	 uxtb r2,r3
 2498 0022 044B     	 ldr r3,.L84
 2499 0024 1A70     	 strb r2,[r3]
 2500              	.L82:
 524:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2501              	 .loc 3 524 0 is_stmt 0 discriminator 1
 2502 0026 034B     	 ldr r3,.L84
 2503 0028 1B78     	 ldrb r3,[r3]
 2504 002a 632B     	 cmp r3,#99
 2505 002c EED9     	 bls .L83
 526:../samuel/samuel_io.c ****  }
 2506              	 .loc 3 526 0 is_stmt 1
 2507 002e BD46     	 mov sp,r7
 2508              	 
 2509 0030 80BD     	 pop {r7,pc}
 2510              	.L85:
 2511 0032 C046     	 .align 2
 2512              	.L84:
 2513 0034 00000000 	 .word Index
 2514 0038 00000000 	 .word data_buffer
 2515              	 .cfi_endproc
 2516              	.LFE312:
 2518              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2519              	 .align 2
 2520              	 .global fill2EpromBuffer
 2521              	 .code 16
 2522              	 .thumb_func
 2524              	fill2EpromBuffer:
 2525              	.LFB313:
 527:../samuel/samuel_io.c **** 
 528:../samuel/samuel_io.c ****  //---------------------------------
 529:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 530:../samuel/samuel_io.c ****  {
 2526              	 .loc 3 530 0
 2527              	 .cfi_startproc
 2528 0000 80B5     	 push {r7,lr}
 2529              	.LCFI58:
 2530              	 .cfi_def_cfa_offset 8
 2531              	 .cfi_offset 7,-8
 2532              	 .cfi_offset 14,-4
 2533 0002 00AF     	 add r7,sp,#0
 2534              	.LCFI59:
 2535              	 .cfi_def_cfa_register 7
 531:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 532:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2536              	 .loc 3 532 0
 2537 0004 0C4B     	 ldr r3,.L89
 2538 0006 0022     	 mov r2,#0
 2539 0008 1A70     	 strb r2,[r3]
 2540 000a 0EE0     	 b .L87
 2541              	.L88:
 533:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2542              	 .loc 3 533 0 discriminator 3
 2543 000c 0A4B     	 ldr r3,.L89
 2544 000e 1B78     	 ldrb r3,[r3]
 2545 0010 1A1C     	 mov r2,r3
 2546 0012 094B     	 ldr r3,.L89
 2547 0014 1B78     	 ldrb r3,[r3]
 2548 0016 DB43     	 mvn r3,r3
 2549 0018 D9B2     	 uxtb r1,r3
 2550 001a 084B     	 ldr r3,.L89+4
 2551 001c 9954     	 strb r1,[r3,r2]
 532:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2552              	 .loc 3 532 0 discriminator 3
 2553 001e 064B     	 ldr r3,.L89
 2554 0020 1B78     	 ldrb r3,[r3]
 2555 0022 0133     	 add r3,r3,#1
 2556 0024 DAB2     	 uxtb r2,r3
 2557 0026 044B     	 ldr r3,.L89
 2558 0028 1A70     	 strb r2,[r3]
 2559              	.L87:
 532:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2560              	 .loc 3 532 0 is_stmt 0 discriminator 1
 2561 002a 034B     	 ldr r3,.L89
 2562 002c 1B78     	 ldrb r3,[r3]
 2563 002e 632B     	 cmp r3,#99
 2564 0030 ECD9     	 bls .L88
 534:../samuel/samuel_io.c ****  }
 2565              	 .loc 3 534 0 is_stmt 1
 2566 0032 BD46     	 mov sp,r7
 2567              	 
 2568 0034 80BD     	 pop {r7,pc}
 2569              	.L90:
 2570 0036 C046     	 .align 2
 2571              	.L89:
 2572 0038 00000000 	 .word Index
 2573 003c 00000000 	 .word data_buffer
 2574              	 .cfi_endproc
 2575              	.LFE313:
 2577              	 .section .text.readAllEEprom,"ax",%progbits
 2578              	 .align 2
 2579              	 .global readAllEEprom
 2580              	 .code 16
 2581              	 .thumb_func
 2583              	readAllEEprom:
 2584              	.LFB314:
 535:../samuel/samuel_io.c **** 
 536:../samuel/samuel_io.c **** 
 537:../samuel/samuel_io.c ****  //------------------------------------------------
 538:../samuel/samuel_io.c **** 
 539:../samuel/samuel_io.c **** 
 540:../samuel/samuel_io.c ****  //------------------------------------------------
 541:../samuel/samuel_io.c ****  int readAllEEprom(void)
 542:../samuel/samuel_io.c ****  {
 2585              	 .loc 3 542 0
 2586              	 .cfi_startproc
 2587 0000 80B5     	 push {r7,lr}
 2588              	.LCFI60:
 2589              	 .cfi_def_cfa_offset 8
 2590              	 .cfi_offset 7,-8
 2591              	 .cfi_offset 14,-4
 2592 0002 00AF     	 add r7,sp,#0
 2593              	.LCFI61:
 2594              	 .cfi_def_cfa_register 7
 543:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2595              	 .loc 3 543 0
 2596 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2597 0008 031C     	 mov r3,r0
 2598 000a 1A1C     	 mov r2,r3
 2599 000c 614B     	 ldr r3,.L97
 2600 000e 1A70     	 strb r2,[r3]
 544:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2601              	 .loc 3 544 0
 2602 0010 604B     	 ldr r3,.L97
 2603 0012 1B78     	 ldrb r3,[r3]
 2604 0014 032B     	 cmp r3,#3
 2605 0016 0AD1     	 bne .L92
 545:../samuel/samuel_io.c ****    {
 546:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2606              	 .loc 3 546 0
 2607 0018 5F4B     	 ldr r3,.L97+4
 2608 001a 0120     	 mov r0,#1
 2609 001c 0021     	 mov r1,#0
 2610 001e 1A1C     	 mov r2,r3
 2611 0020 1023     	 mov r3,#16
 2612 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2613 0026 031C     	 mov r3,r0
 2614 0028 1A1C     	 mov r2,r3
 2615 002a 5C4B     	 ldr r3,.L97+8
 2616 002c 1A70     	 strb r2,[r3]
 2617              	.L92:
 547:../samuel/samuel_io.c ****    }
 548:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2618              	 .loc 3 548 0
 2619 002e 5B4B     	 ldr r3,.L97+8
 2620 0030 1B78     	 ldrb r3,[r3]
 2621 0032 002B     	 cmp r3,#0
 2622 0034 14D1     	 bne .L93
 549:../samuel/samuel_io.c ****    {
 550:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2623              	 .loc 3 550 0
 2624 0036 584B     	 ldr r3,.L97+4
 2625 0038 5B78     	 ldrb r3,[r3,#1]
 2626 003a 9AB2     	 uxth r2,r3
 2627 003c 584B     	 ldr r3,.L97+12
 2628 003e 1A80     	 strh r2,[r3]
 551:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2629              	 .loc 3 551 0
 2630 0040 554B     	 ldr r3,.L97+4
 2631 0042 9B78     	 ldrb r3,[r3,#2]
 2632 0044 9AB2     	 uxth r2,r3
 2633 0046 574B     	 ldr r3,.L97+16
 2634 0048 1A80     	 strh r2,[r3]
 552:../samuel/samuel_io.c **** 
 553:../samuel/samuel_io.c **** 
 554:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2635              	 .loc 3 554 0
 2636 004a 574B     	 ldr r3,.L97+20
 2637 004c 0220     	 mov r0,#2
 2638 004e 0021     	 mov r1,#0
 2639 0050 1A1C     	 mov r2,r3
 2640 0052 1023     	 mov r3,#16
 2641 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2642 0058 031C     	 mov r3,r0
 2643 005a 1A1C     	 mov r2,r3
 2644 005c 4F4B     	 ldr r3,.L97+8
 2645 005e 1A70     	 strb r2,[r3]
 2646              	.L93:
 555:../samuel/samuel_io.c ****    }
 556:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2647              	 .loc 3 556 0
 2648 0060 4E4B     	 ldr r3,.L97+8
 2649 0062 1B78     	 ldrb r3,[r3]
 2650 0064 002B     	 cmp r3,#0
 2651 0066 1ED1     	 bne .L94
 557:../samuel/samuel_io.c ****    {
 558:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2652              	 .loc 3 558 0
 2653 0068 4F4B     	 ldr r3,.L97+20
 2654 006a 5A78     	 ldrb r2,[r3,#1]
 2655 006c 4F4B     	 ldr r3,.L97+24
 2656 006e 1A70     	 strb r2,[r3]
 559:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2657              	 .loc 3 559 0
 2658 0070 4D4B     	 ldr r3,.L97+20
 2659 0072 9A78     	 ldrb r2,[r3,#2]
 2660 0074 4E4B     	 ldr r3,.L97+28
 2661 0076 1A70     	 strb r2,[r3]
 560:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2662              	 .loc 3 560 0
 2663 0078 4B4B     	 ldr r3,.L97+20
 2664 007a DB78     	 ldrb r3,[r3,#3]
 2665 007c 9BB2     	 uxth r3,r3
 2666 007e 1B02     	 lsl r3,r3,#8
 2667 0080 9AB2     	 uxth r2,r3
 2668 0082 494B     	 ldr r3,.L97+20
 2669 0084 1B79     	 ldrb r3,[r3,#4]
 2670 0086 9BB2     	 uxth r3,r3
 2671 0088 D318     	 add r3,r2,r3
 2672 008a 9AB2     	 uxth r2,r3
 2673 008c 494B     	 ldr r3,.L97+32
 2674 008e 1A80     	 strh r2,[r3]
 561:../samuel/samuel_io.c **** 
 562:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2675              	 .loc 3 562 0
 2676 0090 494B     	 ldr r3,.L97+36
 2677 0092 0520     	 mov r0,#5
 2678 0094 0021     	 mov r1,#0
 2679 0096 1A1C     	 mov r2,r3
 2680 0098 2023     	 mov r3,#32
 2681 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2682 009e 031C     	 mov r3,r0
 2683 00a0 1A1C     	 mov r2,r3
 2684 00a2 3E4B     	 ldr r3,.L97+8
 2685 00a4 1A70     	 strb r2,[r3]
 2686              	.L94:
 563:../samuel/samuel_io.c ****    }
 564:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2687              	 .loc 3 564 0
 2688 00a6 3D4B     	 ldr r3,.L97+8
 2689 00a8 1B78     	 ldrb r3,[r3]
 2690 00aa 002B     	 cmp r3,#0
 2691 00ac 67D1     	 bne .L95
 565:../samuel/samuel_io.c ****    {
 566:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2692              	 .loc 3 566 0
 2693 00ae 424B     	 ldr r3,.L97+36
 2694 00b0 5A78     	 ldrb r2,[r3,#1]
 2695 00b2 424B     	 ldr r3,.L97+40
 2696 00b4 1A70     	 strb r2,[r3]
 567:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2697              	 .loc 3 567 0
 2698 00b6 404B     	 ldr r3,.L97+36
 2699 00b8 9A78     	 ldrb r2,[r3,#2]
 2700 00ba 414B     	 ldr r3,.L97+44
 2701 00bc 1A70     	 strb r2,[r3]
 568:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2702              	 .loc 3 568 0
 2703 00be 3E4B     	 ldr r3,.L97+36
 2704 00c0 DB78     	 ldrb r3,[r3,#3]
 2705 00c2 9BB2     	 uxth r3,r3
 2706 00c4 1B02     	 lsl r3,r3,#8
 2707 00c6 9AB2     	 uxth r2,r3
 2708 00c8 3B4B     	 ldr r3,.L97+36
 2709 00ca 1B79     	 ldrb r3,[r3,#4]
 2710 00cc 9BB2     	 uxth r3,r3
 2711 00ce D318     	 add r3,r2,r3
 2712 00d0 9AB2     	 uxth r2,r3
 2713 00d2 3C4B     	 ldr r3,.L97+48
 2714 00d4 1A80     	 strh r2,[r3]
 569:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2715              	 .loc 3 569 0
 2716 00d6 384B     	 ldr r3,.L97+36
 2717 00d8 5B79     	 ldrb r3,[r3,#5]
 2718 00da 9BB2     	 uxth r3,r3
 2719 00dc 1B02     	 lsl r3,r3,#8
 2720 00de 9AB2     	 uxth r2,r3
 2721 00e0 354B     	 ldr r3,.L97+36
 2722 00e2 9B79     	 ldrb r3,[r3,#6]
 2723 00e4 9BB2     	 uxth r3,r3
 2724 00e6 D318     	 add r3,r2,r3
 2725 00e8 9AB2     	 uxth r2,r3
 2726 00ea 374B     	 ldr r3,.L97+52
 2727 00ec 1A80     	 strh r2,[r3]
 570:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2728              	 .loc 3 570 0
 2729 00ee 324B     	 ldr r3,.L97+36
 2730 00f0 DB79     	 ldrb r3,[r3,#7]
 2731 00f2 9BB2     	 uxth r3,r3
 2732 00f4 1B02     	 lsl r3,r3,#8
 2733 00f6 9AB2     	 uxth r2,r3
 2734 00f8 2F4B     	 ldr r3,.L97+36
 2735 00fa 1B7A     	 ldrb r3,[r3,#8]
 2736 00fc 9BB2     	 uxth r3,r3
 2737 00fe D318     	 add r3,r2,r3
 2738 0100 9AB2     	 uxth r2,r3
 2739 0102 324B     	 ldr r3,.L97+56
 2740 0104 1A80     	 strh r2,[r3]
 571:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2741              	 .loc 3 571 0
 2742 0106 2C4B     	 ldr r3,.L97+36
 2743 0108 5B7A     	 ldrb r3,[r3,#9]
 2744 010a 9BB2     	 uxth r3,r3
 2745 010c 1B02     	 lsl r3,r3,#8
 2746 010e 9AB2     	 uxth r2,r3
 2747 0110 294B     	 ldr r3,.L97+36
 2748 0112 9B7A     	 ldrb r3,[r3,#10]
 2749 0114 9BB2     	 uxth r3,r3
 2750 0116 D318     	 add r3,r2,r3
 2751 0118 9AB2     	 uxth r2,r3
 2752 011a 2D4B     	 ldr r3,.L97+60
 2753 011c 1A80     	 strh r2,[r3]
 572:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2754              	 .loc 3 572 0
 2755 011e 264B     	 ldr r3,.L97+36
 2756 0120 DB7A     	 ldrb r3,[r3,#11]
 2757 0122 9BB2     	 uxth r3,r3
 2758 0124 1B02     	 lsl r3,r3,#8
 2759 0126 9AB2     	 uxth r2,r3
 2760 0128 234B     	 ldr r3,.L97+36
 2761 012a 1B7B     	 ldrb r3,[r3,#12]
 2762 012c 9BB2     	 uxth r3,r3
 2763 012e D318     	 add r3,r2,r3
 2764 0130 9AB2     	 uxth r2,r3
 2765 0132 284B     	 ldr r3,.L97+64
 2766 0134 1A80     	 strh r2,[r3]
 573:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2767              	 .loc 3 573 0
 2768 0136 204B     	 ldr r3,.L97+36
 2769 0138 5B7B     	 ldrb r3,[r3,#13]
 2770 013a 9BB2     	 uxth r3,r3
 2771 013c 1B02     	 lsl r3,r3,#8
 2772 013e 9AB2     	 uxth r2,r3
 2773 0140 1D4B     	 ldr r3,.L97+36
 2774 0142 9B7B     	 ldrb r3,[r3,#14]
 2775 0144 9BB2     	 uxth r3,r3
 2776 0146 D318     	 add r3,r2,r3
 2777 0148 9AB2     	 uxth r2,r3
 2778 014a 234B     	 ldr r3,.L97+68
 2779 014c 1A80     	 strh r2,[r3]
 574:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 2780              	 .loc 3 574 0
 2781 014e 1A4B     	 ldr r3,.L97+36
 2782 0150 DB7B     	 ldrb r3,[r3,#15]
 2783 0152 9BB2     	 uxth r3,r3
 2784 0154 1B02     	 lsl r3,r3,#8
 2785 0156 9AB2     	 uxth r2,r3
 2786 0158 174B     	 ldr r3,.L97+36
 2787 015a 1B7C     	 ldrb r3,[r3,#16]
 2788 015c 9BB2     	 uxth r3,r3
 2789 015e D318     	 add r3,r2,r3
 2790 0160 9AB2     	 uxth r2,r3
 2791 0162 1E4B     	 ldr r3,.L97+72
 2792 0164 1A80     	 strh r2,[r3]
 575:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 2793              	 .loc 3 575 0
 2794 0166 144B     	 ldr r3,.L97+36
 2795 0168 5B7C     	 ldrb r3,[r3,#17]
 2796 016a 9BB2     	 uxth r3,r3
 2797 016c 1B02     	 lsl r3,r3,#8
 2798 016e 9AB2     	 uxth r2,r3
 2799 0170 114B     	 ldr r3,.L97+36
 2800 0172 9B7C     	 ldrb r3,[r3,#18]
 2801 0174 9BB2     	 uxth r3,r3
 2802 0176 D318     	 add r3,r2,r3
 2803 0178 9AB2     	 uxth r2,r3
 2804 017a 194B     	 ldr r3,.L97+76
 2805 017c 1A80     	 strh r2,[r3]
 2806              	.L95:
 576:../samuel/samuel_io.c **** 
 577:../samuel/samuel_io.c ****    }
 578:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 2807              	 .loc 3 578 0
 2808 017e 054B     	 ldr r3,.L97
 2809 0180 1B78     	 ldrb r3,[r3]
 2810 0182 1A1C     	 mov r2,r3
 2811 0184 054B     	 ldr r3,.L97+8
 2812 0186 1B78     	 ldrb r3,[r3]
 2813 0188 1B01     	 lsl r3,r3,#4
 2814 018a D318     	 add r3,r2,r3
 579:../samuel/samuel_io.c ****  }
 2815              	 .loc 3 579 0
 2816 018c 181C     	 mov r0,r3
 2817 018e BD46     	 mov sp,r7
 2818              	 
 2819 0190 80BD     	 pop {r7,pc}
 2820              	.L98:
 2821 0192 C046     	 .align 2
 2822              	.L97:
 2823 0194 00000000 	 .word EEprom_status
 2824 0198 00000000 	 .word ReadBuffer1
 2825 019c 00000000 	 .word oper_status
 2826 01a0 00000000 	 .word Ser_NrH
 2827 01a4 00000000 	 .word Ser_NrL
 2828 01a8 00000000 	 .word ReadBuffer2
 2829 01ac 00000000 	 .word node_id_alt
 2830 01b0 00000000 	 .word node_id
 2831 01b4 00000000 	 .word node_id_16bit
 2832 01b8 00000000 	 .word ReadBuffer3
 2833 01bc 00000000 	 .word RegOnOff
 2834 01c0 00000000 	 .word RegOnOff2
 2835 01c4 00000000 	 .word dimAkt_Ww
 2836 01c8 00000000 	 .word dimAkt_Cw
 2837 01cc 00000000 	 .word dimOff_Ww
 2838 01d0 00000000 	 .word dimOff_Cw
 2839 01d4 00000000 	 .word dimNorm1_Ww
 2840 01d8 00000000 	 .word dimNorm1_Cw
 2841 01dc 00000000 	 .word dimNorm2_Ww
 2842 01e0 00000000 	 .word dimNorm2_Cw
 2843              	 .cfi_endproc
 2844              	.LFE314:
 2846              	 .section .text.readSerNrEEprom,"ax",%progbits
 2847              	 .align 2
 2848              	 .global readSerNrEEprom
 2849              	 .code 16
 2850              	 .thumb_func
 2852              	readSerNrEEprom:
 2853              	.LFB315:
 580:../samuel/samuel_io.c ****  //------------------------------------------------
 581:../samuel/samuel_io.c **** 
 582:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 583:../samuel/samuel_io.c ****  {
 2854              	 .loc 3 583 0
 2855              	 .cfi_startproc
 2856 0000 80B5     	 push {r7,lr}
 2857              	.LCFI62:
 2858              	 .cfi_def_cfa_offset 8
 2859              	 .cfi_offset 7,-8
 2860              	 .cfi_offset 14,-4
 2861 0002 00AF     	 add r7,sp,#0
 2862              	.LCFI63:
 2863              	 .cfi_def_cfa_register 7
 584:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2864              	 .loc 3 584 0
 2865 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2866 0008 031C     	 mov r3,r0
 2867 000a 1A1C     	 mov r2,r3
 2868 000c 0D4B     	 ldr r3,.L102
 2869 000e 1A70     	 strb r2,[r3]
 585:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2870              	 .loc 3 585 0
 2871 0010 0C4B     	 ldr r3,.L102
 2872 0012 1B78     	 ldrb r3,[r3]
 2873 0014 032B     	 cmp r3,#3
 2874 0016 0AD1     	 bne .L100
 586:../samuel/samuel_io.c **** 	 {
 587:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2875              	 .loc 3 587 0
 2876 0018 0B4B     	 ldr r3,.L102+4
 2877 001a 0120     	 mov r0,#1
 2878 001c 0021     	 mov r1,#0
 2879 001e 1A1C     	 mov r2,r3
 2880 0020 1023     	 mov r3,#16
 2881 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2882 0026 031C     	 mov r3,r0
 2883 0028 1A1C     	 mov r2,r3
 2884 002a 084B     	 ldr r3,.L102+8
 2885 002c 1A70     	 strb r2,[r3]
 2886              	.L100:
 588:../samuel/samuel_io.c ****      }
 589:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 2887              	 .loc 3 589 0
 2888 002e 054B     	 ldr r3,.L102
 2889 0030 1B78     	 ldrb r3,[r3]
 2890 0032 1A1C     	 mov r2,r3
 2891 0034 054B     	 ldr r3,.L102+8
 2892 0036 1B78     	 ldrb r3,[r3]
 2893 0038 1B01     	 lsl r3,r3,#4
 2894 003a D318     	 add r3,r2,r3
 590:../samuel/samuel_io.c ****  }
 2895              	 .loc 3 590 0
 2896 003c 181C     	 mov r0,r3
 2897 003e BD46     	 mov sp,r7
 2898              	 
 2899 0040 80BD     	 pop {r7,pc}
 2900              	.L103:
 2901 0042 C046     	 .align 2
 2902              	.L102:
 2903 0044 00000000 	 .word EEprom_status
 2904 0048 00000000 	 .word ReadBuffer1
 2905 004c 00000000 	 .word oper_status
 2906              	 .cfi_endproc
 2907              	.LFE315:
 2909              	 .section .text.readNodeIdEEprom,"ax",%progbits
 2910              	 .align 2
 2911              	 .global readNodeIdEEprom
 2912              	 .code 16
 2913              	 .thumb_func
 2915              	readNodeIdEEprom:
 2916              	.LFB316:
 591:../samuel/samuel_io.c ****  //------------------------------------------------
 592:../samuel/samuel_io.c **** 
 593:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 594:../samuel/samuel_io.c ****  {
 2917              	 .loc 3 594 0
 2918              	 .cfi_startproc
 2919 0000 80B5     	 push {r7,lr}
 2920              	.LCFI64:
 2921              	 .cfi_def_cfa_offset 8
 2922              	 .cfi_offset 7,-8
 2923              	 .cfi_offset 14,-4
 2924 0002 00AF     	 add r7,sp,#0
 2925              	.LCFI65:
 2926              	 .cfi_def_cfa_register 7
 595:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2927              	 .loc 3 595 0
 2928 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2929 0008 031C     	 mov r3,r0
 2930 000a 1A1C     	 mov r2,r3
 2931 000c 0D4B     	 ldr r3,.L107
 2932 000e 1A70     	 strb r2,[r3]
 596:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2933              	 .loc 3 596 0
 2934 0010 0C4B     	 ldr r3,.L107
 2935 0012 1B78     	 ldrb r3,[r3]
 2936 0014 032B     	 cmp r3,#3
 2937 0016 0AD1     	 bne .L105
 597:../samuel/samuel_io.c **** 	 {
 598:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2938              	 .loc 3 598 0
 2939 0018 0B4B     	 ldr r3,.L107+4
 2940 001a 0220     	 mov r0,#2
 2941 001c 0021     	 mov r1,#0
 2942 001e 1A1C     	 mov r2,r3
 2943 0020 1023     	 mov r3,#16
 2944 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2945 0026 031C     	 mov r3,r0
 2946 0028 1A1C     	 mov r2,r3
 2947 002a 084B     	 ldr r3,.L107+8
 2948 002c 1A70     	 strb r2,[r3]
 2949              	.L105:
 599:../samuel/samuel_io.c ****      }
 600:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2950              	 .loc 3 600 0
 2951 002e 054B     	 ldr r3,.L107
 2952 0030 1B78     	 ldrb r3,[r3]
 2953 0032 1A1C     	 mov r2,r3
 2954 0034 054B     	 ldr r3,.L107+8
 2955 0036 1B78     	 ldrb r3,[r3]
 2956 0038 1B01     	 lsl r3,r3,#4
 2957 003a D318     	 add r3,r2,r3
 601:../samuel/samuel_io.c ****  }
 2958              	 .loc 3 601 0
 2959 003c 181C     	 mov r0,r3
 2960 003e BD46     	 mov sp,r7
 2961              	 
 2962 0040 80BD     	 pop {r7,pc}
 2963              	.L108:
 2964 0042 C046     	 .align 2
 2965              	.L107:
 2966 0044 00000000 	 .word EEprom_status
 2967 0048 00000000 	 .word ReadBuffer2
 2968 004c 00000000 	 .word oper_status
 2969              	 .cfi_endproc
 2970              	.LFE316:
 2972              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 2973              	 .align 2
 2974              	 .global read_akt_light_EEprom
 2975              	 .code 16
 2976              	 .thumb_func
 2978              	read_akt_light_EEprom:
 2979              	.LFB317:
 602:../samuel/samuel_io.c **** 
 603:../samuel/samuel_io.c ****  //------------------------------------------------
 604:../samuel/samuel_io.c **** 
 605:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 606:../samuel/samuel_io.c ****  {
 2980              	 .loc 3 606 0
 2981              	 .cfi_startproc
 2982 0000 80B5     	 push {r7,lr}
 2983              	.LCFI66:
 2984              	 .cfi_def_cfa_offset 8
 2985              	 .cfi_offset 7,-8
 2986              	 .cfi_offset 14,-4
 2987 0002 00AF     	 add r7,sp,#0
 2988              	.LCFI67:
 2989              	 .cfi_def_cfa_register 7
 607:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2990              	 .loc 3 607 0
 2991 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2992 0008 031C     	 mov r3,r0
 2993 000a 1A1C     	 mov r2,r3
 2994 000c 0D4B     	 ldr r3,.L112
 2995 000e 1A70     	 strb r2,[r3]
 608:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2996              	 .loc 3 608 0
 2997 0010 0C4B     	 ldr r3,.L112
 2998 0012 1B78     	 ldrb r3,[r3]
 2999 0014 032B     	 cmp r3,#3
 3000 0016 0AD1     	 bne .L110
 609:../samuel/samuel_io.c **** 	 {
 610:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 3001              	 .loc 3 610 0
 3002 0018 0B4B     	 ldr r3,.L112+4
 3003 001a 0420     	 mov r0,#4
 3004 001c 0021     	 mov r1,#0
 3005 001e 1A1C     	 mov r2,r3
 3006 0020 1023     	 mov r3,#16
 3007 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3008 0026 031C     	 mov r3,r0
 3009 0028 1A1C     	 mov r2,r3
 3010 002a 084B     	 ldr r3,.L112+8
 3011 002c 1A70     	 strb r2,[r3]
 3012              	.L110:
 611:../samuel/samuel_io.c ****      }
 612:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3013              	 .loc 3 612 0
 3014 002e 054B     	 ldr r3,.L112
 3015 0030 1B78     	 ldrb r3,[r3]
 3016 0032 1A1C     	 mov r2,r3
 3017 0034 054B     	 ldr r3,.L112+8
 3018 0036 1B78     	 ldrb r3,[r3]
 3019 0038 1B01     	 lsl r3,r3,#4
 3020 003a D318     	 add r3,r2,r3
 613:../samuel/samuel_io.c ****  }
 3021              	 .loc 3 613 0
 3022 003c 181C     	 mov r0,r3
 3023 003e BD46     	 mov sp,r7
 3024              	 
 3025 0040 80BD     	 pop {r7,pc}
 3026              	.L113:
 3027 0042 C046     	 .align 2
 3028              	.L112:
 3029 0044 00000000 	 .word EEprom_status
 3030 0048 00000000 	 .word ReadBuffer2
 3031 004c 00000000 	 .word oper_status
 3032              	 .cfi_endproc
 3033              	.LFE317:
 3035              	 .section .text.read_off_light_EEprom,"ax",%progbits
 3036              	 .align 2
 3037              	 .global read_off_light_EEprom
 3038              	 .code 16
 3039              	 .thumb_func
 3041              	read_off_light_EEprom:
 3042              	.LFB318:
 614:../samuel/samuel_io.c ****  //------------------------------------------------
 615:../samuel/samuel_io.c **** 
 616:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 617:../samuel/samuel_io.c ****  {
 3043              	 .loc 3 617 0
 3044              	 .cfi_startproc
 3045 0000 80B5     	 push {r7,lr}
 3046              	.LCFI68:
 3047              	 .cfi_def_cfa_offset 8
 3048              	 .cfi_offset 7,-8
 3049              	 .cfi_offset 14,-4
 3050 0002 00AF     	 add r7,sp,#0
 3051              	.LCFI69:
 3052              	 .cfi_def_cfa_register 7
 618:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3053              	 .loc 3 618 0
 3054 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3055 0008 031C     	 mov r3,r0
 3056 000a 1A1C     	 mov r2,r3
 3057 000c 0D4B     	 ldr r3,.L117
 3058 000e 1A70     	 strb r2,[r3]
 619:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3059              	 .loc 3 619 0
 3060 0010 0C4B     	 ldr r3,.L117
 3061 0012 1B78     	 ldrb r3,[r3]
 3062 0014 032B     	 cmp r3,#3
 3063 0016 0AD1     	 bne .L115
 620:../samuel/samuel_io.c **** 	 {
 621:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 3064              	 .loc 3 621 0
 3065 0018 0B4B     	 ldr r3,.L117+4
 3066 001a 0520     	 mov r0,#5
 3067 001c 0021     	 mov r1,#0
 3068 001e 1A1C     	 mov r2,r3
 3069 0020 1023     	 mov r3,#16
 3070 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3071 0026 031C     	 mov r3,r0
 3072 0028 1A1C     	 mov r2,r3
 3073 002a 084B     	 ldr r3,.L117+8
 3074 002c 1A70     	 strb r2,[r3]
 3075              	.L115:
 622:../samuel/samuel_io.c ****      }
 623:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3076              	 .loc 3 623 0
 3077 002e 054B     	 ldr r3,.L117
 3078 0030 1B78     	 ldrb r3,[r3]
 3079 0032 1A1C     	 mov r2,r3
 3080 0034 054B     	 ldr r3,.L117+8
 3081 0036 1B78     	 ldrb r3,[r3]
 3082 0038 1B01     	 lsl r3,r3,#4
 3083 003a D318     	 add r3,r2,r3
 624:../samuel/samuel_io.c ****  }
 3084              	 .loc 3 624 0
 3085 003c 181C     	 mov r0,r3
 3086 003e BD46     	 mov sp,r7
 3087              	 
 3088 0040 80BD     	 pop {r7,pc}
 3089              	.L118:
 3090 0042 C046     	 .align 2
 3091              	.L117:
 3092 0044 00000000 	 .word EEprom_status
 3093 0048 00000000 	 .word ReadBuffer2
 3094 004c 00000000 	 .word oper_status
 3095              	 .cfi_endproc
 3096              	.LFE318:
 3098              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 3099              	 .align 2
 3100              	 .global writeSernr_B1_EEprom
 3101              	 .code 16
 3102              	 .thumb_func
 3104              	writeSernr_B1_EEprom:
 3105              	.LFB319:
 625:../samuel/samuel_io.c **** 
 626:../samuel/samuel_io.c ****  //------------------------------------------------
 627:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 628:../samuel/samuel_io.c ****  {
 3106              	 .loc 3 628 0
 3107              	 .cfi_startproc
 3108 0000 80B5     	 push {r7,lr}
 3109              	.LCFI70:
 3110              	 .cfi_def_cfa_offset 8
 3111              	 .cfi_offset 7,-8
 3112              	 .cfi_offset 14,-4
 3113 0002 82B0     	 sub sp,sp,#8
 3114              	.LCFI71:
 3115              	 .cfi_def_cfa_offset 16
 3116 0004 00AF     	 add r7,sp,#0
 3117              	.LCFI72:
 3118              	 .cfi_def_cfa_register 7
 629:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3119              	 .loc 3 629 0
 3120 0006 8023     	 mov r3,#128
 3121 0008 7B60     	 str r3,[r7,#4]
 630:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3122              	 .loc 3 630 0
 3123 000a 144B     	 ldr r3,.L123
 3124 000c 1A88     	 ldrh r2,[r3]
 3125 000e BA23     	 mov r3,#186
 3126 0010 1B01     	 lsl r3,r3,#4
 3127 0012 9A42     	 cmp r2,r3
 3128 0014 14D9     	 bls .L120
 631:../samuel/samuel_io.c ****   {
 632:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3129              	 .loc 3 632 0
 3130 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3131 001a 031C     	 mov r3,r0
 3132 001c 1A1C     	 mov r2,r3
 3133 001e 104B     	 ldr r3,.L123+4
 3134 0020 1A70     	 strb r2,[r3]
 633:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3135              	 .loc 3 633 0
 3136 0022 0F4B     	 ldr r3,.L123+4
 3137 0024 1B78     	 ldrb r3,[r3]
 3138 0026 032B     	 cmp r3,#3
 3139 0028 08D1     	 bne .L121
 634:../samuel/samuel_io.c ****     {
 635:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3140              	 .loc 3 635 0
 3141 002a 0E4B     	 ldr r3,.L123+8
 3142 002c 0120     	 mov r0,#1
 3143 002e 191C     	 mov r1,r3
 3144 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3145 0034 031C     	 mov r3,r0
 3146 0036 1A1C     	 mov r2,r3
 3147 0038 0B4B     	 ldr r3,.L123+12
 3148 003a 1A70     	 strb r2,[r3]
 3149              	.L121:
 636:../samuel/samuel_io.c ****     }
 637:../samuel/samuel_io.c **** 	 a = 0;
 3150              	 .loc 3 637 0
 3151 003c 0023     	 mov r3,#0
 3152 003e 7B60     	 str r3,[r7,#4]
 3153              	.L120:
 638:../samuel/samuel_io.c ****   }
 639:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3154              	 .loc 3 639 0
 3155 0040 074B     	 ldr r3,.L123+4
 3156 0042 1B78     	 ldrb r3,[r3]
 3157 0044 1A1C     	 mov r2,r3
 3158 0046 084B     	 ldr r3,.L123+12
 3159 0048 1B78     	 ldrb r3,[r3]
 3160 004a 1B01     	 lsl r3,r3,#4
 3161 004c D218     	 add r2,r2,r3
 3162 004e 7B68     	 ldr r3,[r7,#4]
 3163 0050 D318     	 add r3,r2,r3
 640:../samuel/samuel_io.c ****  }
 3164              	 .loc 3 640 0
 3165 0052 181C     	 mov r0,r3
 3166 0054 BD46     	 mov sp,r7
 3167 0056 02B0     	 add sp,sp,#8
 3168              	 
 3169 0058 80BD     	 pop {r7,pc}
 3170              	.L124:
 3171 005a C046     	 .align 2
 3172              	.L123:
 3173 005c 00000000 	 .word resultB
 3174 0060 00000000 	 .word EEprom_status
 3175 0064 00000000 	 .word ReadBuffer1
 3176 0068 00000000 	 .word oper_status
 3177              	 .cfi_endproc
 3178              	.LFE319:
 3180              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3181              	 .align 2
 3182              	 .global writeNodeid_B2_EEprom
 3183              	 .code 16
 3184              	 .thumb_func
 3186              	writeNodeid_B2_EEprom:
 3187              	.LFB320:
 641:../samuel/samuel_io.c ****  //------------------------------------------------
 642:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 643:../samuel/samuel_io.c ****  {
 3188              	 .loc 3 643 0
 3189              	 .cfi_startproc
 3190 0000 80B5     	 push {r7,lr}
 3191              	.LCFI73:
 3192              	 .cfi_def_cfa_offset 8
 3193              	 .cfi_offset 7,-8
 3194              	 .cfi_offset 14,-4
 3195 0002 82B0     	 sub sp,sp,#8
 3196              	.LCFI74:
 3197              	 .cfi_def_cfa_offset 16
 3198 0004 00AF     	 add r7,sp,#0
 3199              	.LCFI75:
 3200              	 .cfi_def_cfa_register 7
 644:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3201              	 .loc 3 644 0
 3202 0006 8023     	 mov r3,#128
 3203 0008 7B60     	 str r3,[r7,#4]
 645:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3204              	 .loc 3 645 0
 3205 000a 144B     	 ldr r3,.L129
 3206 000c 1A88     	 ldrh r2,[r3]
 3207 000e BA23     	 mov r3,#186
 3208 0010 1B01     	 lsl r3,r3,#4
 3209 0012 9A42     	 cmp r2,r3
 3210 0014 14D9     	 bls .L126
 646:../samuel/samuel_io.c ****     {
 647:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3211              	 .loc 3 647 0
 3212 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3213 001a 031C     	 mov r3,r0
 3214 001c 1A1C     	 mov r2,r3
 3215 001e 104B     	 ldr r3,.L129+4
 3216 0020 1A70     	 strb r2,[r3]
 648:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3217              	 .loc 3 648 0
 3218 0022 0F4B     	 ldr r3,.L129+4
 3219 0024 1B78     	 ldrb r3,[r3]
 3220 0026 032B     	 cmp r3,#3
 3221 0028 08D1     	 bne .L127
 649:../samuel/samuel_io.c ****       {
 650:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3222              	 .loc 3 650 0
 3223 002a 0E4B     	 ldr r3,.L129+8
 3224 002c 0220     	 mov r0,#2
 3225 002e 191C     	 mov r1,r3
 3226 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3227 0034 031C     	 mov r3,r0
 3228 0036 1A1C     	 mov r2,r3
 3229 0038 0B4B     	 ldr r3,.L129+12
 3230 003a 1A70     	 strb r2,[r3]
 3231              	.L127:
 651:../samuel/samuel_io.c ****       }
 652:../samuel/samuel_io.c **** 	 a = 0;
 3232              	 .loc 3 652 0
 3233 003c 0023     	 mov r3,#0
 3234 003e 7B60     	 str r3,[r7,#4]
 3235              	.L126:
 653:../samuel/samuel_io.c ****     }
 654:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3236              	 .loc 3 654 0
 3237 0040 074B     	 ldr r3,.L129+4
 3238 0042 1B78     	 ldrb r3,[r3]
 3239 0044 1A1C     	 mov r2,r3
 3240 0046 084B     	 ldr r3,.L129+12
 3241 0048 1B78     	 ldrb r3,[r3]
 3242 004a 1B01     	 lsl r3,r3,#4
 3243 004c D218     	 add r2,r2,r3
 3244 004e 7B68     	 ldr r3,[r7,#4]
 3245 0050 D318     	 add r3,r2,r3
 655:../samuel/samuel_io.c ****  }
 3246              	 .loc 3 655 0
 3247 0052 181C     	 mov r0,r3
 3248 0054 BD46     	 mov sp,r7
 3249 0056 02B0     	 add sp,sp,#8
 3250              	 
 3251 0058 80BD     	 pop {r7,pc}
 3252              	.L130:
 3253 005a C046     	 .align 2
 3254              	.L129:
 3255 005c 00000000 	 .word resultB
 3256 0060 00000000 	 .word EEprom_status
 3257 0064 00000000 	 .word ReadBuffer2
 3258 0068 00000000 	 .word oper_status
 3259              	 .cfi_endproc
 3260              	.LFE320:
 3262              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3263              	 .align 2
 3264              	 .global writeLamp_data_B3_EEprom
 3265              	 .code 16
 3266              	 .thumb_func
 3268              	writeLamp_data_B3_EEprom:
 3269              	.LFB321:
 656:../samuel/samuel_io.c ****  //----------------------------
 657:../samuel/samuel_io.c **** 
 658:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 659:../samuel/samuel_io.c ****  {
 3270              	 .loc 3 659 0
 3271              	 .cfi_startproc
 3272 0000 80B5     	 push {r7,lr}
 3273              	.LCFI76:
 3274              	 .cfi_def_cfa_offset 8
 3275              	 .cfi_offset 7,-8
 3276              	 .cfi_offset 14,-4
 3277 0002 82B0     	 sub sp,sp,#8
 3278              	.LCFI77:
 3279              	 .cfi_def_cfa_offset 16
 3280 0004 00AF     	 add r7,sp,#0
 3281              	.LCFI78:
 3282              	 .cfi_def_cfa_register 7
 660:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3283              	 .loc 3 660 0
 3284 0006 8023     	 mov r3,#128
 3285 0008 7B60     	 str r3,[r7,#4]
 661:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3286              	 .loc 3 661 0
 3287 000a 144B     	 ldr r3,.L135
 3288 000c 1A88     	 ldrh r2,[r3]
 3289 000e BA23     	 mov r3,#186
 3290 0010 1B01     	 lsl r3,r3,#4
 3291 0012 9A42     	 cmp r2,r3
 3292 0014 14D9     	 bls .L132
 662:../samuel/samuel_io.c ****   {
 663:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3293              	 .loc 3 663 0
 3294 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3295 001a 031C     	 mov r3,r0
 3296 001c 1A1C     	 mov r2,r3
 3297 001e 104B     	 ldr r3,.L135+4
 3298 0020 1A70     	 strb r2,[r3]
 664:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3299              	 .loc 3 664 0
 3300 0022 0F4B     	 ldr r3,.L135+4
 3301 0024 1B78     	 ldrb r3,[r3]
 3302 0026 032B     	 cmp r3,#3
 3303 0028 08D1     	 bne .L133
 665:../samuel/samuel_io.c ****     {
 666:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3304              	 .loc 3 666 0
 3305 002a 0E4B     	 ldr r3,.L135+8
 3306 002c 0320     	 mov r0,#3
 3307 002e 191C     	 mov r1,r3
 3308 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3309 0034 031C     	 mov r3,r0
 3310 0036 1A1C     	 mov r2,r3
 3311 0038 0B4B     	 ldr r3,.L135+12
 3312 003a 1A70     	 strb r2,[r3]
 3313              	.L133:
 667:../samuel/samuel_io.c ****     }
 668:../samuel/samuel_io.c **** 	 a = 0;
 3314              	 .loc 3 668 0
 3315 003c 0023     	 mov r3,#0
 3316 003e 7B60     	 str r3,[r7,#4]
 3317              	.L132:
 669:../samuel/samuel_io.c ****   }
 670:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3318              	 .loc 3 670 0
 3319 0040 074B     	 ldr r3,.L135+4
 3320 0042 1B78     	 ldrb r3,[r3]
 3321 0044 1A1C     	 mov r2,r3
 3322 0046 084B     	 ldr r3,.L135+12
 3323 0048 1B78     	 ldrb r3,[r3]
 3324 004a 1B01     	 lsl r3,r3,#4
 3325 004c D218     	 add r2,r2,r3
 3326 004e 7B68     	 ldr r3,[r7,#4]
 3327 0050 D318     	 add r3,r2,r3
 671:../samuel/samuel_io.c ****  }
 3328              	 .loc 3 671 0
 3329 0052 181C     	 mov r0,r3
 3330 0054 BD46     	 mov sp,r7
 3331 0056 02B0     	 add sp,sp,#8
 3332              	 
 3333 0058 80BD     	 pop {r7,pc}
 3334              	.L136:
 3335 005a C046     	 .align 2
 3336              	.L135:
 3337 005c 00000000 	 .word resultB
 3338 0060 00000000 	 .word EEprom_status
 3339 0064 00000000 	 .word ReadBuffer3
 3340 0068 00000000 	 .word oper_status
 3341              	 .cfi_endproc
 3342              	.LFE321:
 3344              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3345              	 .align 2
 3346              	 .global writeakt_light_data_B4_EEprom
 3347              	 .code 16
 3348              	 .thumb_func
 3350              	writeakt_light_data_B4_EEprom:
 3351              	.LFB322:
 672:../samuel/samuel_io.c **** 
 673:../samuel/samuel_io.c ****  //------------------------------------------------
 674:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 675:../samuel/samuel_io.c ****  {
 3352              	 .loc 3 675 0
 3353              	 .cfi_startproc
 3354 0000 80B5     	 push {r7,lr}
 3355              	.LCFI79:
 3356              	 .cfi_def_cfa_offset 8
 3357              	 .cfi_offset 7,-8
 3358              	 .cfi_offset 14,-4
 3359 0002 82B0     	 sub sp,sp,#8
 3360              	.LCFI80:
 3361              	 .cfi_def_cfa_offset 16
 3362 0004 00AF     	 add r7,sp,#0
 3363              	.LCFI81:
 3364              	 .cfi_def_cfa_register 7
 676:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3365              	 .loc 3 676 0
 3366 0006 8023     	 mov r3,#128
 3367 0008 7B60     	 str r3,[r7,#4]
 677:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3368              	 .loc 3 677 0
 3369 000a 144B     	 ldr r3,.L141
 3370 000c 1A88     	 ldrh r2,[r3]
 3371 000e BA23     	 mov r3,#186
 3372 0010 1B01     	 lsl r3,r3,#4
 3373 0012 9A42     	 cmp r2,r3
 3374 0014 14D9     	 bls .L138
 678:../samuel/samuel_io.c ****     {
 679:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3375              	 .loc 3 679 0
 3376 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3377 001a 031C     	 mov r3,r0
 3378 001c 1A1C     	 mov r2,r3
 3379 001e 104B     	 ldr r3,.L141+4
 3380 0020 1A70     	 strb r2,[r3]
 680:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3381              	 .loc 3 680 0
 3382 0022 0F4B     	 ldr r3,.L141+4
 3383 0024 1B78     	 ldrb r3,[r3]
 3384 0026 032B     	 cmp r3,#3
 3385 0028 08D1     	 bne .L139
 681:../samuel/samuel_io.c ****       {
 682:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3386              	 .loc 3 682 0
 3387 002a 0E4B     	 ldr r3,.L141+8
 3388 002c 0420     	 mov r0,#4
 3389 002e 191C     	 mov r1,r3
 3390 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3391 0034 031C     	 mov r3,r0
 3392 0036 1A1C     	 mov r2,r3
 3393 0038 0B4B     	 ldr r3,.L141+12
 3394 003a 1A70     	 strb r2,[r3]
 3395              	.L139:
 683:../samuel/samuel_io.c ****       }
 684:../samuel/samuel_io.c **** 	 a = 0;
 3396              	 .loc 3 684 0
 3397 003c 0023     	 mov r3,#0
 3398 003e 7B60     	 str r3,[r7,#4]
 3399              	.L138:
 685:../samuel/samuel_io.c ****     }
 686:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3400              	 .loc 3 686 0
 3401 0040 074B     	 ldr r3,.L141+4
 3402 0042 1B78     	 ldrb r3,[r3]
 3403 0044 1A1C     	 mov r2,r3
 3404 0046 084B     	 ldr r3,.L141+12
 3405 0048 1B78     	 ldrb r3,[r3]
 3406 004a 1B01     	 lsl r3,r3,#4
 3407 004c D218     	 add r2,r2,r3
 3408 004e 7B68     	 ldr r3,[r7,#4]
 3409 0050 D318     	 add r3,r2,r3
 687:../samuel/samuel_io.c ****  }
 3410              	 .loc 3 687 0
 3411 0052 181C     	 mov r0,r3
 3412 0054 BD46     	 mov sp,r7
 3413 0056 02B0     	 add sp,sp,#8
 3414              	 
 3415 0058 80BD     	 pop {r7,pc}
 3416              	.L142:
 3417 005a C046     	 .align 2
 3418              	.L141:
 3419 005c 00000000 	 .word resultB
 3420 0060 00000000 	 .word EEprom_status
 3421 0064 00000000 	 .word ReadBuffer2
 3422 0068 00000000 	 .word oper_status
 3423              	 .cfi_endproc
 3424              	.LFE322:
 3426              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3427              	 .align 2
 3428              	 .global writeOff_light_B5_EEprom
 3429              	 .code 16
 3430              	 .thumb_func
 3432              	writeOff_light_B5_EEprom:
 3433              	.LFB323:
 688:../samuel/samuel_io.c ****  //----------------------------
 689:../samuel/samuel_io.c **** 
 690:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 691:../samuel/samuel_io.c ****  {
 3434              	 .loc 3 691 0
 3435              	 .cfi_startproc
 3436 0000 80B5     	 push {r7,lr}
 3437              	.LCFI82:
 3438              	 .cfi_def_cfa_offset 8
 3439              	 .cfi_offset 7,-8
 3440              	 .cfi_offset 14,-4
 3441 0002 82B0     	 sub sp,sp,#8
 3442              	.LCFI83:
 3443              	 .cfi_def_cfa_offset 16
 3444 0004 00AF     	 add r7,sp,#0
 3445              	.LCFI84:
 3446              	 .cfi_def_cfa_register 7
 692:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3447              	 .loc 3 692 0
 3448 0006 8023     	 mov r3,#128
 3449 0008 7B60     	 str r3,[r7,#4]
 693:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3450              	 .loc 3 693 0
 3451 000a 144B     	 ldr r3,.L147
 3452 000c 1A88     	 ldrh r2,[r3]
 3453 000e BA23     	 mov r3,#186
 3454 0010 1B01     	 lsl r3,r3,#4
 3455 0012 9A42     	 cmp r2,r3
 3456 0014 14D9     	 bls .L144
 694:../samuel/samuel_io.c ****   {
 695:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3457              	 .loc 3 695 0
 3458 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3459 001a 031C     	 mov r3,r0
 3460 001c 1A1C     	 mov r2,r3
 3461 001e 104B     	 ldr r3,.L147+4
 3462 0020 1A70     	 strb r2,[r3]
 696:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3463              	 .loc 3 696 0
 3464 0022 0F4B     	 ldr r3,.L147+4
 3465 0024 1B78     	 ldrb r3,[r3]
 3466 0026 032B     	 cmp r3,#3
 3467 0028 08D1     	 bne .L145
 697:../samuel/samuel_io.c ****     {
 698:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3468              	 .loc 3 698 0
 3469 002a 0E4B     	 ldr r3,.L147+8
 3470 002c 0520     	 mov r0,#5
 3471 002e 191C     	 mov r1,r3
 3472 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3473 0034 031C     	 mov r3,r0
 3474 0036 1A1C     	 mov r2,r3
 3475 0038 0B4B     	 ldr r3,.L147+12
 3476 003a 1A70     	 strb r2,[r3]
 3477              	.L145:
 699:../samuel/samuel_io.c **** 
 700:../samuel/samuel_io.c **** 
 701:../samuel/samuel_io.c **** 
 702:../samuel/samuel_io.c **** 
 703:../samuel/samuel_io.c ****     }
 704:../samuel/samuel_io.c **** 	 a = 0;
 3478              	 .loc 3 704 0
 3479 003c 0023     	 mov r3,#0
 3480 003e 7B60     	 str r3,[r7,#4]
 3481              	.L144:
 705:../samuel/samuel_io.c ****   }
 706:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3482              	 .loc 3 706 0
 3483 0040 074B     	 ldr r3,.L147+4
 3484 0042 1B78     	 ldrb r3,[r3]
 3485 0044 1A1C     	 mov r2,r3
 3486 0046 084B     	 ldr r3,.L147+12
 3487 0048 1B78     	 ldrb r3,[r3]
 3488 004a 1B01     	 lsl r3,r3,#4
 3489 004c D218     	 add r2,r2,r3
 3490 004e 7B68     	 ldr r3,[r7,#4]
 3491 0050 D318     	 add r3,r2,r3
 707:../samuel/samuel_io.c ****  }
 3492              	 .loc 3 707 0
 3493 0052 181C     	 mov r0,r3
 3494 0054 BD46     	 mov sp,r7
 3495 0056 02B0     	 add sp,sp,#8
 3496              	 
 3497 0058 80BD     	 pop {r7,pc}
 3498              	.L148:
 3499 005a C046     	 .align 2
 3500              	.L147:
 3501 005c 00000000 	 .word resultB
 3502 0060 00000000 	 .word EEprom_status
 3503 0064 00000000 	 .word ReadBuffer2
 3504 0068 00000000 	 .word oper_status
 3505              	 .cfi_endproc
 3506              	.LFE323:
 3508              	 .section .text.sysiniValueB1,"ax",%progbits
 3509              	 .align 2
 3510              	 .global sysiniValueB1
 3511              	 .code 16
 3512              	 .thumb_func
 3514              	sysiniValueB1:
 3515              	.LFB324:
 708:../samuel/samuel_io.c **** 
 709:../samuel/samuel_io.c **** ///#############################################
 710:../samuel/samuel_io.c ****  //initialisierung
 711:../samuel/samuel_io.c **** 
 712:../samuel/samuel_io.c **** 
 713:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 714:../samuel/samuel_io.c ****  {
 3516              	 .loc 3 714 0
 3517              	 .cfi_startproc
 3518 0000 80B5     	 push {r7,lr}
 3519              	.LCFI85:
 3520              	 .cfi_def_cfa_offset 8
 3521              	 .cfi_offset 7,-8
 3522              	 .cfi_offset 14,-4
 3523 0002 00AF     	 add r7,sp,#0
 3524              	.LCFI86:
 3525              	 .cfi_def_cfa_register 7
 715:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 716:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 717:../samuel/samuel_io.c **** 
 718:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3526              	 .loc 3 718 0
 3527 0004 124B     	 ldr r3,.L150
 3528 0006 134A     	 ldr r2,.L150+4
 3529 0008 1A80     	 strh r2,[r3]
 719:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3530              	 .loc 3 719 0
 3531 000a 134B     	 ldr r3,.L150+8
 3532 000c 134A     	 ldr r2,.L150+12
 3533 000e 1A80     	 strh r2,[r3]
 720:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3534              	 .loc 3 720 0
 3535 0010 134B     	 ldr r3,.L150+16
 3536 0012 FA22     	 mov r2,#250
 3537 0014 9200     	 lsl r2,r2,#2
 3538 0016 1A80     	 strh r2,[r3]
 721:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3539              	 .loc 3 721 0
 3540 0018 124B     	 ldr r3,.L150+20
 3541 001a FA22     	 mov r2,#250
 3542 001c 9200     	 lsl r2,r2,#2
 3543 001e 1A80     	 strh r2,[r3]
 722:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3544              	 .loc 3 722 0
 3545 0020 114B     	 ldr r3,.L150+24
 3546 0022 FA22     	 mov r2,#250
 3547 0024 9200     	 lsl r2,r2,#2
 3548 0026 1A80     	 strh r2,[r3]
 723:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3549              	 .loc 3 723 0
 3550 0028 104B     	 ldr r3,.L150+28
 3551 002a FA22     	 mov r2,#250
 3552 002c 9200     	 lsl r2,r2,#2
 3553 002e 1A80     	 strh r2,[r3]
 724:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3554              	 .loc 3 724 0
 3555 0030 0F4B     	 ldr r3,.L150+32
 3556 0032 FA22     	 mov r2,#250
 3557 0034 9200     	 lsl r2,r2,#2
 3558 0036 1A80     	 strh r2,[r3]
 725:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3559              	 .loc 3 725 0
 3560 0038 0E4B     	 ldr r3,.L150+36
 3561 003a FA22     	 mov r2,#250
 3562 003c 9200     	 lsl r2,r2,#2
 3563 003e 1A80     	 strh r2,[r3]
 726:../samuel/samuel_io.c **** 
 727:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3564              	 .loc 3 727 0
 3565 0040 0D4B     	 ldr r3,.L150+40
 3566 0042 0022     	 mov r2,#0
 3567 0044 1A80     	 strh r2,[r3]
 728:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3568              	 .loc 3 728 0
 3569 0046 0D4B     	 ldr r3,.L150+44
 3570 0048 0022     	 mov r2,#0
 3571 004a 1A80     	 strh r2,[r3]
 729:../samuel/samuel_io.c **** 
 730:../samuel/samuel_io.c ****  }
 3572              	 .loc 3 730 0
 3573 004c BD46     	 mov sp,r7
 3574              	 
 3575 004e 80BD     	 pop {r7,pc}
 3576              	.L151:
 3577              	 .align 2
 3578              	.L150:
 3579 0050 00000000 	 .word Ser_NrH
 3580 0054 7A7B0000 	 .word 31610
 3581 0058 00000000 	 .word Ser_NrL
 3582 005c 59580000 	 .word 22617
 3583 0060 00000000 	 .word Hard_Vers
 3584 0064 00000000 	 .word Soft_Vers
 3585 0068 00000000 	 .word GEH_Vers
 3586 006c 00000000 	 .word Mon_Vers
 3587 0070 00000000 	 .word LED_WW_Vers
 3588 0074 00000000 	 .word LED_CW_Vers
 3589 0078 00000000 	 .word neu_Ser_NrH
 3590 007c 00000000 	 .word neu_Ser_NrL
 3591              	 .cfi_endproc
 3592              	.LFE324:
 3594              	 .section .text.sysiniValueB2,"ax",%progbits
 3595              	 .align 2
 3596              	 .global sysiniValueB2
 3597              	 .code 16
 3598              	 .thumb_func
 3600              	sysiniValueB2:
 3601              	.LFB325:
 731:../samuel/samuel_io.c **** 
 732:../samuel/samuel_io.c **** 
 733:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 734:../samuel/samuel_io.c ****  {
 3602              	 .loc 3 734 0
 3603              	 .cfi_startproc
 3604 0000 80B5     	 push {r7,lr}
 3605              	.LCFI87:
 3606              	 .cfi_def_cfa_offset 8
 3607              	 .cfi_offset 7,-8
 3608              	 .cfi_offset 14,-4
 3609 0002 00AF     	 add r7,sp,#0
 3610              	.LCFI88:
 3611              	 .cfi_def_cfa_register 7
 735:../samuel/samuel_io.c ****            node_id = 1;
 3612              	 .loc 3 735 0
 3613 0004 114B     	 ldr r3,.L153
 3614 0006 0122     	 mov r2,#1
 3615 0008 1A70     	 strb r2,[r3]
 736:../samuel/samuel_io.c ****            node_id_alt = 1;
 3616              	 .loc 3 736 0
 3617 000a 114B     	 ldr r3,.L153+4
 3618 000c 0122     	 mov r2,#1
 3619 000e 1A70     	 strb r2,[r3]
 737:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3620              	 .loc 3 737 0
 3621 0010 104B     	 ldr r3,.L153+8
 3622 0012 114A     	 ldr r2,.L153+12
 3623 0014 1A80     	 strh r2,[r3]
 738:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3624              	 .loc 3 738 0
 3625 0016 114B     	 ldr r3,.L153+16
 3626 0018 FA22     	 mov r2,#250
 3627 001a D200     	 lsl r2,r2,#3
 3628 001c 1A80     	 strh r2,[r3]
 739:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3629              	 .loc 3 739 0
 3630 001e 104B     	 ldr r3,.L153+20
 3631 0020 FA22     	 mov r2,#250
 3632 0022 D200     	 lsl r2,r2,#3
 3633 0024 1A80     	 strh r2,[r3]
 740:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3634              	 .loc 3 740 0
 3635 0026 0F4B     	 ldr r3,.L153+24
 3636 0028 E122     	 mov r2,#225
 3637 002a 1201     	 lsl r2,r2,#4
 3638 002c 1A80     	 strh r2,[r3]
 741:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3639              	 .loc 3 741 0
 3640 002e 0E4B     	 ldr r3,.L153+28
 3641 0030 0E4A     	 ldr r2,.L153+32
 3642 0032 1A80     	 strh r2,[r3]
 742:../samuel/samuel_io.c **** 		   led_grupp=10;
 3643              	 .loc 3 742 0
 3644 0034 0E4B     	 ldr r3,.L153+36
 3645 0036 0A22     	 mov r2,#10
 3646 0038 1A80     	 strh r2,[r3]
 743:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3647              	 .loc 3 743 0
 3648 003a 0E4B     	 ldr r3,.L153+40
 3649 003c 3522     	 mov r2,#53
 3650 003e 1A80     	 strh r2,[r3]
 744:../samuel/samuel_io.c **** 
 745:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3651              	 .loc 3 745 0
 3652 0040 0D4B     	 ldr r3,.L153+44
 3653 0042 0122     	 mov r2,#1
 3654 0044 1A70     	 strb r2,[r3]
 746:../samuel/samuel_io.c ****  }
 3655              	 .loc 3 746 0
 3656 0046 BD46     	 mov sp,r7
 3657              	 
 3658 0048 80BD     	 pop {r7,pc}
 3659              	.L154:
 3660 004a C046     	 .align 2
 3661              	.L153:
 3662 004c 00000000 	 .word node_id
 3663 0050 00000000 	 .word node_id_alt
 3664 0054 00000000 	 .word node_id_16bit
 3665 0058 34120000 	 .word 4660
 3666 005c 00000000 	 .word val_Pow_Nom
 3667 0060 00000000 	 .word val_Pow_max
 3668 0064 00000000 	 .word val_Spannung_min
 3669 0068 00000000 	 .word val_Spannung_max
 3670 006c 68100000 	 .word 4200
 3671 0070 00000000 	 .word led_grupp
 3672 0074 00000000 	 .word led_Strom
 3673 0078 00000000 	 .word node_id_neu
 3674              	 .cfi_endproc
 3675              	.LFE325:
 3677              	 .section .text.sysiniValueB4,"ax",%progbits
 3678              	 .align 2
 3679              	 .global sysiniValueB4
 3680              	 .code 16
 3681              	 .thumb_func
 3683              	sysiniValueB4:
 3684              	.LFB326:
 747:../samuel/samuel_io.c **** 
 748:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 749:../samuel/samuel_io.c ****  {
 3685              	 .loc 3 749 0
 3686              	 .cfi_startproc
 3687 0000 80B5     	 push {r7,lr}
 3688              	.LCFI89:
 3689              	 .cfi_def_cfa_offset 8
 3690              	 .cfi_offset 7,-8
 3691              	 .cfi_offset 14,-4
 3692 0002 00AF     	 add r7,sp,#0
 3693              	.LCFI90:
 3694              	 .cfi_def_cfa_register 7
 750:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3695              	 .loc 3 750 0
 3696 0004 264B     	 ldr r3,.L156
 3697 0006 0A22     	 mov r2,#10
 3698 0008 1A70     	 strb r2,[r3]
 751:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3699              	 .loc 3 751 0
 3700 000a 264B     	 ldr r3,.L156+4
 3701 000c 0A22     	 mov r2,#10
 3702 000e 1A70     	 strb r2,[r3]
 752:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3703              	 .loc 3 752 0
 3704 0010 254B     	 ldr r3,.L156+8
 3705 0012 0A22     	 mov r2,#10
 3706 0014 1A70     	 strb r2,[r3]
 753:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3707              	 .loc 3 753 0
 3708 0016 254B     	 ldr r3,.L156+12
 3709 0018 0A22     	 mov r2,#10
 3710 001a 1A70     	 strb r2,[r3]
 754:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3711              	 .loc 3 754 0
 3712 001c 244B     	 ldr r3,.L156+16
 3713 001e 0A22     	 mov r2,#10
 3714 0020 1A80     	 strh r2,[r3]
 755:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3715              	 .loc 3 755 0
 3716 0022 244B     	 ldr r3,.L156+20
 3717 0024 B022     	 mov r2,#176
 3718 0026 1A80     	 strh r2,[r3]
 756:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3719              	 .loc 3 756 0
 3720 0028 234B     	 ldr r3,.L156+24
 3721 002a 0122     	 mov r2,#1
 3722 002c 5242     	 neg r2,r2
 3723 002e 1A80     	 strh r2,[r3]
 757:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3724              	 .loc 3 757 0
 3725 0030 224B     	 ldr r3,.L156+28
 3726 0032 0022     	 mov r2,#0
 3727 0034 1A80     	 strh r2,[r3]
 758:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3728              	 .loc 3 758 0
 3729 0036 224B     	 ldr r3,.L156+32
 3730 0038 FA22     	 mov r2,#250
 3731 003a 9200     	 lsl r2,r2,#2
 3732 003c 1A80     	 strh r2,[r3]
 759:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3733              	 .loc 3 759 0
 3734 003e 214B     	 ldr r3,.L156+36
 3735 0040 FA22     	 mov r2,#250
 3736 0042 9200     	 lsl r2,r2,#2
 3737 0044 1A80     	 strh r2,[r3]
 760:../samuel/samuel_io.c **** 
 761:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3738              	 .loc 3 761 0
 3739 0046 1B4B     	 ldr r3,.L156+20
 3740 0048 1A88     	 ldrh r2,[r3]
 3741 004a 1F4B     	 ldr r3,.L156+40
 3742 004c 1A80     	 strh r2,[r3]
 762:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3743              	 .loc 3 762 0
 3744 004e 194B     	 ldr r3,.L156+20
 3745 0050 1A88     	 ldrh r2,[r3]
 3746 0052 1E4B     	 ldr r3,.L156+44
 3747 0054 1A80     	 strh r2,[r3]
 763:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3748              	 .loc 3 763 0
 3749 0056 174B     	 ldr r3,.L156+20
 3750 0058 1A88     	 ldrh r2,[r3]
 3751 005a 1D4B     	 ldr r3,.L156+48
 3752 005c 1A80     	 strh r2,[r3]
 764:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3753              	 .loc 3 764 0
 3754 005e 154B     	 ldr r3,.L156+20
 3755 0060 1A88     	 ldrh r2,[r3]
 3756 0062 1C4B     	 ldr r3,.L156+52
 3757 0064 1A80     	 strh r2,[r3]
 765:../samuel/samuel_io.c **** 
 766:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3758              	 .loc 3 766 0
 3759 0066 144B     	 ldr r3,.L156+24
 3760 0068 1B88     	 ldrh r3,[r3]
 3761 006a 1B0A     	 lsr r3,r3,#8
 3762 006c 9AB2     	 uxth r2,r3
 3763 006e 1A4B     	 ldr r3,.L156+56
 3764 0070 1A80     	 strh r2,[r3]
 767:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3765              	 .loc 3 767 0
 3766 0072 114B     	 ldr r3,.L156+24
 3767 0074 1B88     	 ldrh r3,[r3]
 3768 0076 1B0A     	 lsr r3,r3,#8
 3769 0078 9AB2     	 uxth r2,r3
 3770 007a 184B     	 ldr r3,.L156+60
 3771 007c 1A80     	 strh r2,[r3]
 768:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3772              	 .loc 3 768 0
 3773 007e 0E4B     	 ldr r3,.L156+24
 3774 0080 1B88     	 ldrh r3,[r3]
 3775 0082 FF22     	 mov r2,#255
 3776 0084 1340     	 and r3,r2
 3777 0086 9AB2     	 uxth r2,r3
 3778 0088 154B     	 ldr r3,.L156+64
 3779 008a 1A80     	 strh r2,[r3]
 769:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3780              	 .loc 3 769 0
 3781 008c 0A4B     	 ldr r3,.L156+24
 3782 008e 1B88     	 ldrh r3,[r3]
 3783 0090 FF22     	 mov r2,#255
 3784 0092 1340     	 and r3,r2
 3785 0094 9AB2     	 uxth r2,r3
 3786 0096 134B     	 ldr r3,.L156+68
 3787 0098 1A80     	 strh r2,[r3]
 770:../samuel/samuel_io.c ****  }
 3788              	 .loc 3 770 0
 3789 009a BD46     	 mov sp,r7
 3790              	 
 3791 009c 80BD     	 pop {r7,pc}
 3792              	.L157:
 3793 009e C046     	 .align 2
 3794              	.L156:
 3795 00a0 00000000 	 .word Dimm_Gamma
 3796 00a4 00000000 	 .word Dimm_Stufen
 3797 00a8 00000000 	 .word Dimm_StufenGR
 3798 00ac 00000000 	 .word Dimm_Valu
 3799 00b0 00000000 	 .word Smooth_Value
 3800 00b4 00000000 	 .word linearwalk_gen
 3801 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 3802 00bc 00000000 	 .word Reserve_1
 3803 00c0 00000000 	 .word Dimm_Max_WW
 3804 00c4 00000000 	 .word Dimm_Max_CW
 3805 00c8 00000000 	 .word linearwalk_ww1
 3806 00cc 00000000 	 .word linearwalk_ww2
 3807 00d0 00000000 	 .word linearwalk_cw1
 3808 00d4 00000000 	 .word linearwalk_cw2
 3809 00d8 00000000 	 .word Farbe_ww1_Quot
 3810 00dc 00000000 	 .word Farbe_cw1_Quot
 3811 00e0 00000000 	 .word Farbe_ww2_Quot
 3812 00e4 00000000 	 .word Farbe_cw2_Quot
 3813              	 .cfi_endproc
 3814              	.LFE326:
 3816              	 .section .text.sysiniValueB5,"ax",%progbits
 3817              	 .align 2
 3818              	 .global sysiniValueB5
 3819              	 .code 16
 3820              	 .thumb_func
 3822              	sysiniValueB5:
 3823              	.LFB327:
 771:../samuel/samuel_io.c **** 
 772:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 773:../samuel/samuel_io.c ****  {
 3824              	 .loc 3 773 0
 3825              	 .cfi_startproc
 3826 0000 80B5     	 push {r7,lr}
 3827              	.LCFI91:
 3828              	 .cfi_def_cfa_offset 8
 3829              	 .cfi_offset 7,-8
 3830              	 .cfi_offset 14,-4
 3831 0002 00AF     	 add r7,sp,#0
 3832              	.LCFI92:
 3833              	 .cfi_def_cfa_register 7
 774:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 3834              	 .loc 3 774 0
 3835 0004 0E4B     	 ldr r3,.L159
 3836 0006 0522     	 mov r2,#5
 3837 0008 1A70     	 strb r2,[r3]
 775:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 3838              	 .loc 3 775 0
 3839 000a 0E4B     	 ldr r3,.L159+4
 3840 000c 0022     	 mov r2,#0
 3841 000e 1A70     	 strb r2,[r3]
 776:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 3842              	 .loc 3 776 0
 3843 0010 0D4B     	 ldr r3,.L159+8
 3844 0012 0022     	 mov r2,#0
 3845 0014 1A80     	 strh r2,[r3]
 777:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 3846              	 .loc 3 777 0
 3847 0016 0D4B     	 ldr r3,.L159+12
 3848 0018 0D4A     	 ldr r2,.L159+16
 3849 001a 1A80     	 strh r2,[r3]
 778:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 3850              	 .loc 3 778 0
 3851 001c 0D4B     	 ldr r3,.L159+20
 3852 001e 0C4A     	 ldr r2,.L159+16
 3853 0020 1A80     	 strh r2,[r3]
 779:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 3854              	 .loc 3 779 0
 3855 0022 0D4B     	 ldr r3,.L159+24
 3856 0024 0D4A     	 ldr r2,.L159+28
 3857 0026 1A80     	 strh r2,[r3]
 780:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 3858              	 .loc 3 780 0
 3859 0028 0D4B     	 ldr r3,.L159+32
 3860 002a 0C4A     	 ldr r2,.L159+28
 3861 002c 1A80     	 strh r2,[r3]
 781:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 3862              	 .loc 3 781 0
 3863 002e 0D4B     	 ldr r3,.L159+36
 3864 0030 0D4A     	 ldr r2,.L159+40
 3865 0032 1A80     	 strh r2,[r3]
 782:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 3866              	 .loc 3 782 0
 3867 0034 0D4B     	 ldr r3,.L159+44
 3868 0036 0C4A     	 ldr r2,.L159+40
 3869 0038 1A80     	 strh r2,[r3]
 783:../samuel/samuel_io.c ****  }
 3870              	 .loc 3 783 0
 3871 003a BD46     	 mov sp,r7
 3872              	 
 3873 003c 80BD     	 pop {r7,pc}
 3874              	.L160:
 3875 003e C046     	 .align 2
 3876              	.L159:
 3877 0040 00000000 	 .word RegOnOff
 3878 0044 00000000 	 .word RegOnOff2
 3879 0048 00000000 	 .word Reserve_2
 3880 004c 00000000 	 .word dimOff_Ww
 3881 0050 FF0F0000 	 .word 4095
 3882 0054 00000000 	 .word dimOff_Cw
 3883 0058 00000000 	 .word dimNorm1_Ww
 3884 005c FF010000 	 .word 511
 3885 0060 00000000 	 .word dimNorm1_Cw
 3886 0064 00000000 	 .word dimNorm2_Ww
 3887 0068 FF020000 	 .word 767
 3888 006c 00000000 	 .word dimNorm2_Cw
 3889              	 .cfi_endproc
 3890              	.LFE327:
 3892              	 .section .text.bcuInit,"ax",%progbits
 3893              	 .align 2
 3894              	 .global bcuInit
 3895              	 .code 16
 3896              	 .thumb_func
 3898              	bcuInit:
 3899              	.LFB328:
 784:../samuel/samuel_io.c **** 
 785:../samuel/samuel_io.c ****  //-----------------------------------------------
 786:../samuel/samuel_io.c ****  // BCCU Vorgaben
 787:../samuel/samuel_io.c **** 
 788:../samuel/samuel_io.c ****  void bcuInit(void)
 789:../samuel/samuel_io.c ****  {
 3900              	 .loc 3 789 0
 3901              	 .cfi_startproc
 3902 0000 80B5     	 push {r7,lr}
 3903              	.LCFI93:
 3904              	 .cfi_def_cfa_offset 8
 3905              	 .cfi_offset 7,-8
 3906              	 .cfi_offset 14,-4
 3907 0002 00AF     	 add r7,sp,#0
 3908              	.LCFI94:
 3909              	 .cfi_def_cfa_register 7
 790:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 3910              	 .loc 3 790 0
 3911 0004 194B     	 ldr r3,.L171
 3912 0006 1B78     	 ldrb r3,[r3]
 3913 0008 052B     	 cmp r3,#5
 3914 000a 2CD8     	 bhi .L170
 3915 000c 9A00     	 lsl r2,r3,#2
 3916 000e 184B     	 ldr r3,.L171+4
 3917 0010 D318     	 add r3,r2,r3
 3918 0012 1B68     	 ldr r3,[r3]
 3919 0014 9F46     	 mov pc,r3
 3920              	 .section .rodata.bcuInit,"a",%progbits
 3921              	 .align 2
 3922              	.L164:
 3923 0000 66000000 	 .word .L170
 3924 0004 16000000 	 .word .L163
 3925 0008 24000000 	 .word .L165
 3926 000c 32000000 	 .word .L166
 3927 0010 42000000 	 .word .L167
 3928 0014 54000000 	 .word .L168
 3929              	 .section .text.bcuInit
 3930              	.L163:
 791:../samuel/samuel_io.c **** 		{
 792:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 3931              	 .loc 3 792 0
 3932 0016 174B     	 ldr r3,.L171+8
 3933 0018 0022     	 mov r2,#0
 3934 001a 1A80     	 strh r2,[r3]
 793:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 3935              	 .loc 3 793 0
 3936 001c 164B     	 ldr r3,.L171+12
 3937 001e 0022     	 mov r2,#0
 3938 0020 1A80     	 strh r2,[r3]
 794:../samuel/samuel_io.c **** 									break;
 3939              	 .loc 3 794 0
 3940 0022 21E0     	 b .L161
 3941              	.L165:
 795:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 3942              	 .loc 3 795 0
 3943 0024 134B     	 ldr r3,.L171+8
 3944 0026 154A     	 ldr r2,.L171+16
 3945 0028 1A80     	 strh r2,[r3]
 796:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 3946              	 .loc 3 796 0
 3947 002a 134B     	 ldr r3,.L171+12
 3948 002c 134A     	 ldr r2,.L171+16
 3949 002e 1A80     	 strh r2,[r3]
 797:../samuel/samuel_io.c **** 									break;
 3950              	 .loc 3 797 0
 3951 0030 1AE0     	 b .L161
 3952              	.L166:
 798:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 3953              	 .loc 3 798 0
 3954 0032 134B     	 ldr r3,.L171+20
 3955 0034 1A88     	 ldrh r2,[r3]
 3956 0036 0F4B     	 ldr r3,.L171+8
 3957 0038 1A80     	 strh r2,[r3]
 799:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 3958              	 .loc 3 799 0
 3959 003a 124B     	 ldr r3,.L171+24
 3960 003c 1A88     	 ldrh r2,[r3]
 3961 003e 0E4B     	 ldr r3,.L171+12
 3962 0040 1A80     	 strh r2,[r3]
 3963              	.L167:
 800:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 3964              	 .loc 3 800 0
 3965 0042 114B     	 ldr r3,.L171+28
 3966 0044 1A88     	 ldrh r2,[r3]
 3967 0046 0B4B     	 ldr r3,.L171+8
 3968 0048 1A80     	 strh r2,[r3]
 801:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 3969              	 .loc 3 801 0
 3970 004a 104B     	 ldr r3,.L171+32
 3971 004c 1A88     	 ldrh r2,[r3]
 3972 004e 0A4B     	 ldr r3,.L171+12
 3973 0050 1A80     	 strh r2,[r3]
 802:../samuel/samuel_io.c **** 									break;
 3974              	 .loc 3 802 0
 3975 0052 09E0     	 b .L161
 3976              	.L168:
 803:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 3977              	 .loc 3 803 0
 3978 0054 0E4B     	 ldr r3,.L171+36
 3979 0056 1A88     	 ldrh r2,[r3]
 3980 0058 064B     	 ldr r3,.L171+8
 3981 005a 1A80     	 strh r2,[r3]
 804:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 3982              	 .loc 3 804 0
 3983 005c 0D4B     	 ldr r3,.L171+40
 3984 005e 1A88     	 ldrh r2,[r3]
 3985 0060 054B     	 ldr r3,.L171+12
 3986 0062 1A80     	 strh r2,[r3]
 805:../samuel/samuel_io.c **** 									break;
 3987              	 .loc 3 805 0
 3988 0064 00E0     	 b .L161
 3989              	.L170:
 806:../samuel/samuel_io.c **** 		default:
 807:../samuel/samuel_io.c **** 									break;
 3990              	 .loc 3 807 0
 3991 0066 C046     	 mov r8,r8
 3992              	.L161:
 808:../samuel/samuel_io.c **** 		}
 809:../samuel/samuel_io.c **** 
 810:../samuel/samuel_io.c ****  }
 3993              	 .loc 3 810 0
 3994 0068 BD46     	 mov sp,r7
 3995              	 
 3996 006a 80BD     	 pop {r7,pc}
 3997              	.L172:
 3998              	 .align 2
 3999              	.L171:
 4000 006c 00000000 	 .word RegOnOff
 4001 0070 00000000 	 .word .L164
 4002 0074 00000000 	 .word dimAkt_Ww
 4003 0078 00000000 	 .word dimAkt_Cw
 4004 007c FF7F0000 	 .word 32767
 4005 0080 00000000 	 .word dimNorm1_Ww
 4006 0084 00000000 	 .word dimNorm1_Cw
 4007 0088 00000000 	 .word dimNorm2_Ww
 4008 008c 00000000 	 .word dimNorm2_Cw
 4009 0090 00000000 	 .word dimOff_Ww
 4010 0094 00000000 	 .word dimOff_Cw
 4011              	 .cfi_endproc
 4012              	.LFE328:
 4014              	 .section .text.bcuUebergabe,"ax",%progbits
 4015              	 .align 2
 4016              	 .global bcuUebergabe
 4017              	 .code 16
 4018              	 .thumb_func
 4020              	bcuUebergabe:
 4021              	.LFB329:
 811:../samuel/samuel_io.c ****  //----------------------------------
 812:../samuel/samuel_io.c **** 
 813:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 814:../samuel/samuel_io.c ****  {
 4022              	 .loc 3 814 0
 4023              	 .cfi_startproc
 4024 0000 80B5     	 push {r7,lr}
 4025              	.LCFI95:
 4026              	 .cfi_def_cfa_offset 8
 4027              	 .cfi_offset 7,-8
 4028              	 .cfi_offset 14,-4
 4029 0002 00AF     	 add r7,sp,#0
 4030              	.LCFI96:
 4031              	 .cfi_def_cfa_register 7
 815:../samuel/samuel_io.c **** 
 816:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 817:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 818:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 819:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 820:../samuel/samuel_io.c **** 
 821:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 4032              	 .loc 3 821 0
 4033 0004 204B     	 ldr r3,.L174
 4034 0006 1B88     	 ldrh r3,[r3]
 4035 0008 1A1C     	 mov r2,r3
 4036 000a 204B     	 ldr r3,.L174+4
 4037 000c 181C     	 mov r0,r3
 4038 000e 111C     	 mov r1,r2
 4039 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 822:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 4040              	 .loc 3 822 0
 4041 0014 1E4B     	 ldr r3,.L174+8
 4042 0016 1B88     	 ldrh r3,[r3]
 4043 0018 1A1C     	 mov r2,r3
 4044 001a 1E4B     	 ldr r3,.L174+12
 4045 001c 181C     	 mov r0,r3
 4046 001e 111C     	 mov r1,r2
 4047 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 823:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 4048              	 .loc 3 823 0
 4049 0024 1C4B     	 ldr r3,.L174+16
 4050 0026 1B88     	 ldrh r3,[r3]
 4051 0028 1A1C     	 mov r2,r3
 4052 002a 1C4B     	 ldr r3,.L174+20
 4053 002c 181C     	 mov r0,r3
 4054 002e 111C     	 mov r1,r2
 4055 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 824:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 4056              	 .loc 3 824 0
 4057 0034 1A4B     	 ldr r3,.L174+24
 4058 0036 1B88     	 ldrh r3,[r3]
 4059 0038 1A1C     	 mov r2,r3
 4060 003a 1A4B     	 ldr r3,.L174+28
 4061 003c 181C     	 mov r0,r3
 4062 003e 111C     	 mov r1,r2
 4063 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 825:../samuel/samuel_io.c **** 
 826:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 4064              	 .loc 3 826 0
 4065 0044 184B     	 ldr r3,.L174+32
 4066 0046 1B88     	 ldrh r3,[r3]
 4067 0048 1A1C     	 mov r2,r3
 4068 004a 104B     	 ldr r3,.L174+4
 4069 004c 181C     	 mov r0,r3
 4070 004e 111C     	 mov r1,r2
 4071 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 827:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 4072              	 .loc 3 827 0
 4073 0054 154B     	 ldr r3,.L174+36
 4074 0056 1B88     	 ldrh r3,[r3]
 4075 0058 1A1C     	 mov r2,r3
 4076 005a 0E4B     	 ldr r3,.L174+12
 4077 005c 181C     	 mov r0,r3
 4078 005e 111C     	 mov r1,r2
 4079 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 828:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 4080              	 .loc 3 828 0
 4081 0064 124B     	 ldr r3,.L174+40
 4082 0066 1B88     	 ldrh r3,[r3]
 4083 0068 1A1C     	 mov r2,r3
 4084 006a 0C4B     	 ldr r3,.L174+20
 4085 006c 181C     	 mov r0,r3
 4086 006e 111C     	 mov r1,r2
 4087 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 829:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 4088              	 .loc 3 829 0
 4089 0074 0F4B     	 ldr r3,.L174+44
 4090 0076 1B88     	 ldrh r3,[r3]
 4091 0078 1A1C     	 mov r2,r3
 4092 007a 0A4B     	 ldr r3,.L174+28
 4093 007c 181C     	 mov r0,r3
 4094 007e 111C     	 mov r1,r2
 4095 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 830:../samuel/samuel_io.c **** 
 831:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 832:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 833:../samuel/samuel_io.c **** 
 834:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 835:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 836:../samuel/samuel_io.c ****  }
 4096              	 .loc 3 836 0
 4097 0084 BD46     	 mov sp,r7
 4098              	 
 4099 0086 80BD     	 pop {r7,pc}
 4100              	.L175:
 4101              	 .align 2
 4102              	.L174:
 4103 0088 00000000 	 .word Farbe_ww2
 4104 008c 00000000 	 .word PDM_BCCU_0
 4105 0090 00000000 	 .word Farbe_cw2
 4106 0094 00000000 	 .word PDM_BCCU_1
 4107 0098 00000000 	 .word Farbe_ww1
 4108 009c 00000000 	 .word PDM_BCCU_2
 4109 00a0 00000000 	 .word Farbe_cw1
 4110 00a4 00000000 	 .word PDM_BCCU_3
 4111 00a8 00000000 	 .word linearwalk_ww2
 4112 00ac 00000000 	 .word linearwalk_cw2
 4113 00b0 00000000 	 .word linearwalk_ww1
 4114 00b4 00000000 	 .word linearwalk_cw1
 4115              	 .cfi_endproc
 4116              	.LFE329:
 4118              	 .section .text.bcuAktBerechnung,"ax",%progbits
 4119              	 .align 2
 4120              	 .global bcuAktBerechnung
 4121              	 .code 16
 4122              	 .thumb_func
 4124              	bcuAktBerechnung:
 4125              	.LFB330:
 837:../samuel/samuel_io.c ****  //----------------------------------
 838:../samuel/samuel_io.c **** 
 839:../samuel/samuel_io.c **** 
 840:../samuel/samuel_io.c ****  //----------------------------------
 841:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 842:../samuel/samuel_io.c ****   {
 4126              	 .loc 3 842 0
 4127              	 .cfi_startproc
 4128 0000 80B5     	 push {r7,lr}
 4129              	.LCFI97:
 4130              	 .cfi_def_cfa_offset 8
 4131              	 .cfi_offset 7,-8
 4132              	 .cfi_offset 14,-4
 4133 0002 82B0     	 sub sp,sp,#8
 4134              	.LCFI98:
 4135              	 .cfi_def_cfa_offset 16
 4136 0004 00AF     	 add r7,sp,#0
 4137              	.LCFI99:
 4138              	 .cfi_def_cfa_register 7
 843:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 844:../samuel/samuel_io.c **** 
 845:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4139              	 .loc 3 845 0
 4140 0006 284B     	 ldr r3,.L177
 4141 0008 1B88     	 ldrh r3,[r3]
 4142 000a 1B0A     	 lsr r3,r3,#8
 4143 000c 9AB2     	 uxth r2,r3
 4144 000e 274B     	 ldr r3,.L177+4
 4145 0010 1A80     	 strh r2,[r3]
 846:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4146              	 .loc 3 846 0
 4147 0012 254B     	 ldr r3,.L177
 4148 0014 1B88     	 ldrh r3,[r3]
 4149 0016 1B0A     	 lsr r3,r3,#8
 4150 0018 9AB2     	 uxth r2,r3
 4151 001a 254B     	 ldr r3,.L177+8
 4152 001c 1A80     	 strh r2,[r3]
 847:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4153              	 .loc 3 847 0
 4154 001e 224B     	 ldr r3,.L177
 4155 0020 1B88     	 ldrh r3,[r3]
 4156 0022 FF22     	 mov r2,#255
 4157 0024 1340     	 and r3,r2
 4158 0026 9AB2     	 uxth r2,r3
 4159 0028 224B     	 ldr r3,.L177+12
 4160 002a 1A80     	 strh r2,[r3]
 848:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4161              	 .loc 3 848 0
 4162 002c 1E4B     	 ldr r3,.L177
 4163 002e 1B88     	 ldrh r3,[r3]
 4164 0030 FF22     	 mov r2,#255
 4165 0032 1340     	 and r3,r2
 4166 0034 9AB2     	 uxth r2,r3
 4167 0036 204B     	 ldr r3,.L177+16
 4168 0038 1A80     	 strh r2,[r3]
 849:../samuel/samuel_io.c **** 
 850:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4169              	 .loc 3 850 0
 4170 003a 204B     	 ldr r3,.L177+20
 4171 003c 1B88     	 ldrh r3,[r3]
 4172 003e 1A1C     	 mov r2,r3
 4173 0040 1A4B     	 ldr r3,.L177+4
 4174 0042 1B88     	 ldrh r3,[r3]
 4175 0044 5343     	 mul r3,r2
 4176 0046 7B60     	 str r3,[r7,#4]
 851:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4177              	 .loc 3 851 0
 4178 0048 7B68     	 ldr r3,[r7,#4]
 4179 004a 1B0A     	 lsr r3,r3,#8
 4180 004c 1B09     	 lsr r3,r3,#4
 4181 004e 9AB2     	 uxth r2,r3
 4182 0050 1B4B     	 ldr r3,.L177+24
 4183 0052 1A80     	 strh r2,[r3]
 852:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4184              	 .loc 3 852 0
 4185 0054 194B     	 ldr r3,.L177+20
 4186 0056 1B88     	 ldrh r3,[r3]
 4187 0058 1A1C     	 mov r2,r3
 4188 005a 164B     	 ldr r3,.L177+12
 4189 005c 1B88     	 ldrh r3,[r3]
 4190 005e 5343     	 mul r3,r2
 4191 0060 7B60     	 str r3,[r7,#4]
 853:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4192              	 .loc 3 853 0
 4193 0062 7B68     	 ldr r3,[r7,#4]
 4194 0064 1B0A     	 lsr r3,r3,#8
 4195 0066 1B09     	 lsr r3,r3,#4
 4196 0068 9AB2     	 uxth r2,r3
 4197 006a 164B     	 ldr r3,.L177+28
 4198 006c 1A80     	 strh r2,[r3]
 854:../samuel/samuel_io.c **** 
 855:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4199              	 .loc 3 855 0
 4200 006e 164B     	 ldr r3,.L177+32
 4201 0070 1B88     	 ldrh r3,[r3]
 4202 0072 1A1C     	 mov r2,r3
 4203 0074 0E4B     	 ldr r3,.L177+8
 4204 0076 1B88     	 ldrh r3,[r3]
 4205 0078 5343     	 mul r3,r2
 4206 007a 7B60     	 str r3,[r7,#4]
 856:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4207              	 .loc 3 856 0
 4208 007c 7B68     	 ldr r3,[r7,#4]
 4209 007e 1B0A     	 lsr r3,r3,#8
 4210 0080 1B09     	 lsr r3,r3,#4
 4211 0082 9AB2     	 uxth r2,r3
 4212 0084 114B     	 ldr r3,.L177+36
 4213 0086 1A80     	 strh r2,[r3]
 857:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4214              	 .loc 3 857 0
 4215 0088 0F4B     	 ldr r3,.L177+32
 4216 008a 1B88     	 ldrh r3,[r3]
 4217 008c 1A1C     	 mov r2,r3
 4218 008e 0A4B     	 ldr r3,.L177+16
 4219 0090 1B88     	 ldrh r3,[r3]
 4220 0092 5343     	 mul r3,r2
 4221 0094 7B60     	 str r3,[r7,#4]
 858:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4222              	 .loc 3 858 0
 4223 0096 7B68     	 ldr r3,[r7,#4]
 4224 0098 1B0A     	 lsr r3,r3,#8
 4225 009a 1B09     	 lsr r3,r3,#4
 4226 009c 9AB2     	 uxth r2,r3
 4227 009e 0C4B     	 ldr r3,.L177+40
 4228 00a0 1A80     	 strh r2,[r3]
 859:../samuel/samuel_io.c ****   }
 4229              	 .loc 3 859 0
 4230 00a2 BD46     	 mov sp,r7
 4231 00a4 02B0     	 add sp,sp,#8
 4232              	 
 4233 00a6 80BD     	 pop {r7,pc}
 4234              	.L178:
 4235              	 .align 2
 4236              	.L177:
 4237 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4238 00ac 00000000 	 .word Farbe_ww1_Quot
 4239 00b0 00000000 	 .word Farbe_cw1_Quot
 4240 00b4 00000000 	 .word Farbe_ww2_Quot
 4241 00b8 00000000 	 .word Farbe_cw2_Quot
 4242 00bc 00000000 	 .word dimAkt_Ww
 4243 00c0 00000000 	 .word Farbe_ww1
 4244 00c4 00000000 	 .word Farbe_ww2
 4245 00c8 00000000 	 .word dimAkt_Cw
 4246 00cc 00000000 	 .word Farbe_cw1
 4247 00d0 00000000 	 .word Farbe_cw2
 4248              	 .cfi_endproc
 4249              	.LFE330:
 4251              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4252              	 .align 2
 4253              	 .global bcudirAktBerechnung
 4254              	 .code 16
 4255              	 .thumb_func
 4257              	bcudirAktBerechnung:
 4258              	.LFB331:
 860:../samuel/samuel_io.c **** 
 861:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 862:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 863:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 864:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 865:../samuel/samuel_io.c **** 
 866:../samuel/samuel_io.c ****   {
 4259              	 .loc 3 866 0
 4260              	 .cfi_startproc
 4261 0000 80B5     	 push {r7,lr}
 4262              	.LCFI100:
 4263              	 .cfi_def_cfa_offset 8
 4264              	 .cfi_offset 7,-8
 4265              	 .cfi_offset 14,-4
 4266 0002 82B0     	 sub sp,sp,#8
 4267              	.LCFI101:
 4268              	 .cfi_def_cfa_offset 16
 4269 0004 00AF     	 add r7,sp,#0
 4270              	.LCFI102:
 4271              	 .cfi_def_cfa_register 7
 867:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 868:../samuel/samuel_io.c **** 
 869:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4272              	 .loc 3 869 0
 4273 0006 2A4B     	 ldr r3,.L180
 4274 0008 0122     	 mov r2,#1
 4275 000a 5242     	 neg r2,r2
 4276 000c 1A80     	 strh r2,[r3]
 870:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4277              	 .loc 3 870 0
 4278 000e 284B     	 ldr r3,.L180
 4279 0010 1B88     	 ldrh r3,[r3]
 4280 0012 1B0A     	 lsr r3,r3,#8
 4281 0014 9AB2     	 uxth r2,r3
 4282 0016 274B     	 ldr r3,.L180+4
 4283 0018 1A80     	 strh r2,[r3]
 871:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4284              	 .loc 3 871 0
 4285 001a 254B     	 ldr r3,.L180
 4286 001c 1B88     	 ldrh r3,[r3]
 4287 001e 1B0A     	 lsr r3,r3,#8
 4288 0020 9AB2     	 uxth r2,r3
 4289 0022 254B     	 ldr r3,.L180+8
 4290 0024 1A80     	 strh r2,[r3]
 872:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4291              	 .loc 3 872 0
 4292 0026 224B     	 ldr r3,.L180
 4293 0028 1B88     	 ldrh r3,[r3]
 4294 002a FF22     	 mov r2,#255
 4295 002c 1340     	 and r3,r2
 4296 002e 9AB2     	 uxth r2,r3
 4297 0030 224B     	 ldr r3,.L180+12
 4298 0032 1A80     	 strh r2,[r3]
 873:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4299              	 .loc 3 873 0
 4300 0034 1E4B     	 ldr r3,.L180
 4301 0036 1B88     	 ldrh r3,[r3]
 4302 0038 FF22     	 mov r2,#255
 4303 003a 1340     	 and r3,r2
 4304 003c 9AB2     	 uxth r2,r3
 4305 003e 204B     	 ldr r3,.L180+16
 4306 0040 1A80     	 strh r2,[r3]
 874:../samuel/samuel_io.c **** 
 875:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4307              	 .loc 3 875 0
 4308 0042 204B     	 ldr r3,.L180+20
 4309 0044 1B88     	 ldrh r3,[r3]
 4310 0046 1A1C     	 mov r2,r3
 4311 0048 1A4B     	 ldr r3,.L180+4
 4312 004a 1B88     	 ldrh r3,[r3]
 4313 004c 5343     	 mul r3,r2
 4314 004e 7B60     	 str r3,[r7,#4]
 876:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4315              	 .loc 3 876 0
 4316 0050 7B68     	 ldr r3,[r7,#4]
 4317 0052 1B0A     	 lsr r3,r3,#8
 4318 0054 1B09     	 lsr r3,r3,#4
 4319 0056 9AB2     	 uxth r2,r3
 4320 0058 1B4B     	 ldr r3,.L180+24
 4321 005a 1A80     	 strh r2,[r3]
 877:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4322              	 .loc 3 877 0
 4323 005c 194B     	 ldr r3,.L180+20
 4324 005e 1B88     	 ldrh r3,[r3]
 4325 0060 1A1C     	 mov r2,r3
 4326 0062 164B     	 ldr r3,.L180+12
 4327 0064 1B88     	 ldrh r3,[r3]
 4328 0066 5343     	 mul r3,r2
 4329 0068 7B60     	 str r3,[r7,#4]
 878:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4330              	 .loc 3 878 0
 4331 006a 7B68     	 ldr r3,[r7,#4]
 4332 006c 1B0A     	 lsr r3,r3,#8
 4333 006e 1B09     	 lsr r3,r3,#4
 4334 0070 9AB2     	 uxth r2,r3
 4335 0072 164B     	 ldr r3,.L180+28
 4336 0074 1A80     	 strh r2,[r3]
 879:../samuel/samuel_io.c **** 
 880:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4337              	 .loc 3 880 0
 4338 0076 164B     	 ldr r3,.L180+32
 4339 0078 1B88     	 ldrh r3,[r3]
 4340 007a 1A1C     	 mov r2,r3
 4341 007c 0E4B     	 ldr r3,.L180+8
 4342 007e 1B88     	 ldrh r3,[r3]
 4343 0080 5343     	 mul r3,r2
 4344 0082 7B60     	 str r3,[r7,#4]
 881:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4345              	 .loc 3 881 0
 4346 0084 7B68     	 ldr r3,[r7,#4]
 4347 0086 1B0A     	 lsr r3,r3,#8
 4348 0088 1B09     	 lsr r3,r3,#4
 4349 008a 9AB2     	 uxth r2,r3
 4350 008c 114B     	 ldr r3,.L180+36
 4351 008e 1A80     	 strh r2,[r3]
 882:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4352              	 .loc 3 882 0
 4353 0090 0F4B     	 ldr r3,.L180+32
 4354 0092 1B88     	 ldrh r3,[r3]
 4355 0094 1A1C     	 mov r2,r3
 4356 0096 0A4B     	 ldr r3,.L180+16
 4357 0098 1B88     	 ldrh r3,[r3]
 4358 009a 5343     	 mul r3,r2
 4359 009c 7B60     	 str r3,[r7,#4]
 883:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4360              	 .loc 3 883 0
 4361 009e 7B68     	 ldr r3,[r7,#4]
 4362 00a0 1B0A     	 lsr r3,r3,#8
 4363 00a2 1B09     	 lsr r3,r3,#4
 4364 00a4 9AB2     	 uxth r2,r3
 4365 00a6 0C4B     	 ldr r3,.L180+40
 4366 00a8 1A80     	 strh r2,[r3]
 884:../samuel/samuel_io.c ****   }
 4367              	 .loc 3 884 0
 4368 00aa BD46     	 mov sp,r7
 4369 00ac 02B0     	 add sp,sp,#8
 4370              	 
 4371 00ae 80BD     	 pop {r7,pc}
 4372              	.L181:
 4373              	 .align 2
 4374              	.L180:
 4375 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4376 00b4 00000000 	 .word Farbe_ww1_Quot
 4377 00b8 00000000 	 .word Farbe_cw1_Quot
 4378 00bc 00000000 	 .word Farbe_ww2_Quot
 4379 00c0 00000000 	 .word Farbe_cw2_Quot
 4380 00c4 00000000 	 .word dimAkt_Ww
 4381 00c8 00000000 	 .word Farbe_ww1
 4382 00cc 00000000 	 .word Farbe_ww2
 4383 00d0 00000000 	 .word dimAkt_Cw
 4384 00d4 00000000 	 .word Farbe_cw1
 4385 00d8 00000000 	 .word Farbe_cw2
 4386              	 .cfi_endproc
 4387              	.LFE331:
 4389              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4390              	 .align 2
 4391              	 .global bcuColorBerechnung
 4392              	 .code 16
 4393              	 .thumb_func
 4395              	bcuColorBerechnung:
 4396              	.LFB332:
 885:../samuel/samuel_io.c ****  //----------------------------------
 886:../samuel/samuel_io.c **** 
 887:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 888:../samuel/samuel_io.c ****   {
 4397              	 .loc 3 888 0
 4398              	 .cfi_startproc
 4399 0000 80B5     	 push {r7,lr}
 4400              	.LCFI103:
 4401              	 .cfi_def_cfa_offset 8
 4402              	 .cfi_offset 7,-8
 4403              	 .cfi_offset 14,-4
 4404 0002 82B0     	 sub sp,sp,#8
 4405              	.LCFI104:
 4406              	 .cfi_def_cfa_offset 16
 4407 0004 00AF     	 add r7,sp,#0
 4408              	.LCFI105:
 4409              	 .cfi_def_cfa_register 7
 889:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 890:../samuel/samuel_io.c **** 
 891:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4410              	 .loc 3 891 0
 4411 0006 1E4B     	 ldr r3,.L183
 4412 0008 0122     	 mov r2,#1
 4413 000a 5242     	 neg r2,r2
 4414 000c 1A80     	 strh r2,[r3]
 892:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4415              	 .loc 3 892 0
 4416 000e 1C4B     	 ldr r3,.L183
 4417 0010 1B88     	 ldrh r3,[r3]
 4418 0012 1A1C     	 mov r2,r3
 4419 0014 1B4B     	 ldr r3,.L183+4
 4420 0016 1B88     	 ldrh r3,[r3]
 4421 0018 5343     	 mul r3,r2
 4422 001a 7B60     	 str r3,[r7,#4]
 893:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4423              	 .loc 3 893 0
 4424 001c 7B68     	 ldr r3,[r7,#4]
 4425 001e 1B0C     	 lsr r3,r3,#16
 4426 0020 7B60     	 str r3,[r7,#4]
 894:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4427              	 .loc 3 894 0
 4428 0022 194B     	 ldr r3,.L183+8
 4429 0024 1B88     	 ldrh r3,[r3]
 4430 0026 1A1C     	 mov r2,r3
 4431 0028 184B     	 ldr r3,.L183+12
 4432 002a 9B1A     	 sub r3,r3,r2
 4433 002c 1A1C     	 mov r2,r3
 4434 002e 7B68     	 ldr r3,[r7,#4]
 4435 0030 5343     	 mul r3,r2
 4436 0032 7B60     	 str r3,[r7,#4]
 895:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4437              	 .loc 3 895 0
 4438 0034 7B68     	 ldr r3,[r7,#4]
 4439 0036 1B0C     	 lsr r3,r3,#16
 4440 0038 7B60     	 str r3,[r7,#4]
 896:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4441              	 .loc 3 896 0
 4442 003a 7B68     	 ldr r3,[r7,#4]
 4443 003c 9AB2     	 uxth r2,r3
 4444 003e 104B     	 ldr r3,.L183
 4445 0040 1A80     	 strh r2,[r3]
 897:../samuel/samuel_io.c **** 
 898:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4446              	 .loc 3 898 0
 4447 0042 134B     	 ldr r3,.L183+16
 4448 0044 0122     	 mov r2,#1
 4449 0046 5242     	 neg r2,r2
 4450 0048 1A80     	 strh r2,[r3]
 899:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4451              	 .loc 3 899 0
 4452 004a 114B     	 ldr r3,.L183+16
 4453 004c 1B88     	 ldrh r3,[r3]
 4454 004e 1A1C     	 mov r2,r3
 4455 0050 0C4B     	 ldr r3,.L183+4
 4456 0052 1B88     	 ldrh r3,[r3]
 4457 0054 5343     	 mul r3,r2
 4458 0056 7B60     	 str r3,[r7,#4]
 900:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4459              	 .loc 3 900 0
 4460 0058 7B68     	 ldr r3,[r7,#4]
 4461 005a 1B0C     	 lsr r3,r3,#16
 4462 005c 7B60     	 str r3,[r7,#4]
 901:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4463              	 .loc 3 901 0
 4464 005e 0A4B     	 ldr r3,.L183+8
 4465 0060 1B88     	 ldrh r3,[r3]
 4466 0062 1A1C     	 mov r2,r3
 4467 0064 7B68     	 ldr r3,[r7,#4]
 4468 0066 5343     	 mul r3,r2
 4469 0068 7B60     	 str r3,[r7,#4]
 902:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4470              	 .loc 3 902 0
 4471 006a 7B68     	 ldr r3,[r7,#4]
 4472 006c 1B0C     	 lsr r3,r3,#16
 4473 006e 7B60     	 str r3,[r7,#4]
 903:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4474              	 .loc 3 903 0
 4475 0070 7B68     	 ldr r3,[r7,#4]
 4476 0072 9AB2     	 uxth r2,r3
 4477 0074 064B     	 ldr r3,.L183+16
 4478 0076 1A80     	 strh r2,[r3]
 904:../samuel/samuel_io.c ****   }
 4479              	 .loc 3 904 0
 4480 0078 BD46     	 mov sp,r7
 4481 007a 02B0     	 add sp,sp,#8
 4482              	 
 4483 007c 80BD     	 pop {r7,pc}
 4484              	.L184:
 4485 007e C046     	 .align 2
 4486              	.L183:
 4487 0080 00000000 	 .word dimAkt_Ww
 4488 0084 00000000 	 .word Brightness_Gen
 4489 0088 00000000 	 .word ColorQuot_Gen
 4490 008c FFFF0000 	 .word 65535
 4491 0090 00000000 	 .word dimAkt_Cw
 4492              	 .cfi_endproc
 4493              	.LFE332:
 4495              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4496              	 .align 2
 4497              	 .global Offlight_zahler_write
 4498              	 .code 16
 4499              	 .thumb_func
 4501              	Offlight_zahler_write:
 4502              	.LFB333:
 905:../samuel/samuel_io.c ****  //----------------------------------
 906:../samuel/samuel_io.c **** 
 907:../samuel/samuel_io.c **** 
 908:../samuel/samuel_io.c **** 
 909:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 910:../samuel/samuel_io.c ****  {
 4503              	 .loc 3 910 0
 4504              	 .cfi_startproc
 4505 0000 80B5     	 push {r7,lr}
 4506              	.LCFI106:
 4507              	 .cfi_def_cfa_offset 8
 4508              	 .cfi_offset 7,-8
 4509              	 .cfi_offset 14,-4
 4510 0002 82B0     	 sub sp,sp,#8
 4511              	.LCFI107:
 4512              	 .cfi_def_cfa_offset 16
 4513 0004 00AF     	 add r7,sp,#0
 4514              	.LCFI108:
 4515              	 .cfi_def_cfa_register 7
 911:../samuel/samuel_io.c ****      uint8_t a;
 912:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4516              	 .loc 3 912 0
 4517 0006 3B4B     	 ldr r3,.L191
 4518 0008 1B78     	 ldrb r3,[r3]
 4519 000a 052B     	 cmp r3,#5
 4520 000c 00D0     	 beq .LCB3753
 4521 000e 6EE0     	 b .L185
 4522              	.LCB3753:
 913:../samuel/samuel_io.c **** 	 {
 914:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4523              	 .loc 3 914 0
 4524 0010 394B     	 ldr r3,.L191+4
 4525 0012 1B88     	 ldrh r3,[r3]
 4526 0014 0133     	 add r3,r3,#1
 4527 0016 9AB2     	 uxth r2,r3
 4528 0018 374B     	 ldr r3,.L191+4
 4529 001a 1A80     	 strh r2,[r3]
 915:../samuel/samuel_io.c **** 
 916:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4530              	 .loc 3 916 0
 4531 001c 364B     	 ldr r3,.L191+4
 4532 001e 1B88     	 ldrh r3,[r3]
 4533 0020 3B2B     	 cmp r3,#59
 4534 0022 64D9     	 bls .L185
 917:../samuel/samuel_io.c **** 	  {
 918:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4535              	 .loc 3 918 0
 4536 0024 344B     	 ldr r3,.L191+4
 4537 0026 0022     	 mov r2,#0
 4538 0028 1A80     	 strh r2,[r3]
 919:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4539              	 .loc 3 919 0
 4540 002a FFF7FEFF 	 bl read_off_light_EEprom
 4541 002e 021C     	 mov r2,r0
 4542 0030 FB1D     	 add r3,r7,#7
 4543 0032 1A70     	 strb r2,[r3]
 920:../samuel/samuel_io.c **** 			if (a == 0x03)
 4544              	 .loc 3 920 0
 4545 0034 FB1D     	 add r3,r7,#7
 4546 0036 1B78     	 ldrb r3,[r3]
 4547 0038 032B     	 cmp r3,#3
 4548 003a 52D1     	 bne .L187
 921:../samuel/samuel_io.c **** 			{
 922:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4549              	 .loc 3 922 0
 4550 003c 2F4B     	 ldr r3,.L191+8
 4551 003e 1A88     	 ldrh r2,[r3]
 4552 0040 2F4B     	 ldr r3,.L191+12
 4553 0042 1A80     	 strh r2,[r3]
 923:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4554              	 .loc 3 923 0
 4555 0044 2F4B     	 ldr r3,.L191+16
 4556 0046 1A88     	 ldrh r2,[r3]
 4557 0048 2F4B     	 ldr r3,.L191+20
 4558 004a 1A80     	 strh r2,[r3]
 924:../samuel/samuel_io.c **** 
 925:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4559              	 .loc 3 925 0
 4560 004c 2F4B     	 ldr r3,.L191+24
 4561 004e 1B79     	 ldrb r3,[r3,#4]
 4562 0050 9AB2     	 uxth r2,r3
 4563 0052 2B4B     	 ldr r3,.L191+12
 4564 0054 1B88     	 ldrh r3,[r3]
 4565 0056 1B0A     	 lsr r3,r3,#8
 4566 0058 9BB2     	 uxth r3,r3
 4567 005a 9A42     	 cmp r2,r3
 4568 005c 20D1     	 bne .L188
 4569              	 .loc 3 925 0 is_stmt 0 discriminator 1
 4570 005e 2B4B     	 ldr r3,.L191+24
 4571 0060 5B79     	 ldrb r3,[r3,#5]
 4572 0062 1A1C     	 mov r2,r3
 4573 0064 264B     	 ldr r3,.L191+12
 4574 0066 1B88     	 ldrh r3,[r3]
 4575 0068 191C     	 mov r1,r3
 4576 006a FF23     	 mov r3,#255
 4577 006c 0B40     	 and r3,r1
 4578 006e 9A42     	 cmp r2,r3
 4579 0070 16D1     	 bne .L188
 4580              	 .loc 3 925 0 discriminator 2
 4581 0072 264B     	 ldr r3,.L191+24
 4582 0074 9B79     	 ldrb r3,[r3,#6]
 4583 0076 9AB2     	 uxth r2,r3
 4584 0078 234B     	 ldr r3,.L191+20
 4585 007a 1B88     	 ldrh r3,[r3]
 4586 007c 1B0A     	 lsr r3,r3,#8
 4587 007e 9BB2     	 uxth r3,r3
 4588 0080 9A42     	 cmp r2,r3
 4589 0082 0DD1     	 bne .L188
 4590              	 .loc 3 925 0 discriminator 3
 4591 0084 214B     	 ldr r3,.L191+24
 4592 0086 DB79     	 ldrb r3,[r3,#7]
 4593 0088 1A1C     	 mov r2,r3
 4594 008a 1F4B     	 ldr r3,.L191+20
 4595 008c 1B88     	 ldrh r3,[r3]
 4596 008e 191C     	 mov r1,r3
 4597 0090 FF23     	 mov r3,#255
 4598 0092 0B40     	 and r3,r1
 4599 0094 9A42     	 cmp r2,r3
 4600 0096 03D1     	 bne .L188
 926:../samuel/samuel_io.c **** 			 {
 927:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4601              	 .loc 3 927 0 is_stmt 1
 4602 0098 174B     	 ldr r3,.L191+4
 4603 009a 0022     	 mov r2,#0
 4604 009c 1A80     	 strh r2,[r3]
 4605 009e 23E0     	 b .L190
 4606              	.L188:
 928:../samuel/samuel_io.c **** 			 }
 929:../samuel/samuel_io.c **** 			 else{
 930:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4607              	 .loc 3 930 0
 4608 00a0 174B     	 ldr r3,.L191+12
 4609 00a2 1B88     	 ldrh r3,[r3]
 4610 00a4 1B0A     	 lsr r3,r3,#8
 4611 00a6 9BB2     	 uxth r3,r3
 4612 00a8 DAB2     	 uxtb r2,r3
 4613 00aa 184B     	 ldr r3,.L191+24
 4614 00ac 1A71     	 strb r2,[r3,#4]
 931:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4615              	 .loc 3 931 0
 4616 00ae 144B     	 ldr r3,.L191+12
 4617 00b0 1B88     	 ldrh r3,[r3]
 4618 00b2 DAB2     	 uxtb r2,r3
 4619 00b4 154B     	 ldr r3,.L191+24
 4620 00b6 5A71     	 strb r2,[r3,#5]
 932:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4621              	 .loc 3 932 0
 4622 00b8 134B     	 ldr r3,.L191+20
 4623 00ba 1B88     	 ldrh r3,[r3]
 4624 00bc 1B0A     	 lsr r3,r3,#8
 4625 00be 9BB2     	 uxth r3,r3
 4626 00c0 DAB2     	 uxtb r2,r3
 4627 00c2 124B     	 ldr r3,.L191+24
 4628 00c4 9A71     	 strb r2,[r3,#6]
 933:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4629              	 .loc 3 933 0
 4630 00c6 104B     	 ldr r3,.L191+20
 4631 00c8 1B88     	 ldrh r3,[r3]
 4632 00ca DAB2     	 uxtb r2,r3
 4633 00cc 0F4B     	 ldr r3,.L191+24
 4634 00ce DA71     	 strb r2,[r3,#7]
 934:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4635              	 .loc 3 934 0
 4636 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4637 00d4 021C     	 mov r2,r0
 4638 00d6 FB1D     	 add r3,r7,#7
 4639 00d8 1A70     	 strb r2,[r3]
 935:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4640              	 .loc 3 935 0
 4641 00da 074B     	 ldr r3,.L191+4
 4642 00dc 0022     	 mov r2,#0
 4643 00de 1A80     	 strh r2,[r3]
 4644 00e0 02E0     	 b .L190
 4645              	.L187:
 936:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 937:../samuel/samuel_io.c **** 			 }
 938:../samuel/samuel_io.c **** 			}
 939:../samuel/samuel_io.c **** 			else {
 940:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4646              	 .loc 3 940 0
 4647 00e2 054B     	 ldr r3,.L191+4
 4648 00e4 1E22     	 mov r2,#30
 4649 00e6 1A80     	 strh r2,[r3]
 4650              	.L190:
 941:../samuel/samuel_io.c **** 			}
 942:../samuel/samuel_io.c **** 
 943:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4651              	 .loc 3 943 0
 4652 00e8 034B     	 ldr r3,.L191+4
 4653 00ea 0022     	 mov r2,#0
 4654 00ec 1A80     	 strh r2,[r3]
 4655              	.L185:
 944:../samuel/samuel_io.c **** 	  }//zahler_offlight
 945:../samuel/samuel_io.c **** 	 }//regonoff
 946:../samuel/samuel_io.c ****  }
 4656              	 .loc 3 946 0
 4657 00ee BD46     	 mov sp,r7
 4658 00f0 02B0     	 add sp,sp,#8
 4659              	 
 4660 00f2 80BD     	 pop {r7,pc}
 4661              	.L192:
 4662              	 .align 2
 4663              	.L191:
 4664 00f4 00000000 	 .word RegOnOff
 4665 00f8 00000000 	 .word zahler_offlight
 4666 00fc 00000000 	 .word dimAkt_Ww
 4667 0100 00000000 	 .word dimOff_Ww
 4668 0104 00000000 	 .word dimAkt_Cw
 4669 0108 00000000 	 .word dimOff_Cw
 4670 010c 00000000 	 .word ReadBuffer2
 4671              	 .cfi_endproc
 4672              	.LFE333:
 4674              	 .section .text.plus39V_stop,"ax",%progbits
 4675              	 .align 2
 4676              	 .global plus39V_stop
 4677              	 .code 16
 4678              	 .thumb_func
 4680              	plus39V_stop:
 4681              	.LFB334:
 947:../samuel/samuel_io.c **** 
 948:../samuel/samuel_io.c ****  //----------------------------------------------------
 949:../samuel/samuel_io.c **** 
 950:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
 951:../samuel/samuel_io.c ****   {
 4682              	 .loc 3 951 0
 4683              	 .cfi_startproc
 4684 0000 80B5     	 push {r7,lr}
 4685              	.LCFI109:
 4686              	 .cfi_def_cfa_offset 8
 4687              	 .cfi_offset 7,-8
 4688              	 .cfi_offset 14,-4
 4689 0002 00AF     	 add r7,sp,#0
 4690              	.LCFI110:
 4691              	 .cfi_def_cfa_register 7
 952:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 953:../samuel/samuel_io.c **** 
 954:../samuel/samuel_io.c **** 
 955:../samuel/samuel_io.c ****   }
 4692              	 .loc 3 955 0
 4693 0004 BD46     	 mov sp,r7
 4694              	 
 4695 0006 80BD     	 pop {r7,pc}
 4696              	 .cfi_endproc
 4697              	.LFE334:
 4699              	 .section .text.plus39V_start,"ax",%progbits
 4700              	 .align 2
 4701              	 .global plus39V_start
 4702              	 .code 16
 4703              	 .thumb_func
 4705              	plus39V_start:
 4706              	.LFB335:
 956:../samuel/samuel_io.c **** 
 957:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
 958:../samuel/samuel_io.c ****   {
 4707              	 .loc 3 958 0
 4708              	 .cfi_startproc
 4709 0000 80B5     	 push {r7,lr}
 4710              	.LCFI111:
 4711              	 .cfi_def_cfa_offset 8
 4712              	 .cfi_offset 7,-8
 4713              	 .cfi_offset 14,-4
 4714 0002 00AF     	 add r7,sp,#0
 4715              	.LCFI112:
 4716              	 .cfi_def_cfa_register 7
 959:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 960:../samuel/samuel_io.c **** 
 961:../samuel/samuel_io.c ****   }
 4717              	 .loc 3 961 0
 4718 0004 BD46     	 mov sp,r7
 4719              	 
 4720 0006 80BD     	 pop {r7,pc}
 4721              	 .cfi_endproc
 4722              	.LFE335:
 4724              	 .section .text.Time1msec,"ax",%progbits
 4725              	 .align 2
 4726              	 .global Time1msec
 4727              	 .code 16
 4728              	 .thumb_func
 4730              	Time1msec:
 4731              	.LFB336:
 962:../samuel/samuel_io.c **** 
 963:../samuel/samuel_io.c ****  //----------------------------------
 964:../samuel/samuel_io.c **** 
 965:../samuel/samuel_io.c ****   void Time1msec (void) //
 966:../samuel/samuel_io.c ****   {
 4732              	 .loc 3 966 0
 4733              	 .cfi_startproc
 4734 0000 80B5     	 push {r7,lr}
 4735              	.LCFI113:
 4736              	 .cfi_def_cfa_offset 8
 4737              	 .cfi_offset 7,-8
 4738              	 .cfi_offset 14,-4
 4739 0002 00AF     	 add r7,sp,#0
 4740              	.LCFI114:
 4741              	 .cfi_def_cfa_register 7
 967:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4742              	 .loc 3 967 0
 4743 0004 024B     	 ldr r3,.L196
 4744 0006 181C     	 mov r0,r3
 4745 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
 968:../samuel/samuel_io.c **** 
 969:../samuel/samuel_io.c ****   }
 4746              	 .loc 3 969 0
 4747 000c BD46     	 mov sp,r7
 4748              	 
 4749 000e 80BD     	 pop {r7,pc}
 4750              	.L197:
 4751              	 .align 2
 4752              	.L196:
 4753 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4754              	 .cfi_endproc
 4755              	.LFE336:
 4757              	 .section .text.Time20msec,"ax",%progbits
 4758              	 .align 2
 4759              	 .global Time20msec
 4760              	 .code 16
 4761              	 .thumb_func
 4763              	Time20msec:
 4764              	.LFB337:
 970:../samuel/samuel_io.c ****   //----------------------------------
 971:../samuel/samuel_io.c **** 
 972:../samuel/samuel_io.c ****    void Time20msec (void) //
 973:../samuel/samuel_io.c ****    {
 4765              	 .loc 3 973 0
 4766              	 .cfi_startproc
 4767 0000 80B5     	 push {r7,lr}
 4768              	.LCFI115:
 4769              	 .cfi_def_cfa_offset 8
 4770              	 .cfi_offset 7,-8
 4771              	 .cfi_offset 14,-4
 4772 0002 00AF     	 add r7,sp,#0
 4773              	.LCFI116:
 4774              	 .cfi_def_cfa_register 7
 974:../samuel/samuel_io.c **** 
 975:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 976:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 4775              	 .loc 3 976 0
 4776 0004 364B     	 ldr r3,.L205
 4777 0006 1B88     	 ldrh r3,[r3]
 4778 0008 1A1C     	 mov r2,r3
 4779 000a 131C     	 mov r3,r2
 4780 000c 5B00     	 lsl r3,r3,#1
 4781 000e 9B18     	 add r3,r3,r2
 4782 0010 344A     	 ldr r2,.L205+4
 4783 0012 1288     	 ldrh r2,[r2]
 4784 0014 9B18     	 add r3,r3,r2
 4785 0016 002B     	 cmp r3,#0
 4786 0018 00DA     	 bge .L199
 4787 001a 0333     	 add r3,r3,#3
 4788              	.L199:
 4789 001c 9B10     	 asr r3,r3,#2
 4790 001e 9AB2     	 uxth r2,r3
 4791 0020 2F4B     	 ldr r3,.L205
 4792 0022 1A80     	 strh r2,[r3]
 977:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 4793              	 .loc 3 977 0
 4794 0024 304B     	 ldr r3,.L205+8
 4795 0026 1B88     	 ldrh r3,[r3]
 4796 0028 1A1C     	 mov r2,r3
 4797 002a 131C     	 mov r3,r2
 4798 002c 5B00     	 lsl r3,r3,#1
 4799 002e 9B18     	 add r3,r3,r2
 4800 0030 2E4A     	 ldr r2,.L205+12
 4801 0032 1288     	 ldrh r2,[r2]
 4802 0034 9B18     	 add r3,r3,r2
 4803 0036 002B     	 cmp r3,#0
 4804 0038 00DA     	 bge .L200
 4805 003a 0333     	 add r3,r3,#3
 4806              	.L200:
 4807 003c 9B10     	 asr r3,r3,#2
 4808 003e 9AB2     	 uxth r2,r3
 4809 0040 294B     	 ldr r3,.L205+8
 4810 0042 1A80     	 strh r2,[r3]
 978:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 4811              	 .loc 3 978 0
 4812 0044 2A4B     	 ldr r3,.L205+16
 4813 0046 1B88     	 ldrh r3,[r3]
 4814 0048 1A1C     	 mov r2,r3
 4815 004a 131C     	 mov r3,r2
 4816 004c 5B00     	 lsl r3,r3,#1
 4817 004e 9B18     	 add r3,r3,r2
 4818 0050 284A     	 ldr r2,.L205+20
 4819 0052 1288     	 ldrh r2,[r2]
 4820 0054 9B18     	 add r3,r3,r2
 4821 0056 002B     	 cmp r3,#0
 4822 0058 00DA     	 bge .L201
 4823 005a 0333     	 add r3,r3,#3
 4824              	.L201:
 4825 005c 9B10     	 asr r3,r3,#2
 4826 005e 9AB2     	 uxth r2,r3
 4827 0060 234B     	 ldr r3,.L205+16
 4828 0062 1A80     	 strh r2,[r3]
 979:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 4829              	 .loc 3 979 0
 4830 0064 244B     	 ldr r3,.L205+24
 4831 0066 1B88     	 ldrh r3,[r3]
 4832 0068 1A1C     	 mov r2,r3
 4833 006a 131C     	 mov r3,r2
 4834 006c 5B00     	 lsl r3,r3,#1
 4835 006e 9B18     	 add r3,r3,r2
 4836 0070 224A     	 ldr r2,.L205+28
 4837 0072 1288     	 ldrh r2,[r2]
 4838 0074 9B18     	 add r3,r3,r2
 4839 0076 002B     	 cmp r3,#0
 4840 0078 00DA     	 bge .L202
 4841 007a 0333     	 add r3,r3,#3
 4842              	.L202:
 4843 007c 9B10     	 asr r3,r3,#2
 4844 007e 9AB2     	 uxth r2,r3
 4845 0080 1D4B     	 ldr r3,.L205+24
 4846 0082 1A80     	 strh r2,[r3]
 980:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 4847              	 .loc 3 980 0
 4848 0084 1E4B     	 ldr r3,.L205+32
 4849 0086 1B88     	 ldrh r3,[r3]
 4850 0088 0133     	 add r3,r3,#1
 4851 008a 9AB2     	 uxth r2,r3
 4852 008c 1C4B     	 ldr r3,.L205+32
 4853 008e 1A80     	 strh r2,[r3]
 981:../samuel/samuel_io.c **** 
 982:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 4854              	 .loc 3 982 0
 4855 0090 1B4B     	 ldr r3,.L205+32
 4856 0092 1B88     	 ldrh r3,[r3]
 4857 0094 052B     	 cmp r3,#5
 4858 0096 21D9     	 bls .L198
 983:../samuel/samuel_io.c ****       {
 984:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
 985:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 4859              	 .loc 3 985 0
 4860 0098 194B     	 ldr r3,.L205+32
 4861 009a 0022     	 mov r2,#0
 4862 009c 1A80     	 strh r2,[r3]
 986:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 4863              	 .loc 3 986 0
 4864 009e 104B     	 ldr r3,.L205
 4865 00a0 1B88     	 ldrh r3,[r3]
 4866 00a2 184A     	 ldr r2,.L205+36
 4867 00a4 9342     	 cmp r3,r2
 4868 00a6 09D8     	 bhi .L204
 987:../samuel/samuel_io.c ****      	     {
 988:../samuel/samuel_io.c ****      	     plus39V_stop();
 4869              	 .loc 3 988 0
 4870 00a8 FFF7FEFF 	 bl plus39V_stop
 989:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 4871              	 .loc 3 989 0
 4872 00ac 164B     	 ldr r3,.L205+40
 4873 00ae 0022     	 mov r2,#0
 4874 00b0 1A70     	 strb r2,[r3]
 990:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 4875              	 .loc 3 990 0
 4876 00b2 164B     	 ldr r3,.L205+44
 4877 00b4 181C     	 mov r0,r3
 4878 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4879 00ba 0FE0     	 b .L198
 4880              	.L204:
 991:../samuel/samuel_io.c ****      	     }
 992:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 4881              	 .loc 3 992 0
 4882 00bc 084B     	 ldr r3,.L205
 4883 00be 1A88     	 ldrh r2,[r3]
 4884 00c0 BF23     	 mov r3,#191
 4885 00c2 1B01     	 lsl r3,r3,#4
 4886 00c4 9A42     	 cmp r2,r3
 4887 00c6 09D9     	 bls .L198
 993:../samuel/samuel_io.c ****  			 {
 994:../samuel/samuel_io.c ****      	     plus39V_start();
 4888              	 .loc 3 994 0
 4889 00c8 FFF7FEFF 	 bl plus39V_start
 995:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 4890              	 .loc 3 995 0
 4891 00cc 0E4B     	 ldr r3,.L205+40
 4892 00ce 1B78     	 ldrb r3,[r3]
 4893 00d0 002B     	 cmp r3,#0
 4894 00d2 03D1     	 bne .L198
 996:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 4895              	 .loc 3 996 0
 4896 00d4 0D4B     	 ldr r3,.L205+44
 4897 00d6 181C     	 mov r0,r3
 4898 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4899              	.L198:
 997:../samuel/samuel_io.c ****  			 }
 998:../samuel/samuel_io.c ****       }
 999:../samuel/samuel_io.c **** 
1000:../samuel/samuel_io.c **** 
1001:../samuel/samuel_io.c ****    }
 4900              	 .loc 3 1001 0
 4901 00dc BD46     	 mov sp,r7
 4902              	 
 4903 00de 80BD     	 pop {r7,pc}
 4904              	.L206:
 4905              	 .align 2
 4906              	.L205:
 4907 00e0 00000000 	 .word resultA2
 4908 00e4 00000000 	 .word resultAalt
 4909 00e8 00000000 	 .word resultB2
 4910 00ec 00000000 	 .word resultBalt
 4911 00f0 00000000 	 .word resultC2
 4912 00f4 00000000 	 .word resultCalt
 4913 00f8 00000000 	 .word resultD2
 4914 00fc 00000000 	 .word resultDalt
 4915 0100 00000000 	 .word adc_ready20m
 4916 0104 9F0B0000 	 .word 2975
 4917 0108 00000000 	 .word B_nextLedOff
 4918 010c 00000000 	 .word VCC_LED_shtdwn
 4919              	 .cfi_endproc
 4920              	.LFE337:
 4922              	 .section .text.firstuartBack,"ax",%progbits
 4923              	 .align 2
 4924              	 .global firstuartBack
 4925              	 .code 16
 4926              	 .thumb_func
 4928              	firstuartBack:
 4929              	.LFB338:
1002:../samuel/samuel_io.c ****   //------------------------------
1003:../samuel/samuel_io.c **** 
1004:../samuel/samuel_io.c ****    void firstuartBack (void) //
1005:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 4930              	 .loc 3 1005 0
 4931              	 .cfi_startproc
 4932 0000 98B5     	 push {r3,r4,r7,lr}
 4933              	.LCFI117:
 4934              	 .cfi_def_cfa_offset 16
 4935              	 .cfi_offset 3,-16
 4936              	 .cfi_offset 4,-12
 4937              	 .cfi_offset 7,-8
 4938              	 .cfi_offset 14,-4
 4939 0002 00AF     	 add r7,sp,#0
 4940              	.LCFI118:
 4941              	 .cfi_def_cfa_register 7
 4942              	 .loc 3 1005 0
 4943 0004 174B     	 ldr r3,.L209
 4944 0006 1B78     	 ldrb r3,[r3]
 4945 0008 002B     	 cmp r3,#0
 4946 000a 29D1     	 bne .L207
1006:../samuel/samuel_io.c ****    	   {
1007:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 4947              	 .loc 3 1007 0
 4948 000c FFF7FEFF 	 bl new_data_HalloBack
1008:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 4949              	 .loc 3 1008 0
 4950 0010 154B     	 ldr r3,.L209+4
 4951 0012 3022     	 mov r2,#48
 4952 0014 5A71     	 strb r2,[r3,#5]
1009:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 4953              	 .loc 3 1009 0
 4954 0016 154B     	 ldr r3,.L209+8
 4955 0018 1B88     	 ldrh r3,[r3]
 4956 001a 1B0A     	 lsr r3,r3,#8
 4957 001c 9BB2     	 uxth r3,r3
 4958 001e DAB2     	 uxtb r2,r3
 4959 0020 114B     	 ldr r3,.L209+4
 4960 0022 9A71     	 strb r2,[r3,#6]
1010:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 4961              	 .loc 3 1010 0
 4962 0024 114B     	 ldr r3,.L209+8
 4963 0026 1B88     	 ldrh r3,[r3]
 4964 0028 DAB2     	 uxtb r2,r3
 4965 002a 0F4B     	 ldr r3,.L209+4
 4966 002c DA71     	 strb r2,[r3,#7]
1011:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 4967              	 .loc 3 1011 0
 4968 002e 104B     	 ldr r3,.L209+12
 4969 0030 1B88     	 ldrh r3,[r3]
 4970 0032 1B0A     	 lsr r3,r3,#8
 4971 0034 9BB2     	 uxth r3,r3
 4972 0036 DAB2     	 uxtb r2,r3
 4973 0038 0B4B     	 ldr r3,.L209+4
 4974 003a 1A72     	 strb r2,[r3,#8]
1012:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 4975              	 .loc 3 1012 0
 4976 003c 0C4B     	 ldr r3,.L209+12
 4977 003e 1B88     	 ldrh r3,[r3]
 4978 0040 DAB2     	 uxtb r2,r3
 4979 0042 094B     	 ldr r3,.L209+4
 4980 0044 5A72     	 strb r2,[r3,#9]
1013:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 4981              	 .loc 3 1013 0
 4982 0046 0B4B     	 ldr r3,.L209+16
 4983 0048 1B78     	 ldrb r3,[r3]
 4984 004a 1C1C     	 mov r4,r3
 4985 004c 0A4A     	 ldr r2,.L209+20
 4986 004e 064B     	 ldr r3,.L209+4
 4987 0050 101C     	 mov r0,r2
 4988 0052 191C     	 mov r1,r3
 4989 0054 221C     	 mov r2,r4
 4990 0056 FFF7FEFF 	 bl UART_Transmit
1014:../samuel/samuel_io.c ****    	   B_first_uart=1;
 4991              	 .loc 3 1014 0
 4992 005a 024B     	 ldr r3,.L209
 4993 005c 0122     	 mov r2,#1
 4994 005e 1A70     	 strb r2,[r3]
 4995              	.L207:
1015:../samuel/samuel_io.c ****    	   }
1016:../samuel/samuel_io.c ****    }
 4996              	 .loc 3 1016 0
 4997 0060 BD46     	 mov sp,r7
 4998              	 
 4999 0062 98BD     	 pop {r3,r4,r7,pc}
 5000              	.L210:
 5001              	 .align 2
 5002              	.L209:
 5003 0064 00000000 	 .word B_first_uart
 5004 0068 00000000 	 .word new_data
 5005 006c 00000000 	 .word Ser_NrH
 5006 0070 00000000 	 .word Ser_NrL
 5007 0074 00000000 	 .word transmit_buf_size
 5008 0078 00000000 	 .word UART_1
 5009              	 .cfi_endproc
 5010              	.LFE338:
 5012              	 .text
 5013              	.Letext0:
 5014              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5015              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5016              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 5017              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc1_gpio.h"
 5018              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc_usic.h"
 5019              	 .file 9 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc_uart.h"
 5020              	 .file 10 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/UART/uart.h"
 5021              	 .file 11 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 5022              	 .file 12 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc_vadc.h"
 5023              	 .file 13 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 5024              	 .file 14 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc_bccu.h"
 5025              	 .file 15 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 5026              	 .file 16 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIM_BCCU/dim_bccu.h"
 5027              	 .file 17 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 5028              	 .file 18 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 5029              	 .file 19 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 5030              	 .file 20 "../samuel/samuel_io.h"
 5031              	 .file 21 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5032              	 .file 22 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/UART/uart_extern.h"
 5033              	 .file 23 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 5034              	 .file 24 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 5035              	 .file 25 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 5036              	 .file 26 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4501   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:4928   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:732    .text.lightprog01:000001c8 $d
    {standard input}:739    .text.light_aus:00000000 $t
    {standard input}:744    .text.light_aus:00000000 light_aus
    {standard input}:4257   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:4020   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:798    .text.light_aus:00000048 $d
    {standard input}:808    .text.analog_start:00000000 $t
    {standard input}:813    .text.analog_start:00000000 analog_start
    {standard input}:833    .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:838    .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:858    .text.new_data_fill:00000000 $t
    {standard input}:863    .text.new_data_fill:00000000 new_data_fill
    {standard input}:930    .text.new_data_fill:00000050 $d
    {standard input}:936    .text.new_data_unbekanntBack:00000000 $t
    {standard input}:941    .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:1010   .text.new_data_unbekanntBack:00000054 $d
    {standard input}:1017   .text.new_data_BroadcastBack:00000000 $t
    {standard input}:1022   .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:1103   .text.new_data_BroadcastBack:0000006c $d
    {standard input}:1112   .text.new_data_analog1Back:00000000 $t
    {standard input}:1117   .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1198   .text.new_data_analog1Back:0000006c $d
    {standard input}:1207   .text.new_data_analog2Back:00000000 $t
    {standard input}:1212   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1293   .text.new_data_analog2Back:0000006c $d
    {standard input}:1302   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1307   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1388   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1397   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1402   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1493   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1504   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1509   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1590   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1599   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1604   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1685   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1694   .text.new_data_HalloBack:00000000 $t
    {standard input}:1699   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1768   .text.new_data_HalloBack:00000054 $d
    {standard input}:1775   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:1780   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:1866   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:1876   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:1881   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:1990   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:2001   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:2006   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:2097   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:2107   .text.new_data_SerNrBack:00000000 $t
    {standard input}:2112   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2193   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2202   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2207   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2344   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2352   .text.clearEpromBuffer:00000000 $t
    {standard input}:2357   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2454   .text.clearEpromBuffer:00000080 $d
    {standard input}:2462   .text.fillEpromBuffer:00000000 $t
    {standard input}:2467   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2513   .text.fillEpromBuffer:00000034 $d
    {standard input}:2519   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2524   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2572   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2578   .text.readAllEEprom:00000000 $t
    {standard input}:2583   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:2823   .text.readAllEEprom:00000194 $d
    {standard input}:2847   .text.readSerNrEEprom:00000000 $t
    {standard input}:2852   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:2903   .text.readSerNrEEprom:00000044 $d
    {standard input}:2910   .text.readNodeIdEEprom:00000000 $t
    {standard input}:2915   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:2966   .text.readNodeIdEEprom:00000044 $d
    {standard input}:2973   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:2978   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:3029   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:3036   .text.read_off_light_EEprom:00000000 $t
    {standard input}:3041   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:3092   .text.read_off_light_EEprom:00000044 $d
    {standard input}:3099   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:3104   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3173   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3181   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3186   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3255   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3263   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3268   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3337   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3345   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3350   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3419   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3427   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3432   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3501   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3509   .text.sysiniValueB1:00000000 $t
    {standard input}:3514   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3579   .text.sysiniValueB1:00000050 $d
    {standard input}:3595   .text.sysiniValueB2:00000000 $t
    {standard input}:3600   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3662   .text.sysiniValueB2:0000004c $d
    {standard input}:3678   .text.sysiniValueB4:00000000 $t
    {standard input}:3683   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:3795   .text.sysiniValueB4:000000a0 $d
    {standard input}:3817   .text.sysiniValueB5:00000000 $t
    {standard input}:3822   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:3877   .text.sysiniValueB5:00000040 $d
    {standard input}:3893   .text.bcuInit:00000000 $t
    {standard input}:3898   .text.bcuInit:00000000 bcuInit
    {standard input}:3921   .rodata.bcuInit:00000000 $d
    {standard input}:4000   .text.bcuInit:0000006c $d
    {standard input}:4015   .text.bcuUebergabe:00000000 $t
    {standard input}:4103   .text.bcuUebergabe:00000088 $d
    {standard input}:4119   .text.bcuAktBerechnung:00000000 $t
    {standard input}:4124   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4237   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4252   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4375   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4390   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4395   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4487   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4496   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4664   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4675   .text.plus39V_stop:00000000 $t
    {standard input}:4680   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4700   .text.plus39V_start:00000000 $t
    {standard input}:4705   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4725   .text.Time1msec:00000000 $t
    {standard input}:4730   .text.Time1msec:00000000 Time1msec
    {standard input}:4753   .text.Time1msec:00000010 $d
    {standard input}:4758   .text.Time20msec:00000000 $t
    {standard input}:4763   .text.Time20msec:00000000 Time20msec
    {standard input}:4907   .text.Time20msec:000000e0 $d
    {standard input}:4923   .text.firstuartBack:00000000 $t
    {standard input}:5003   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
