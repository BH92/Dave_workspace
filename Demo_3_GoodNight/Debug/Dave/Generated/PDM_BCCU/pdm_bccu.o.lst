   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "pdm_bccu.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_BCCU_StartLinearWalk,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_BCCU_StartLinearWalk:
  23              	.LFB53:
  24              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc_bccu.h"
   1:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @file xmc_bccu.h
   3:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * 2015-02-19:
  40:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * 2015-05-08:
  44:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - Minor bug fix in XMC_BCCU_ClearEventFlag().
  45:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - New APIs are added: XMC_BCCU_DIM_ReadDimDivider(), XMC_BCCU_DIM_GetDimCurve(), XMC_BCCU_Is
  46:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  47:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * 2015-06-20:
  48:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  50:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * <b>Detailed description of file:</b><br>
  51:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * APIs for the functional blocks of BCCU have been defined:<br>
  52:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -- GLOBAL configuration <br>
  53:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration <br>
  54:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #ifndef XMC_BCCU_H
  60:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #define XMC_BCCU_H
  61:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
  62:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
  63:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * HEADER FILES
  64:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
  65:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #include <xmc_common.h>
  66:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
  67:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
  68:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @addtogroup XMClib XMC Peripheral Library
  69:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @{
  70:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
  71:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
  72:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
  73:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @addtogroup BCCU
  74:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @brief Brightness and Color Control Unit (BCCU) driver for the XMC1 microcontroller family.
  75:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  76:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *   The Brightness and Color Control Unit (BCCU) is a dimming control peripheral for LED lighting 
  77:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * module can be used to control multiple LED channels. Every channel generates one-bit sigma-delta
  78:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * user adjustable 12-bit average value. The dimming engine changes the brightness gradually (expon
  79:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * natural to the human eye. It supports color control by adjusting the relative intensity of selec
  80:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * linear walk scheme for smooth color changes. It also supports high-power multi-channel LED lamps
  81:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * the bitstream. The optional packer which decreases the average rate of output switching by enfor
  82:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * The BCCU module generates two trigger signals to the ADC (BCCU_TRIGOUT0 and BCCU_TRIGOU1) to sta
  83:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * synchronized manner. The module can also be used as a multi-channel digital-analog converter wit
  84:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * outputs. The BCCU module supports 3 independent dimming engines, 9 independent channels, Trap fu
  85:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * triggering modes.
  86:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
  87:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * The driver is divided into global control (BCCU), channel control (BCCU_CH) and dimming control 
  88:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * 
  89:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * BCCU features:
  90:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configuration structure XMC_BCCU_GLOBAL_CONFIG_t and initialization function XMC_BCCU_GlobalI
  91:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring of clock settings (Fast clock, Bit clock and Dimming clock). XMC_BCCU_SetF
  92:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# XMC_BCCU_SelectBitClock(), XMC_BCCU_SetDimClockPrescaler().
  93:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring global trigger settings. XMC_BCCU_ConfigGlobalTrigger()
  94:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows enabling multiple channels together. XMC_BCCU_ConcurrentEnableChannels()
  95:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows enabling single channel. XMC_BCCU_EnableChannel()
  96:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring global dimming level. XMC_BCCU_SetGlobalDimmingLevel()
  97:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Starts linear walk for multiple channels together. XMC_BCCU_ConcurrentStartLinearWalk().
  98:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Starts linear walk for single channel. XMC_BCCU_StartLinearWalk().
  99:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Starts dimming for multiple dimming engines together. XMC_BCCU_ConcurrentStartDimming().
 100:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Starts dimming for single dimming engine. XMC_BCCU_StartDimming().
 101:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 102:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * BCCU_CH features:
 103:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configuration structure (XMC_BCCU_CH_t and initialization function XMC_BCCU_CH_Init()
 104:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows selecting dimming engine. XMC_BCCU_CH_SelectDimEngine().
 105:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows setting target channel intensity. XMC_BCCU_CH_SetTargetIntensity().
 106:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows knowing the status of linear walk completion. XMC_BCCU_IsLinearWalkComplete()
 107:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows setting flicker watchdog. XMC_BCCU_CH_EnableFlickerWatchdog().
 108:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring packer settings. XMC_BCCU_CH_EnablePacker(), XMC_BCCU_CH_SetPackerThreshol
 109:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerOffCompare(), XMC_BCCU_CH_SetPackerOffCounte(), XMC_BCCU_CH_SetPackerOnCoun
 110:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows selecting dimming bypass. XMC_BCCU_CH_DisableDimmingBypass()
 111:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 112:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * BCCU_DIM features:
 113:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configuration structure (XMC_BCCU_DIM_t and initialization function XMC_BCCU_DIM_Init()
 114:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows setting target dimming engine intensity. XMC_BCCU_DIM_SetTargetDimmingLevel().
 115:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DIM_SetTargetDimmingLevel
 116:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows knowing the status of dimming completion. XMC_BCCU_IsDimmingFinished()
 117:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring dimming divider. XMC_BCCU_DIM_SetDimDivider()
 118:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Allows configuring dimming curve. XMC_BCCU_DIM_ConfigDimCurve()
 119:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * 
 120:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * <b> Recommended programming sequence: </b>
 121:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Set output passive and active levels using XMC_BCCU_ConcurrentSetOutputPassiveLevel() or XMC_
 122:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Initializes global features using XMC_BCCU_GlobalInit()
 123:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Initializes channel features using XMC_BCCU_CH_Init()
 124:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Initializes dimming engine using XMC_BCCU_DIM_Init()
 125:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Enable channels using XMC_BCCU_ConcurrentEnableChannels() or XMC_BCCU_EnableChannel()
 126:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Enable dimming engines using XMC_BCCU_ConcurrentEnableDimmingEngine() or XMC_BCCU_EnableDimmi
 127:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configure channel linear walk prescaler using XMC_BCCU_CH_SetLinearWalkPrescaler()
 128:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Configure dimming divider using XMC_BCCU_DIM_SetDimDivider()
 129:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Set target intensities of channels using XMC_BCCU_CH_SetTargetIntensity()
 130:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Set target dim levels of dimming engines using XMC_BCCU_DIM_SetTargetDimmingLevel()
 131:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Start linear walk of the channels using XMC_BCCU_ConcurrentStartLinearWalk() or XMC_BCCU_Star
 132:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Start dimming of the dimming engines using XMC_BCCU_ConcurrentStartDimming() or XMC_BCCU_Star
 133:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Check the status of linear walk completion using XMC_BCCU_IsLinearWalkComplete()
 134:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * -# Check the status of dimming completion XMC_BCCU_IsDimmingFinished()
 135:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @{
 136:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 137:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #if defined (BCCU0)
 139:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
 141:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * MACROS
 142:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
 143:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 144:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
 145:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * ENUMS
 146:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 148:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Defines the status of BCCU driver, to verify the related API calls. Use type \a XMC_BCCU_STATUS_
 149:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 150:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  typedef enum {
 151:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_STATUS_SUCCESS = 0U, /**< Operation completed successfully */
 152:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_STATUS_ERROR = 1U, /**< Operation has some errors */
 153:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_STATUS_t;
 154:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  
 155:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select bit clock mode.
 157:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 158:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 159:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_BCLK_MODE_NORMAL = 0U, /**< Normal Mode: Bit clock runs at 1/4 of fast clock */
 160:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_BCLK_MODE_FAST = 1U, /**< Fast Mode: Bit clock runs at same as fast clock */
 161:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_BCLK_MODE_t;
 162:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 163:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 164:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trigger mode.
 165:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 166:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 167:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGMODE0 = 0U, /**< Mode0: Trigger on Any Channel using OR logic */
 168:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGMODE1 = 1U, /**< Mode1: Trigger on Active channel using round-robin*/
 169:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRIGMODE_t;
 170:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 171:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 172:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trigger delay, and only be used if Bit clock in Normal mode
 173:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 174:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 175:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGDELAY_NO_DELAY = 0U, /**< BCCU trigger occurs on channel trigger(without delay) */
 176:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGDELAY_QUARTER_BIT = 1U, /**< BCCU trigger occurs on 1/4 bit time delayed after channe
 177:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRIGDELAY_HALF_BIT = 2U, /**< BCCU trigger occurs on 1/2 bit time delayed after channel t
 178:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRIGDELAY_t;
 179:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 181:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select suspend mode
 182:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 184:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_SUSPEND_MODE_IGNORE = 0U, /**< Request ignored, and module cannot get suspended */
 185:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_SUSPEND_MODE_FREEZE = 1U, /**< All running channels gets stopped, and freeze into a last 
 186:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   */
 187:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_SUSPEND_MODE_SAFE_FREEZE = 2U, /**< All running channels gets stopped, and freeze into a 
 188:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   stop) */
 189:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_SUSPEND_MODE_t;
 190:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 191:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 192:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trap edge
 193:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 194:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 195:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAPEDGE_RISING = 0U, /**< Trap on rising edge of the BCCU.TRAPL signal */
 196:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAPEDGE_FALLING = 1U, /**< Trap on falling edge of the BCCU.TRAPL signal */
 197:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRAPEDGE_t;
 198:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 199:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 200:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to enable/disable the events.
 201:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * The members can be combined using 'OR' operator for multiple selection.<br>
 202:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 203:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 204:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_TRIGGER0 = 0x1U, /**< Trigger 0 event */
 205:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_TRIGGER1 = 0x2U, /**< Trigger 1 event */
 206:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_FIFOFULL = 0x4U, /**< FIFO Full event */
 207:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_FIFOEMPTY = 0x8U, /**< FIFO Empty event */
 208:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_TRAP = 0x10U, /**< Trap event */
 209:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_EVENT_t;
 210:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 211:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 212:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to know the status of the event flags.
 213:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * The members can be combined using 'OR' operator for multiple selection.<br>
 214:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 215:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 216:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_TRIGGER0 = 0x1U, /**< Trigger 0 Event flag status */
 217:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_TRIGGER1 = 0x2U, /**< Trigger 1 Event flag status */
 218:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_FIFOFULL = 0x4U, /**< FIFO Full Event flag status */
 219:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_FIFOEMPTY = 0x8U, /**< FIFO Empty Event flag status */
 220:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_TRAP = 0x10U, /**< Trap Event flag status (Without Trap Set) */
 221:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_EVENT_STATUS_TRAP_STATE = 0x40U, /**< Trap state flag status */
 222:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_EVENT_STATUS_t;
 223:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to know the status of trap occurrence
 226:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 228:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAP_STATUS_DEACTIVE = 0x0U, /**< BCCU module is not in a Trap State */
 229:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAP_STATUS_ACTIVE = 0x1U, /**< BCCU module is in a Trap State */
 230:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRAP_STATUS_t;
 231:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 232:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 233:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to know the current level of trap
 234:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 235:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 236:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAP_LEVEL_LOW = 0x0U, /**< BCCU.TRAPL is Low */
 237:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_TRAP_LEVEL_HIGH = 0x1U, /**< BCCU.TRAPL is High */
 238:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRAP_LEVEL_t;
 239:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 240:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 241:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select flicker watchdog enable/disable
 242:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 243:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 244:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_FLICKER_WD_DS = 0U, /**< Disable: No control over a sigma-delta modulator output */
 245:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_FLICKER_WD_EN = 1U, /**< Enable: Limit consecutive zeros at sigma-delta modulator out
 246:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_FLICKER_WD_t;
 247:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 248:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 249:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select gating functionality enable/disable, and be used for peak-current
 250:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 251:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 252:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_GATING_FUNC_DISABLE = 0U, /**< Disable: No control over a BCCU module output  */
 253:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_GATING_FUNC_ENABLE = 1U, /**< Enable: External gating signal which controls BCCU modu
 254:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_GATING_FUNC_t;
 255:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 257:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to bypass dimming engine
 258:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 259:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 260:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_ENGINE_BYPASS_DISABLE = 0U, /**< Disable: Brightness = Dimming Level * Intens
 261:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_ENGINE_BYPASS_ENABLE = 1U,   /**< Enable: Brightness = Intensity */
 262:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_DIMMING_ENGINE_BYPASS_t;
 263:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 264:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 265:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select passive level of the channel output
 266:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 267:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum{
 268:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_ACTIVE_LEVEL_HIGH = 0U, /**< Default passive level of the channel is low */
 269:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_ACTIVE_LEVEL_LOW = 1U, /**< Default passive level of the channel is high */
 270:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_ACTIVE_LEVEL_t;
 271:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trigger edge
 274:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 275:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum
 276:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 277:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRIG_EDGE_PASS_TO_ACT = 0U,  /**< Trigger on output transition from passive to active
 278:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRIG_EDGE_ACT_TO_PASS = 1U,  /**< Trigger on output transition from active to passive
 279:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_TRIG_EDGE_t;
 280:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 281:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 282:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select source of trap input
 283:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 284:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum
 285:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 286:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INA = 0x0U,  /**< Trap INA */
 287:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INB = 0x1U,  /**< Trap INB */
 288:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INC = 0x2U,  /**< Trap INC */
 289:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_IND = 0x3U,  /**< Trap IND */
 290:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INE = 0x4U,  /**< Trap INE */
 291:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INF = 0x5U,  /**< Trap INF */
 292:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_ING = 0x6U,  /**< Trap ING */
 293:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INH = 0x7U,  /**< Trap INH */
 294:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INI = 0x8U,  /**< Trap INI */
 295:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INJ = 0x9U,  /**< Trap INJ */
 296:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INK = 0xAU, /**< Trap INK */
 297:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INL = 0xBU, /**< Trap INL */
 298:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INM = 0xCU, /**< Trap INM */
 299:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INN = 0xDU, /**< Trap INN */
 300:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INO = 0xEU, /**< Trap INO */
 301:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_INP = 0xFU, /**< Trap INP */
 302:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_TRAP_IN_t;
 303:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 304:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 305:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select edge for trap occurrence
 306:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 307:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum
 308:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 309:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_EDGE_RISING = 0U, /**< Trap on rising edge of the BCCU.TRAPL signal */
 310:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRAP_EDGE_FALLING = 1U  /**< Trap on falling edge of the BCCU.TRAPL signal */
 311:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_TRAP_EDGE_t;
 312:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 314:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select trigger output, and only be used in XMC_BCCU_TRIGMODE1
 315:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 316:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 317:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRIGOUT0 = 0U, /**< Trigger occurrence on BCCU_TRIGOUT0 signal */
 318:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_TRIGOUT1 = 1U, /**< Trigger occurrence on BCCU_TRIGOUT1 signal */
 319:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_TRIGOUT_t;
 320:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 321:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 322:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select dimming source of the channel
 323:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 324:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 325:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_SOURCE_GLOBAL = 7U, /**< Global Dimming Engine */
 326:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_SOURCE_DE0 = 0U, /**< Dimming Engine 0 */
 327:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_SOURCE_DE1 = 1U, /**< Dimming Engine 1 */
 328:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_CH_DIMMING_SOURCE_DE2 = 2U, /**< Dimming Engine 2 */
 329:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_CH_DIMMING_SOURCE_t;
 330:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 331:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 332:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Provides the options to select exponential dimming curve
 333:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 334:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef enum {
 335:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_DIM_CURVE_COARSE = 0U, /**< Coarse curve: Slope of the linear pieces doubles every time, 
 336:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   thresholds of 16, 32, 64, 128, 256, 512, 1024, 2048 */
 337:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	XMC_BCCU_DIM_CURVE_FINE = 1U, /**< Fine Curve: More pieces and different line slopes */
 338:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_DIM_CURVE_t;
 339:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 340:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
 341:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * DATA STRUCTURES
 342:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
 343:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 344:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redefinition of BCCU module structure; pointer to bccu module base address
 345:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 346:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef BCCU_Type XMC_BCCU_t;
 347:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 348:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 349:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redefinition of BCCU module channel structure; pointer to bccu module channel Base address
 350:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 351:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef BCCU_CH_Type XMC_BCCU_CH_t;
 352:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 353:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 354:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Redefinition of BCCU module dimming engine structure; pointer to bccu module dimming engine base
 355:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 356:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef BCCU_DE_Type XMC_BCCU_DIM_t;
 357:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 358:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /*Anonymous structure/union guard start*/
 359:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #if defined(__CC_ARM)
 360:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma push
 361:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma anon_unions
 362:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #elif defined(__TASKING__)
 363:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma warning 586
 364:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 365:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 366:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 367:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures a global setting of the BCCU module.
 368:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 369:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_GLOBAL_CONFIG
 370:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 371:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 372:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 373:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t trig_mode:1; /**< Selects trigger Mode. Use type @ref XMC_BCCU_TRIGMODE_t */
 374:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 1;
 375:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t trig_delay:2; /**< Selects trigger delay between channel & module trigger. \n Use ty
 376:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       XMC_BCCU_TRIGDELAY_t */
 377:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 12;
 378:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t maxzero_at_output:12; /**< Configures maximum 0's allowed at modulator output */
 379:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 380:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t globcon; /* Not to use */
 381:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 382:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 383:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 384:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t fclk_ps:12; /**< Configures the ratio between fast clock and module clock */
 385:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 3;
 386:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t bclk_sel:1; /**< Selects the bit clock. Use type @ref XMC_BCCU_BCLK_MODE_t */
 387:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dclk_ps:12; /**< Configures the ratio between dimmer clock and module clock */
 388:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 389:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t globclk; /* Not to use */
 390:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 391:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t global_dimlevel; /**< Configures global dimming engine dimming level */
 392:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_GLOBAL_CONFIG_t;
 393:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 394:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 395:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 396:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures global trigger settings of the BCCU module.
 397:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 398:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_TRIG_CONFIG
 399:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 400:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_TRIGMODE_t  mode; /**< Selects global trigger mode which decides when to occur BCCU trig
 401:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   XMC_BCCU_TRIGDELAY_t delay; /**< Selects global trigger delay between channel trigger & BCCU trig
 402:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint16_t             mask_chans; /**< Channel mask to configure trigger settings for multiple cha
 403:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                         If channel 0 and 7, wants to configure then the channel mas
 404:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint16_t             mask_trig_lines; /**< Trigger line mask */
 405:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** } XMC_BCCU_TRIG_CONFIG_t;
 406:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 407:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 408:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures channel settings of the BCCU module.
 409:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 410:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #ifdef DOXYGEN 
 411:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_CH_CONFIG
 412:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 413:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_thresh:3; /**< Configures packer threshold value of FIFO */
 414:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_en:1; /**< Enables a packed output bitstream */
 415:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t dim_sel:3; /**< Selects a dimming engine source of the channel. \n Use type @ref XMC_BCC
 416:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t dim_bypass:1; /**< Selects dimming engine bypass enable. \n Use type @ref XMC_BCCU_CH_DI
 417:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t gate_en:1; /**< Selects gating enable. Use type @ref XMC_BCCU_CH_GATING_FUNC_t */
 418:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t flick_wd_en:1; /**< Selects flicker watchdog enable. Use type @ref XMC_BCCU_CH_FLICKER_W
 419:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t trig_edge:1; /**< Selects trigger edge. Use type @ref XMC_BCCU_CH_TRIG_EDGE_t */
 420:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t force_trig_en:1; /**< Selects force trigger enable; generates a trigger if modulator out
 421:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   256 bclk cycles */
 422:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_offcmp_lev:8; /**< Configures a packer off-time compare level. When the off-time co
 423:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   measured on & off time counters are stored into FIFO */
 424:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_oncmp_lev:8; /**< Configures a packer on-time compare level. When the on-time count
 425:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                         the measured on & off time counters are stored into FIFO */
 426:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_offcnt_val:8; /**< Configures an initial packer off-time counter level, only if cha
 427:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                         Controls phase shift of the modulator output */
 428:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t pack_oncnt_val:8; /**< Configures an initial packer on-time counter level, only if chann
 429:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                         Controls phase shift of the modulator output */
 430:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }XMC_BCCU_CH_CONFIG_t;
 431:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 432:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  
 433:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_CH_CONFIG
 434:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 435:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 436:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 437:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_thresh:3; /**< Configures packer threshold value of FIFO */
 438:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_en:1; /**< Enables a packed output bitstream */
 439:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dim_sel:3; /**< Selects a dimming engine source of the channel. \n Use type @ref XMC
 440:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       */
 441:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dim_bypass:1; /**< Selects dimming engine bypass enable. \n Use type @ref XMC_BCCU_C
 442:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t gate_en:1; /**< Selects gating enable. Use type @ref XMC_BCCU_CH_GATING_FUNC_t */
 443:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t flick_wd_en:1; /**< Selects flicker watchdog enable. Use type @ref XMC_BCCU_CH_FLICK
 444:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t trig_edge:1; /**< Selects trigger edge. Use type @ref XMC_BCCU_CH_TRIG_EDGE_t */
 445:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t force_trig_en:1; /**< Selects force trigger enable; generates a trigger if modulator
 446:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       for 256 bclk cycles */
 447:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 448:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	uint32_t chconfig; /* Not to use */
 449:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 450:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 451:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 452:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_offcmp_lev:8; /**< Configures a packer off-time compare level. When the off-tim
 453:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                        this, the measured on & off time counters are stored into FI
 454:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 8;
 455:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_oncmp_lev:8; /**< Configures a packer on-time compare level. When the on-time c
 456:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                         the measured on & off time counters are stored into FIFO */
 457:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 458:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t pkcmp; /* Not to use */
 459:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 460:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 461:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 462:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_offcnt_val:8; /**< Configures an initial packer off-time counter level, only if
 463:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                         Controls phase shift of the modulator output */
 464:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 8;
 465:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t pack_oncnt_val:8; /**< Configures an initial packer on-time counter level, only if c
 466:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                         Controls phase shift of the modulator output */
 467:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 468:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t pkcntr; /* Not to use */
 469:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 470:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }XMC_BCCU_CH_CONFIG_t;
 471:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 472:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 473:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures dimming engine settings of the BCCU module.
 474:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 475:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #ifdef DOXYGEN
 476:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_DIM_CONFIG
 477:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 478:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t dim_div:10; /**< Configures a dimming clock divider, used to adjust the fade rate. If 0,
 479:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                  as same as target dimming level on shadow transfer */
 480:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t dither_en:1; /**< Selects a dither enable. Dithering added for every dimming step if dim
 481:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   uint32_t cur_sel:1; /**< Selects a type of exponential curve. Use type @ref XMC_BCCU_DIM_CURVE_t.
 482:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                 enabled, the configuration is being ignored */
 483:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }XMC_BCCU_DIM_CONFIG_t;
 484:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 485:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 486:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** typedef struct XMC_BCCU_DIM_CONFIG
 487:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 488:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   union{
 489:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     struct{
 490:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dim_div:10; /**< Configures a dimming clock divider, used to adjust the fade rate. I
 491:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                  as same as target dimming level on shadow transfer */
 492:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t : 6;
 493:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t dither_en:1; /**< Selects a dither enable. Dithering added for every dimming step if
 494:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****       uint32_t cur_sel:1; /**< Selects a type of exponential curve. Use type @ref XMC_BCCU_DIM_CURV
 495:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****                                 enabled, the configuration is being ignored */
 496:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     };
 497:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****     uint32_t dtt; /* Not to use */
 498:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   };
 499:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }XMC_BCCU_DIM_CONFIG_t;
 500:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 501:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /*Anonymous structure/union guard end*/
 502:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #if defined(__CC_ARM)
 503:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma pop
 504:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #elif defined(__TASKING__)
 505:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   #pragma warning restore
 506:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 507:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**************************************************************************************************
 508:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * API PROTOTYPES
 509:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  **************************************************************************************************
 510:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #ifdef __cplusplus
 511:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** extern "C" {
 512:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** #endif
 513:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 514:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 515:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 516:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 517:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param config Pointer to constant bccu global configuration data structure. Use type @ref XMC_BC
 518:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 519:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 520:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 521:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 522:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Initializes three main clocks (fast clock, bit clock, dimmer clock) by using \a fclk_ps \a bclk_
 523:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * and writing into a GLOBCLK register.\n
 524:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * And also configures a trigger mode, trigger delay, maximum 0's allowed at modulator output by wr
 525:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * register.\n\n
 526:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 527:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 528:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_Init(), XMC_BCCU_DIM_Init()\n\n\n
 529:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** */
 530:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_GlobalInit (XMC_BCCU_t *const bccu, const XMC_BCCU_GLOBAL_CONFIG_t *const config);
 531:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 532:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 533:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 534:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 535:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mode Trigger mode selection. \b Range: XMC_BCCU_TRIGMODE0, XMC_BCCU_TRIGMODE1.\n
 536:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                             1. XMC_BCCU_TRIGMODE0 - Trigger on Any Channel
 537:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                             2. XMC_BCCU_TRIGMODE1 - Trigger on Active channel
 538:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param delay Delay to avoid sampling during switching noise. Use type @ref XMC_BCCU_TRIGDELAY_t.
 539:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_NO_DELAY, XMC_BCCU_QUARTER_BIT_DELAY, XMC_BCCU_HALF_BIT_DELAY.
 540:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 541:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 542:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 543:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 544:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures trigger mode and trigger delay by writing register bits GLOBCON.TM, GLOBCON.TRDEL. \a
 545:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * parameters which decides when to trigger a conversion of vadc module for voltage measurement. \n
 546:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 547:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 548:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableChannelTrigger(), XMC_BCCU_ReadGlobalTrigger(), XMC_BCCU_ConcurrentConfigTrigger(
 549:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ReadLastTrigChanNr(), XMC_BCCU_GetChannelOutputLvlAtLastTrigger(), XMC_BCCU_CH_ConfigTr
 550:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 551:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConfigGlobalTrigger(XMC_BCCU_t *const bccu, XMC_BCCU_TRIGMODE_t mode, XMC_BCCU_TRIGDE
 552:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 553:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 554:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 555:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 556:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 557:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Source of Trigger mode. \b Range: 0 or 1 \n
 558:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *         0 - Trigger mode 0 (Trigger on Any Channel) \n
 559:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *         1 - Trigger mode 1 (Trigger on Active Channel)\n\n
 560:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 561:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves global trigger mode of the BCCU module by reading the register bit GLOBCON_TM. Use XMC
 562:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * validate a returned value.\n\n
 563:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 564:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 565:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_ConcurrentConfigTrigger(), XMC_BCCU_GlobalInit()\n\n\n
 566:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 567:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadGlobalTrigger (XMC_BCCU_t *const bccu)
 568:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 569:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	return (uint32_t)(bccu->GLOBCON & BCCU_GLOBCON_TM_Msk);
 570:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 571:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 572:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 573:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 574:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 575:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param input Trap input selection. Use type @ref XMC_BCCU_TRIGDELAY_t. 
 576:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_TRIGDELAY_NO_DELAY, XMC_BCCU_TRIGDELAY_QUARTER_BIT, XMC_BCCU_TRI
 577:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 578:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 579:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 580:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 581:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Selects input of trap functionality by writing register bit GLOBCON_TRAPIS. The trap functionali
 582:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * off the connected power devices when trap input becomes active.\n\n
 583:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 584:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 585:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetTrapEdge(), XMC_BCCU_ReadTrapInput(), XMC_BCCU_EnableTrap(), XMC_BCCU_ConcurrentEnab
 586:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 587:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SelectTrapInput (XMC_BCCU_t *const bccu, XMC_BCCU_CH_TRAP_IN_t input);
 588:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 589:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 590:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 591:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 592:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 593:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Source of trap input. \b Range: 0 to 15 \n
 594:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           0 - TRAPINA \n
 595:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           1 - TRAPINB and so on. \n
 596:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 597:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves trap input of the channel by reading the register bit GLOBCON_TRAPIS. Use XMC_BCCU_CH_
 598:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * validate a returned value.\n\n
 599:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 600:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 601:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SelectTrapInput()\n\n\n
 602:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 603:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadTrapInput (XMC_BCCU_t *const bccu)
 604:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 605:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	return (uint32_t)(( (bccu->GLOBCON) & BCCU_GLOBCON_TRAPIS_Msk) >> BCCU_GLOBCON_TRAPIS_Pos);
 606:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 607:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 608:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 609:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 610:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 611:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param edge Trap edge selection. Use type @ref XMC_BCCU_CH_TRAP_EDGE_t.  \n
 612:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_CH_TRAP_EDGE_RISING, XMC_BCCU_CH_TRAP_EDGE_FALLING.
 613:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 614:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 615:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 616:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 617:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Selects active edge which detects trap on TRAPL signal by writing register bit GLOBCON_TRAPED.\n
 618:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 619:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 620:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SelectTrapInput(), XMC_BCCU_ReadTrapEdge(), XMC_BCCU_EnableTrap(), XMC_BCCU_ConcurrentE
 621:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 622:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetTrapEdge (XMC_BCCU_t *const bccu, XMC_BCCU_CH_TRAP_EDGE_t edge);
 623:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 624:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 625:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 626:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 627:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 628:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Trap edge selection. \b Range: 0 or 1 \n
 629:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           0 - XMC_BCCU_CH_TRAP_EDGE_RISING \n
 630:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           1 - XMC_BCCU_CH_TRAP_EDGE_FALLING. \n
 631:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 632:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves trap edge by reading the register bit GLOBCON_TRAPED. Use XMC_BCCU_CH_TRAP_EDGE_t type
 633:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * validate a returned value.\n\n
 634:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 635:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 636:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetTrapEdge()\n\n\n
 637:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 638:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadTrapEdge (XMC_BCCU_t *const bccu)
 639:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 640:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	return (uint32_t)(( (bccu->GLOBCON) & BCCU_GLOBCON_TRAPED_Msk) >> BCCU_GLOBCON_TRAPED_Pos);
 641:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 642:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 643:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 644:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 645:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 646:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mode Suspend mode selection. Use type @ref XMC_BCCU_SUSPEND_MODE_t. \n
 647:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *             \b Range: XMC_BCCU_SUSPEND_MODE_IGNORE, XMC_BCCU_SUSPEND_MODE_FREEZE, XMC_BCCU_USPEN
 648:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 649:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 650:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 651:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 652:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures suspend mode by writing register bit GLOBCON_SUSCFG.\n\n
 653:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 654:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 655:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ReadSuspendMode()\n\n\n
 656:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 657:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConfigSuspendMode (XMC_BCCU_t *const bccu, XMC_BCCU_SUSPEND_MODE_t mode);
 658:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 659:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 660:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 661:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 662:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 663:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Trap edge selection. \b Range: 0, 1, 2 \n
 664:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              0 - XMC_BCCU_SUSPEND_MODE_IGNORE \n
 665:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              1 - XMC_BCCU_SUSPEND_MODE_FREEZE. \n
 666:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              2 - XMC_BCCU_USPEND_MODE_SAFE_FREEZE. \n
 667:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 668:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves the state of suspend mode by reading the register bit GLOBCON_TRAPIS. Use XMC_BCCU_SUS
 669:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * validate a returned value.\n\n
 670:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 671:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 672:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConfigSuspendMode()\n\n\n
 673:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 674:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadSuspendMode (XMC_BCCU_t *const bccu)
 675:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 676:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 	return (uint32_t)( ((bccu->GLOBCON) & BCCU_GLOBCON_SUSCFG_Msk) >> BCCU_GLOBCON_SUSCFG_Pos);
 677:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 678:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 679:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 680:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 681:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 682:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 683:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Last triggered channel number. \b Range: 0 to 8\n
 684:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              0 - BCCU Channel 0\n
 685:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              1 - BCCU Channel 1 and so on.\n
 686:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 687:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves last triggered channel number of a BCCU module by reading the register bit GLOBCON_LTR
 688:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 689:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 690:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_GetChannelOutputLvlAtLastTrigger(), XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_Concurrent
 691:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ReadGlobalTrigger(), XMC_BCCU_GlobalInit()\n\n\n
 692:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 693:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadLastTrigChanNr (XMC_BCCU_t *const bccu)
 694:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 695:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(( (bccu->GLOBCON) & BCCU_GLOBCON_LTRS_Msk) >> BCCU_GLOBCON_LTRS_Pos);
 696:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 697:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 698:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 699:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 700:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 701:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param threshold_no Number of consecutive zeroes at modulator output. \b Range: 0 to 4095.
 702:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 703:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 704:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 705:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 706:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures number of consecutive zeroes allowed at modulator output (flicker watch-dog number) b
 707:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * bit GLOBCON_WDMBN.\n\n
 708:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 709:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 710:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_EnableFlickerWatchdog(), XMC_BCCU_ReadFlickerWDThreshold(), XMC_BCCU_CH_Init(), XMC_
 711:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 712:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetFlickerWDThreshold (XMC_BCCU_t *const bccu, uint32_t threshold_no);
 713:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 714:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 715:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 716:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 717:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 718:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Number of consecutive zeroes at modulator output. \b Range: 0 to 4095 \n
 719:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 720:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves number of consecutive zeroes at modulator output (flicker watchdog number) by reading 
 721:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * GLOBCON_WDMBN.\n\n
 722:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 723:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 724:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetFlickerWDThreshold(), XMC_BCCU_CH_EnableFlickerWatchdog(), XMC_BCCU_CH_Init(), XMC_B
 725:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 726:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadFlickerWDThreshold (XMC_BCCU_t *const bccu)
 727:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 728:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(( (bccu->GLOBCON) & BCCU_GLOBCON_WDMBN_Msk) >> BCCU_GLOBCON_WDMBN_Pos);
 729:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 730:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 731:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 732:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 733:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 734:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param div Prescaler factor. \b Range: 0 to 4095.
 735:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 736:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 737:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 738:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 739:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures trigger functionality clock prescaler factor of a BCCU module by writing register bit
 740:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 741:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 742:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetDimClockPrescaler(), XMC_BCCU_SelectBitClock(), XMC_BCCU_ReadFastClock()\n\n\n
 743:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** */
 744:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetFastClockPrescaler (XMC_BCCU_t *const bccu, uint32_t div);
 745:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 746:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 747:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 748:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 749:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 750:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Prescaler factor. \b Range: 0 to 4095
 751:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 752:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves fast clock prescaler factor of a BCCU module by reading the register bit GLOBCLK_FCLK_
 753:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * derived from the bccu clock by prescaler factor i.e. fdclk = fbccu_clk / prescaler factor.\n\n
 754:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 755:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 756:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetFastClockPrescaler(), XMC_BCCU_ReadBitClock(), XMC_BCCU_ReadDimClock()\n\n\n
 757:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 758:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadFastClock (XMC_BCCU_t *const bccu)
 759:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 760:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(((bccu->GLOBCLK) & BCCU_GLOBCLK_FCLK_PS_Msk) >> BCCU_GLOBCLK_FCLK_PS_Pos);
 761:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 762:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 763:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 764:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 765:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 766:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param div Prescaler factor. \b Range: 0 to 4095.
 767:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 768:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 769:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 770:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 771:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures dimmer clock prescaler factor of a BCCU module by writing register bit GLOBCLK_DCLK_P
 772:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 773:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 774:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DIM_SetDimDivider(), XMC_BCCU_SetFastClockPrescaler(), XMC_BCCU_SelectBitClock(), XMC_B
 775:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 776:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetDimClockPrescaler (XMC_BCCU_t *const bccu, uint32_t div);
 777:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 778:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 779:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 780:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 781:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 782:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Prescaler factor. \b Range: 0 to 4095
 783:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 784:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves dimmer clock prescaler factor of a BCCU module by reading the register bit GLOBCLK_DCL
 785:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * derived from the bccu clock by prescaler factor. \n i.e. <b> fdclk = fbccu_clk / prescaler facto
 786:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 787:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 788:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetDimClockPrescaler(), XMC_BCCU_ReadBitClock(), XMC_BCCU_ReadFastClock()\n\n\n
 789:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 790:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadDimClock (XMC_BCCU_t *const bccu)
 791:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 792:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(((bccu->GLOBCLK) & BCCU_GLOBCLK_DCLK_PS_Msk) >> BCCU_GLOBCLK_DCLK_PS_Pos);
 793:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 794:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 795:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 796:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 797:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 798:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param div Prescaler factor. Use type @ref XMC_BCCU_BCLK_MODE_t.  \n
 799:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *            \b Range: XMC_BCCU_BCLK_MODE_NORMAL or XMC_BCCU_BCLK_MODE_FAST. \n
 800:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 801:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 802:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 803:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures modulator output (bit-time) clock prescaler factor of a BCCU module by writing regist
 804:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 805:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 806:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetFastClockPrescaler(), XMC_BCCU_SetDimClockPrescaler(), XMC_BCCU_ReadBitClock()\n\n\n
 807:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 808:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SelectBitClock (XMC_BCCU_t *const bccu, XMC_BCCU_BCLK_MODE_t div);
 809:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 810:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 811:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 812:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 813:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 814:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Prescaler factor. \b Range: 0 or 1 \n
 815:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           0 - XMC_BCCU_BCLK_MODE_NORMAL \n
 816:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                           1 - XMC_BCCU_BCLK_MODE_FAST \n
 817:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 818:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves modulator output (bit-time) clock prescaler factor of a BCCU module by reading the reg
 819:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Use XMC_BCCU_BCLK_MODE_t type to validate a returned value.\n\n
 820:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 821:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 822:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SelectBitClock(), XMC_BCCU_ReadDimClock(), XMC_BCCU_ReadFastClock()\n\n\n
 823:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 824:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadBitClock (XMC_BCCU_t *const bccu)
 825:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 826:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(((bccu->GLOBCLK) & BCCU_GLOBCLK_BCS_Msk) >> BCCU_GLOBCLK_BCS_Pos);
 827:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 828:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 829:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 830:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 831:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 832:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to enable multiple channels.\n
 833:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to enable at a same time, \n
 834:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 835:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 836:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 837:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 838:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 839:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 840:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 841:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 842:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables multiple channels at a same time using \a mask by writing a register CHEN.\n\n
 843:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 844:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 845:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableChannel(), XMC_BCCU_ConcurrentDisableChannels()\n\n\n
 846:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 847:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentEnableChannels (XMC_BCCU_t *const bccu, uint32_t mask);
 848:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 849:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 850:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 851:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 852:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to disable multiple channels.\n
 853:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to disable at a same time, \
 854:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 855:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 856:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 857:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 858:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 859:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 860:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 861:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 862:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables multiple channels at a same time using \a mask by writing a register CHEN.\n\n
 863:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 864:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 865:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConcurrentEnableChannels(), XMC_BCCU_DisableChannel()\n\n\n
 866:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 867:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentDisableChannels (XMC_BCCU_t *const bccu, uint32_t mask);
 868:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 869:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 870:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 871:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 872:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_mask Channel mask to enable multiple channels.\n
 873:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to enable at a same time, \n
 874:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 875:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 876:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 877:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 878:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param level Passive level selection. Use type @ref XMC_BCCU_CH_ACTIVE_LEVEL_t.\n
 879:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_CH_ACTIVE_LEVEL_HIGH or XMC_BCCU_CH_ACTIVE_LEVEL_LOW
 880:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 881:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 882:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 883:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 884:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures passive levels of multiple channels at a same time using \a mask by writing a registe
 885:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 886:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 887:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetOutputPassiveLevel()\n\n\n
 888:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 889:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentSetOutputPassiveLevel(XMC_BCCU_t *const bccu, uint32_t chan_mask, XMC_BCCU_
 890:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 891:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 892:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 893:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 894:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to enable multiple channels trap functionality.\n
 895:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to enable a trap functionali
 896:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 897:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 898:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 899:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 900:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 901:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 902:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 903:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 904:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables multiple channels trap functionality at the same time using \a mask by writing a registe
 905:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 906:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 907:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableTrap(), XMC_BCCU_ConcurrentDisableTrap(), XMC_BCCU_SelectTrapInput(), XMC_BCCU_Se
 908:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 909:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentEnableTrap (XMC_BCCU_t *const bccu, uint32_t mask);
 910:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 911:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 912:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 913:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 914:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to disable multiple channels trap functionality.
 915:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to disable a trap functional
 916:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 917:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 918:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 919:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 920:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 921:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 922:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 923:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 924:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables multiple channels trap functionality at the same time using \a mask by writing a regist
 925:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 926:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 927:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DisableTrap(), XMC_BCCU_ConcurrentEnableTrap()\n\n\n
 928:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 929:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentDisableTrap (XMC_BCCU_t *const bccu, uint32_t mask);
 930:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 931:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 932:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 933:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 934:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param trig Pointer to a trigger configuration data structure. Use type @ref XMC_BCCU_TRIG_CONFI
 935:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 936:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 937:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 938:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 939:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures global trigger settings: trigger mode, trigger delay, individual trigger lines and ch
 940:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * registers GLOBCON and CHTRIG. Trigger mode decides when to generate a BCCU trigger, trigger dela
 941:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * trigger by 1/4, or 1/2 bclk cycles\n\n
 942:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 943:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 944:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_ReadLastTrigChanNr(), XMC_BCCU_ReadGlobalTrigger(), XMC
 945:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 946:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentConfigTrigger (XMC_BCCU_t *const bccu, XMC_BCCU_TRIG_CONFIG_t *trig);
 947:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 948:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 949:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 950:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 951:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to start a linear walk for multiple channels at a same time.\n
 952:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to start a linear walk at a 
 953:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 954:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 955:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 956:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 957:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 958:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 959:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 960:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 961:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * After channel initialization, the outcome of executing the API starts changing the color smoothl
 962:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * for multiple channels at a same time using \a mask by writing a register CHSTRCON.\n\n
 963:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 964:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 965:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_StartLinearWalk(), XMC_BCCU_ConcurrentAbortLinearWalk()\n\n\n
 966:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 967:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentStartLinearWalk (XMC_BCCU_t *const bccu, uint32_t mask);
 968:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 969:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 970:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 971:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 972:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Channel mask to stop a linear walk for multiple channels at a same time.\n
 973:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If channel 0, channel 7, channel 1 wants to abort a linear walk at a 
 974:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then channel mask is 01000 0011 = 0x83\n
 975:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 976:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | Chan8 | Chan7 | Chan6 | Chan5 | Chan4 | Chan3 | Chan2 | Chan1 | Chan0 |\n
 977:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        -----------------------------------------------------------------------------------------
 978:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 979:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
 980:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 981:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
 982:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * When the linear walk in progress, the outcome of executing the API is stopping the linear walk (
 983:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * immediately for multiple channels at a same time using \a mask by writing a register CHSTRCON.\n
 984:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 985:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
 986:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_AbortLinearWalk(), XMC_BCCU_ConcurrentStartLinearWalk()\n\n\n
 987:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
 988:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentAbortLinearWalk (XMC_BCCU_t *const bccu, uint32_t mask);
 989:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
 990:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
 991:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
 992:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
 993:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Dimming engine mask to enable multiple dimming engine at a same time.\n
 994:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If dimming engine 0, channel 2 wants to enable a dimming at a same ti
 995:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then dimming engine mask is 0101 = 0x03\n
 996:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
 997:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | DE2 | DE1 | DE0 |\n
 998:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
 999:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1000:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1001:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1002:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1003:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables multiple dimming engines at a same time using \a mask by writing a register DEEN.\n\n
1004:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1005:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1006:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableDimmingEngine(), XMC_BCCU_ConcurrentDisableDimmingEngine()\n\n\n
1007:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1008:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentEnableDimmingEngine (XMC_BCCU_t *const bccu, uint32_t mask);
1009:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1010:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1011:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1012:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1013:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Dimming engine mask to disable multiple dimming engine at a same time.\n
1014:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If dimming engine 0, channel 2 wants to disable a dimming at a same t
1015:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then dimming engine mask is 0101 = 0x03\n
1016:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1017:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | DE2 | DE1 | DE0 |\n
1018:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1019:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1020:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1021:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1022:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1023:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables multiple dimming engines at a same time using \a mask by writing a register DEEN.\n\n
1024:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1025:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1026:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DisableDimmingEngine(), XMC_BCCU_ConcurrentEnableDimmingEngine()\n\n\n
1027:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1028:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentDisableDimmingEngine (XMC_BCCU_t *const bccu, uint32_t mask);
1029:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1030:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1031:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1032:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1033:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Dimming engine mask to start a dimming for multiple dimming engines at a same time.\
1034:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If dimming engine 0, channel 2 wants to start a dimming at a same tim
1035:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then dimming engine mask is 0101 = 0x03\n
1036:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1037:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | DE2 | DE1 | DE0 |\n
1038:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1039:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1040:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1041:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1042:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1043:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * After dimming engine initialization, the outcome of executing the API starts changing the bright
1044:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * for multiple dimming engines at a same time using \a mask by writing a register DESTRCON.\n\n
1045:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1046:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1047:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_StartDimming(), XMC_BCCU_ConcurrentAbortDimming()\n\n\n
1048:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1049:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentStartDimming (XMC_BCCU_t *const bccu, uint32_t mask);
1050:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1051:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1052:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1053:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1054:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param mask Dimming engine mask to abort a dimming for multiple dimming engines at a same time.\
1055:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If dimming engine 0, channel 2 wants to abort a dimming at a same tim
1056:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        then dimming engine mask is 0101 = 0x03\n
1057:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1058:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        | DE2 | DE1 | DE0 |\n
1059:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        --------------------------\n
1060:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1061:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1062:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1063:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1064:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * When the dimming in progress, the outcome of executing the API is stopping the dimming (i.e. fad
1065:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * immediately for specific dimming engine number \a dim_no by writing a register DESTRCON.\n\n
1066:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1067:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1068:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_AbortDimming(), XMC_BCCU_ConcurrentStartDimming()\n\n\n
1069:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1070:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_ConcurrentAbortDimming (XMC_BCCU_t *const bccu, uint32_t mask);
1071:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1072:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1073:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1074:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1075:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param level Dimming level of global dimming engine. \b Range: 0 to 4095\n
1076:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1077:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1078:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1079:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1080:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures a global dimming level by writing a register GLOBDIM. This is useful only if global d
1081:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Otherwise the configuration is ignored. \n\n
1082:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1083:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1084:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DIM_SetTargetDimmingLevel()\n\n\n
1085:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1086:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void  XMC_BCCU_SetGlobalDimmingLevel (XMC_BCCU_t *const bccu, uint32_t level);
1087:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1088:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1089:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1090:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1091:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param event Event mask to enable multiple events at a time using ORed values of @ref XMC_BCCU_E
1092:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If XMC_BCCU_EVENT_TRIGGER0, XMC_BCCU_EVENT_TRIGGER1, XMC_BCCU_EVENT_F
1093:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        at a same time,\n then event mask is = <b>(XMC_BCCU_EVENT_TRIGGER0 | XMC_BCCU_EVENT_TRIGG
1094:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        XMC_BCCU_EVENT_FIFOEMPTY) </b> \n
1095:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1096:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1097:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1098:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1099:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables multiple interrupt events at a same time using ORed values of @ref XMC_BCCU_EVENT_t by w
1100:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1101:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1102:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DisableInterrupt()\n\n\n
1103:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1104:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_EnableInterrupt (XMC_BCCU_t *const bccu, uint32_t event)
1105:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1106:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->EVIER |= event;
1107:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1108:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1109:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1110:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1111:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1112:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param event Event mask to disable multiple events at a time using ORed values of @ref XMC_BCCU_
1113:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If XMC_BCCU_EVENT_TRIGGER0, XMC_BCCU_EVENT_TRIGGER1, XMC_BCCU_EVENT_F
1114:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *         at a same time, then event mask is = <b>(XMC_BCCU_EVENT_TRIGGER0 | XMC_BCCU_EVENT_TRIGGE
1115:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *         XMC_BCCU_EVENT_FIFOEMPTY)</b> \n
1116:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1117:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1118:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1119:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1120:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables multiple interrupt events at a same time using ORed values of @ref XMC_BCCU_EVENT_t by 
1121:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1122:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1123:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableInterrupt()\n\n\n
1124:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1125:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_DisableInterrupt (XMC_BCCU_t *const bccu, uint32_t event)
1126:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1127:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->EVIER &= (uint32_t)~(event);
1128:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1129:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1130:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1131:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1132:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1133:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1134:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Interrupt events flags at a same time using ORed values of @ref XMC_BCCU_EVENT_t.
1135:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1136:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves interrupt event flags at the same time using ORed values of @ref XMC_BCCU_EVENT_t by r
1137:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * EVFR. \n\n
1138:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1139:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1140:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetEventFlag()\n\n\n
1141:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1142:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_ReadEventFlag (XMC_BCCU_t *const bccu)
1143:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1144:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (bccu->EVFR);
1145:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1146:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1147:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1148:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1149:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1150:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param flag_type Event flag mask to configure multiple events at a time using ORed values of @re
1151:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EVENT_STATUS_t.\n
1152:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If XMC_BCCU_EVENT_STATUS_TRIGGER0, XMC_BCCU_EVENT_STATUS_TRIGGER1, XM
1153:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * wants to configure at a same time, then event mask is = <b>(XMC_BCCU_EVENT_STATUS_TRIGGER0 | XMC
1154:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EVENT_STATUS_FIFOEMPTY)</b> \n
1155:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1156:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1157:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1158:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1159:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures multiple interrupt event flags at a same time using ORed values of @ref XMC_BCCU_EVEN
1160:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1161:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1162:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ClearEventFlag(), XMC_BCCU_ReadEventFlag()\n\n\n
1163:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1164:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_SetEventFlag (XMC_BCCU_t *const bccu, uint32_t flag_type)
1165:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1166:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->EVFSR = flag_type;
1167:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1168:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1169:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1170:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1171:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1172:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param flag_type event flag mask to clear multiple events at a time using ORed values of @ref 
1173:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EVENT_STATUS_t.\n
1174:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *        <b>For example:</b> If XMC_BCCU_EVENT_STATUS_TRIGGER0, XMC_BCCU_EVENT_STATUS_TRIGGER1, XM
1175:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * wants to clear at a same time, then event mask is = <b>(XMC_BCCU_EVENT_STATUS_TRIGGER0 | XMC_BCC
1176:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EVENT_STATUS_FIFOEMPTY)</b> \n
1177:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1178:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1179:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1180:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1181:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Clears multiple interrupt event flags at a same time using ORed values of @ref XMC_BCCU_EVENT_ST
1182:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * register EVFSR.\n\n
1183:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1184:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1185:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_SetEventFlag()\n\n\n
1186:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1187:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_ClearEventFlag (XMC_BCCU_t *const bccu, uint32_t flag_type)
1188:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1189:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->EVFCR = flag_type;
1190:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1191:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1192:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1193:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1194:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1195:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Specific channel number to enable. \b Range: 0 to 8\n
1196:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1197:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1198:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1199:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1200:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables a specific channel number using \a chan_no by writing a register CHEN.\n\n
1201:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1202:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1203:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConcurrentEnableChannels(), XMC_BCCU_DisableChannel()\n\n\n
1204:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1205:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_EnableChannel (XMC_BCCU_t *const bccu, uint32_t chan_no);
1206:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1207:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1208:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1209:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1210:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Specific channel number to disable. \b Range: 0 to 8\n
1211:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1212:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1213:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1214:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1215:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables a specific channel number using \a chan_no by writing a register CHEN.\n\n
1216:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1217:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1218:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConcurrentDisableChannels(), XMC_BCCU_EnableChannel()\n\n\n
1219:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1220:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_DisableChannel (XMC_BCCU_t *const bccu, uint32_t chan_no);
1221:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1222:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1223:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1224:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1225:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Specific channel number to enable specific channel. \b Range: 0 to 8\n
1226:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param level Passive level selection. Use type @ref XMC_BCCU_CH_ACTIVE_LEVEL_t.\n
1227:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              \b Range: XMC_BCCU_CH_ACTIVE_LEVEL_HIGH or XMC_BCCU_CH_ACTIVE_LEVEL_LOW
1228:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1229:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1230:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1231:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1232:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures passive level of specific channel using \a chan_no by writing a register bit CHOCON_C
1233:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1234:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1235:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConcurrentSetOutputPassiveLevel()\n\n\n
1236:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1237:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_SetOutputPassiveLevel(XMC_BCCU_t *const bccu, uint32_t chan_no, XMC_BCCU_CH_ACTIVE_LE
1238:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1239:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1240:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1241:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1242:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Channel number to enable specific channel trap functionality. \b Range: 0 to 8
1243:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1244:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1245:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1246:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1247:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables specific channel trap functionality using \a chan_no by writing a register bit CHOCON_CH
1248:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1249:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1250:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_DisableTrap(), XMC_BCCU_ConcurrentEnableTrap(), XMC_BCCU_SelectTrapInput(), XMC_BCCU_Se
1251:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1252:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_EnableTrap (XMC_BCCU_t *const bccu, uint32_t chan_no);
1253:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1254:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1255:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1256:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1257:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Channel number to disable specific channel trap functionality. \b Range: 0 to 8
1258:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1259:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1260:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1261:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1262:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables specific channel trap functionality using \a chan_no by writing a register bit CHOCON_C
1263:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1264:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1265:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableTrap(), XMC_BCCU_ConcurrentDisableTrap()\n\n\n
1266:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1267:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_DisableTrap (XMC_BCCU_t *const bccu, uint32_t chan_no);
1268:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1269:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1270:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1271:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1272:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Channel number to trigger a specific channel. \b Range: 0 to 8
1273:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param trig_line Trigger line number to trigger a vadc. Use type @ref XMC_BCCU_CH_TRIGOUT_t.\n
1274:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                  \b Range: XMC_BCCU_CH_TRIGOUT0 or XMC_BCCU_CH_TRIGOUT1
1275:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1276:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1277:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1278:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1279:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables specific channel trigger using \a chan_no by writing a register bit CHOCON_CHyTPE.\n\n
1280:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1281:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1282:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_DisableChannelTrigger(), XMC_BCCU_CH_ConfigTrigger()\n\
1283:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1284:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_EnableChannelTrigger (XMC_BCCU_t *const bccu, uint32_t chan_no, XMC_BCCU_CH_TRIGOUT_t
1285:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1286:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1287:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1288:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1289:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Channel number to trigger a specific channel. \b Range: 0 to 8
1290:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1291:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1292:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1293:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1294:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables specific channel trigger using \a chan_no by writing a register bit CHOCON_CHyTPE.\n\n
1295:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1296:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1297:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_EnableChannelTrigger()\n\n\n
1298:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1299:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_DisableChannelTrigger (XMC_BCCU_t *const bccu, uint32_t chan_no);
1300:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1301:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1302:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1303:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1304:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param config Pointer to constant bccu channel configuration data structure. Use type @ref XMC_B
1305:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1306:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1307:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1308:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1309:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures dimming engine source, dimming bypass selection, channel trigger edge, flicker watchd
1310:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * trigger selection by using \a dim_sel, \a dim_bypass, \a trig_edge, \a flick_wd_en, \a force_tri
1311:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * CHCONFIG register. And also configures packer settings: threshold, off and on compare levels, in
1312:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * counters, by writing into a CHCONFIG, PKCMP and PKCNTR registers.\n\n
1313:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1314:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1315:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_GlobalInit(), XMC_BCCU_DIM_Init()\n\n\n
1316:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1317:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_Init (XMC_BCCU_CH_t *const channel, const XMC_BCCU_CH_CONFIG_t *const config);
1318:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1319:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1320:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1321:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1322:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param edge Output transition selection. Use type @ref XMC_BCCU_CH_TRIG_EDGE_t. \n
1323:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *             \b Range: XMC_BCCU_CH_TRIG_EDGE_PASS_TO_ACT or XMC_BCCU_CH_TRIG_EDGE_ACT_TO_PASS\n
1324:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param force_trig_en Forcing a trigger at output. \b Range: 0 or 1\n
1325:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                      Generates a trigger if modulator output do not change for 256 bclk cycles\n
1326:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1327:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1328:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1329:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1330:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures global trigger settings: trigger edge, force trigger enable by writing a register CHC
1331:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * And also configures force trigger enable, generates a trigger if modulator output do not change 
1332:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1333:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1334:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_EnableChannelTrigger()\n\n\n
1335:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1336:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_ConfigTrigger (XMC_BCCU_CH_t *const channel, XMC_BCCU_CH_TRIG_EDGE_t edge, uint32_
1337:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1338:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1339:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1340:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1341:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Specific channel number to start color change \b Range: 0 to 8\n
1342:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1343:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1344:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1345:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1346:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * After channel initialization, the outcome of executing the API starts changing the color smoothl
1347:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * by writing a register bit CHSTRCON_CHyS.\n\n
1348:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1349:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1350:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_AbortLinearWalk(), XMC_BCCU_CH_SetTargetIntensity(), XMC_BCCU_IsLinearWalkComplete(),
1351:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ConcurrentStartLinearWalk()\n\n\n
1352:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1353:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_StartLinearWalk (XMC_BCCU_t *const bccu, uint32_t chan_no)
1354:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
  25              	 .loc 1 1354 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 3960     	 str r1,[r7]
1355:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->CHSTRCON |= (uint32_t)(BCCU_CHSTRCON_CH0S_Msk << chan_no);
  40              	 .loc 1 1355 0
  41 000a 7B68     	 ldr r3,[r7,#4]
  42 000c 9A69     	 ldr r2,[r3,#24]
  43 000e 3B68     	 ldr r3,[r7]
  44 0010 0121     	 mov r1,#1
  45 0012 9940     	 lsl r1,r1,r3
  46 0014 0B1C     	 mov r3,r1
  47 0016 1A43     	 orr r2,r3
  48 0018 7B68     	 ldr r3,[r7,#4]
  49 001a 9A61     	 str r2,[r3,#24]
1356:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
  50              	 .loc 1 1356 0
  51 001c BD46     	 mov sp,r7
  52 001e 02B0     	 add sp,sp,#8
  53              	 
  54 0020 80BD     	 pop {r7,pc}
  55              	 .cfi_endproc
  56              	.LFE53:
  58 0022 C046     	 .section .text.XMC_BCCU_AbortLinearWalk,"ax",%progbits
  59              	 .align 2
  60              	 .code 16
  61              	 .thumb_func
  63              	XMC_BCCU_AbortLinearWalk:
  64              	.LFB54:
1357:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1358:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1359:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1360:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1361:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Specific channel number to stop color change \b Range: 0 to 8\n
1362:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1363:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1364:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1365:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1366:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * When the linear walk in progress, the outcome of executing the API is stopping the linear walk (
1367:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * immediately for specific channels number using \a mask by writing a register CHSTRCON_CHyA.\n\n
1368:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1369:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1370:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_StartLinearWalk(), XMC_BCCU_ConcurrentAbortLinearWalk()\n\n\n
1371:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1372:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_AbortLinearWalk (XMC_BCCU_t *const bccu, uint32_t chan_no)
1373:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
  65              	 .loc 1 1373 0
  66              	 .cfi_startproc
  67 0000 80B5     	 push {r7,lr}
  68              	.LCFI3:
  69              	 .cfi_def_cfa_offset 8
  70              	 .cfi_offset 7,-8
  71              	 .cfi_offset 14,-4
  72 0002 82B0     	 sub sp,sp,#8
  73              	.LCFI4:
  74              	 .cfi_def_cfa_offset 16
  75 0004 00AF     	 add r7,sp,#0
  76              	.LCFI5:
  77              	 .cfi_def_cfa_register 7
  78 0006 7860     	 str r0,[r7,#4]
  79 0008 3960     	 str r1,[r7]
1374:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   bccu->CHSTRCON |= (uint32_t)(BCCU_CHSTRCON_CH0A_Msk << chan_no);
  80              	 .loc 1 1374 0
  81 000a 7B68     	 ldr r3,[r7,#4]
  82 000c 9A69     	 ldr r2,[r3,#24]
  83 000e 3B68     	 ldr r3,[r7]
  84 0010 8021     	 mov r1,#128
  85 0012 4902     	 lsl r1,r1,#9
  86 0014 9940     	 lsl r1,r1,r3
  87 0016 0B1C     	 mov r3,r1
  88 0018 1A43     	 orr r2,r3
  89 001a 7B68     	 ldr r3,[r7,#4]
  90 001c 9A61     	 str r2,[r3,#24]
1375:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
  91              	 .loc 1 1375 0
  92 001e BD46     	 mov sp,r7
  93 0020 02B0     	 add sp,sp,#8
  94              	 
  95 0022 80BD     	 pop {r7,pc}
  96              	 .cfi_endproc
  97              	.LFE54:
  99              	 .section .text.XMC_BCCU_IsLinearWalkComplete,"ax",%progbits
 100              	 .align 2
 101              	 .code 16
 102              	 .thumb_func
 104              	XMC_BCCU_IsLinearWalkComplete:
 105              	.LFB56:
1376:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1377:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1378:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1379:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1380:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Specific channel number to get an output level on last trigger. \b Range: 0 to 8\
1381:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1382:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Trap channel output level. \b Range: 0 or 1
1383:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1384:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves output level of specific channel number when last trigger occurred by reading the regi
1385:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1386:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1387:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ReadLastTrigChanNr(), XMC_BCCU_ConfigGlobalTrigger(), XMC_BCCU_ConcurrentConfigTrigger(
1388:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_ReadGlobalTrigger(), XMC_BCCU_GlobalInit()\n\n\n
1389:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1390:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_GetChannelOutputLvlAtLastTrigger (XMC_BCCU_t *const bccu, uint32_
1391:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1392:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)((bccu->LTCHOL & (BCCU_LTCHOL_LTOL0_Msk << chan_no)) >> chan_no);
1393:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1394:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1395:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1396:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1397:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1398:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param clk_div Prescaler factor. \b Range: 0 to 1023
1399:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1400:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1401:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1402:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1403:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * configure the linear walker clock prescaler factor by writing register bit CHCONFIG_LINPRES.\n\n
1404:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1405:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1406:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_SetLinearWalkPrescaler (XMC_BCCU_CH_t *const channel, uint32_t clk_div);
1407:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1408:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1409:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1410:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param bccu Base address of the bccu module. \b Range: BCCU0
1411:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param chan_no Channel number to know the linear walk completion status. \b Range: 0 to 8\n
1412:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1413:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Linear walk completion status. \b Range: 0-Completed or 1-intensity start changing towar
1414:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1415:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves linear walk completion status for specific channel using \a chan_no by reading the reg
1416:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1417:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1418:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetTargetIntensity(), XMC_BCCU_StartLinearWalk()\n\n\n
1419:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1420:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_IsLinearWalkComplete (XMC_BCCU_t *const bccu, uint32_t chan_no)
1421:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 106              	 .loc 1 1421 0
 107              	 .cfi_startproc
 108 0000 80B5     	 push {r7,lr}
 109              	.LCFI6:
 110              	 .cfi_def_cfa_offset 8
 111              	 .cfi_offset 7,-8
 112              	 .cfi_offset 14,-4
 113 0002 82B0     	 sub sp,sp,#8
 114              	.LCFI7:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI8:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 120 0008 3960     	 str r1,[r7]
1422:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)((bccu->CHSTRCON & (BCCU_CHSTRCON_CH0S_Msk << chan_no)) >> chan_no);
 121              	 .loc 1 1422 0
 122 000a 7B68     	 ldr r3,[r7,#4]
 123 000c 9B69     	 ldr r3,[r3,#24]
 124 000e 3A68     	 ldr r2,[r7]
 125 0010 0121     	 mov r1,#1
 126 0012 9140     	 lsl r1,r1,r2
 127 0014 0A1C     	 mov r2,r1
 128 0016 1A40     	 and r2,r3
 129 0018 3B68     	 ldr r3,[r7]
 130 001a DA40     	 lsr r2,r2,r3
 131 001c 131C     	 mov r3,r2
1423:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 132              	 .loc 1 1423 0
 133 001e 181C     	 mov r0,r3
 134 0020 BD46     	 mov sp,r7
 135 0022 02B0     	 add sp,sp,#8
 136              	 
 137 0024 80BD     	 pop {r7,pc}
 138              	 .cfi_endproc
 139              	.LFE56:
 141 0026 C046     	 .section .text.XMC_BCCU_CH_EnableGating,"ax",%progbits
 142              	 .align 2
 143              	 .code 16
 144              	 .thumb_func
 146              	XMC_BCCU_CH_EnableGating:
 147              	.LFB60:
1424:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1425:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1426:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1427:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1428:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param ch_int Target channel intensity. \b Range: 0 to 4095
1429:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1430:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1431:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1432:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1433:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures target channel intensity by writing register INTS, only be written if no shadow trans
1434:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Use XMC_BCCU_IsLinearWalkComplete() to know shadow transfer finished \n\n
1435:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1436:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1437:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_IsLinearWalkComplete(), XMC_BCCU_StartLinearWalk(), XMC_BCCU_CH_ReadIntensity()\n\n\n
1438:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1439:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_SetTargetIntensity (XMC_BCCU_CH_t *const channel, uint32_t ch_int);
1440:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1441:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1442:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1443:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1444:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1445:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Current channel intensity. \b Range: 0 or 4095
1446:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1447:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves current channel intensity by reading the register INT.\n\n
1448:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1449:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1450:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetTargetIntensity()\n\n\n
1451:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1452:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** uint32_t XMC_BCCU_CH_ReadIntensity (XMC_BCCU_CH_t *const channel);
1453:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1454:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1455:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1456:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1457:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param thresh Packer threshold value of FIFO. It defines number of queue stages must be filled b
1458:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *               starts generating the pulses. Until that, only off-bits are generated at the outpu
1459:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param off_comp Packer off-time compare level. When the off-time counter reaches this, the measu
1460:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                 counters are stored into FIFO
1461:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param on_comp Packer on-time compare level. When the on-time counter reaches this, the measured
1462:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                counters are stored into FIFO
1463:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1464:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1465:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1466:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1467:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables packer by writing register bit CHCONFIG_PEN. And also configures packer threshold, off a
1468:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * by writing register PKCMP. The main purpose of the packer is to decrease the average rate of swi
1469:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * signal, to decrease the load on external switching circuits and improve EMC behavior\n\n
1470:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1471:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1472:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_DisablePacker(), XMC_BCCU_CH_SetPackerThreshold(), XMC_BCCU_CH_SetPackerOffCompare()
1473:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1474:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_EnablePacker (XMC_BCCU_CH_t *const channel, uint32_t thresh, uint32_t off_comp, ui
1475:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1476:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1477:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1478:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1479:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param val Packer threshold value of FIFO
1480:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1481:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1482:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1483:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1484:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures packer threshold by writing register bit CHCONFIG_PKTH\n\n
1485:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1486:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1487:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerOffCompare(), XMC_BCCU_CH_SetPackerOnCompare, XMC_BCCU_CH_ReadPackerThresho
1488:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1489:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_SetPackerThreshold (XMC_BCCU_CH_t *const channel, uint32_t val);
1490:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1491:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1492:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1493:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1494:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param level Packer off-time compare level. When the off-time counter reaches this, the measured
1495:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              are stored into FIFO
1496:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1497:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1498:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1499:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1500:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures packer off compare level by writing register bit PKCMP_OFFCMP\n\n
1501:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1502:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1503:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerThreshold(), XMC_BCCU_CH_SetPackerOnCompare(), XMC_BCCU_CH_SetPackerOffCoun
1504:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_ReadPackerOffCompare()\n\n\n
1505:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1506:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_SetPackerOffCompare (XMC_BCCU_CH_t *const channel, uint32_t level);
1507:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1508:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1509:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1510:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1511:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param level Packer on-time compare level. When the on-time counter reaches this, the measured o
1512:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *              are stored into FIFO
1513:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1514:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1515:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1516:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1517:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures packer on compare level by writing register bit PKCMP_ONCMP\n\n
1518:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1519:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1520:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerThreshold(), XMC_BCCU_CH_SetPackerOffCompare(), XMC_BCCU_CH_SetPackerOnCoun
1521:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_ReadPackerOnCompare()\n\n\n
1522:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1523:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_SetPackerOnCompare (XMC_BCCU_CH_t *const channel, uint32_t level);
1524:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1525:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1526:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1527:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1528:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1529:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Packer threshold value of FIFO
1530:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1531:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves packer threshold value by reading the register bit CHCONFIG_PKTH.\n\n
1532:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1533:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1534:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerThreshold()\n\n\n
1535:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1536:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_CH_ReadPackerThreshold (XMC_BCCU_CH_t *const channel)
1537:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1538:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)((channel->CHCONFIG) & BCCU_CH_CHCONFIG_PKTH_Msk);
1539:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1540:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1541:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1542:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1543:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1544:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1545:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Packer off-time compare level. When the off-time counter reaches this, the measured on &
1546:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *         are stored into FIFO
1547:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1548:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves packer off compare level by reading the register bit PKCMP_OFFCMP.\n\n
1549:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1550:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1551:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerOffCompare()\n\n\n
1552:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1553:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_CH_ReadPackerOffCompare (XMC_BCCU_CH_t *const channel)
1554:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1555:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)((channel->PKCMP) & BCCU_CH_PKCMP_OFFCMP_Msk);
1556:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1557:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1558:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1559:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1560:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1561:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1562:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return Packer on-time compare level. When the on-time counter reaches this, <br>
1563:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *         the measured on & off time counters are stored into FIFO
1564:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1565:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Retrieves packer on compare level by reading the register bit PKCMP_ONCMP.\n\n
1566:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1567:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1568:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerOnCompare()\n\n\n
1569:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1570:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE uint32_t XMC_BCCU_CH_ReadPackerOnCompare (XMC_BCCU_CH_t *const channel)
1571:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
1572:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   return (uint32_t)(((channel->PKCMP) & BCCU_CH_PKCMP_ONCMP_Msk) >> BCCU_CH_PKCMP_ONCMP_Pos);
1573:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
1574:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1575:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1576:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1577:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1578:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1579:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1580:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1581:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1582:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables packer by clearing writing register bit CHCONFIG_PEN. \n\n
1583:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1584:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1585:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_EnablePacker()\n\n\n
1586:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1587:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_DisablePacker (XMC_BCCU_CH_t *const channel);
1588:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1589:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1590:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1591:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1592:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param cnt_val Configures an initial packer off-time counter level, only if channel is disabled.
1593:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                shift of the modulator output
1594:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1595:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1596:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1597:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1598:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures packer initial off counter value by writing register bit PKCNTR_OFFCNTVAL\n
1599:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Note: Shall only be called if channel disabled.\n\n
1600:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1601:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1602:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerOnCounter(), XMC_BCCU_CH_SetPackerOffCompare()\n\n\n
1603:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1604:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_SetPackerOffCounter (XMC_BCCU_CH_t *const channel, uint32_t cnt_val);
1605:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1606:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1607:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1608:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1609:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param cnt_val Configures an initial packer on-time counter level, only if channel is disabled. 
1610:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *                of the modulator output
1611:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1612:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1613:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1614:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1615:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures packer initial on counter value by writing register bit PKCNTR_ONCNTVAL\n
1616:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Note: Shall only be called if channel disabled.\n\n
1617:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1618:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1619:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SetPackerOffCounter(), XMC_BCCU_CH_SetPackerOnCompare()\n\n\n
1620:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1621:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_SetPackerOnCounter (XMC_BCCU_CH_t *const channel, uint32_t cnt_val);
1622:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1623:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1624:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1625:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1626:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param sel Selects a dimming engine source of the channel. Use type @ref XMC_BCCU_CH_DIMMING_SOU
1627:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1628:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1629:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1630:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1631:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Configures dimming engine source by writing register bit CHCONFIG_DSEL\n\n
1632:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1633:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1634:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_EnableDimmingBypass()\n\n\n
1635:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1636:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_SelectDimEngine (XMC_BCCU_CH_t *const channel, XMC_BCCU_CH_DIMMING_SOURCE_t sel);
1637:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1638:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1639:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1640:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1641:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1642:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1643:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1644:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1645:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables dimming engine bypass by writing register bit CHCONFIG_DBP. \n\n
1646:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1647:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1648:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_SelectDimEngine(), XMC_BCCU_CH_DisableDimmingBypass()\n\n\n
1649:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1650:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_EnableDimmingBypass (XMC_BCCU_CH_t *const channel);
1651:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1652:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1653:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1654:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1655:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1656:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1657:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1658:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1659:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables dimming engine bypass by clearing register bit CHCONFIG_DBP. \n\n
1660:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1661:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1662:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_EnableDimmingBypass()\n\n\n
1663:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1664:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** void XMC_BCCU_CH_DisableDimmingBypass (XMC_BCCU_CH_t *const channel);
1665:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1666:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1667:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1668:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1669:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1670:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1671:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1672:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1673:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Enables gating feature by writing register bit CHCONFIG_GEN. The gating feature is used to enabl
1674:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * such as peak-current control and this has been controlled by Analog Comparator module.\n\n
1675:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1676:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1677:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_DisableGating()\n\n\n
1678:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1679:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_CH_EnableGating (XMC_BCCU_CH_t *const channel)
1680:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 148              	 .loc 1 1680 0
 149              	 .cfi_startproc
 150 0000 80B5     	 push {r7,lr}
 151              	.LCFI9:
 152              	 .cfi_def_cfa_offset 8
 153              	 .cfi_offset 7,-8
 154              	 .cfi_offset 14,-4
 155 0002 82B0     	 sub sp,sp,#8
 156              	.LCFI10:
 157              	 .cfi_def_cfa_offset 16
 158 0004 00AF     	 add r7,sp,#0
 159              	.LCFI11:
 160              	 .cfi_def_cfa_register 7
 161 0006 7860     	 str r0,[r7,#4]
1681:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   channel->CHCONFIG |= (uint32_t)(BCCU_CH_CHCONFIG_GEN_Msk);
 162              	 .loc 1 1681 0
 163 0008 7B68     	 ldr r3,[r7,#4]
 164 000a 9B68     	 ldr r3,[r3,#8]
 165 000c 8022     	 mov r2,#128
 166 000e 5200     	 lsl r2,r2,#1
 167 0010 1A43     	 orr r2,r3
 168 0012 7B68     	 ldr r3,[r7,#4]
 169 0014 9A60     	 str r2,[r3,#8]
1682:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 170              	 .loc 1 1682 0
 171 0016 BD46     	 mov sp,r7
 172 0018 02B0     	 add sp,sp,#8
 173              	 
 174 001a 80BD     	 pop {r7,pc}
 175              	 .cfi_endproc
 176              	.LFE60:
 178              	 .section .text.XMC_BCCU_CH_DisableGating,"ax",%progbits
 179              	 .align 2
 180              	 .code 16
 181              	 .thumb_func
 183              	XMC_BCCU_CH_DisableGating:
 184              	.LFB61:
1683:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** 
1684:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** /**
1685:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1686:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @param channel Base address of the bccu channel. \b Range: BCCU0_CH0, BCCU0_CH1..
1687:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1688:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * @return None
1689:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1690:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Description:</b><br>
1691:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * Disables gating feature by writing register bit CHCONFIG_GEN. The gating feature is used to enab
1692:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * schemes, such as peak-current control and this has been controlled by Analog Comparator module. 
1693:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  *
1694:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * \par<b>Related APIs:</b><BR>
1695:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  * XMC_BCCU_CH_EnableGating()\n\n\n
1696:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****  */
1697:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** __STATIC_INLINE void XMC_BCCU_CH_DisableGating (XMC_BCCU_CH_t *const channel)
1698:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** {
 185              	 .loc 1 1698 0
 186              	 .cfi_startproc
 187 0000 80B5     	 push {r7,lr}
 188              	.LCFI12:
 189              	 .cfi_def_cfa_offset 8
 190              	 .cfi_offset 7,-8
 191              	 .cfi_offset 14,-4
 192 0002 82B0     	 sub sp,sp,#8
 193              	.LCFI13:
 194              	 .cfi_def_cfa_offset 16
 195 0004 00AF     	 add r7,sp,#0
 196              	.LCFI14:
 197              	 .cfi_def_cfa_register 7
 198 0006 7860     	 str r0,[r7,#4]
1699:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h ****   channel->CHCONFIG &= ~(uint32_t)(BCCU_CH_CHCONFIG_GEN_Msk);
 199              	 .loc 1 1699 0
 200 0008 7B68     	 ldr r3,[r7,#4]
 201 000a 9B68     	 ldr r3,[r3,#8]
 202 000c 034A     	 ldr r2,.L7
 203 000e 1A40     	 and r2,r3
 204 0010 7B68     	 ldr r3,[r7,#4]
 205 0012 9A60     	 str r2,[r3,#8]
1700:C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc\xmc_bccu.h **** }
 206              	 .loc 1 1700 0
 207 0014 BD46     	 mov sp,r7
 208 0016 02B0     	 add sp,sp,#8
 209              	 
 210 0018 80BD     	 pop {r7,pc}
 211              	.L8:
 212 001a C046     	 .align 2
 213              	.L7:
 214 001c FFFEFFFF 	 .word -257
 215              	 .cfi_endproc
 216              	.LFE61:
 218              	 .section .text.PDM_BCCU_GetAppVersion,"ax",%progbits
 219              	 .align 2
 220              	 .global PDM_BCCU_GetAppVersion
 221              	 .code 16
 222              	 .thumb_func
 224              	PDM_BCCU_GetAppVersion:
 225              	.LFB91:
 226              	 .file 2 "../Dave/Generated/PDM_BCCU/pdm_bccu.c"
   1:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
   2:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * @file pdm_bccu.c
   3:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * @date 2016-07-15
   4:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
   5:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * NOTE:
   6:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
   8:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * @cond
   9:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  **************************************************************************************************
  10:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * PDM_BCCU v4.1.8 - PDM_BCCU APP configures the Channel registers of the Brightness and Color Cont
  11:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  12:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  13:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * All rights reserved.
  14:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  15:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * following conditions are met:
  17:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  18:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *   disclaimer.
  20:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  21:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  24:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  27:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  35:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  **************************************************************************************************
  38:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  39:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * Change History
  40:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * --------------
  41:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  42:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * 2015-02-16
  43:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *     - Initial version.<br>
  44:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  45:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * 2015-05-07
  46:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *     - PDM_BCCU_SelDimEngine() removed.<br>
  47:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *     - XMC_ASSERT is added in all API's.<br>
  48:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  49:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  50:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * @endcond
  51:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  52:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  */
  53:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  54:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**************************************************************************************************
  55:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * HEADER FILES
  56:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  **************************************************************************************************
  57:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** #include "pdm_bccu.h"
  58:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  59:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**************************************************************************************************
  60:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * MACROS
  61:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  **************************************************************************************************
  62:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  63:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**************************************************************************************************
  64:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * LOCAL DATA
  65:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  **************************************************************************************************
  66:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  67:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**************************************************************************************************
  68:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * LOCAL ROUTINES
  69:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  **************************************************************************************************
  70:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  71:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  /*************************************************************************************************
  72:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * API IMPLEMENTATION
  73:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  **************************************************************************************************
  74:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  75:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /*
  76:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * @brief API to retrieve the version of the PDM_BCCU
  77:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *
  78:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * @return DAVE_APP_VERSION_t Structure containing major version, minor version
  79:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *         and patch version.
  80:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  */
  81:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** DAVE_APP_VERSION_t PDM_BCCU_GetAppVersion(void)
  82:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 227              	 .loc 2 82 0
 228              	 .cfi_startproc
 229 0000 80B5     	 push {r7,lr}
 230              	.LCFI15:
 231              	 .cfi_def_cfa_offset 8
 232              	 .cfi_offset 7,-8
 233              	 .cfi_offset 14,-4
 234 0002 82B0     	 sub sp,sp,#8
 235              	.LCFI16:
 236              	 .cfi_def_cfa_offset 16
 237 0004 00AF     	 add r7,sp,#0
 238              	.LCFI17:
 239              	 .cfi_def_cfa_register 7
  83:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   DAVE_APP_VERSION_t version;
  84:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  85:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   version.major = (uint8_t)PDM_BCCU_MAJOR_VERSION;
 240              	 .loc 2 85 0
 241 0006 3B1C     	 mov r3,r7
 242 0008 0422     	 mov r2,#4
 243 000a 1A70     	 strb r2,[r3]
  86:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   version.minor = (uint8_t)PDM_BCCU_MINOR_VERSION;
 244              	 .loc 2 86 0
 245 000c 3B1C     	 mov r3,r7
 246 000e 0122     	 mov r2,#1
 247 0010 5A70     	 strb r2,[r3,#1]
  87:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   version.patch = (uint8_t)PDM_BCCU_PATCH_VERSION;
 248              	 .loc 2 87 0
 249 0012 3B1C     	 mov r3,r7
 250 0014 0822     	 mov r2,#8
 251 0016 9A70     	 strb r2,[r3,#2]
  88:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  89:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   return (version);
 252              	 .loc 2 89 0
 253 0018 3B1D     	 add r3,r7,#4
 254 001a 3A1C     	 mov r2,r7
 255 001c 1188     	 ldrh r1,[r2]
 256 001e 1980     	 strh r1,[r3]
 257 0020 9278     	 ldrb r2,[r2,#2]
 258 0022 9A70     	 strb r2,[r3,#2]
 259 0024 3A1D     	 add r2,r7,#4
 260 0026 0023     	 mov r3,#0
 261 0028 1178     	 ldrb r1,[r2]
 262 002a FF20     	 mov r0,#255
 263 002c 0140     	 and r1,r0
 264 002e FF20     	 mov r0,#255
 265 0030 8343     	 bic r3,r0
 266 0032 0B43     	 orr r3,r1
 267 0034 5178     	 ldrb r1,[r2,#1]
 268 0036 FF20     	 mov r0,#255
 269 0038 0140     	 and r1,r0
 270 003a 0902     	 lsl r1,r1,#8
 271 003c 0648     	 ldr r0,.L11
 272 003e 0340     	 and r3,r0
 273 0040 0B43     	 orr r3,r1
 274 0042 9278     	 ldrb r2,[r2,#2]
 275 0044 FF21     	 mov r1,#255
 276 0046 0A40     	 and r2,r1
 277 0048 1204     	 lsl r2,r2,#16
 278 004a 0449     	 ldr r1,.L11+4
 279 004c 0B40     	 and r3,r1
 280 004e 1343     	 orr r3,r2
  90:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 281              	 .loc 2 90 0
 282 0050 181C     	 mov r0,r3
 283 0052 BD46     	 mov sp,r7
 284 0054 02B0     	 add sp,sp,#8
 285              	 
 286 0056 80BD     	 pop {r7,pc}
 287              	.L12:
 288              	 .align 2
 289              	.L11:
 290 0058 FF00FFFF 	 .word -65281
 291 005c FFFF00FF 	 .word -16711681
 292              	 .cfi_endproc
 293              	.LFE91:
 295              	 .section .text.PDM_BCCU_Init,"ax",%progbits
 296              	 .align 2
 297              	 .global PDM_BCCU_Init
 298              	 .code 16
 299              	 .thumb_func
 301              	PDM_BCCU_Init:
 302              	.LFB92:
  91:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  92:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
  93:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  * @brief This function Initializes a  PDM_BCCU APP instances based on user
  94:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  *          configuration.
  95:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****  */
  96:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
  97:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** PDM_BCCU_STATUS_t PDM_BCCU_Init(PDM_BCCU_t * handle)
  98:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 303              	 .loc 2 98 0
 304              	 .cfi_startproc
 305 0000 90B5     	 push {r4,r7,lr}
 306              	.LCFI18:
 307              	 .cfi_def_cfa_offset 12
 308              	 .cfi_offset 4,-12
 309              	 .cfi_offset 7,-8
 310              	 .cfi_offset 14,-4
 311 0002 85B0     	 sub sp,sp,#20
 312              	.LCFI19:
 313              	 .cfi_def_cfa_offset 32
 314 0004 00AF     	 add r7,sp,#0
 315              	.LCFI20:
 316              	 .cfi_def_cfa_register 7
 317 0006 7860     	 str r0,[r7,#4]
  99:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   PDM_BCCU_STATUS_t status;
 100:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 101:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   /* Checks input parameters when XMC_ASSERT is enabled. Useful for Debugging */
 102:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU APP handle function pointer uninitialized", (((handle != NULL) &&
 103:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   			(handle->bccu_regs != NULL)) && ((handle->config != NULL) && (handle->gpio_config != NULL) &&
 104:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****             (handle->gpio_port != NULL) && (handle->bccu_ch != NULL) && (handle->global_bccu_handle
 105:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****            (handle->channel_enable_at_init <= 1) && (handle->channel_no <= 8U) && (handle->linear_w
 106:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****             (handle->intensity <= 4095U) && (handle->output_level <= 1) && (handle->trigger_line <=
 107:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 108:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   /* Checking for initialization state of the instance */
 109:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 110:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   /* GLOBAL_BCCU APP Initialization for XMC1000 devices */
 111:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   status = (PDM_BCCU_STATUS_t)GLOBAL_BCCU_Init(handle->global_bccu_handleptr);
 318              	 .loc 2 111 0
 319 0008 7B68     	 ldr r3,[r7,#4]
 320 000a 5B69     	 ldr r3,[r3,#20]
 321 000c 0F22     	 mov r2,#15
 322 000e BC18     	 add r4,r7,r2
 323 0010 181C     	 mov r0,r3
 324 0012 FFF7FEFF 	 bl GLOBAL_BCCU_Init
 325 0016 031C     	 mov r3,r0
 326 0018 2370     	 strb r3,[r4]
 112:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   if (status != PDM_BCCU_STATUS_FAILURE)
 327              	 .loc 2 112 0
 328 001a 0F23     	 mov r3,#15
 329 001c FB18     	 add r3,r7,r3
 330 001e 1B78     	 ldrb r3,[r3]
 331 0020 012B     	 cmp r3,#1
 332 0022 00D1     	 bne .LCB283
 333 0024 7AE0     	 b .L14
 334              	.LCB283:
 113:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   {
 114:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     if (true == handle->output_pin_enable)
 335              	 .loc 2 114 0
 336 0026 7B68     	 ldr r3,[r7,#4]
 337 0028 2D22     	 mov r2,#45
 338 002a 9B5C     	 ldrb r3,[r3,r2]
 339 002c 002B     	 cmp r3,#0
 340 002e 0BD0     	 beq .L15
 115:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     {
 116:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       /* Hardware initialization based on UI */
 117:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       XMC_GPIO_Init(handle->gpio_port, handle->gpio_pin, handle->gpio_config);
 341              	 .loc 2 117 0
 342 0030 7B68     	 ldr r3,[r7,#4]
 343 0032 D968     	 ldr r1,[r3,#12]
 344 0034 7B68     	 ldr r3,[r7,#4]
 345 0036 2C22     	 mov r2,#44
 346 0038 9A5C     	 ldrb r2,[r3,r2]
 347 003a 7B68     	 ldr r3,[r7,#4]
 348 003c 9B68     	 ldr r3,[r3,#8]
 349 003e 081C     	 mov r0,r1
 350 0040 111C     	 mov r1,r2
 351 0042 1A1C     	 mov r2,r3
 352 0044 FFF7FEFF 	 bl XMC_GPIO_Init
 353              	.L15:
 118:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     }
 119:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     XMC_BCCU_SetOutputPassiveLevel(handle->bccu_regs, handle->channel_no,
 354              	 .loc 2 119 0
 355 0048 7B68     	 ldr r3,[r7,#4]
 356 004a 1968     	 ldr r1,[r3]
 357 004c 7B68     	 ldr r3,[r7,#4]
 358 004e DA69     	 ldr r2,[r3,#28]
 359 0050 7B68     	 ldr r3,[r7,#4]
 360 0052 5B7E     	 ldrb r3,[r3,#25]
 361 0054 081C     	 mov r0,r1
 362 0056 111C     	 mov r1,r2
 363 0058 1A1C     	 mov r2,r3
 364 005a FFF7FEFF 	 bl XMC_BCCU_SetOutputPassiveLevel
 120:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     		                      (XMC_BCCU_CH_ACTIVE_LEVEL_t)handle->output_level);
 121:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     if (true == handle->trap_enable)
 365              	 .loc 2 121 0
 366 005e 7B68     	 ldr r3,[r7,#4]
 367 0060 2E22     	 mov r2,#46
 368 0062 9B5C     	 ldrb r3,[r3,r2]
 369 0064 002B     	 cmp r3,#0
 370 0066 07D0     	 beq .L16
 122:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     {
 123:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       XMC_BCCU_EnableTrap (handle->bccu_regs, handle->channel_no);
 371              	 .loc 2 123 0
 372 0068 7B68     	 ldr r3,[r7,#4]
 373 006a 1A68     	 ldr r2,[r3]
 374 006c 7B68     	 ldr r3,[r7,#4]
 375 006e DB69     	 ldr r3,[r3,#28]
 376 0070 101C     	 mov r0,r2
 377 0072 191C     	 mov r1,r3
 378 0074 FFF7FEFF 	 bl XMC_BCCU_EnableTrap
 379              	.L16:
 124:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     }
 125:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     if ((bool)true == handle->trigger_en)
 380              	 .loc 2 125 0
 381 0078 7B68     	 ldr r3,[r7,#4]
 382 007a 9B6A     	 ldr r3,[r3,#40]
 383 007c 012B     	 cmp r3,#1
 384 007e 1DD1     	 bne .L17
 126:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     {
 127:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       XMC_BCCU_CH_ConfigTrigger(handle->bccu_ch,
 385              	 .loc 2 127 0
 386 0080 7B68     	 ldr r3,[r7,#4]
 387 0082 1A69     	 ldr r2,[r3,#16]
 128:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****                                (XMC_BCCU_CH_TRIG_EDGE_t)handle->config->trig_edge,handle->config->f
 388              	 .loc 2 128 0
 389 0084 7B68     	 ldr r3,[r7,#4]
 390 0086 5B68     	 ldr r3,[r3,#4]
 391 0088 5B78     	 ldrb r3,[r3,#1]
 392 008a 5B07     	 lsl r3,r3,#29
 393 008c DB0F     	 lsr r3,r3,#31
 394 008e DBB2     	 uxtb r3,r3
 127:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****                                (XMC_BCCU_CH_TRIG_EDGE_t)handle->config->trig_edge,handle->config->f
 395              	 .loc 2 127 0
 396 0090 191C     	 mov r1,r3
 397              	 .loc 2 128 0
 398 0092 7B68     	 ldr r3,[r7,#4]
 399 0094 5B68     	 ldr r3,[r3,#4]
 400 0096 5B78     	 ldrb r3,[r3,#1]
 401 0098 1B07     	 lsl r3,r3,#28
 402 009a DB0F     	 lsr r3,r3,#31
 403 009c DBB2     	 uxtb r3,r3
 127:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****                                (XMC_BCCU_CH_TRIG_EDGE_t)handle->config->trig_edge,handle->config->f
 404              	 .loc 2 127 0
 405 009e 101C     	 mov r0,r2
 406 00a0 1A1C     	 mov r2,r3
 407 00a2 FFF7FEFF 	 bl XMC_BCCU_CH_ConfigTrigger
 129:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       XMC_BCCU_EnableChannelTrigger (handle->bccu_regs, handle->channel_no,
 408              	 .loc 2 129 0
 409 00a6 7B68     	 ldr r3,[r7,#4]
 410 00a8 1968     	 ldr r1,[r3]
 411 00aa 7B68     	 ldr r3,[r7,#4]
 412 00ac DA69     	 ldr r2,[r3,#28]
 413 00ae 7B68     	 ldr r3,[r7,#4]
 414 00b0 9B7E     	 ldrb r3,[r3,#26]
 415 00b2 081C     	 mov r0,r1
 416 00b4 111C     	 mov r1,r2
 417 00b6 1A1C     	 mov r2,r3
 418 00b8 FFF7FEFF 	 bl XMC_BCCU_EnableChannelTrigger
 419              	.L17:
 130:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     		                        (XMC_BCCU_CH_TRIGOUT_t)handle->trigger_line);
 131:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     }
 132:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     XMC_BCCU_CH_Init(handle->bccu_ch, handle->config);
 420              	 .loc 2 132 0
 421 00bc 7B68     	 ldr r3,[r7,#4]
 422 00be 1A69     	 ldr r2,[r3,#16]
 423 00c0 7B68     	 ldr r3,[r7,#4]
 424 00c2 5B68     	 ldr r3,[r3,#4]
 425 00c4 101C     	 mov r0,r2
 426 00c6 191C     	 mov r1,r3
 427 00c8 FFF7FEFF 	 bl XMC_BCCU_CH_Init
 133:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 134:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     if (PDM_BCCU_ENABLE_AT_INIT_TRUE == handle->channel_enable_at_init)
 428              	 .loc 2 134 0
 429 00cc 7B68     	 ldr r3,[r7,#4]
 430 00ce 1B7E     	 ldrb r3,[r3,#24]
 431 00d0 012B     	 cmp r3,#1
 432 00d2 1FD1     	 bne .L18
 135:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     {
 136:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       /* To set the linear walker prescaler factor of a BCCU channel */
 137:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       XMC_BCCU_CH_SetLinearWalkPrescaler(handle->bccu_ch, handle->linear_walk_time);
 433              	 .loc 2 137 0
 434 00d4 7B68     	 ldr r3,[r7,#4]
 435 00d6 1A69     	 ldr r2,[r3,#16]
 436 00d8 7B68     	 ldr r3,[r7,#4]
 437 00da 1B6A     	 ldr r3,[r3,#32]
 438 00dc 101C     	 mov r0,r2
 439 00de 191C     	 mov r1,r3
 440 00e0 FFF7FEFF 	 bl XMC_BCCU_CH_SetLinearWalkPrescaler
 138:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 139:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       /* Channel Enable at Initialization for XMC1000 devices */
 140:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       XMC_BCCU_EnableChannel(handle->bccu_regs, handle->channel_no);
 441              	 .loc 2 140 0
 442 00e4 7B68     	 ldr r3,[r7,#4]
 443 00e6 1A68     	 ldr r2,[r3]
 444 00e8 7B68     	 ldr r3,[r7,#4]
 445 00ea DB69     	 ldr r3,[r3,#28]
 446 00ec 101C     	 mov r0,r2
 447 00ee 191C     	 mov r1,r3
 448 00f0 FFF7FEFF 	 bl XMC_BCCU_EnableChannel
 141:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 142:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       /* To set the set the channel target intensity */
 143:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       XMC_BCCU_CH_SetTargetIntensity(handle->bccu_ch, handle->intensity);
 449              	 .loc 2 143 0
 450 00f4 7B68     	 ldr r3,[r7,#4]
 451 00f6 1A69     	 ldr r2,[r3,#16]
 452 00f8 7B68     	 ldr r3,[r7,#4]
 453 00fa 5B6A     	 ldr r3,[r3,#36]
 454 00fc 101C     	 mov r0,r2
 455 00fe 191C     	 mov r1,r3
 456 0100 FFF7FEFF 	 bl XMC_BCCU_CH_SetTargetIntensity
 144:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 145:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       /* To Start Linear Walk of channel */
 146:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****       XMC_BCCU_StartLinearWalk(handle->bccu_regs,handle->channel_no);
 457              	 .loc 2 146 0
 458 0104 7B68     	 ldr r3,[r7,#4]
 459 0106 1A68     	 ldr r2,[r3]
 460 0108 7B68     	 ldr r3,[r7,#4]
 461 010a DB69     	 ldr r3,[r3,#28]
 462 010c 101C     	 mov r0,r2
 463 010e 191C     	 mov r1,r3
 464 0110 FFF7FEFF 	 bl XMC_BCCU_StartLinearWalk
 465              	.L18:
 147:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     }
 148:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     /* Return status after updation */
 149:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****     status = PDM_BCCU_STATUS_SUCCESS;
 466              	 .loc 2 149 0
 467 0114 0F23     	 mov r3,#15
 468 0116 FB18     	 add r3,r7,r3
 469 0118 0022     	 mov r2,#0
 470 011a 1A70     	 strb r2,[r3]
 471              	.L14:
 150:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   }
 151:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   return (status);
 472              	 .loc 2 151 0
 473 011c 0F23     	 mov r3,#15
 474 011e FB18     	 add r3,r7,r3
 475 0120 1B78     	 ldrb r3,[r3]
 152:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 476              	 .loc 2 152 0
 477 0122 181C     	 mov r0,r3
 478 0124 BD46     	 mov sp,r7
 479 0126 05B0     	 add sp,sp,#20
 480              	 
 481 0128 90BD     	 pop {r4,r7,pc}
 482              	 .cfi_endproc
 483              	.LFE92:
 485 012a C046     	 .section .text.PDM_BCCU_EnableChannel,"ax",%progbits
 486              	 .align 2
 487              	 .global PDM_BCCU_EnableChannel
 488              	 .code 16
 489              	 .thumb_func
 491              	PDM_BCCU_EnableChannel:
 492              	.LFB93:
 153:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 154:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 155:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief API to Enable the Channel.
 156:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 157:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_EnableChannel(PDM_BCCU_t *handle)
 158:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 493              	 .loc 2 158 0
 494              	 .cfi_startproc
 495 0000 80B5     	 push {r7,lr}
 496              	.LCFI21:
 497              	 .cfi_def_cfa_offset 8
 498              	 .cfi_offset 7,-8
 499              	 .cfi_offset 14,-4
 500 0002 82B0     	 sub sp,sp,#8
 501              	.LCFI22:
 502              	 .cfi_def_cfa_offset 16
 503 0004 00AF     	 add r7,sp,#0
 504              	.LCFI23:
 505              	 .cfi_def_cfa_register 7
 506 0006 7860     	 str r0,[r7,#4]
 159:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_EnableChannel: handler null pointer", handle != NULL);
 160:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_BCCU_EnableChannel(handle->bccu_regs, handle->channel_no);
 507              	 .loc 2 160 0
 508 0008 7B68     	 ldr r3,[r7,#4]
 509 000a 1A68     	 ldr r2,[r3]
 510 000c 7B68     	 ldr r3,[r7,#4]
 511 000e DB69     	 ldr r3,[r3,#28]
 512 0010 101C     	 mov r0,r2
 513 0012 191C     	 mov r1,r3
 514 0014 FFF7FEFF 	 bl XMC_BCCU_EnableChannel
 161:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 515              	 .loc 2 161 0
 516 0018 BD46     	 mov sp,r7
 517 001a 02B0     	 add sp,sp,#8
 518              	 
 519 001c 80BD     	 pop {r7,pc}
 520              	 .cfi_endproc
 521              	.LFE93:
 523 001e C046     	 .section .text.PDM_BCCU_DisableChannel,"ax",%progbits
 524              	 .align 2
 525              	 .global PDM_BCCU_DisableChannel
 526              	 .code 16
 527              	 .thumb_func
 529              	PDM_BCCU_DisableChannel:
 530              	.LFB94:
 162:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 163:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief API to Disable the Channel.
 164:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 165:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_DisableChannel(PDM_BCCU_t *handle)
 166:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 531              	 .loc 2 166 0
 532              	 .cfi_startproc
 533 0000 80B5     	 push {r7,lr}
 534              	.LCFI24:
 535              	 .cfi_def_cfa_offset 8
 536              	 .cfi_offset 7,-8
 537              	 .cfi_offset 14,-4
 538 0002 82B0     	 sub sp,sp,#8
 539              	.LCFI25:
 540              	 .cfi_def_cfa_offset 16
 541 0004 00AF     	 add r7,sp,#0
 542              	.LCFI26:
 543              	 .cfi_def_cfa_register 7
 544 0006 7860     	 str r0,[r7,#4]
 167:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_DisableChannel: handler null pointer", handle != NULL);
 168:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_BCCU_DisableChannel(handle->bccu_regs, handle->channel_no);
 545              	 .loc 2 168 0
 546 0008 7B68     	 ldr r3,[r7,#4]
 547 000a 1A68     	 ldr r2,[r3]
 548 000c 7B68     	 ldr r3,[r7,#4]
 549 000e DB69     	 ldr r3,[r3,#28]
 550 0010 101C     	 mov r0,r2
 551 0012 191C     	 mov r1,r3
 552 0014 FFF7FEFF 	 bl XMC_BCCU_DisableChannel
 169:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 553              	 .loc 2 169 0
 554 0018 BD46     	 mov sp,r7
 555 001a 02B0     	 add sp,sp,#8
 556              	 
 557 001c 80BD     	 pop {r7,pc}
 558              	 .cfi_endproc
 559              	.LFE94:
 561 001e C046     	 .section .text.PDM_BCCU_GateEnable,"ax",%progbits
 562              	 .align 2
 563              	 .global PDM_BCCU_GateEnable
 564              	 .code 16
 565              	 .thumb_func
 567              	PDM_BCCU_GateEnable:
 568              	.LFB95:
 170:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 171:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 172:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief API to Enable the Gate.
 173:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 174:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_GateEnable(PDM_BCCU_t *handle)
 175:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 569              	 .loc 2 175 0
 570              	 .cfi_startproc
 571 0000 80B5     	 push {r7,lr}
 572              	.LCFI27:
 573              	 .cfi_def_cfa_offset 8
 574              	 .cfi_offset 7,-8
 575              	 .cfi_offset 14,-4
 576 0002 82B0     	 sub sp,sp,#8
 577              	.LCFI28:
 578              	 .cfi_def_cfa_offset 16
 579 0004 00AF     	 add r7,sp,#0
 580              	.LCFI29:
 581              	 .cfi_def_cfa_register 7
 582 0006 7860     	 str r0,[r7,#4]
 176:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_GateEnable: handler null pointer", handle != NULL);
 177:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_BCCU_CH_EnableGating(handle->bccu_ch);
 583              	 .loc 2 177 0
 584 0008 7B68     	 ldr r3,[r7,#4]
 585 000a 1B69     	 ldr r3,[r3,#16]
 586 000c 181C     	 mov r0,r3
 587 000e FFF7FEFF 	 bl XMC_BCCU_CH_EnableGating
 178:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 588              	 .loc 2 178 0
 589 0012 BD46     	 mov sp,r7
 590 0014 02B0     	 add sp,sp,#8
 591              	 
 592 0016 80BD     	 pop {r7,pc}
 593              	 .cfi_endproc
 594              	.LFE95:
 596              	 .section .text.PDM_BCCU_GateDisable,"ax",%progbits
 597              	 .align 2
 598              	 .global PDM_BCCU_GateDisable
 599              	 .code 16
 600              	 .thumb_func
 602              	PDM_BCCU_GateDisable:
 603              	.LFB96:
 179:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 180:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 181:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief  API to Disable the Gate.
 182:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 183:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_GateDisable(PDM_BCCU_t *handle)
 184:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 604              	 .loc 2 184 0
 605              	 .cfi_startproc
 606 0000 80B5     	 push {r7,lr}
 607              	.LCFI30:
 608              	 .cfi_def_cfa_offset 8
 609              	 .cfi_offset 7,-8
 610              	 .cfi_offset 14,-4
 611 0002 82B0     	 sub sp,sp,#8
 612              	.LCFI31:
 613              	 .cfi_def_cfa_offset 16
 614 0004 00AF     	 add r7,sp,#0
 615              	.LCFI32:
 616              	 .cfi_def_cfa_register 7
 617 0006 7860     	 str r0,[r7,#4]
 185:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_GateDisable: handler null pointer", handle != NULL);
 186:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_BCCU_CH_DisableGating(handle->bccu_ch);
 618              	 .loc 2 186 0
 619 0008 7B68     	 ldr r3,[r7,#4]
 620 000a 1B69     	 ldr r3,[r3,#16]
 621 000c 181C     	 mov r0,r3
 622 000e FFF7FEFF 	 bl XMC_BCCU_CH_DisableGating
 187:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 623              	 .loc 2 187 0
 624 0012 BD46     	 mov sp,r7
 625 0014 02B0     	 add sp,sp,#8
 626              	 
 627 0016 80BD     	 pop {r7,pc}
 628              	 .cfi_endproc
 629              	.LFE96:
 631              	 .section .text.PDM_BCCU_SetIntensity,"ax",%progbits
 632              	 .align 2
 633              	 .global PDM_BCCU_SetIntensity
 634              	 .code 16
 635              	 .thumb_func
 637              	PDM_BCCU_SetIntensity:
 638              	.LFB97:
 188:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 189:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief API to Set Channel Intensity.
 190:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 191:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_SetIntensity(PDM_BCCU_t *handle, uint32_t intensity)
 192:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 639              	 .loc 2 192 0
 640              	 .cfi_startproc
 641 0000 80B5     	 push {r7,lr}
 642              	.LCFI33:
 643              	 .cfi_def_cfa_offset 8
 644              	 .cfi_offset 7,-8
 645              	 .cfi_offset 14,-4
 646 0002 82B0     	 sub sp,sp,#8
 647              	.LCFI34:
 648              	 .cfi_def_cfa_offset 16
 649 0004 00AF     	 add r7,sp,#0
 650              	.LCFI35:
 651              	 .cfi_def_cfa_register 7
 652 0006 7860     	 str r0,[r7,#4]
 653 0008 3960     	 str r1,[r7]
 193:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_SetIntensity: handler null pointer", handle != NULL);
 194:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_BCCU_CH_SetTargetIntensity(handle->bccu_ch, intensity);
 654              	 .loc 2 194 0
 655 000a 7B68     	 ldr r3,[r7,#4]
 656 000c 1A69     	 ldr r2,[r3,#16]
 657 000e 3B68     	 ldr r3,[r7]
 658 0010 101C     	 mov r0,r2
 659 0012 191C     	 mov r1,r3
 660 0014 FFF7FEFF 	 bl XMC_BCCU_CH_SetTargetIntensity
 195:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 661              	 .loc 2 195 0
 662 0018 BD46     	 mov sp,r7
 663 001a 02B0     	 add sp,sp,#8
 664              	 
 665 001c 80BD     	 pop {r7,pc}
 666              	 .cfi_endproc
 667              	.LFE97:
 669 001e C046     	 .section .text.PDM_BCCU_SetLinearWalk,"ax",%progbits
 670              	 .align 2
 671              	 .global PDM_BCCU_SetLinearWalk
 672              	 .code 16
 673              	 .thumb_func
 675              	PDM_BCCU_SetLinearWalk:
 676              	.LFB98:
 196:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 197:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 198:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief API to Set Linear Walk.
 199:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 200:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_SetLinearWalk(PDM_BCCU_t *handle, uint32_t prescalar)
 201:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 677              	 .loc 2 201 0
 678              	 .cfi_startproc
 679 0000 80B5     	 push {r7,lr}
 680              	.LCFI36:
 681              	 .cfi_def_cfa_offset 8
 682              	 .cfi_offset 7,-8
 683              	 .cfi_offset 14,-4
 684 0002 82B0     	 sub sp,sp,#8
 685              	.LCFI37:
 686              	 .cfi_def_cfa_offset 16
 687 0004 00AF     	 add r7,sp,#0
 688              	.LCFI38:
 689              	 .cfi_def_cfa_register 7
 690 0006 7860     	 str r0,[r7,#4]
 691 0008 3960     	 str r1,[r7]
 202:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_SetLinearWalk: handler null pointer", handle != NULL);
 203:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_BCCU_CH_SetLinearWalkPrescaler(handle->bccu_ch, prescalar);
 692              	 .loc 2 203 0
 693 000a 7B68     	 ldr r3,[r7,#4]
 694 000c 1A69     	 ldr r2,[r3,#16]
 695 000e 3B68     	 ldr r3,[r7]
 696 0010 101C     	 mov r0,r2
 697 0012 191C     	 mov r1,r3
 698 0014 FFF7FEFF 	 bl XMC_BCCU_CH_SetLinearWalkPrescaler
 204:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 699              	 .loc 2 204 0
 700 0018 BD46     	 mov sp,r7
 701 001a 02B0     	 add sp,sp,#8
 702              	 
 703 001c 80BD     	 pop {r7,pc}
 704              	 .cfi_endproc
 705              	.LFE98:
 707 001e C046     	 .section .text.PDM_BCCU_StartLinearWalk,"ax",%progbits
 708              	 .align 2
 709              	 .global PDM_BCCU_StartLinearWalk
 710              	 .code 16
 711              	 .thumb_func
 713              	PDM_BCCU_StartLinearWalk:
 714              	.LFB99:
 205:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 206:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief  API to Start Linear Walk.
 207:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 208:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_StartLinearWalk(PDM_BCCU_t *handle)
 209:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 715              	 .loc 2 209 0
 716              	 .cfi_startproc
 717 0000 80B5     	 push {r7,lr}
 718              	.LCFI39:
 719              	 .cfi_def_cfa_offset 8
 720              	 .cfi_offset 7,-8
 721              	 .cfi_offset 14,-4
 722 0002 82B0     	 sub sp,sp,#8
 723              	.LCFI40:
 724              	 .cfi_def_cfa_offset 16
 725 0004 00AF     	 add r7,sp,#0
 726              	.LCFI41:
 727              	 .cfi_def_cfa_register 7
 728 0006 7860     	 str r0,[r7,#4]
 210:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_StartLinearWalk: handler null pointer", handle != NULL);
 211:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_BCCU_StartLinearWalk(handle->bccu_regs,handle->channel_no);
 729              	 .loc 2 211 0
 730 0008 7B68     	 ldr r3,[r7,#4]
 731 000a 1A68     	 ldr r2,[r3]
 732 000c 7B68     	 ldr r3,[r7,#4]
 733 000e DB69     	 ldr r3,[r3,#28]
 734 0010 101C     	 mov r0,r2
 735 0012 191C     	 mov r1,r3
 736 0014 FFF7FEFF 	 bl XMC_BCCU_StartLinearWalk
 212:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 737              	 .loc 2 212 0
 738 0018 BD46     	 mov sp,r7
 739 001a 02B0     	 add sp,sp,#8
 740              	 
 741 001c 80BD     	 pop {r7,pc}
 742              	 .cfi_endproc
 743              	.LFE99:
 745 001e C046     	 .section .text.PDM_BCCU_AbortLinearWalk,"ax",%progbits
 746              	 .align 2
 747              	 .global PDM_BCCU_AbortLinearWalk
 748              	 .code 16
 749              	 .thumb_func
 751              	PDM_BCCU_AbortLinearWalk:
 752              	.LFB100:
 213:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 214:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 215:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief  API to Abort Linear Walk.
 216:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 217:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_AbortLinearWalk(PDM_BCCU_t *handle)
 218:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 753              	 .loc 2 218 0
 754              	 .cfi_startproc
 755 0000 80B5     	 push {r7,lr}
 756              	.LCFI42:
 757              	 .cfi_def_cfa_offset 8
 758              	 .cfi_offset 7,-8
 759              	 .cfi_offset 14,-4
 760 0002 82B0     	 sub sp,sp,#8
 761              	.LCFI43:
 762              	 .cfi_def_cfa_offset 16
 763 0004 00AF     	 add r7,sp,#0
 764              	.LCFI44:
 765              	 .cfi_def_cfa_register 7
 766 0006 7860     	 str r0,[r7,#4]
 219:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_AbortLinearWalk: handler null pointer", handle != NULL);
 220:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_BCCU_AbortLinearWalk(handle->bccu_regs, handle->channel_no);
 767              	 .loc 2 220 0
 768 0008 7B68     	 ldr r3,[r7,#4]
 769 000a 1A68     	 ldr r2,[r3]
 770 000c 7B68     	 ldr r3,[r7,#4]
 771 000e DB69     	 ldr r3,[r3,#28]
 772 0010 101C     	 mov r0,r2
 773 0012 191C     	 mov r1,r3
 774 0014 FFF7FEFF 	 bl XMC_BCCU_AbortLinearWalk
 221:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 775              	 .loc 2 221 0
 776 0018 BD46     	 mov sp,r7
 777 001a 02B0     	 add sp,sp,#8
 778              	 
 779 001c 80BD     	 pop {r7,pc}
 780              	 .cfi_endproc
 781              	.LFE100:
 783 001e C046     	 .section .text.PDM_BCCU_LinearWalkStatus,"ax",%progbits
 784              	 .align 2
 785              	 .global PDM_BCCU_LinearWalkStatus
 786              	 .code 16
 787              	 .thumb_func
 789              	PDM_BCCU_LinearWalkStatus:
 790              	.LFB101:
 222:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 223:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 224:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief  To get Channel Linear Walk status.
 225:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 226:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** uint32_t PDM_BCCU_LinearWalkStatus(PDM_BCCU_t *handle)
 227:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 791              	 .loc 2 227 0
 792              	 .cfi_startproc
 793 0000 80B5     	 push {r7,lr}
 794              	.LCFI45:
 795              	 .cfi_def_cfa_offset 8
 796              	 .cfi_offset 7,-8
 797              	 .cfi_offset 14,-4
 798 0002 82B0     	 sub sp,sp,#8
 799              	.LCFI46:
 800              	 .cfi_def_cfa_offset 16
 801 0004 00AF     	 add r7,sp,#0
 802              	.LCFI47:
 803              	 .cfi_def_cfa_register 7
 804 0006 7860     	 str r0,[r7,#4]
 228:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_LinearWalkStatus: handler null pointer", handle != NULL);
 229:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   return (XMC_BCCU_IsLinearWalkComplete(handle->bccu_regs,handle->channel_no));
 805              	 .loc 2 229 0
 806 0008 7B68     	 ldr r3,[r7,#4]
 807 000a 1A68     	 ldr r2,[r3]
 808 000c 7B68     	 ldr r3,[r7,#4]
 809 000e DB69     	 ldr r3,[r3,#28]
 810 0010 101C     	 mov r0,r2
 811 0012 191C     	 mov r1,r3
 812 0014 FFF7FEFF 	 bl XMC_BCCU_IsLinearWalkComplete
 813 0018 031C     	 mov r3,r0
 230:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 814              	 .loc 2 230 0
 815 001a 181C     	 mov r0,r3
 816 001c BD46     	 mov sp,r7
 817 001e 02B0     	 add sp,sp,#8
 818              	 
 819 0020 80BD     	 pop {r7,pc}
 820              	 .cfi_endproc
 821              	.LFE101:
 823 0022 C046     	 .section .text.PDM_BCCU_AwaitEndOfLinearWalk,"ax",%progbits
 824              	 .align 2
 825              	 .global PDM_BCCU_AwaitEndOfLinearWalk
 826              	 .code 16
 827              	 .thumb_func
 829              	PDM_BCCU_AwaitEndOfLinearWalk:
 830              	.LFB102:
 231:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 232:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** /**
 233:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** * @brief  Wait indefinitely till linear walk is over.
 234:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** */
 235:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** void PDM_BCCU_AwaitEndOfLinearWalk(PDM_BCCU_t *handle)
 236:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** {
 831              	 .loc 2 236 0
 832              	 .cfi_startproc
 833 0000 80B5     	 push {r7,lr}
 834              	.LCFI48:
 835              	 .cfi_def_cfa_offset 8
 836              	 .cfi_offset 7,-8
 837              	 .cfi_offset 14,-4
 838 0002 82B0     	 sub sp,sp,#8
 839              	.LCFI49:
 840              	 .cfi_def_cfa_offset 16
 841 0004 00AF     	 add r7,sp,#0
 842              	.LCFI50:
 843              	 .cfi_def_cfa_register 7
 844 0006 7860     	 str r0,[r7,#4]
 237:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   XMC_ASSERT("PDM_BCCU_AwaitEndOfLinearWalk: handler null pointer", handle != NULL);
 238:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   while (1U == (XMC_BCCU_IsLinearWalkComplete(handle->bccu_regs, handle->channel_no)))
 845              	 .loc 2 238 0
 846 0008 C046     	 mov r8,r8
 847              	.L31:
 848              	 .loc 2 238 0 is_stmt 0 discriminator 1
 849 000a 7B68     	 ldr r3,[r7,#4]
 850 000c 1A68     	 ldr r2,[r3]
 851 000e 7B68     	 ldr r3,[r7,#4]
 852 0010 DB69     	 ldr r3,[r3,#28]
 853 0012 101C     	 mov r0,r2
 854 0014 191C     	 mov r1,r3
 855 0016 FFF7FEFF 	 bl XMC_BCCU_IsLinearWalkComplete
 856 001a 031E     	 sub r3,r0,#0
 857 001c 012B     	 cmp r3,#1
 858 001e F4D0     	 beq .L31
 239:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   {
 240:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** 
 241:../Dave/Generated/PDM_BCCU/pdm_bccu.c ****   }
 242:../Dave/Generated/PDM_BCCU/pdm_bccu.c **** }
 859              	 .loc 2 242 0 is_stmt 1
 860 0020 BD46     	 mov sp,r7
 861 0022 02B0     	 add sp,sp,#8
 862              	 
 863 0024 80BD     	 pop {r7,pc}
 864              	 .cfi_endproc
 865              	.LFE102:
 867 0026 C046     	 .text
 868              	.Letext0:
 869              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 870              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 871              	 .file 5 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 872              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc_gpio.h"
 873              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Libraries/XMCLib/inc/xmc1_gpio.h"
 874              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_3_GoodNight/Dave/Generated/DAVE_common.h"
 875              	 .file 9 "../Dave/Generated/PDM_BCCU/../GLOBAL_BCCU/global_bccu.h"
 876              	 .file 10 "../Dave/Generated/PDM_BCCU/pdm_bccu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pdm_bccu.c
    {standard input}:18     .text.XMC_BCCU_StartLinearWalk:00000000 $t
    {standard input}:22     .text.XMC_BCCU_StartLinearWalk:00000000 XMC_BCCU_StartLinearWalk
    {standard input}:59     .text.XMC_BCCU_AbortLinearWalk:00000000 $t
    {standard input}:63     .text.XMC_BCCU_AbortLinearWalk:00000000 XMC_BCCU_AbortLinearWalk
    {standard input}:100    .text.XMC_BCCU_IsLinearWalkComplete:00000000 $t
    {standard input}:104    .text.XMC_BCCU_IsLinearWalkComplete:00000000 XMC_BCCU_IsLinearWalkComplete
    {standard input}:142    .text.XMC_BCCU_CH_EnableGating:00000000 $t
    {standard input}:146    .text.XMC_BCCU_CH_EnableGating:00000000 XMC_BCCU_CH_EnableGating
    {standard input}:179    .text.XMC_BCCU_CH_DisableGating:00000000 $t
    {standard input}:183    .text.XMC_BCCU_CH_DisableGating:00000000 XMC_BCCU_CH_DisableGating
    {standard input}:214    .text.XMC_BCCU_CH_DisableGating:0000001c $d
    {standard input}:219    .text.PDM_BCCU_GetAppVersion:00000000 $t
    {standard input}:224    .text.PDM_BCCU_GetAppVersion:00000000 PDM_BCCU_GetAppVersion
    {standard input}:290    .text.PDM_BCCU_GetAppVersion:00000058 $d
    {standard input}:296    .text.PDM_BCCU_Init:00000000 $t
    {standard input}:301    .text.PDM_BCCU_Init:00000000 PDM_BCCU_Init
    {standard input}:486    .text.PDM_BCCU_EnableChannel:00000000 $t
    {standard input}:491    .text.PDM_BCCU_EnableChannel:00000000 PDM_BCCU_EnableChannel
    {standard input}:524    .text.PDM_BCCU_DisableChannel:00000000 $t
    {standard input}:529    .text.PDM_BCCU_DisableChannel:00000000 PDM_BCCU_DisableChannel
    {standard input}:562    .text.PDM_BCCU_GateEnable:00000000 $t
    {standard input}:567    .text.PDM_BCCU_GateEnable:00000000 PDM_BCCU_GateEnable
    {standard input}:597    .text.PDM_BCCU_GateDisable:00000000 $t
    {standard input}:602    .text.PDM_BCCU_GateDisable:00000000 PDM_BCCU_GateDisable
    {standard input}:632    .text.PDM_BCCU_SetIntensity:00000000 $t
    {standard input}:637    .text.PDM_BCCU_SetIntensity:00000000 PDM_BCCU_SetIntensity
    {standard input}:670    .text.PDM_BCCU_SetLinearWalk:00000000 $t
    {standard input}:675    .text.PDM_BCCU_SetLinearWalk:00000000 PDM_BCCU_SetLinearWalk
    {standard input}:708    .text.PDM_BCCU_StartLinearWalk:00000000 $t
    {standard input}:713    .text.PDM_BCCU_StartLinearWalk:00000000 PDM_BCCU_StartLinearWalk
    {standard input}:746    .text.PDM_BCCU_AbortLinearWalk:00000000 $t
    {standard input}:751    .text.PDM_BCCU_AbortLinearWalk:00000000 PDM_BCCU_AbortLinearWalk
    {standard input}:784    .text.PDM_BCCU_LinearWalkStatus:00000000 $t
    {standard input}:789    .text.PDM_BCCU_LinearWalkStatus:00000000 PDM_BCCU_LinearWalkStatus
    {standard input}:824    .text.PDM_BCCU_AwaitEndOfLinearWalk:00000000 $t
    {standard input}:829    .text.PDM_BCCU_AwaitEndOfLinearWalk:00000000 PDM_BCCU_AwaitEndOfLinearWalk
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_BCCU_Init
XMC_GPIO_Init
XMC_BCCU_SetOutputPassiveLevel
XMC_BCCU_EnableTrap
XMC_BCCU_CH_ConfigTrigger
XMC_BCCU_EnableChannelTrigger
XMC_BCCU_CH_Init
XMC_BCCU_CH_SetLinearWalkPrescaler
XMC_BCCU_EnableChannel
XMC_BCCU_CH_SetTargetIntensity
XMC_BCCU_DisableChannel
