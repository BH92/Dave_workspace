   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 6E4B     	 ldr r3,.L20
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c 6C4B     	 ldr r3,.L20
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 121 )  //ende
 469              	 .loc 3 119 0
 470 0010 6B4B     	 ldr r3,.L20
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 792B     	 cmp r3,#121
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 694B     	 ldr r3,.L20
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e CCE0     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 674B     	 ldr r3,.L20
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 1CD1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 485              	 .loc 3 125 0
 486 0028 664B     	 ldr r3,.L20+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c 0022     	 mov r2,#0
 489 002e 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 490              	 .loc 3 126 0
 491 0030 644B     	 ldr r3,.L20+4
 492 0032 DB6A     	 ldr r3,[r3,#44]
 493 0034 0022     	 mov r2,#0
 494 0036 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 495              	 .loc 3 127 0
 496 0038 624B     	 ldr r3,.L20+4
 497 003a DB6A     	 ldr r3,[r3,#44]
 498 003c 0022     	 mov r2,#0
 499 003e 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 500              	 .loc 3 128 0
 501 0040 604B     	 ldr r3,.L20+4
 502 0042 DB6A     	 ldr r3,[r3,#44]
 503 0044 0022     	 mov r2,#0
 504 0046 DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 505              	 .loc 3 129 0
 506 0048 5E4B     	 ldr r3,.L20+4
 507 004a 181C     	 mov r0,r3
 508 004c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 509              	 .loc 3 130 0
 510 0050 5C4A     	 ldr r2,.L20+4
 511 0052 E523     	 mov r3,#229
 512 0054 9B00     	 lsl r3,r3,#2
 513 0056 101C     	 mov r0,r2
 514 0058 0021     	 mov r1,#0
 515 005a 1A1C     	 mov r2,r3
 516 005c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 517 0060 ABE0     	 b .L12
 518              	.L15:
 131:../samuel/samuel_io.c **** 	 			 }
 132:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 40 )
 519              	 .loc 3 132 0
 520 0062 574B     	 ldr r3,.L20
 521 0064 1B88     	 ldrh r3,[r3]
 522 0066 282B     	 cmp r3,#40
 523 0068 20D1     	 bne .L16
 133:../samuel/samuel_io.c **** 	 			 {
 134:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 300;
 524              	 .loc 3 134 0
 525 006a 564B     	 ldr r3,.L20+4
 526 006c DB6A     	 ldr r3,[r3,#44]
 527 006e 9622     	 mov r2,#150
 528 0070 5200     	 lsl r2,r2,#1
 529 0072 1A80     	 strh r2,[r3]
 135:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 300;
 530              	 .loc 3 135 0
 531 0074 534B     	 ldr r3,.L20+4
 532 0076 DB6A     	 ldr r3,[r3,#44]
 533 0078 9622     	 mov r2,#150
 534 007a 5200     	 lsl r2,r2,#1
 535 007c 5A80     	 strh r2,[r3,#2]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 300;
 536              	 .loc 3 136 0
 537 007e 514B     	 ldr r3,.L20+4
 538 0080 DB6A     	 ldr r3,[r3,#44]
 539 0082 9622     	 mov r2,#150
 540 0084 5200     	 lsl r2,r2,#1
 541 0086 9A80     	 strh r2,[r3,#4]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 300;
 542              	 .loc 3 137 0
 543 0088 4E4B     	 ldr r3,.L20+4
 544 008a DB6A     	 ldr r3,[r3,#44]
 545 008c 9622     	 mov r2,#150
 546 008e 5200     	 lsl r2,r2,#1
 547 0090 DA80     	 strh r2,[r3,#6]
 138:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 548              	 .loc 3 138 0
 549 0092 4C4B     	 ldr r3,.L20+4
 550 0094 181C     	 mov r0,r3
 551 0096 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 139:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 552              	 .loc 3 139 0
 553 009a 4A4A     	 ldr r2,.L20+4
 554 009c E523     	 mov r3,#229
 555 009e 9B00     	 lsl r3,r3,#2
 556 00a0 101C     	 mov r0,r2
 557 00a2 0021     	 mov r1,#0
 558 00a4 1A1C     	 mov r2,r3
 559 00a6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 560 00aa 86E0     	 b .L12
 561              	.L16:
 140:../samuel/samuel_io.c **** 	 			 }
 141:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 60 )
 562              	 .loc 3 141 0
 563 00ac 444B     	 ldr r3,.L20
 564 00ae 1B88     	 ldrh r3,[r3]
 565 00b0 3C2B     	 cmp r3,#60
 566 00b2 1CD1     	 bne .L17
 142:../samuel/samuel_io.c **** 	 			 {
 143:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 567              	 .loc 3 143 0
 568 00b4 434B     	 ldr r3,.L20+4
 569 00b6 DB6A     	 ldr r3,[r3,#44]
 570 00b8 0022     	 mov r2,#0
 571 00ba 1A80     	 strh r2,[r3]
 144:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 572              	 .loc 3 144 0
 573 00bc 414B     	 ldr r3,.L20+4
 574 00be DB6A     	 ldr r3,[r3,#44]
 575 00c0 0022     	 mov r2,#0
 576 00c2 5A80     	 strh r2,[r3,#2]
 145:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 577              	 .loc 3 145 0
 578 00c4 3F4B     	 ldr r3,.L20+4
 579 00c6 DB6A     	 ldr r3,[r3,#44]
 580 00c8 0022     	 mov r2,#0
 581 00ca 9A80     	 strh r2,[r3,#4]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 582              	 .loc 3 146 0
 583 00cc 3D4B     	 ldr r3,.L20+4
 584 00ce DB6A     	 ldr r3,[r3,#44]
 585 00d0 0022     	 mov r2,#0
 586 00d2 DA80     	 strh r2,[r3,#6]
 147:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 587              	 .loc 3 147 0
 588 00d4 3B4B     	 ldr r3,.L20+4
 589 00d6 181C     	 mov r0,r3
 590 00d8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 148:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 591              	 .loc 3 148 0
 592 00dc 394A     	 ldr r2,.L20+4
 593 00de E523     	 mov r3,#229
 594 00e0 9B00     	 lsl r3,r3,#2
 595 00e2 101C     	 mov r0,r2
 596 00e4 0021     	 mov r1,#0
 597 00e6 1A1C     	 mov r2,r3
 598 00e8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 599 00ec 65E0     	 b .L12
 600              	.L17:
 149:../samuel/samuel_io.c **** 	 			 }
 150:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 80 )
 601              	 .loc 3 150 0
 602 00ee 344B     	 ldr r3,.L20
 603 00f0 1B88     	 ldrh r3,[r3]
 604 00f2 502B     	 cmp r3,#80
 605 00f4 1ED1     	 bne .L18
 151:../samuel/samuel_io.c **** 	 			 {
 152:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 300;
 606              	 .loc 3 152 0
 607 00f6 334B     	 ldr r3,.L20+4
 608 00f8 DB6A     	 ldr r3,[r3,#44]
 609 00fa 9622     	 mov r2,#150
 610 00fc 5200     	 lsl r2,r2,#1
 611 00fe 1A80     	 strh r2,[r3]
 153:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 612              	 .loc 3 153 0
 613 0100 304B     	 ldr r3,.L20+4
 614 0102 DB6A     	 ldr r3,[r3,#44]
 615 0104 0022     	 mov r2,#0
 616 0106 5A80     	 strh r2,[r3,#2]
 154:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 300;
 617              	 .loc 3 154 0
 618 0108 2E4B     	 ldr r3,.L20+4
 619 010a DB6A     	 ldr r3,[r3,#44]
 620 010c 9622     	 mov r2,#150
 621 010e 5200     	 lsl r2,r2,#1
 622 0110 9A80     	 strh r2,[r3,#4]
 155:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 623              	 .loc 3 155 0
 624 0112 2C4B     	 ldr r3,.L20+4
 625 0114 DB6A     	 ldr r3,[r3,#44]
 626 0116 0022     	 mov r2,#0
 627 0118 DA80     	 strh r2,[r3,#6]
 156:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 628              	 .loc 3 156 0
 629 011a 2A4B     	 ldr r3,.L20+4
 630 011c 181C     	 mov r0,r3
 631 011e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 157:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 632              	 .loc 3 157 0
 633 0122 284A     	 ldr r2,.L20+4
 634 0124 E523     	 mov r3,#229
 635 0126 9B00     	 lsl r3,r3,#2
 636 0128 101C     	 mov r0,r2
 637 012a 0021     	 mov r1,#0
 638 012c 1A1C     	 mov r2,r3
 639 012e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 640 0132 42E0     	 b .L12
 641              	.L18:
 158:../samuel/samuel_io.c **** 	 			 }
 159:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 100 )
 642              	 .loc 3 159 0
 643 0134 224B     	 ldr r3,.L20
 644 0136 1B88     	 ldrh r3,[r3]
 645 0138 642B     	 cmp r3,#100
 646 013a 1ED1     	 bne .L19
 160:../samuel/samuel_io.c **** 	 			 {
 161:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 647              	 .loc 3 161 0
 648 013c 214B     	 ldr r3,.L20+4
 649 013e DB6A     	 ldr r3,[r3,#44]
 650 0140 0022     	 mov r2,#0
 651 0142 1A80     	 strh r2,[r3]
 162:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 300;
 652              	 .loc 3 162 0
 653 0144 1F4B     	 ldr r3,.L20+4
 654 0146 DB6A     	 ldr r3,[r3,#44]
 655 0148 9622     	 mov r2,#150
 656 014a 5200     	 lsl r2,r2,#1
 657 014c 5A80     	 strh r2,[r3,#2]
 163:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 658              	 .loc 3 163 0
 659 014e 1D4B     	 ldr r3,.L20+4
 660 0150 DB6A     	 ldr r3,[r3,#44]
 661 0152 0022     	 mov r2,#0
 662 0154 9A80     	 strh r2,[r3,#4]
 164:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 300;
 663              	 .loc 3 164 0
 664 0156 1B4B     	 ldr r3,.L20+4
 665 0158 DB6A     	 ldr r3,[r3,#44]
 666 015a 9622     	 mov r2,#150
 667 015c 5200     	 lsl r2,r2,#1
 668 015e DA80     	 strh r2,[r3,#6]
 165:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 669              	 .loc 3 165 0
 670 0160 184B     	 ldr r3,.L20+4
 671 0162 181C     	 mov r0,r3
 672 0164 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 166:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 673              	 .loc 3 166 0
 674 0168 164A     	 ldr r2,.L20+4
 675 016a E523     	 mov r3,#229
 676 016c 9B00     	 lsl r3,r3,#2
 677 016e 101C     	 mov r0,r2
 678 0170 0021     	 mov r1,#0
 679 0172 1A1C     	 mov r2,r3
 680 0174 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 681 0178 1FE0     	 b .L12
 682              	.L19:
 167:../samuel/samuel_io.c **** 	 			 }
 168:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 120 )
 683              	 .loc 3 168 0
 684 017a 114B     	 ldr r3,.L20
 685 017c 1B88     	 ldrh r3,[r3]
 686 017e 782B     	 cmp r3,#120
 687 0180 1BD1     	 bne .L12
 169:../samuel/samuel_io.c **** 	 			 {
 170:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 50;
 688              	 .loc 3 170 0
 689 0182 104B     	 ldr r3,.L20+4
 690 0184 DB6A     	 ldr r3,[r3,#44]
 691 0186 3222     	 mov r2,#50
 692 0188 1A80     	 strh r2,[r3]
 171:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 50;
 693              	 .loc 3 171 0
 694 018a 0E4B     	 ldr r3,.L20+4
 695 018c DB6A     	 ldr r3,[r3,#44]
 696 018e 3222     	 mov r2,#50
 697 0190 5A80     	 strh r2,[r3,#2]
 172:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 50;
 698              	 .loc 3 172 0
 699 0192 0C4B     	 ldr r3,.L20+4
 700 0194 DB6A     	 ldr r3,[r3,#44]
 701 0196 3222     	 mov r2,#50
 702 0198 9A80     	 strh r2,[r3,#4]
 173:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 50;
 703              	 .loc 3 173 0
 704 019a 0A4B     	 ldr r3,.L20+4
 705 019c DB6A     	 ldr r3,[r3,#44]
 706 019e 3222     	 mov r2,#50
 707 01a0 DA80     	 strh r2,[r3,#6]
 174:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 708              	 .loc 3 174 0
 709 01a2 084B     	 ldr r3,.L20+4
 710 01a4 181C     	 mov r0,r3
 711 01a6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 175:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 712              	 .loc 3 175 0
 713 01aa 064A     	 ldr r2,.L20+4
 714 01ac E523     	 mov r3,#229
 715 01ae 9B00     	 lsl r3,r3,#2
 716 01b0 101C     	 mov r0,r2
 717 01b2 0021     	 mov r1,#0
 718 01b4 1A1C     	 mov r2,r3
 719 01b6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 720              	.L12:
 176:../samuel/samuel_io.c **** 	 			 }
 177:../samuel/samuel_io.c **** 				 else
 178:../samuel/samuel_io.c **** 
 179:../samuel/samuel_io.c **** 				 {
 180:../samuel/samuel_io.c **** 
 181:../samuel/samuel_io.c **** 				 }
 182:../samuel/samuel_io.c **** 
 183:../samuel/samuel_io.c ****    }
 721              	 .loc 3 183 0
 722 01ba BD46     	 mov sp,r7
 723              	 
 724 01bc 80BD     	 pop {r7,pc}
 725              	.L21:
 726 01be C046     	 .align 2
 727              	.L20:
 728 01c0 00000000 	 .word zahler_lightprog01
 729 01c4 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 730              	 .cfi_endproc
 731              	.LFE292:
 733              	 .section .text.light_aus,"ax",%progbits
 734              	 .align 2
 735              	 .global light_aus
 736              	 .code 16
 737              	 .thumb_func
 739              	light_aus:
 740              	.LFB293:
 184:../samuel/samuel_io.c ****   //------------------------------------------
 185:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 186:../samuel/samuel_io.c ****    {
 741              	 .loc 3 186 0
 742              	 .cfi_startproc
 743 0000 80B5     	 push {r7,lr}
 744              	.LCFI18:
 745              	 .cfi_def_cfa_offset 8
 746              	 .cfi_offset 7,-8
 747              	 .cfi_offset 14,-4
 748 0002 00AF     	 add r7,sp,#0
 749              	.LCFI19:
 750              	 .cfi_def_cfa_register 7
 187:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 751              	 .loc 3 187 0
 752 0004 104B     	 ldr r3,.L23
 753 0006 1A88     	 ldrh r2,[r3]
 754 0008 104B     	 ldr r3,.L23+4
 755 000a 1A80     	 strh r2,[r3]
 188:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 756              	 .loc 3 188 0
 757 000c 0E4B     	 ldr r3,.L23
 758 000e 1A88     	 ldrh r2,[r3]
 759 0010 0F4B     	 ldr r3,.L23+8
 760 0012 1A80     	 strh r2,[r3]
 189:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 761              	 .loc 3 189 0
 762 0014 0C4B     	 ldr r3,.L23
 763 0016 1A88     	 ldrh r2,[r3]
 764 0018 0E4B     	 ldr r3,.L23+12
 765 001a 1A80     	 strh r2,[r3]
 190:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 766              	 .loc 3 190 0
 767 001c 0A4B     	 ldr r3,.L23
 768 001e 1A88     	 ldrh r2,[r3]
 769 0020 0D4B     	 ldr r3,.L23+16
 770 0022 1A80     	 strh r2,[r3]
 191:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 771              	 .loc 3 191 0
 772 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 192:../samuel/samuel_io.c **** 	  bcuUebergabe();
 773              	 .loc 3 192 0
 774 0028 FFF7FEFF 	 bl bcuUebergabe
 193:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 194:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 775              	 .loc 3 194 0
 776 002c 0B4A     	 ldr r2,.L23+20
 777 002e 8023     	 mov r3,#128
 778 0030 1B01     	 lsl r3,r3,#4
 779 0032 101C     	 mov r0,r2
 780 0034 191C     	 mov r1,r3
 781 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 195:../samuel/samuel_io.c **** 	     // Start Dimming
 196:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 782              	 .loc 3 196 0
 783 003a 084B     	 ldr r3,.L23+20
 784 003c 181C     	 mov r0,r3
 785 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 197:../samuel/samuel_io.c **** 
 198:../samuel/samuel_io.c ****    }
 786              	 .loc 3 198 0
 787 0042 BD46     	 mov sp,r7
 788              	 
 789 0044 80BD     	 pop {r7,pc}
 790              	.L24:
 791 0046 C046     	 .align 2
 792              	.L23:
 793 0048 00000000 	 .word linearwalk_gen
 794 004c 00000000 	 .word linearwalk_ww1
 795 0050 00000000 	 .word linearwalk_ww2
 796 0054 00000000 	 .word linearwalk_cw1
 797 0058 00000000 	 .word linearwalk_cw2
 798 005c 00000000 	 .word DIM_BCCU_0
 799              	 .cfi_endproc
 800              	.LFE293:
 802              	 .section .text.analog_start,"ax",%progbits
 803              	 .align 2
 804              	 .global analog_start
 805              	 .code 16
 806              	 .thumb_func
 808              	analog_start:
 809              	.LFB294:
 199:../samuel/samuel_io.c ****   //------------------------------------------
 200:../samuel/samuel_io.c **** 
 201:../samuel/samuel_io.c **** 
 202:../samuel/samuel_io.c **** 
 203:../samuel/samuel_io.c ****  void analog_start (void)
 204:../samuel/samuel_io.c ****   {
 810              	 .loc 3 204 0
 811              	 .cfi_startproc
 812 0000 80B5     	 push {r7,lr}
 813              	.LCFI20:
 814              	 .cfi_def_cfa_offset 8
 815              	 .cfi_offset 7,-8
 816              	 .cfi_offset 14,-4
 817 0002 00AF     	 add r7,sp,#0
 818              	.LCFI21:
 819              	 .cfi_def_cfa_register 7
 205:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 206:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 207:../samuel/samuel_io.c **** 
 208:../samuel/samuel_io.c ****   }
 820              	 .loc 3 208 0
 821 0004 BD46     	 mov sp,r7
 822              	 
 823 0006 80BD     	 pop {r7,pc}
 824              	 .cfi_endproc
 825              	.LFE294:
 827              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 828              	 .align 2
 829              	 .global SCU_0_IRQHandler
 830              	 .code 16
 831              	 .thumb_func
 833              	SCU_0_IRQHandler:
 834              	.LFB295:
 209:../samuel/samuel_io.c **** 
 210:../samuel/samuel_io.c **** 
 211:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 212:../samuel/samuel_io.c ****   {
 835              	 .loc 3 212 0
 836              	 .cfi_startproc
 837 0000 80B5     	 push {r7,lr}
 838              	.LCFI22:
 839              	 .cfi_def_cfa_offset 8
 840              	 .cfi_offset 7,-8
 841              	 .cfi_offset 14,-4
 842 0002 00AF     	 add r7,sp,#0
 843              	.LCFI23:
 844              	 .cfi_def_cfa_register 7
 213:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 214:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 215:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 216:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 217:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 218:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 219:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 220:../samuel/samuel_io.c ****   }
 845              	 .loc 3 220 0
 846 0004 BD46     	 mov sp,r7
 847              	 
 848 0006 80BD     	 pop {r7,pc}
 849              	 .cfi_endproc
 850              	.LFE295:
 852              	 .section .text.new_data_fill,"ax",%progbits
 853              	 .align 2
 854              	 .global new_data_fill
 855              	 .code 16
 856              	 .thumb_func
 858              	new_data_fill:
 859              	.LFB296:
 221:../samuel/samuel_io.c **** 
 222:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 223:../samuel/samuel_io.c ****  {
 860              	 .loc 3 223 0
 861              	 .cfi_startproc
 862 0000 80B5     	 push {r7,lr}
 863              	.LCFI24:
 864              	 .cfi_def_cfa_offset 8
 865              	 .cfi_offset 7,-8
 866              	 .cfi_offset 14,-4
 867 0002 00AF     	 add r7,sp,#0
 868              	.LCFI25:
 869              	 .cfi_def_cfa_register 7
 224:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 870              	 .loc 3 224 0
 871 0004 124B     	 ldr r3,.L28
 872 0006 0B22     	 mov r2,#11
 873 0008 1A70     	 strb r2,[r3]
 225:../samuel/samuel_io.c **** 	 new_data[0]=1;
 874              	 .loc 3 225 0
 875 000a 124B     	 ldr r3,.L28+4
 876 000c 0122     	 mov r2,#1
 877 000e 1A70     	 strb r2,[r3]
 226:../samuel/samuel_io.c **** 	 new_data[1]=2;
 878              	 .loc 3 226 0
 879 0010 104B     	 ldr r3,.L28+4
 880 0012 0222     	 mov r2,#2
 881 0014 5A70     	 strb r2,[r3,#1]
 227:../samuel/samuel_io.c **** 	 new_data[2]=3;
 882              	 .loc 3 227 0
 883 0016 0F4B     	 ldr r3,.L28+4
 884 0018 0322     	 mov r2,#3
 885 001a 9A70     	 strb r2,[r3,#2]
 228:../samuel/samuel_io.c **** 	 new_data[3]=4;
 886              	 .loc 3 228 0
 887 001c 0D4B     	 ldr r3,.L28+4
 888 001e 0422     	 mov r2,#4
 889 0020 DA70     	 strb r2,[r3,#3]
 229:../samuel/samuel_io.c **** 	 new_data[4]=5;
 890              	 .loc 3 229 0
 891 0022 0C4B     	 ldr r3,.L28+4
 892 0024 0522     	 mov r2,#5
 893 0026 1A71     	 strb r2,[r3,#4]
 230:../samuel/samuel_io.c **** 	 new_data[5]=6;
 894              	 .loc 3 230 0
 895 0028 0A4B     	 ldr r3,.L28+4
 896 002a 0622     	 mov r2,#6
 897 002c 5A71     	 strb r2,[r3,#5]
 231:../samuel/samuel_io.c ****  	 new_data[6]=7;
 898              	 .loc 3 231 0
 899 002e 094B     	 ldr r3,.L28+4
 900 0030 0722     	 mov r2,#7
 901 0032 9A71     	 strb r2,[r3,#6]
 232:../samuel/samuel_io.c ****  	 new_data[7]=8;
 902              	 .loc 3 232 0
 903 0034 074B     	 ldr r3,.L28+4
 904 0036 0822     	 mov r2,#8
 905 0038 DA71     	 strb r2,[r3,#7]
 233:../samuel/samuel_io.c ****  	 new_data[8]=9;
 906              	 .loc 3 233 0
 907 003a 064B     	 ldr r3,.L28+4
 908 003c 0922     	 mov r2,#9
 909 003e 1A72     	 strb r2,[r3,#8]
 234:../samuel/samuel_io.c ****  	 new_data[9]='a';
 910              	 .loc 3 234 0
 911 0040 044B     	 ldr r3,.L28+4
 912 0042 6122     	 mov r2,#97
 913 0044 5A72     	 strb r2,[r3,#9]
 235:../samuel/samuel_io.c **** 	 new_data[10]='b';
 914              	 .loc 3 235 0
 915 0046 034B     	 ldr r3,.L28+4
 916 0048 6222     	 mov r2,#98
 917 004a 9A72     	 strb r2,[r3,#10]
 236:../samuel/samuel_io.c ****  }
 918              	 .loc 3 236 0
 919 004c BD46     	 mov sp,r7
 920              	 
 921 004e 80BD     	 pop {r7,pc}
 922              	.L29:
 923              	 .align 2
 924              	.L28:
 925 0050 00000000 	 .word transmit_buf_size
 926 0054 00000000 	 .word new_data
 927              	 .cfi_endproc
 928              	.LFE296:
 930              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 931              	 .align 2
 932              	 .global new_data_unbekanntBack
 933              	 .code 16
 934              	 .thumb_func
 936              	new_data_unbekanntBack:
 937              	.LFB297:
 237:../samuel/samuel_io.c **** 
 238:../samuel/samuel_io.c **** 
 239:../samuel/samuel_io.c **** 
 240:../samuel/samuel_io.c **** 
 241:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 242:../samuel/samuel_io.c ****  {
 938              	 .loc 3 242 0
 939              	 .cfi_startproc
 940 0000 80B5     	 push {r7,lr}
 941              	.LCFI26:
 942              	 .cfi_def_cfa_offset 8
 943              	 .cfi_offset 7,-8
 944              	 .cfi_offset 14,-4
 945 0002 00AF     	 add r7,sp,#0
 946              	.LCFI27:
 947              	 .cfi_def_cfa_register 7
 243:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 948              	 .loc 3 243 0
 949 0004 134B     	 ldr r3,.L31
 950 0006 0B22     	 mov r2,#11
 951 0008 1A70     	 strb r2,[r3]
 244:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 952              	 .loc 3 244 0
 953 000a 134B     	 ldr r3,.L31+4
 954 000c 4C22     	 mov r2,#76
 955 000e 1A70     	 strb r2,[r3]
 245:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 956              	 .loc 3 245 0
 957 0010 114B     	 ldr r3,.L31+4
 958 0012 4922     	 mov r2,#73
 959 0014 5A70     	 strb r2,[r3,#1]
 246:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 960              	 .loc 3 246 0
 961 0016 104B     	 ldr r3,.L31+4
 962 0018 4E22     	 mov r2,#78
 963 001a 9A70     	 strb r2,[r3,#2]
 247:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 964              	 .loc 3 247 0
 965 001c 0F4B     	 ldr r3,.L31+8
 966 001e 1A78     	 ldrb r2,[r3]
 967 0020 0D4B     	 ldr r3,.L31+4
 968 0022 DA70     	 strb r2,[r3,#3]
 248:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 969              	 .loc 3 248 0
 970 0024 0B4B     	 ldr r3,.L31
 971 0026 1A78     	 ldrb r2,[r3]
 972 0028 0B4B     	 ldr r3,.L31+4
 973 002a 1A71     	 strb r2,[r3,#4]
 249:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 974              	 .loc 3 249 0
 975 002c 0A4B     	 ldr r3,.L31+4
 976 002e 3122     	 mov r2,#49
 977 0030 5A71     	 strb r2,[r3,#5]
 250:../samuel/samuel_io.c **** 	 new_data[6]='n';
 978              	 .loc 3 250 0
 979 0032 094B     	 ldr r3,.L31+4
 980 0034 6E22     	 mov r2,#110
 981 0036 9A71     	 strb r2,[r3,#6]
 251:../samuel/samuel_io.c **** 	 new_data[7]='o';
 982              	 .loc 3 251 0
 983 0038 074B     	 ldr r3,.L31+4
 984 003a 6F22     	 mov r2,#111
 985 003c DA71     	 strb r2,[r3,#7]
 252:../samuel/samuel_io.c **** 	 new_data[8]='n';
 986              	 .loc 3 252 0
 987 003e 064B     	 ldr r3,.L31+4
 988 0040 6E22     	 mov r2,#110
 989 0042 1A72     	 strb r2,[r3,#8]
 253:../samuel/samuel_io.c **** 	 new_data[9]='o';
 990              	 .loc 3 253 0
 991 0044 044B     	 ldr r3,.L31+4
 992 0046 6F22     	 mov r2,#111
 993 0048 5A72     	 strb r2,[r3,#9]
 254:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 994              	 .loc 3 254 0
 995 004a 034B     	 ldr r3,.L31+4
 996 004c FF22     	 mov r2,#255
 997 004e 9A72     	 strb r2,[r3,#10]
 255:../samuel/samuel_io.c ****  }
 998              	 .loc 3 255 0
 999 0050 BD46     	 mov sp,r7
 1000              	 
 1001 0052 80BD     	 pop {r7,pc}
 1002              	.L32:
 1003              	 .align 2
 1004              	.L31:
 1005 0054 00000000 	 .word transmit_buf_size
 1006 0058 00000000 	 .word new_data
 1007 005c 00000000 	 .word node_id
 1008              	 .cfi_endproc
 1009              	.LFE297:
 1011              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 1012              	 .align 2
 1013              	 .global new_data_BroadcastBack
 1014              	 .code 16
 1015              	 .thumb_func
 1017              	new_data_BroadcastBack:
 1018              	.LFB298:
 256:../samuel/samuel_io.c **** 
 257:../samuel/samuel_io.c **** //------------------------------------------
 258:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 259:../samuel/samuel_io.c ****  {
 1019              	 .loc 3 259 0
 1020              	 .cfi_startproc
 1021 0000 80B5     	 push {r7,lr}
 1022              	.LCFI28:
 1023              	 .cfi_def_cfa_offset 8
 1024              	 .cfi_offset 7,-8
 1025              	 .cfi_offset 14,-4
 1026 0002 00AF     	 add r7,sp,#0
 1027              	.LCFI29:
 1028              	 .cfi_def_cfa_register 7
 260:../samuel/samuel_io.c **** 
 261:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1029              	 .loc 3 261 0
 1030 0004 194B     	 ldr r3,.L34
 1031 0006 0B22     	 mov r2,#11
 1032 0008 1A70     	 strb r2,[r3]
 262:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1033              	 .loc 3 262 0
 1034 000a 194B     	 ldr r3,.L34+4
 1035 000c 4C22     	 mov r2,#76
 1036 000e 1A70     	 strb r2,[r3]
 263:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1037              	 .loc 3 263 0
 1038 0010 174B     	 ldr r3,.L34+4
 1039 0012 4922     	 mov r2,#73
 1040 0014 5A70     	 strb r2,[r3,#1]
 264:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1041              	 .loc 3 264 0
 1042 0016 164B     	 ldr r3,.L34+4
 1043 0018 4E22     	 mov r2,#78
 1044 001a 9A70     	 strb r2,[r3,#2]
 265:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1045              	 .loc 3 265 0
 1046 001c 154B     	 ldr r3,.L34+8
 1047 001e 1A78     	 ldrb r2,[r3]
 1048 0020 134B     	 ldr r3,.L34+4
 1049 0022 DA70     	 strb r2,[r3,#3]
 266:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1050              	 .loc 3 266 0
 1051 0024 114B     	 ldr r3,.L34
 1052 0026 1A78     	 ldrb r2,[r3]
 1053 0028 114B     	 ldr r3,.L34+4
 1054 002a 1A71     	 strb r2,[r3,#4]
 267:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 1055              	 .loc 3 267 0
 1056 002c 104B     	 ldr r3,.L34+4
 1057 002e 6F22     	 mov r2,#111
 1058 0030 5A71     	 strb r2,[r3,#5]
 268:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 1059              	 .loc 3 268 0
 1060 0032 114B     	 ldr r3,.L34+12
 1061 0034 1B88     	 ldrh r3,[r3]
 1062 0036 1B0A     	 lsr r3,r3,#8
 1063 0038 9BB2     	 uxth r3,r3
 1064 003a DAB2     	 uxtb r2,r3
 1065 003c 0C4B     	 ldr r3,.L34+4
 1066 003e 9A71     	 strb r2,[r3,#6]
 269:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 1067              	 .loc 3 269 0
 1068 0040 0D4B     	 ldr r3,.L34+12
 1069 0042 1B88     	 ldrh r3,[r3]
 1070 0044 DAB2     	 uxtb r2,r3
 1071 0046 0A4B     	 ldr r3,.L34+4
 1072 0048 DA71     	 strb r2,[r3,#7]
 270:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 1073              	 .loc 3 270 0
 1074 004a 0C4B     	 ldr r3,.L34+16
 1075 004c 1B88     	 ldrh r3,[r3]
 1076 004e 1B0A     	 lsr r3,r3,#8
 1077 0050 9BB2     	 uxth r3,r3
 1078 0052 DAB2     	 uxtb r2,r3
 1079 0054 064B     	 ldr r3,.L34+4
 1080 0056 1A72     	 strb r2,[r3,#8]
 271:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 1081              	 .loc 3 271 0
 1082 0058 084B     	 ldr r3,.L34+16
 1083 005a 1B88     	 ldrh r3,[r3]
 1084 005c DAB2     	 uxtb r2,r3
 1085 005e 044B     	 ldr r3,.L34+4
 1086 0060 5A72     	 strb r2,[r3,#9]
 272:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1087              	 .loc 3 272 0
 1088 0062 034B     	 ldr r3,.L34+4
 1089 0064 FF22     	 mov r2,#255
 1090 0066 9A72     	 strb r2,[r3,#10]
 273:../samuel/samuel_io.c ****  }
 1091              	 .loc 3 273 0
 1092 0068 BD46     	 mov sp,r7
 1093              	 
 1094 006a 80BD     	 pop {r7,pc}
 1095              	.L35:
 1096              	 .align 2
 1097              	.L34:
 1098 006c 00000000 	 .word transmit_buf_size
 1099 0070 00000000 	 .word new_data
 1100 0074 00000000 	 .word node_id
 1101 0078 00000000 	 .word Ser_NrH
 1102 007c 00000000 	 .word Ser_NrL
 1103              	 .cfi_endproc
 1104              	.LFE298:
 1106              	 .section .text.new_data_analog1Back,"ax",%progbits
 1107              	 .align 2
 1108              	 .global new_data_analog1Back
 1109              	 .code 16
 1110              	 .thumb_func
 1112              	new_data_analog1Back:
 1113              	.LFB299:
 274:../samuel/samuel_io.c ****  //------------------------------------------
 275:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 276:../samuel/samuel_io.c ****  {
 1114              	 .loc 3 276 0
 1115              	 .cfi_startproc
 1116 0000 80B5     	 push {r7,lr}
 1117              	.LCFI30:
 1118              	 .cfi_def_cfa_offset 8
 1119              	 .cfi_offset 7,-8
 1120              	 .cfi_offset 14,-4
 1121 0002 00AF     	 add r7,sp,#0
 1122              	.LCFI31:
 1123              	 .cfi_def_cfa_register 7
 277:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1124              	 .loc 3 277 0
 1125 0004 194B     	 ldr r3,.L37
 1126 0006 0B22     	 mov r2,#11
 1127 0008 1A70     	 strb r2,[r3]
 278:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1128              	 .loc 3 278 0
 1129 000a 194B     	 ldr r3,.L37+4
 1130 000c 4C22     	 mov r2,#76
 1131 000e 1A70     	 strb r2,[r3]
 279:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1132              	 .loc 3 279 0
 1133 0010 174B     	 ldr r3,.L37+4
 1134 0012 4922     	 mov r2,#73
 1135 0014 5A70     	 strb r2,[r3,#1]
 280:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1136              	 .loc 3 280 0
 1137 0016 164B     	 ldr r3,.L37+4
 1138 0018 4E22     	 mov r2,#78
 1139 001a 9A70     	 strb r2,[r3,#2]
 281:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1140              	 .loc 3 281 0
 1141 001c 154B     	 ldr r3,.L37+8
 1142 001e 1A78     	 ldrb r2,[r3]
 1143 0020 134B     	 ldr r3,.L37+4
 1144 0022 DA70     	 strb r2,[r3,#3]
 282:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1145              	 .loc 3 282 0
 1146 0024 114B     	 ldr r3,.L37
 1147 0026 1A78     	 ldrb r2,[r3]
 1148 0028 114B     	 ldr r3,.L37+4
 1149 002a 1A71     	 strb r2,[r3,#4]
 283:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1150              	 .loc 3 283 0
 1151 002c 104B     	 ldr r3,.L37+4
 1152 002e 6122     	 mov r2,#97
 1153 0030 5A71     	 strb r2,[r3,#5]
 284:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1154              	 .loc 3 284 0
 1155 0032 114B     	 ldr r3,.L37+12
 1156 0034 1B88     	 ldrh r3,[r3]
 1157 0036 1B0A     	 lsr r3,r3,#8
 1158 0038 9BB2     	 uxth r3,r3
 1159 003a DAB2     	 uxtb r2,r3
 1160 003c 0C4B     	 ldr r3,.L37+4
 1161 003e 9A71     	 strb r2,[r3,#6]
 285:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1162              	 .loc 3 285 0
 1163 0040 0D4B     	 ldr r3,.L37+12
 1164 0042 1B88     	 ldrh r3,[r3]
 1165 0044 DAB2     	 uxtb r2,r3
 1166 0046 0A4B     	 ldr r3,.L37+4
 1167 0048 DA71     	 strb r2,[r3,#7]
 286:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1168              	 .loc 3 286 0
 1169 004a 0C4B     	 ldr r3,.L37+16
 1170 004c 1B88     	 ldrh r3,[r3]
 1171 004e 1B0A     	 lsr r3,r3,#8
 1172 0050 9BB2     	 uxth r3,r3
 1173 0052 DAB2     	 uxtb r2,r3
 1174 0054 064B     	 ldr r3,.L37+4
 1175 0056 1A72     	 strb r2,[r3,#8]
 287:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1176              	 .loc 3 287 0
 1177 0058 084B     	 ldr r3,.L37+16
 1178 005a 1B88     	 ldrh r3,[r3]
 1179 005c DAB2     	 uxtb r2,r3
 1180 005e 044B     	 ldr r3,.L37+4
 1181 0060 5A72     	 strb r2,[r3,#9]
 288:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1182              	 .loc 3 288 0
 1183 0062 034B     	 ldr r3,.L37+4
 1184 0064 FF22     	 mov r2,#255
 1185 0066 9A72     	 strb r2,[r3,#10]
 289:../samuel/samuel_io.c ****  }
 1186              	 .loc 3 289 0
 1187 0068 BD46     	 mov sp,r7
 1188              	 
 1189 006a 80BD     	 pop {r7,pc}
 1190              	.L38:
 1191              	 .align 2
 1192              	.L37:
 1193 006c 00000000 	 .word transmit_buf_size
 1194 0070 00000000 	 .word new_data
 1195 0074 00000000 	 .word node_id
 1196 0078 00000000 	 .word resultA2
 1197 007c 00000000 	 .word resultB2
 1198              	 .cfi_endproc
 1199              	.LFE299:
 1201              	 .section .text.new_data_analog2Back,"ax",%progbits
 1202              	 .align 2
 1203              	 .global new_data_analog2Back
 1204              	 .code 16
 1205              	 .thumb_func
 1207              	new_data_analog2Back:
 1208              	.LFB300:
 290:../samuel/samuel_io.c ****  //------------------------------------------------------
 291:../samuel/samuel_io.c **** 
 292:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 293:../samuel/samuel_io.c ****  {
 1209              	 .loc 3 293 0
 1210              	 .cfi_startproc
 1211 0000 80B5     	 push {r7,lr}
 1212              	.LCFI32:
 1213              	 .cfi_def_cfa_offset 8
 1214              	 .cfi_offset 7,-8
 1215              	 .cfi_offset 14,-4
 1216 0002 00AF     	 add r7,sp,#0
 1217              	.LCFI33:
 1218              	 .cfi_def_cfa_register 7
 294:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1219              	 .loc 3 294 0
 1220 0004 194B     	 ldr r3,.L40
 1221 0006 0B22     	 mov r2,#11
 1222 0008 1A70     	 strb r2,[r3]
 295:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1223              	 .loc 3 295 0
 1224 000a 194B     	 ldr r3,.L40+4
 1225 000c 4C22     	 mov r2,#76
 1226 000e 1A70     	 strb r2,[r3]
 296:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1227              	 .loc 3 296 0
 1228 0010 174B     	 ldr r3,.L40+4
 1229 0012 4922     	 mov r2,#73
 1230 0014 5A70     	 strb r2,[r3,#1]
 297:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1231              	 .loc 3 297 0
 1232 0016 164B     	 ldr r3,.L40+4
 1233 0018 4E22     	 mov r2,#78
 1234 001a 9A70     	 strb r2,[r3,#2]
 298:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1235              	 .loc 3 298 0
 1236 001c 154B     	 ldr r3,.L40+8
 1237 001e 1A78     	 ldrb r2,[r3]
 1238 0020 134B     	 ldr r3,.L40+4
 1239 0022 DA70     	 strb r2,[r3,#3]
 299:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1240              	 .loc 3 299 0
 1241 0024 114B     	 ldr r3,.L40
 1242 0026 1A78     	 ldrb r2,[r3]
 1243 0028 114B     	 ldr r3,.L40+4
 1244 002a 1A71     	 strb r2,[r3,#4]
 300:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1245              	 .loc 3 300 0
 1246 002c 104B     	 ldr r3,.L40+4
 1247 002e 6222     	 mov r2,#98
 1248 0030 5A71     	 strb r2,[r3,#5]
 301:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1249              	 .loc 3 301 0
 1250 0032 114B     	 ldr r3,.L40+12
 1251 0034 1B88     	 ldrh r3,[r3]
 1252 0036 1B0A     	 lsr r3,r3,#8
 1253 0038 9BB2     	 uxth r3,r3
 1254 003a DAB2     	 uxtb r2,r3
 1255 003c 0C4B     	 ldr r3,.L40+4
 1256 003e 9A71     	 strb r2,[r3,#6]
 302:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1257              	 .loc 3 302 0
 1258 0040 0D4B     	 ldr r3,.L40+12
 1259 0042 1B88     	 ldrh r3,[r3]
 1260 0044 DAB2     	 uxtb r2,r3
 1261 0046 0A4B     	 ldr r3,.L40+4
 1262 0048 DA71     	 strb r2,[r3,#7]
 303:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1263              	 .loc 3 303 0
 1264 004a 0C4B     	 ldr r3,.L40+16
 1265 004c 1B88     	 ldrh r3,[r3]
 1266 004e 1B0A     	 lsr r3,r3,#8
 1267 0050 9BB2     	 uxth r3,r3
 1268 0052 DAB2     	 uxtb r2,r3
 1269 0054 064B     	 ldr r3,.L40+4
 1270 0056 1A72     	 strb r2,[r3,#8]
 304:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1271              	 .loc 3 304 0
 1272 0058 084B     	 ldr r3,.L40+16
 1273 005a 1B88     	 ldrh r3,[r3]
 1274 005c DAB2     	 uxtb r2,r3
 1275 005e 044B     	 ldr r3,.L40+4
 1276 0060 5A72     	 strb r2,[r3,#9]
 305:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1277              	 .loc 3 305 0
 1278 0062 034B     	 ldr r3,.L40+4
 1279 0064 FF22     	 mov r2,#255
 1280 0066 9A72     	 strb r2,[r3,#10]
 306:../samuel/samuel_io.c ****  }
 1281              	 .loc 3 306 0
 1282 0068 BD46     	 mov sp,r7
 1283              	 
 1284 006a 80BD     	 pop {r7,pc}
 1285              	.L41:
 1286              	 .align 2
 1287              	.L40:
 1288 006c 00000000 	 .word transmit_buf_size
 1289 0070 00000000 	 .word new_data
 1290 0074 00000000 	 .word node_id
 1291 0078 00000000 	 .word resultC2
 1292 007c 00000000 	 .word resultD2
 1293              	 .cfi_endproc
 1294              	.LFE300:
 1296              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1297              	 .align 2
 1298              	 .global new_data_aktLichtBack
 1299              	 .code 16
 1300              	 .thumb_func
 1302              	new_data_aktLichtBack:
 1303              	.LFB301:
 307:../samuel/samuel_io.c ****  //------------------------------------------------------
 308:../samuel/samuel_io.c **** 
 309:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 310:../samuel/samuel_io.c ****  {
 1304              	 .loc 3 310 0
 1305              	 .cfi_startproc
 1306 0000 80B5     	 push {r7,lr}
 1307              	.LCFI34:
 1308              	 .cfi_def_cfa_offset 8
 1309              	 .cfi_offset 7,-8
 1310              	 .cfi_offset 14,-4
 1311 0002 00AF     	 add r7,sp,#0
 1312              	.LCFI35:
 1313              	 .cfi_def_cfa_register 7
 311:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1314              	 .loc 3 311 0
 1315 0004 194B     	 ldr r3,.L43
 1316 0006 0B22     	 mov r2,#11
 1317 0008 1A70     	 strb r2,[r3]
 312:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1318              	 .loc 3 312 0
 1319 000a 194B     	 ldr r3,.L43+4
 1320 000c 4C22     	 mov r2,#76
 1321 000e 1A70     	 strb r2,[r3]
 313:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1322              	 .loc 3 313 0
 1323 0010 174B     	 ldr r3,.L43+4
 1324 0012 4922     	 mov r2,#73
 1325 0014 5A70     	 strb r2,[r3,#1]
 314:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1326              	 .loc 3 314 0
 1327 0016 164B     	 ldr r3,.L43+4
 1328 0018 4E22     	 mov r2,#78
 1329 001a 9A70     	 strb r2,[r3,#2]
 315:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1330              	 .loc 3 315 0
 1331 001c 154B     	 ldr r3,.L43+8
 1332 001e 1A78     	 ldrb r2,[r3]
 1333 0020 134B     	 ldr r3,.L43+4
 1334 0022 DA70     	 strb r2,[r3,#3]
 316:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1335              	 .loc 3 316 0
 1336 0024 114B     	 ldr r3,.L43
 1337 0026 1A78     	 ldrb r2,[r3]
 1338 0028 114B     	 ldr r3,.L43+4
 1339 002a 1A71     	 strb r2,[r3,#4]
 317:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1340              	 .loc 3 317 0
 1341 002c 104B     	 ldr r3,.L43+4
 1342 002e 6622     	 mov r2,#102
 1343 0030 5A71     	 strb r2,[r3,#5]
 318:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1344              	 .loc 3 318 0
 1345 0032 114B     	 ldr r3,.L43+12
 1346 0034 1B88     	 ldrh r3,[r3]
 1347 0036 1B0A     	 lsr r3,r3,#8
 1348 0038 9BB2     	 uxth r3,r3
 1349 003a DAB2     	 uxtb r2,r3
 1350 003c 0C4B     	 ldr r3,.L43+4
 1351 003e 9A71     	 strb r2,[r3,#6]
 319:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1352              	 .loc 3 319 0
 1353 0040 0D4B     	 ldr r3,.L43+12
 1354 0042 1B88     	 ldrh r3,[r3]
 1355 0044 DAB2     	 uxtb r2,r3
 1356 0046 0A4B     	 ldr r3,.L43+4
 1357 0048 DA71     	 strb r2,[r3,#7]
 320:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1358              	 .loc 3 320 0
 1359 004a 0C4B     	 ldr r3,.L43+16
 1360 004c 1B88     	 ldrh r3,[r3]
 1361 004e 1B0A     	 lsr r3,r3,#8
 1362 0050 9BB2     	 uxth r3,r3
 1363 0052 DAB2     	 uxtb r2,r3
 1364 0054 064B     	 ldr r3,.L43+4
 1365 0056 1A72     	 strb r2,[r3,#8]
 321:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1366              	 .loc 3 321 0
 1367 0058 084B     	 ldr r3,.L43+16
 1368 005a 1B88     	 ldrh r3,[r3]
 1369 005c DAB2     	 uxtb r2,r3
 1370 005e 044B     	 ldr r3,.L43+4
 1371 0060 5A72     	 strb r2,[r3,#9]
 322:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1372              	 .loc 3 322 0
 1373 0062 034B     	 ldr r3,.L43+4
 1374 0064 FF22     	 mov r2,#255
 1375 0066 9A72     	 strb r2,[r3,#10]
 323:../samuel/samuel_io.c ****  }
 1376              	 .loc 3 323 0
 1377 0068 BD46     	 mov sp,r7
 1378              	 
 1379 006a 80BD     	 pop {r7,pc}
 1380              	.L44:
 1381              	 .align 2
 1382              	.L43:
 1383 006c 00000000 	 .word transmit_buf_size
 1384 0070 00000000 	 .word new_data
 1385 0074 00000000 	 .word node_id
 1386 0078 00000000 	 .word dimAkt_Ww
 1387 007c 00000000 	 .word dimAkt_Cw
 1388              	 .cfi_endproc
 1389              	.LFE301:
 1391              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1392              	 .align 2
 1393              	 .global new_data_offLichtBack
 1394              	 .code 16
 1395              	 .thumb_func
 1397              	new_data_offLichtBack:
 1398              	.LFB302:
 324:../samuel/samuel_io.c ****  //------------------------------------------------------
 325:../samuel/samuel_io.c **** 
 326:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 327:../samuel/samuel_io.c ****  {
 1399              	 .loc 3 327 0
 1400              	 .cfi_startproc
 1401 0000 80B5     	 push {r7,lr}
 1402              	.LCFI36:
 1403              	 .cfi_def_cfa_offset 8
 1404              	 .cfi_offset 7,-8
 1405              	 .cfi_offset 14,-4
 1406 0002 00AF     	 add r7,sp,#0
 1407              	.LCFI37:
 1408              	 .cfi_def_cfa_register 7
 328:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1409              	 .loc 3 328 0
 1410 0004 1D4B     	 ldr r3,.L46
 1411 0006 0D22     	 mov r2,#13
 1412 0008 1A70     	 strb r2,[r3]
 329:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1413              	 .loc 3 329 0
 1414 000a 1D4B     	 ldr r3,.L46+4
 1415 000c 4C22     	 mov r2,#76
 1416 000e 1A70     	 strb r2,[r3]
 330:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1417              	 .loc 3 330 0
 1418 0010 1B4B     	 ldr r3,.L46+4
 1419 0012 4922     	 mov r2,#73
 1420 0014 5A70     	 strb r2,[r3,#1]
 331:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1421              	 .loc 3 331 0
 1422 0016 1A4B     	 ldr r3,.L46+4
 1423 0018 4E22     	 mov r2,#78
 1424 001a 9A70     	 strb r2,[r3,#2]
 332:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1425              	 .loc 3 332 0
 1426 001c 194B     	 ldr r3,.L46+8
 1427 001e 1A78     	 ldrb r2,[r3]
 1428 0020 174B     	 ldr r3,.L46+4
 1429 0022 DA70     	 strb r2,[r3,#3]
 333:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1430              	 .loc 3 333 0
 1431 0024 154B     	 ldr r3,.L46
 1432 0026 1A78     	 ldrb r2,[r3]
 1433 0028 154B     	 ldr r3,.L46+4
 1434 002a 1A71     	 strb r2,[r3,#4]
 334:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1435              	 .loc 3 334 0
 1436 002c 144B     	 ldr r3,.L46+4
 1437 002e 6722     	 mov r2,#103
 1438 0030 5A71     	 strb r2,[r3,#5]
 335:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1439              	 .loc 3 335 0
 1440 0032 154B     	 ldr r3,.L46+12
 1441 0034 1B88     	 ldrh r3,[r3]
 1442 0036 1B0A     	 lsr r3,r3,#8
 1443 0038 9BB2     	 uxth r3,r3
 1444 003a DAB2     	 uxtb r2,r3
 1445 003c 104B     	 ldr r3,.L46+4
 1446 003e 9A71     	 strb r2,[r3,#6]
 336:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1447              	 .loc 3 336 0
 1448 0040 114B     	 ldr r3,.L46+12
 1449 0042 1B88     	 ldrh r3,[r3]
 1450 0044 DAB2     	 uxtb r2,r3
 1451 0046 0E4B     	 ldr r3,.L46+4
 1452 0048 DA71     	 strb r2,[r3,#7]
 337:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1453              	 .loc 3 337 0
 1454 004a 104B     	 ldr r3,.L46+16
 1455 004c 1B88     	 ldrh r3,[r3]
 1456 004e 1B0A     	 lsr r3,r3,#8
 1457 0050 9BB2     	 uxth r3,r3
 1458 0052 DAB2     	 uxtb r2,r3
 1459 0054 0A4B     	 ldr r3,.L46+4
 1460 0056 1A72     	 strb r2,[r3,#8]
 338:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1461              	 .loc 3 338 0
 1462 0058 0C4B     	 ldr r3,.L46+16
 1463 005a 1B88     	 ldrh r3,[r3]
 1464 005c DAB2     	 uxtb r2,r3
 1465 005e 084B     	 ldr r3,.L46+4
 1466 0060 5A72     	 strb r2,[r3,#9]
 339:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1467              	 .loc 3 339 0
 1468 0062 0B4B     	 ldr r3,.L46+20
 1469 0064 1A78     	 ldrb r2,[r3]
 1470 0066 064B     	 ldr r3,.L46+4
 1471 0068 9A72     	 strb r2,[r3,#10]
 340:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1472              	 .loc 3 340 0
 1473 006a 0A4B     	 ldr r3,.L46+24
 1474 006c 1A78     	 ldrb r2,[r3]
 1475 006e 044B     	 ldr r3,.L46+4
 1476 0070 DA72     	 strb r2,[r3,#11]
 341:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1477              	 .loc 3 341 0
 1478 0072 034B     	 ldr r3,.L46+4
 1479 0074 FF22     	 mov r2,#255
 1480 0076 1A73     	 strb r2,[r3,#12]
 342:../samuel/samuel_io.c ****  }
 1481              	 .loc 3 342 0
 1482 0078 BD46     	 mov sp,r7
 1483              	 
 1484 007a 80BD     	 pop {r7,pc}
 1485              	.L47:
 1486              	 .align 2
 1487              	.L46:
 1488 007c 00000000 	 .word transmit_buf_size
 1489 0080 00000000 	 .word new_data
 1490 0084 00000000 	 .word node_id
 1491 0088 00000000 	 .word dimOff_Ww
 1492 008c 00000000 	 .word dimOff_Cw
 1493 0090 00000000 	 .word RegOnOff
 1494 0094 00000000 	 .word RegOnOff2
 1495              	 .cfi_endproc
 1496              	.LFE302:
 1498              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1499              	 .align 2
 1500              	 .global new_data_Bright_Color_Back
 1501              	 .code 16
 1502              	 .thumb_func
 1504              	new_data_Bright_Color_Back:
 1505              	.LFB303:
 343:../samuel/samuel_io.c ****  //------------------------------------------------------
 344:../samuel/samuel_io.c **** 
 345:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 346:../samuel/samuel_io.c ****   {
 1506              	 .loc 3 346 0
 1507              	 .cfi_startproc
 1508 0000 80B5     	 push {r7,lr}
 1509              	.LCFI38:
 1510              	 .cfi_def_cfa_offset 8
 1511              	 .cfi_offset 7,-8
 1512              	 .cfi_offset 14,-4
 1513 0002 00AF     	 add r7,sp,#0
 1514              	.LCFI39:
 1515              	 .cfi_def_cfa_register 7
 347:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1516              	 .loc 3 347 0
 1517 0004 194B     	 ldr r3,.L49
 1518 0006 0B22     	 mov r2,#11
 1519 0008 1A70     	 strb r2,[r3]
 348:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1520              	 .loc 3 348 0
 1521 000a 194B     	 ldr r3,.L49+4
 1522 000c 4C22     	 mov r2,#76
 1523 000e 1A70     	 strb r2,[r3]
 349:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1524              	 .loc 3 349 0
 1525 0010 174B     	 ldr r3,.L49+4
 1526 0012 4922     	 mov r2,#73
 1527 0014 5A70     	 strb r2,[r3,#1]
 350:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1528              	 .loc 3 350 0
 1529 0016 164B     	 ldr r3,.L49+4
 1530 0018 4E22     	 mov r2,#78
 1531 001a 9A70     	 strb r2,[r3,#2]
 351:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1532              	 .loc 3 351 0
 1533 001c 154B     	 ldr r3,.L49+8
 1534 001e 1A78     	 ldrb r2,[r3]
 1535 0020 134B     	 ldr r3,.L49+4
 1536 0022 DA70     	 strb r2,[r3,#3]
 352:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1537              	 .loc 3 352 0
 1538 0024 114B     	 ldr r3,.L49
 1539 0026 1A78     	 ldrb r2,[r3]
 1540 0028 114B     	 ldr r3,.L49+4
 1541 002a 1A71     	 strb r2,[r3,#4]
 353:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1542              	 .loc 3 353 0
 1543 002c 104B     	 ldr r3,.L49+4
 1544 002e 6822     	 mov r2,#104
 1545 0030 5A71     	 strb r2,[r3,#5]
 354:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1546              	 .loc 3 354 0
 1547 0032 114B     	 ldr r3,.L49+12
 1548 0034 1B88     	 ldrh r3,[r3]
 1549 0036 1B0A     	 lsr r3,r3,#8
 1550 0038 9BB2     	 uxth r3,r3
 1551 003a DAB2     	 uxtb r2,r3
 1552 003c 0C4B     	 ldr r3,.L49+4
 1553 003e 9A71     	 strb r2,[r3,#6]
 355:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1554              	 .loc 3 355 0
 1555 0040 0D4B     	 ldr r3,.L49+12
 1556 0042 1B88     	 ldrh r3,[r3]
 1557 0044 DAB2     	 uxtb r2,r3
 1558 0046 0A4B     	 ldr r3,.L49+4
 1559 0048 DA71     	 strb r2,[r3,#7]
 356:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1560              	 .loc 3 356 0
 1561 004a 0C4B     	 ldr r3,.L49+16
 1562 004c 1B88     	 ldrh r3,[r3]
 1563 004e 1B0A     	 lsr r3,r3,#8
 1564 0050 9BB2     	 uxth r3,r3
 1565 0052 DAB2     	 uxtb r2,r3
 1566 0054 064B     	 ldr r3,.L49+4
 1567 0056 1A72     	 strb r2,[r3,#8]
 357:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1568              	 .loc 3 357 0
 1569 0058 084B     	 ldr r3,.L49+16
 1570 005a 1B88     	 ldrh r3,[r3]
 1571 005c DAB2     	 uxtb r2,r3
 1572 005e 044B     	 ldr r3,.L49+4
 1573 0060 5A72     	 strb r2,[r3,#9]
 358:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1574              	 .loc 3 358 0
 1575 0062 034B     	 ldr r3,.L49+4
 1576 0064 FF22     	 mov r2,#255
 1577 0066 9A72     	 strb r2,[r3,#10]
 359:../samuel/samuel_io.c ****   }
 1578              	 .loc 3 359 0
 1579 0068 BD46     	 mov sp,r7
 1580              	 
 1581 006a 80BD     	 pop {r7,pc}
 1582              	.L50:
 1583              	 .align 2
 1584              	.L49:
 1585 006c 00000000 	 .word transmit_buf_size
 1586 0070 00000000 	 .word new_data
 1587 0074 00000000 	 .word node_id
 1588 0078 00000000 	 .word Brightness_Gen
 1589 007c 00000000 	 .word ColorQuot_Gen
 1590              	 .cfi_endproc
 1591              	.LFE303:
 1593              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1594              	 .align 2
 1595              	 .global new_data_Quot_Walk_Back
 1596              	 .code 16
 1597              	 .thumb_func
 1599              	new_data_Quot_Walk_Back:
 1600              	.LFB304:
 360:../samuel/samuel_io.c ****   //------------------------------------------------------
 361:../samuel/samuel_io.c **** 
 362:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 363:../samuel/samuel_io.c ****   {
 1601              	 .loc 3 363 0
 1602              	 .cfi_startproc
 1603 0000 80B5     	 push {r7,lr}
 1604              	.LCFI40:
 1605              	 .cfi_def_cfa_offset 8
 1606              	 .cfi_offset 7,-8
 1607              	 .cfi_offset 14,-4
 1608 0002 00AF     	 add r7,sp,#0
 1609              	.LCFI41:
 1610              	 .cfi_def_cfa_register 7
 364:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1611              	 .loc 3 364 0
 1612 0004 194B     	 ldr r3,.L52
 1613 0006 0B22     	 mov r2,#11
 1614 0008 1A70     	 strb r2,[r3]
 365:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1615              	 .loc 3 365 0
 1616 000a 194B     	 ldr r3,.L52+4
 1617 000c 4C22     	 mov r2,#76
 1618 000e 1A70     	 strb r2,[r3]
 366:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1619              	 .loc 3 366 0
 1620 0010 174B     	 ldr r3,.L52+4
 1621 0012 4922     	 mov r2,#73
 1622 0014 5A70     	 strb r2,[r3,#1]
 367:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1623              	 .loc 3 367 0
 1624 0016 164B     	 ldr r3,.L52+4
 1625 0018 4E22     	 mov r2,#78
 1626 001a 9A70     	 strb r2,[r3,#2]
 368:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1627              	 .loc 3 368 0
 1628 001c 154B     	 ldr r3,.L52+8
 1629 001e 1A78     	 ldrb r2,[r3]
 1630 0020 134B     	 ldr r3,.L52+4
 1631 0022 DA70     	 strb r2,[r3,#3]
 369:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1632              	 .loc 3 369 0
 1633 0024 114B     	 ldr r3,.L52
 1634 0026 1A78     	 ldrb r2,[r3]
 1635 0028 114B     	 ldr r3,.L52+4
 1636 002a 1A71     	 strb r2,[r3,#4]
 370:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1637              	 .loc 3 370 0
 1638 002c 104B     	 ldr r3,.L52+4
 1639 002e 6922     	 mov r2,#105
 1640 0030 5A71     	 strb r2,[r3,#5]
 371:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1641              	 .loc 3 371 0
 1642 0032 114B     	 ldr r3,.L52+12
 1643 0034 1B88     	 ldrh r3,[r3]
 1644 0036 1B0A     	 lsr r3,r3,#8
 1645 0038 9BB2     	 uxth r3,r3
 1646 003a DAB2     	 uxtb r2,r3
 1647 003c 0C4B     	 ldr r3,.L52+4
 1648 003e 9A71     	 strb r2,[r3,#6]
 372:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1649              	 .loc 3 372 0
 1650 0040 0D4B     	 ldr r3,.L52+12
 1651 0042 1B88     	 ldrh r3,[r3]
 1652 0044 DAB2     	 uxtb r2,r3
 1653 0046 0A4B     	 ldr r3,.L52+4
 1654 0048 DA71     	 strb r2,[r3,#7]
 373:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1655              	 .loc 3 373 0
 1656 004a 0C4B     	 ldr r3,.L52+16
 1657 004c 1B88     	 ldrh r3,[r3]
 1658 004e 1B0A     	 lsr r3,r3,#8
 1659 0050 9BB2     	 uxth r3,r3
 1660 0052 DAB2     	 uxtb r2,r3
 1661 0054 064B     	 ldr r3,.L52+4
 1662 0056 1A72     	 strb r2,[r3,#8]
 374:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1663              	 .loc 3 374 0
 1664 0058 084B     	 ldr r3,.L52+16
 1665 005a 1B88     	 ldrh r3,[r3]
 1666 005c DAB2     	 uxtb r2,r3
 1667 005e 044B     	 ldr r3,.L52+4
 1668 0060 5A72     	 strb r2,[r3,#9]
 375:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1669              	 .loc 3 375 0
 1670 0062 034B     	 ldr r3,.L52+4
 1671 0064 FF22     	 mov r2,#255
 1672 0066 9A72     	 strb r2,[r3,#10]
 376:../samuel/samuel_io.c ****   }
 1673              	 .loc 3 376 0
 1674 0068 BD46     	 mov sp,r7
 1675              	 
 1676 006a 80BD     	 pop {r7,pc}
 1677              	.L53:
 1678              	 .align 2
 1679              	.L52:
 1680 006c 00000000 	 .word transmit_buf_size
 1681 0070 00000000 	 .word new_data
 1682 0074 00000000 	 .word node_id
 1683 0078 00000000 	 .word linearwalk_gen
 1684 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1685              	 .cfi_endproc
 1686              	.LFE304:
 1688              	 .section .text.new_data_HalloBack,"ax",%progbits
 1689              	 .align 2
 1690              	 .global new_data_HalloBack
 1691              	 .code 16
 1692              	 .thumb_func
 1694              	new_data_HalloBack:
 1695              	.LFB305:
 377:../samuel/samuel_io.c ****  //------------------------------------------
 378:../samuel/samuel_io.c **** 
 379:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 380:../samuel/samuel_io.c ****   {
 1696              	 .loc 3 380 0
 1697              	 .cfi_startproc
 1698 0000 80B5     	 push {r7,lr}
 1699              	.LCFI42:
 1700              	 .cfi_def_cfa_offset 8
 1701              	 .cfi_offset 7,-8
 1702              	 .cfi_offset 14,-4
 1703 0002 00AF     	 add r7,sp,#0
 1704              	.LCFI43:
 1705              	 .cfi_def_cfa_register 7
 381:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1706              	 .loc 3 381 0
 1707 0004 134B     	 ldr r3,.L55
 1708 0006 0B22     	 mov r2,#11
 1709 0008 1A70     	 strb r2,[r3]
 382:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1710              	 .loc 3 382 0
 1711 000a 134B     	 ldr r3,.L55+4
 1712 000c 4C22     	 mov r2,#76
 1713 000e 1A70     	 strb r2,[r3]
 383:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1714              	 .loc 3 383 0
 1715 0010 114B     	 ldr r3,.L55+4
 1716 0012 4922     	 mov r2,#73
 1717 0014 5A70     	 strb r2,[r3,#1]
 384:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1718              	 .loc 3 384 0
 1719 0016 104B     	 ldr r3,.L55+4
 1720 0018 4E22     	 mov r2,#78
 1721 001a 9A70     	 strb r2,[r3,#2]
 385:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1722              	 .loc 3 385 0
 1723 001c 0F4B     	 ldr r3,.L55+8
 1724 001e 1A78     	 ldrb r2,[r3]
 1725 0020 0D4B     	 ldr r3,.L55+4
 1726 0022 DA70     	 strb r2,[r3,#3]
 386:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1727              	 .loc 3 386 0
 1728 0024 0B4B     	 ldr r3,.L55
 1729 0026 1A78     	 ldrb r2,[r3]
 1730 0028 0B4B     	 ldr r3,.L55+4
 1731 002a 1A71     	 strb r2,[r3,#4]
 387:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1732              	 .loc 3 387 0
 1733 002c 0A4B     	 ldr r3,.L55+4
 1734 002e 6A22     	 mov r2,#106
 1735 0030 5A71     	 strb r2,[r3,#5]
 388:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1736              	 .loc 3 388 0
 1737 0032 094B     	 ldr r3,.L55+4
 1738 0034 6F22     	 mov r2,#111
 1739 0036 9A71     	 strb r2,[r3,#6]
 389:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1740              	 .loc 3 389 0
 1741 0038 074B     	 ldr r3,.L55+4
 1742 003a 6B22     	 mov r2,#107
 1743 003c DA71     	 strb r2,[r3,#7]
 390:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1744              	 .loc 3 390 0
 1745 003e 064B     	 ldr r3,.L55+4
 1746 0040 6F22     	 mov r2,#111
 1747 0042 1A72     	 strb r2,[r3,#8]
 391:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1748              	 .loc 3 391 0
 1749 0044 044B     	 ldr r3,.L55+4
 1750 0046 6B22     	 mov r2,#107
 1751 0048 5A72     	 strb r2,[r3,#9]
 392:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1752              	 .loc 3 392 0
 1753 004a 034B     	 ldr r3,.L55+4
 1754 004c FF22     	 mov r2,#255
 1755 004e 9A72     	 strb r2,[r3,#10]
 393:../samuel/samuel_io.c ****   }
 1756              	 .loc 3 393 0
 1757 0050 BD46     	 mov sp,r7
 1758              	 
 1759 0052 80BD     	 pop {r7,pc}
 1760              	.L56:
 1761              	 .align 2
 1762              	.L55:
 1763 0054 00000000 	 .word transmit_buf_size
 1764 0058 00000000 	 .word new_data
 1765 005c 00000000 	 .word node_id
 1766              	 .cfi_endproc
 1767              	.LFE305:
 1769              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 1770              	 .align 2
 1771              	 .global new_data_neuNodeIdBack
 1772              	 .code 16
 1773              	 .thumb_func
 1775              	new_data_neuNodeIdBack:
 1776              	.LFB306:
 394:../samuel/samuel_io.c ****   //------------------------------------------------------
 395:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 396:../samuel/samuel_io.c ****    {
 1777              	 .loc 3 396 0
 1778              	 .cfi_startproc
 1779 0000 80B5     	 push {r7,lr}
 1780              	.LCFI44:
 1781              	 .cfi_def_cfa_offset 8
 1782              	 .cfi_offset 7,-8
 1783              	 .cfi_offset 14,-4
 1784 0002 00AF     	 add r7,sp,#0
 1785              	.LCFI45:
 1786              	 .cfi_def_cfa_register 7
 397:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 1787              	 .loc 3 397 0
 1788 0004 1B4B     	 ldr r3,.L58
 1789 0006 0C22     	 mov r2,#12
 1790 0008 1A70     	 strb r2,[r3]
 398:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1791              	 .loc 3 398 0
 1792 000a 1B4B     	 ldr r3,.L58+4
 1793 000c 4C22     	 mov r2,#76
 1794 000e 1A70     	 strb r2,[r3]
 399:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1795              	 .loc 3 399 0
 1796 0010 194B     	 ldr r3,.L58+4
 1797 0012 4922     	 mov r2,#73
 1798 0014 5A70     	 strb r2,[r3,#1]
 400:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1799              	 .loc 3 400 0
 1800 0016 184B     	 ldr r3,.L58+4
 1801 0018 4E22     	 mov r2,#78
 1802 001a 9A70     	 strb r2,[r3,#2]
 401:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1803              	 .loc 3 401 0
 1804 001c 174B     	 ldr r3,.L58+8
 1805 001e 1A78     	 ldrb r2,[r3]
 1806 0020 154B     	 ldr r3,.L58+4
 1807 0022 DA70     	 strb r2,[r3,#3]
 402:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1808              	 .loc 3 402 0
 1809 0024 134B     	 ldr r3,.L58
 1810 0026 1A78     	 ldrb r2,[r3]
 1811 0028 134B     	 ldr r3,.L58+4
 1812 002a 1A71     	 strb r2,[r3,#4]
 403:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 1813              	 .loc 3 403 0
 1814 002c 124B     	 ldr r3,.L58+4
 1815 002e 6B22     	 mov r2,#107
 1816 0030 5A71     	 strb r2,[r3,#5]
 404:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 1817              	 .loc 3 404 0
 1818 0032 134B     	 ldr r3,.L58+12
 1819 0034 1A78     	 ldrb r2,[r3]
 1820 0036 104B     	 ldr r3,.L58+4
 1821 0038 9A71     	 strb r2,[r3,#6]
 405:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 1822              	 .loc 3 405 0
 1823 003a 124B     	 ldr r3,.L58+16
 1824 003c 1B88     	 ldrh r3,[r3]
 1825 003e 1B0A     	 lsr r3,r3,#8
 1826 0040 9BB2     	 uxth r3,r3
 1827 0042 DAB2     	 uxtb r2,r3
 1828 0044 0C4B     	 ldr r3,.L58+4
 1829 0046 DA71     	 strb r2,[r3,#7]
 406:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 1830              	 .loc 3 406 0
 1831 0048 0E4B     	 ldr r3,.L58+16
 1832 004a 1B88     	 ldrh r3,[r3]
 1833 004c DAB2     	 uxtb r2,r3
 1834 004e 0A4B     	 ldr r3,.L58+4
 1835 0050 1A72     	 strb r2,[r3,#8]
 407:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 1836              	 .loc 3 407 0
 1837 0052 0D4B     	 ldr r3,.L58+20
 1838 0054 1B88     	 ldrh r3,[r3]
 1839 0056 1B0A     	 lsr r3,r3,#8
 1840 0058 9BB2     	 uxth r3,r3
 1841 005a DAB2     	 uxtb r2,r3
 1842 005c 064B     	 ldr r3,.L58+4
 1843 005e 5A72     	 strb r2,[r3,#9]
 408:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 1844              	 .loc 3 408 0
 1845 0060 094B     	 ldr r3,.L58+20
 1846 0062 1B88     	 ldrh r3,[r3]
 1847 0064 DAB2     	 uxtb r2,r3
 1848 0066 044B     	 ldr r3,.L58+4
 1849 0068 9A72     	 strb r2,[r3,#10]
 409:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 1850              	 .loc 3 409 0
 1851 006a 034B     	 ldr r3,.L58+4
 1852 006c FF22     	 mov r2,#255
 1853 006e DA72     	 strb r2,[r3,#11]
 410:../samuel/samuel_io.c ****    }
 1854              	 .loc 3 410 0
 1855 0070 BD46     	 mov sp,r7
 1856              	 
 1857 0072 80BD     	 pop {r7,pc}
 1858              	.L59:
 1859              	 .align 2
 1860              	.L58:
 1861 0074 00000000 	 .word transmit_buf_size
 1862 0078 00000000 	 .word new_data
 1863 007c 00000000 	 .word node_id
 1864 0080 00000000 	 .word node_id_neu
 1865 0084 00000000 	 .word Ser_NrH
 1866 0088 00000000 	 .word Ser_NrL
 1867              	 .cfi_endproc
 1868              	.LFE306:
 1870              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 1871              	 .align 2
 1872              	 .global new_data_neuSerNrBack
 1873              	 .code 16
 1874              	 .thumb_func
 1876              	new_data_neuSerNrBack:
 1877              	.LFB307:
 411:../samuel/samuel_io.c ****    //------------------------------------------------------
 412:../samuel/samuel_io.c **** 
 413:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 414:../samuel/samuel_io.c ****    {
 1878              	 .loc 3 414 0
 1879              	 .cfi_startproc
 1880 0000 80B5     	 push {r7,lr}
 1881              	.LCFI46:
 1882              	 .cfi_def_cfa_offset 8
 1883              	 .cfi_offset 7,-8
 1884              	 .cfi_offset 14,-4
 1885 0002 00AF     	 add r7,sp,#0
 1886              	.LCFI47:
 1887              	 .cfi_def_cfa_register 7
 415:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 1888              	 .loc 3 415 0
 1889 0004 254B     	 ldr r3,.L61
 1890 0006 0F22     	 mov r2,#15
 1891 0008 1A70     	 strb r2,[r3]
 416:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1892              	 .loc 3 416 0
 1893 000a 254B     	 ldr r3,.L61+4
 1894 000c 4C22     	 mov r2,#76
 1895 000e 1A70     	 strb r2,[r3]
 417:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1896              	 .loc 3 417 0
 1897 0010 234B     	 ldr r3,.L61+4
 1898 0012 4922     	 mov r2,#73
 1899 0014 5A70     	 strb r2,[r3,#1]
 418:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1900              	 .loc 3 418 0
 1901 0016 224B     	 ldr r3,.L61+4
 1902 0018 4E22     	 mov r2,#78
 1903 001a 9A70     	 strb r2,[r3,#2]
 419:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1904              	 .loc 3 419 0
 1905 001c 214B     	 ldr r3,.L61+8
 1906 001e 1A78     	 ldrb r2,[r3]
 1907 0020 1F4B     	 ldr r3,.L61+4
 1908 0022 DA70     	 strb r2,[r3,#3]
 420:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1909              	 .loc 3 420 0
 1910 0024 1D4B     	 ldr r3,.L61
 1911 0026 1A78     	 ldrb r2,[r3]
 1912 0028 1D4B     	 ldr r3,.L61+4
 1913 002a 1A71     	 strb r2,[r3,#4]
 421:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 1914              	 .loc 3 421 0
 1915 002c 1C4B     	 ldr r3,.L61+4
 1916 002e 6C22     	 mov r2,#108
 1917 0030 5A71     	 strb r2,[r3,#5]
 422:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 1918              	 .loc 3 422 0
 1919 0032 1D4B     	 ldr r3,.L61+12
 1920 0034 1B88     	 ldrh r3,[r3]
 1921 0036 1B0A     	 lsr r3,r3,#8
 1922 0038 9BB2     	 uxth r3,r3
 1923 003a DAB2     	 uxtb r2,r3
 1924 003c 184B     	 ldr r3,.L61+4
 1925 003e 9A71     	 strb r2,[r3,#6]
 423:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 1926              	 .loc 3 423 0
 1927 0040 194B     	 ldr r3,.L61+12
 1928 0042 1B88     	 ldrh r3,[r3]
 1929 0044 DAB2     	 uxtb r2,r3
 1930 0046 164B     	 ldr r3,.L61+4
 1931 0048 DA71     	 strb r2,[r3,#7]
 424:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 1932              	 .loc 3 424 0
 1933 004a 184B     	 ldr r3,.L61+16
 1934 004c 1B88     	 ldrh r3,[r3]
 1935 004e 1B0A     	 lsr r3,r3,#8
 1936 0050 9BB2     	 uxth r3,r3
 1937 0052 DAB2     	 uxtb r2,r3
 1938 0054 124B     	 ldr r3,.L61+4
 1939 0056 1A72     	 strb r2,[r3,#8]
 425:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 1940              	 .loc 3 425 0
 1941 0058 144B     	 ldr r3,.L61+16
 1942 005a 1B88     	 ldrh r3,[r3]
 1943 005c DAB2     	 uxtb r2,r3
 1944 005e 104B     	 ldr r3,.L61+4
 1945 0060 5A72     	 strb r2,[r3,#9]
 426:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 1946              	 .loc 3 426 0
 1947 0062 134B     	 ldr r3,.L61+20
 1948 0064 1B88     	 ldrh r3,[r3]
 1949 0066 1B0A     	 lsr r3,r3,#8
 1950 0068 9BB2     	 uxth r3,r3
 1951 006a DAB2     	 uxtb r2,r3
 1952 006c 0C4B     	 ldr r3,.L61+4
 1953 006e 9A72     	 strb r2,[r3,#10]
 427:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 1954              	 .loc 3 427 0
 1955 0070 0F4B     	 ldr r3,.L61+20
 1956 0072 1B88     	 ldrh r3,[r3]
 1957 0074 DAB2     	 uxtb r2,r3
 1958 0076 0A4B     	 ldr r3,.L61+4
 1959 0078 DA72     	 strb r2,[r3,#11]
 428:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 1960              	 .loc 3 428 0
 1961 007a 0E4B     	 ldr r3,.L61+24
 1962 007c 1B88     	 ldrh r3,[r3]
 1963 007e 1B0A     	 lsr r3,r3,#8
 1964 0080 9BB2     	 uxth r3,r3
 1965 0082 DAB2     	 uxtb r2,r3
 1966 0084 064B     	 ldr r3,.L61+4
 1967 0086 1A73     	 strb r2,[r3,#12]
 429:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 1968              	 .loc 3 429 0
 1969 0088 0A4B     	 ldr r3,.L61+24
 1970 008a 1B88     	 ldrh r3,[r3]
 1971 008c DAB2     	 uxtb r2,r3
 1972 008e 044B     	 ldr r3,.L61+4
 1973 0090 5A73     	 strb r2,[r3,#13]
 430:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 1974              	 .loc 3 430 0
 1975 0092 034B     	 ldr r3,.L61+4
 1976 0094 FF22     	 mov r2,#255
 1977 0096 9A73     	 strb r2,[r3,#14]
 431:../samuel/samuel_io.c ****    }
 1978              	 .loc 3 431 0
 1979 0098 BD46     	 mov sp,r7
 1980              	 
 1981 009a 80BD     	 pop {r7,pc}
 1982              	.L62:
 1983              	 .align 2
 1984              	.L61:
 1985 009c 00000000 	 .word transmit_buf_size
 1986 00a0 00000000 	 .word new_data
 1987 00a4 00000000 	 .word node_id
 1988 00a8 00000000 	 .word neu_Ser_NrH
 1989 00ac 00000000 	 .word neu_Ser_NrL
 1990 00b0 00000000 	 .word Ser_NrH
 1991 00b4 00000000 	 .word Ser_NrL
 1992              	 .cfi_endproc
 1993              	.LFE307:
 1995              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 1996              	 .align 2
 1997              	 .global new_data_NodeIdBack
 1998              	 .code 16
 1999              	 .thumb_func
 2001              	new_data_NodeIdBack:
 2002              	.LFB308:
 432:../samuel/samuel_io.c ****    //------------------------------------------------------
 433:../samuel/samuel_io.c **** 
 434:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 435:../samuel/samuel_io.c ****    {
 2003              	 .loc 3 435 0
 2004              	 .cfi_startproc
 2005 0000 80B5     	 push {r7,lr}
 2006              	.LCFI48:
 2007              	 .cfi_def_cfa_offset 8
 2008              	 .cfi_offset 7,-8
 2009              	 .cfi_offset 14,-4
 2010 0002 00AF     	 add r7,sp,#0
 2011              	.LCFI49:
 2012              	 .cfi_def_cfa_register 7
 436:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 2013              	 .loc 3 436 0
 2014 0004 1D4B     	 ldr r3,.L64
 2015 0006 0D22     	 mov r2,#13
 2016 0008 1A70     	 strb r2,[r3]
 437:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2017              	 .loc 3 437 0
 2018 000a 1D4B     	 ldr r3,.L64+4
 2019 000c 4C22     	 mov r2,#76
 2020 000e 1A70     	 strb r2,[r3]
 438:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2021              	 .loc 3 438 0
 2022 0010 1B4B     	 ldr r3,.L64+4
 2023 0012 4922     	 mov r2,#73
 2024 0014 5A70     	 strb r2,[r3,#1]
 439:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2025              	 .loc 3 439 0
 2026 0016 1A4B     	 ldr r3,.L64+4
 2027 0018 4E22     	 mov r2,#78
 2028 001a 9A70     	 strb r2,[r3,#2]
 440:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2029              	 .loc 3 440 0
 2030 001c 194B     	 ldr r3,.L64+8
 2031 001e 1A78     	 ldrb r2,[r3]
 2032 0020 174B     	 ldr r3,.L64+4
 2033 0022 DA70     	 strb r2,[r3,#3]
 441:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2034              	 .loc 3 441 0
 2035 0024 154B     	 ldr r3,.L64
 2036 0026 1A78     	 ldrb r2,[r3]
 2037 0028 154B     	 ldr r3,.L64+4
 2038 002a 1A71     	 strb r2,[r3,#4]
 442:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 2039              	 .loc 3 442 0
 2040 002c 144B     	 ldr r3,.L64+4
 2041 002e 6D22     	 mov r2,#109
 2042 0030 5A71     	 strb r2,[r3,#5]
 443:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 2043              	 .loc 3 443 0
 2044 0032 154B     	 ldr r3,.L64+12
 2045 0034 1A78     	 ldrb r2,[r3]
 2046 0036 124B     	 ldr r3,.L64+4
 2047 0038 9A71     	 strb r2,[r3,#6]
 444:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 2048              	 .loc 3 444 0
 2049 003a 124B     	 ldr r3,.L64+8
 2050 003c 1A78     	 ldrb r2,[r3]
 2051 003e 104B     	 ldr r3,.L64+4
 2052 0040 DA71     	 strb r2,[r3,#7]
 445:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 2053              	 .loc 3 445 0
 2054 0042 124B     	 ldr r3,.L64+16
 2055 0044 1B88     	 ldrh r3,[r3]
 2056 0046 1B0A     	 lsr r3,r3,#8
 2057 0048 9BB2     	 uxth r3,r3
 2058 004a DAB2     	 uxtb r2,r3
 2059 004c 0C4B     	 ldr r3,.L64+4
 2060 004e 1A72     	 strb r2,[r3,#8]
 446:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 2061              	 .loc 3 446 0
 2062 0050 0E4B     	 ldr r3,.L64+16
 2063 0052 1B88     	 ldrh r3,[r3]
 2064 0054 DAB2     	 uxtb r2,r3
 2065 0056 0A4B     	 ldr r3,.L64+4
 2066 0058 5A72     	 strb r2,[r3,#9]
 447:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 2067              	 .loc 3 447 0
 2068 005a 0D4B     	 ldr r3,.L64+20
 2069 005c 1B88     	 ldrh r3,[r3]
 2070 005e 1B0A     	 lsr r3,r3,#8
 2071 0060 9BB2     	 uxth r3,r3
 2072 0062 DAB2     	 uxtb r2,r3
 2073 0064 064B     	 ldr r3,.L64+4
 2074 0066 9A72     	 strb r2,[r3,#10]
 448:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 2075              	 .loc 3 448 0
 2076 0068 094B     	 ldr r3,.L64+20
 2077 006a 1B88     	 ldrh r3,[r3]
 2078 006c DAB2     	 uxtb r2,r3
 2079 006e 044B     	 ldr r3,.L64+4
 2080 0070 DA72     	 strb r2,[r3,#11]
 449:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 2081              	 .loc 3 449 0
 2082 0072 034B     	 ldr r3,.L64+4
 2083 0074 FF22     	 mov r2,#255
 2084 0076 1A73     	 strb r2,[r3,#12]
 450:../samuel/samuel_io.c ****    }
 2085              	 .loc 3 450 0
 2086 0078 BD46     	 mov sp,r7
 2087              	 
 2088 007a 80BD     	 pop {r7,pc}
 2089              	.L65:
 2090              	 .align 2
 2091              	.L64:
 2092 007c 00000000 	 .word transmit_buf_size
 2093 0080 00000000 	 .word new_data
 2094 0084 00000000 	 .word node_id
 2095 0088 00000000 	 .word node_id_alt
 2096 008c 00000000 	 .word Ser_NrH
 2097 0090 00000000 	 .word Ser_NrL
 2098              	 .cfi_endproc
 2099              	.LFE308:
 2101              	 .section .text.new_data_SerNrBack,"ax",%progbits
 2102              	 .align 2
 2103              	 .global new_data_SerNrBack
 2104              	 .code 16
 2105              	 .thumb_func
 2107              	new_data_SerNrBack:
 2108              	.LFB309:
 451:../samuel/samuel_io.c **** 
 452:../samuel/samuel_io.c ****    //------------------------------------------------------
 453:../samuel/samuel_io.c **** 
 454:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 455:../samuel/samuel_io.c ****    {
 2109              	 .loc 3 455 0
 2110              	 .cfi_startproc
 2111 0000 80B5     	 push {r7,lr}
 2112              	.LCFI50:
 2113              	 .cfi_def_cfa_offset 8
 2114              	 .cfi_offset 7,-8
 2115              	 .cfi_offset 14,-4
 2116 0002 00AF     	 add r7,sp,#0
 2117              	.LCFI51:
 2118              	 .cfi_def_cfa_register 7
 456:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 2119              	 .loc 3 456 0
 2120 0004 194B     	 ldr r3,.L67
 2121 0006 0B22     	 mov r2,#11
 2122 0008 1A70     	 strb r2,[r3]
 457:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2123              	 .loc 3 457 0
 2124 000a 194B     	 ldr r3,.L67+4
 2125 000c 4C22     	 mov r2,#76
 2126 000e 1A70     	 strb r2,[r3]
 458:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2127              	 .loc 3 458 0
 2128 0010 174B     	 ldr r3,.L67+4
 2129 0012 4922     	 mov r2,#73
 2130 0014 5A70     	 strb r2,[r3,#1]
 459:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2131              	 .loc 3 459 0
 2132 0016 164B     	 ldr r3,.L67+4
 2133 0018 4E22     	 mov r2,#78
 2134 001a 9A70     	 strb r2,[r3,#2]
 460:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2135              	 .loc 3 460 0
 2136 001c 154B     	 ldr r3,.L67+8
 2137 001e 1A78     	 ldrb r2,[r3]
 2138 0020 134B     	 ldr r3,.L67+4
 2139 0022 DA70     	 strb r2,[r3,#3]
 461:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2140              	 .loc 3 461 0
 2141 0024 114B     	 ldr r3,.L67
 2142 0026 1A78     	 ldrb r2,[r3]
 2143 0028 114B     	 ldr r3,.L67+4
 2144 002a 1A71     	 strb r2,[r3,#4]
 462:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2145              	 .loc 3 462 0
 2146 002c 104B     	 ldr r3,.L67+4
 2147 002e 6E22     	 mov r2,#110
 2148 0030 5A71     	 strb r2,[r3,#5]
 463:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2149              	 .loc 3 463 0
 2150 0032 114B     	 ldr r3,.L67+12
 2151 0034 1B88     	 ldrh r3,[r3]
 2152 0036 1B0A     	 lsr r3,r3,#8
 2153 0038 9BB2     	 uxth r3,r3
 2154 003a DAB2     	 uxtb r2,r3
 2155 003c 0C4B     	 ldr r3,.L67+4
 2156 003e 9A71     	 strb r2,[r3,#6]
 464:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2157              	 .loc 3 464 0
 2158 0040 0D4B     	 ldr r3,.L67+12
 2159 0042 1B88     	 ldrh r3,[r3]
 2160 0044 DAB2     	 uxtb r2,r3
 2161 0046 0A4B     	 ldr r3,.L67+4
 2162 0048 DA71     	 strb r2,[r3,#7]
 465:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2163              	 .loc 3 465 0
 2164 004a 0C4B     	 ldr r3,.L67+16
 2165 004c 1B88     	 ldrh r3,[r3]
 2166 004e 1B0A     	 lsr r3,r3,#8
 2167 0050 9BB2     	 uxth r3,r3
 2168 0052 DAB2     	 uxtb r2,r3
 2169 0054 064B     	 ldr r3,.L67+4
 2170 0056 1A72     	 strb r2,[r3,#8]
 466:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2171              	 .loc 3 466 0
 2172 0058 084B     	 ldr r3,.L67+16
 2173 005a 1B88     	 ldrh r3,[r3]
 2174 005c DAB2     	 uxtb r2,r3
 2175 005e 044B     	 ldr r3,.L67+4
 2176 0060 5A72     	 strb r2,[r3,#9]
 467:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2177              	 .loc 3 467 0
 2178 0062 034B     	 ldr r3,.L67+4
 2179 0064 FF22     	 mov r2,#255
 2180 0066 9A72     	 strb r2,[r3,#10]
 468:../samuel/samuel_io.c ****    }
 2181              	 .loc 3 468 0
 2182 0068 BD46     	 mov sp,r7
 2183              	 
 2184 006a 80BD     	 pop {r7,pc}
 2185              	.L68:
 2186              	 .align 2
 2187              	.L67:
 2188 006c 00000000 	 .word transmit_buf_size
 2189 0070 00000000 	 .word new_data
 2190 0074 00000000 	 .word node_id
 2191 0078 00000000 	 .word Ser_NrH
 2192 007c 00000000 	 .word Ser_NrL
 2193              	 .cfi_endproc
 2194              	.LFE309:
 2196              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2197              	 .align 2
 2198              	 .global new_data_readbuff2Back
 2199              	 .code 16
 2200              	 .thumb_func
 2202              	new_data_readbuff2Back:
 2203              	.LFB310:
 469:../samuel/samuel_io.c ****    //-------------------------------------
 470:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 471:../samuel/samuel_io.c ****    {
 2204              	 .loc 3 471 0
 2205              	 .cfi_startproc
 2206 0000 80B5     	 push {r7,lr}
 2207              	.LCFI52:
 2208              	 .cfi_def_cfa_offset 8
 2209              	 .cfi_offset 7,-8
 2210              	 .cfi_offset 14,-4
 2211 0002 00AF     	 add r7,sp,#0
 2212              	.LCFI53:
 2213              	 .cfi_def_cfa_register 7
 472:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2214              	 .loc 3 472 0
 2215 0004 2F4B     	 ldr r3,.L70
 2216 0006 1822     	 mov r2,#24
 2217 0008 1A70     	 strb r2,[r3]
 473:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2218              	 .loc 3 473 0
 2219 000a 2F4B     	 ldr r3,.L70+4
 2220 000c 4C22     	 mov r2,#76
 2221 000e 1A70     	 strb r2,[r3]
 474:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2222              	 .loc 3 474 0
 2223 0010 2D4B     	 ldr r3,.L70+4
 2224 0012 4922     	 mov r2,#73
 2225 0014 5A70     	 strb r2,[r3,#1]
 475:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2226              	 .loc 3 475 0
 2227 0016 2C4B     	 ldr r3,.L70+4
 2228 0018 4E22     	 mov r2,#78
 2229 001a 9A70     	 strb r2,[r3,#2]
 476:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2230              	 .loc 3 476 0
 2231 001c 2B4B     	 ldr r3,.L70+8
 2232 001e 1A78     	 ldrb r2,[r3]
 2233 0020 294B     	 ldr r3,.L70+4
 2234 0022 DA70     	 strb r2,[r3,#3]
 477:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2235              	 .loc 3 477 0
 2236 0024 274B     	 ldr r3,.L70
 2237 0026 1A78     	 ldrb r2,[r3]
 2238 0028 274B     	 ldr r3,.L70+4
 2239 002a 1A71     	 strb r2,[r3,#4]
 478:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2240              	 .loc 3 478 0
 2241 002c 264B     	 ldr r3,.L70+4
 2242 002e 7022     	 mov r2,#112
 2243 0030 5A71     	 strb r2,[r3,#5]
 479:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2244              	 .loc 3 479 0
 2245 0032 254B     	 ldr r3,.L70+4
 2246 0034 0022     	 mov r2,#0
 2247 0036 9A71     	 strb r2,[r3,#6]
 480:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2248              	 .loc 3 480 0
 2249 0038 254B     	 ldr r3,.L70+12
 2250 003a 1A78     	 ldrb r2,[r3]
 2251 003c 224B     	 ldr r3,.L70+4
 2252 003e DA71     	 strb r2,[r3,#7]
 481:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2253              	 .loc 3 481 0
 2254 0040 234B     	 ldr r3,.L70+12
 2255 0042 5A78     	 ldrb r2,[r3,#1]
 2256 0044 204B     	 ldr r3,.L70+4
 2257 0046 1A72     	 strb r2,[r3,#8]
 482:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2258              	 .loc 3 482 0
 2259 0048 214B     	 ldr r3,.L70+12
 2260 004a 9A78     	 ldrb r2,[r3,#2]
 2261 004c 1E4B     	 ldr r3,.L70+4
 2262 004e 5A72     	 strb r2,[r3,#9]
 483:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2263              	 .loc 3 483 0
 2264 0050 1F4B     	 ldr r3,.L70+12
 2265 0052 DA78     	 ldrb r2,[r3,#3]
 2266 0054 1C4B     	 ldr r3,.L70+4
 2267 0056 9A72     	 strb r2,[r3,#10]
 484:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2268              	 .loc 3 484 0
 2269 0058 1D4B     	 ldr r3,.L70+12
 2270 005a 1A79     	 ldrb r2,[r3,#4]
 2271 005c 1A4B     	 ldr r3,.L70+4
 2272 005e DA72     	 strb r2,[r3,#11]
 485:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2273              	 .loc 3 485 0
 2274 0060 1B4B     	 ldr r3,.L70+12
 2275 0062 5A79     	 ldrb r2,[r3,#5]
 2276 0064 184B     	 ldr r3,.L70+4
 2277 0066 1A73     	 strb r2,[r3,#12]
 486:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2278              	 .loc 3 486 0
 2279 0068 194B     	 ldr r3,.L70+12
 2280 006a 9A79     	 ldrb r2,[r3,#6]
 2281 006c 164B     	 ldr r3,.L70+4
 2282 006e 5A73     	 strb r2,[r3,#13]
 487:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2283              	 .loc 3 487 0
 2284 0070 174B     	 ldr r3,.L70+12
 2285 0072 DA79     	 ldrb r2,[r3,#7]
 2286 0074 144B     	 ldr r3,.L70+4
 2287 0076 9A73     	 strb r2,[r3,#14]
 488:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2288              	 .loc 3 488 0
 2289 0078 154B     	 ldr r3,.L70+12
 2290 007a 1A7A     	 ldrb r2,[r3,#8]
 2291 007c 124B     	 ldr r3,.L70+4
 2292 007e DA73     	 strb r2,[r3,#15]
 489:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2293              	 .loc 3 489 0
 2294 0080 134B     	 ldr r3,.L70+12
 2295 0082 5A7A     	 ldrb r2,[r3,#9]
 2296 0084 104B     	 ldr r3,.L70+4
 2297 0086 1A74     	 strb r2,[r3,#16]
 490:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2298              	 .loc 3 490 0
 2299 0088 114B     	 ldr r3,.L70+12
 2300 008a 9A7A     	 ldrb r2,[r3,#10]
 2301 008c 0E4B     	 ldr r3,.L70+4
 2302 008e 5A74     	 strb r2,[r3,#17]
 491:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2303              	 .loc 3 491 0
 2304 0090 0F4B     	 ldr r3,.L70+12
 2305 0092 DA7A     	 ldrb r2,[r3,#11]
 2306 0094 0C4B     	 ldr r3,.L70+4
 2307 0096 9A74     	 strb r2,[r3,#18]
 492:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2308              	 .loc 3 492 0
 2309 0098 0D4B     	 ldr r3,.L70+12
 2310 009a 1A7B     	 ldrb r2,[r3,#12]
 2311 009c 0A4B     	 ldr r3,.L70+4
 2312 009e DA74     	 strb r2,[r3,#19]
 493:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2313              	 .loc 3 493 0
 2314 00a0 0B4B     	 ldr r3,.L70+12
 2315 00a2 5A7B     	 ldrb r2,[r3,#13]
 2316 00a4 084B     	 ldr r3,.L70+4
 2317 00a6 1A75     	 strb r2,[r3,#20]
 494:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2318              	 .loc 3 494 0
 2319 00a8 094B     	 ldr r3,.L70+12
 2320 00aa 9A7B     	 ldrb r2,[r3,#14]
 2321 00ac 064B     	 ldr r3,.L70+4
 2322 00ae 5A75     	 strb r2,[r3,#21]
 495:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2323              	 .loc 3 495 0
 2324 00b0 074B     	 ldr r3,.L70+12
 2325 00b2 DA7B     	 ldrb r2,[r3,#15]
 2326 00b4 044B     	 ldr r3,.L70+4
 2327 00b6 9A75     	 strb r2,[r3,#22]
 496:../samuel/samuel_io.c **** 
 497:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2328              	 .loc 3 497 0
 2329 00b8 034B     	 ldr r3,.L70+4
 2330 00ba FF22     	 mov r2,#255
 2331 00bc DA75     	 strb r2,[r3,#23]
 498:../samuel/samuel_io.c ****    }
 2332              	 .loc 3 498 0
 2333 00be BD46     	 mov sp,r7
 2334              	 
 2335 00c0 80BD     	 pop {r7,pc}
 2336              	.L71:
 2337 00c2 C046     	 .align 2
 2338              	.L70:
 2339 00c4 00000000 	 .word transmit_buf_size
 2340 00c8 00000000 	 .word new_data
 2341 00cc 00000000 	 .word node_id
 2342 00d0 00000000 	 .word ReadBuffer2
 2343              	 .cfi_endproc
 2344              	.LFE310:
 2346              	 .section .text.clearEpromBuffer,"ax",%progbits
 2347              	 .align 2
 2348              	 .global clearEpromBuffer
 2349              	 .code 16
 2350              	 .thumb_func
 2352              	clearEpromBuffer:
 2353              	.LFB311:
 499:../samuel/samuel_io.c **** 
 500:../samuel/samuel_io.c ****  //------------------------------------------------------
 501:../samuel/samuel_io.c **** 
 502:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 503:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 504:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 505:../samuel/samuel_io.c ****  {
 2354              	 .loc 3 505 0
 2355              	 .cfi_startproc
 2356 0000 80B5     	 push {r7,lr}
 2357              	.LCFI54:
 2358              	 .cfi_def_cfa_offset 8
 2359              	 .cfi_offset 7,-8
 2360              	 .cfi_offset 14,-4
 2361 0002 00AF     	 add r7,sp,#0
 2362              	.LCFI55:
 2363              	 .cfi_def_cfa_register 7
 506:../samuel/samuel_io.c **** 
 507:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 508:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2364              	 .loc 3 508 0
 2365 0004 1E4B     	 ldr r3,.L79
 2366 0006 0022     	 mov r2,#0
 2367 0008 1A70     	 strb r2,[r3]
 2368 000a 0BE0     	 b .L73
 2369              	.L74:
 509:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2370              	 .loc 3 509 0 discriminator 3
 2371 000c 1C4B     	 ldr r3,.L79
 2372 000e 1B78     	 ldrb r3,[r3]
 2373 0010 1A1C     	 mov r2,r3
 2374 0012 1C4B     	 ldr r3,.L79+4
 2375 0014 0021     	 mov r1,#0
 2376 0016 9954     	 strb r1,[r3,r2]
 508:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2377              	 .loc 3 508 0 discriminator 3
 2378 0018 194B     	 ldr r3,.L79
 2379 001a 1B78     	 ldrb r3,[r3]
 2380 001c 0133     	 add r3,r3,#1
 2381 001e DAB2     	 uxtb r2,r3
 2382 0020 174B     	 ldr r3,.L79
 2383 0022 1A70     	 strb r2,[r3]
 2384              	.L73:
 508:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2385              	 .loc 3 508 0 is_stmt 0 discriminator 1
 2386 0024 164B     	 ldr r3,.L79
 2387 0026 1B78     	 ldrb r3,[r3]
 2388 0028 0F2B     	 cmp r3,#15
 2389 002a EFD9     	 bls .L74
 510:../samuel/samuel_io.c **** 
 511:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 512:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2390              	 .loc 3 512 0 is_stmt 1
 2391 002c 144B     	 ldr r3,.L79
 2392 002e 0022     	 mov r2,#0
 2393 0030 1A70     	 strb r2,[r3]
 2394 0032 0BE0     	 b .L75
 2395              	.L76:
 513:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2396              	 .loc 3 513 0 discriminator 3
 2397 0034 124B     	 ldr r3,.L79
 2398 0036 1B78     	 ldrb r3,[r3]
 2399 0038 1A1C     	 mov r2,r3
 2400 003a 134B     	 ldr r3,.L79+8
 2401 003c 0021     	 mov r1,#0
 2402 003e 9954     	 strb r1,[r3,r2]
 512:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2403              	 .loc 3 512 0 discriminator 3
 2404 0040 0F4B     	 ldr r3,.L79
 2405 0042 1B78     	 ldrb r3,[r3]
 2406 0044 0133     	 add r3,r3,#1
 2407 0046 DAB2     	 uxtb r2,r3
 2408 0048 0D4B     	 ldr r3,.L79
 2409 004a 1A70     	 strb r2,[r3]
 2410              	.L75:
 512:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2411              	 .loc 3 512 0 is_stmt 0 discriminator 1
 2412 004c 0C4B     	 ldr r3,.L79
 2413 004e 1B78     	 ldrb r3,[r3]
 2414 0050 0F2B     	 cmp r3,#15
 2415 0052 EFD9     	 bls .L76
 514:../samuel/samuel_io.c **** 
 515:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 516:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2416              	 .loc 3 516 0 is_stmt 1
 2417 0054 0A4B     	 ldr r3,.L79
 2418 0056 0022     	 mov r2,#0
 2419 0058 1A70     	 strb r2,[r3]
 2420 005a 0BE0     	 b .L77
 2421              	.L78:
 517:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2422              	 .loc 3 517 0 discriminator 3
 2423 005c 084B     	 ldr r3,.L79
 2424 005e 1B78     	 ldrb r3,[r3]
 2425 0060 1A1C     	 mov r2,r3
 2426 0062 0A4B     	 ldr r3,.L79+12
 2427 0064 0021     	 mov r1,#0
 2428 0066 9954     	 strb r1,[r3,r2]
 516:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2429              	 .loc 3 516 0 discriminator 3
 2430 0068 054B     	 ldr r3,.L79
 2431 006a 1B78     	 ldrb r3,[r3]
 2432 006c 0133     	 add r3,r3,#1
 2433 006e DAB2     	 uxtb r2,r3
 2434 0070 034B     	 ldr r3,.L79
 2435 0072 1A70     	 strb r2,[r3]
 2436              	.L77:
 516:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2437              	 .loc 3 516 0 is_stmt 0 discriminator 1
 2438 0074 024B     	 ldr r3,.L79
 2439 0076 1B78     	 ldrb r3,[r3]
 2440 0078 1F2B     	 cmp r3,#31
 2441 007a EFD9     	 bls .L78
 518:../samuel/samuel_io.c ****  }
 2442              	 .loc 3 518 0 is_stmt 1
 2443 007c BD46     	 mov sp,r7
 2444              	 
 2445 007e 80BD     	 pop {r7,pc}
 2446              	.L80:
 2447              	 .align 2
 2448              	.L79:
 2449 0080 00000000 	 .word Index
 2450 0084 00000000 	 .word ReadBuffer1
 2451 0088 00000000 	 .word ReadBuffer2
 2452 008c 00000000 	 .word ReadBuffer3
 2453              	 .cfi_endproc
 2454              	.LFE311:
 2456              	 .section .text.fillEpromBuffer,"ax",%progbits
 2457              	 .align 2
 2458              	 .global fillEpromBuffer
 2459              	 .code 16
 2460              	 .thumb_func
 2462              	fillEpromBuffer:
 2463              	.LFB312:
 519:../samuel/samuel_io.c **** 
 520:../samuel/samuel_io.c ****  //---------------------------------
 521:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 522:../samuel/samuel_io.c ****  {
 2464              	 .loc 3 522 0
 2465              	 .cfi_startproc
 2466 0000 80B5     	 push {r7,lr}
 2467              	.LCFI56:
 2468              	 .cfi_def_cfa_offset 8
 2469              	 .cfi_offset 7,-8
 2470              	 .cfi_offset 14,-4
 2471 0002 00AF     	 add r7,sp,#0
 2472              	.LCFI57:
 2473              	 .cfi_def_cfa_register 7
 523:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 524:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2474              	 .loc 3 524 0
 2475 0004 0B4B     	 ldr r3,.L84
 2476 0006 0022     	 mov r2,#0
 2477 0008 1A70     	 strb r2,[r3]
 2478 000a 0CE0     	 b .L82
 2479              	.L83:
 525:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2480              	 .loc 3 525 0 discriminator 3
 2481 000c 094B     	 ldr r3,.L84
 2482 000e 1B78     	 ldrb r3,[r3]
 2483 0010 1A1C     	 mov r2,r3
 2484 0012 084B     	 ldr r3,.L84
 2485 0014 1978     	 ldrb r1,[r3]
 2486 0016 084B     	 ldr r3,.L84+4
 2487 0018 9954     	 strb r1,[r3,r2]
 524:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2488              	 .loc 3 524 0 discriminator 3
 2489 001a 064B     	 ldr r3,.L84
 2490 001c 1B78     	 ldrb r3,[r3]
 2491 001e 0133     	 add r3,r3,#1
 2492 0020 DAB2     	 uxtb r2,r3
 2493 0022 044B     	 ldr r3,.L84
 2494 0024 1A70     	 strb r2,[r3]
 2495              	.L82:
 524:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2496              	 .loc 3 524 0 is_stmt 0 discriminator 1
 2497 0026 034B     	 ldr r3,.L84
 2498 0028 1B78     	 ldrb r3,[r3]
 2499 002a 632B     	 cmp r3,#99
 2500 002c EED9     	 bls .L83
 526:../samuel/samuel_io.c ****  }
 2501              	 .loc 3 526 0 is_stmt 1
 2502 002e BD46     	 mov sp,r7
 2503              	 
 2504 0030 80BD     	 pop {r7,pc}
 2505              	.L85:
 2506 0032 C046     	 .align 2
 2507              	.L84:
 2508 0034 00000000 	 .word Index
 2509 0038 00000000 	 .word data_buffer
 2510              	 .cfi_endproc
 2511              	.LFE312:
 2513              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2514              	 .align 2
 2515              	 .global fill2EpromBuffer
 2516              	 .code 16
 2517              	 .thumb_func
 2519              	fill2EpromBuffer:
 2520              	.LFB313:
 527:../samuel/samuel_io.c **** 
 528:../samuel/samuel_io.c ****  //---------------------------------
 529:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 530:../samuel/samuel_io.c ****  {
 2521              	 .loc 3 530 0
 2522              	 .cfi_startproc
 2523 0000 80B5     	 push {r7,lr}
 2524              	.LCFI58:
 2525              	 .cfi_def_cfa_offset 8
 2526              	 .cfi_offset 7,-8
 2527              	 .cfi_offset 14,-4
 2528 0002 00AF     	 add r7,sp,#0
 2529              	.LCFI59:
 2530              	 .cfi_def_cfa_register 7
 531:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 532:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2531              	 .loc 3 532 0
 2532 0004 0C4B     	 ldr r3,.L89
 2533 0006 0022     	 mov r2,#0
 2534 0008 1A70     	 strb r2,[r3]
 2535 000a 0EE0     	 b .L87
 2536              	.L88:
 533:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2537              	 .loc 3 533 0 discriminator 3
 2538 000c 0A4B     	 ldr r3,.L89
 2539 000e 1B78     	 ldrb r3,[r3]
 2540 0010 1A1C     	 mov r2,r3
 2541 0012 094B     	 ldr r3,.L89
 2542 0014 1B78     	 ldrb r3,[r3]
 2543 0016 DB43     	 mvn r3,r3
 2544 0018 D9B2     	 uxtb r1,r3
 2545 001a 084B     	 ldr r3,.L89+4
 2546 001c 9954     	 strb r1,[r3,r2]
 532:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2547              	 .loc 3 532 0 discriminator 3
 2548 001e 064B     	 ldr r3,.L89
 2549 0020 1B78     	 ldrb r3,[r3]
 2550 0022 0133     	 add r3,r3,#1
 2551 0024 DAB2     	 uxtb r2,r3
 2552 0026 044B     	 ldr r3,.L89
 2553 0028 1A70     	 strb r2,[r3]
 2554              	.L87:
 532:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2555              	 .loc 3 532 0 is_stmt 0 discriminator 1
 2556 002a 034B     	 ldr r3,.L89
 2557 002c 1B78     	 ldrb r3,[r3]
 2558 002e 632B     	 cmp r3,#99
 2559 0030 ECD9     	 bls .L88
 534:../samuel/samuel_io.c ****  }
 2560              	 .loc 3 534 0 is_stmt 1
 2561 0032 BD46     	 mov sp,r7
 2562              	 
 2563 0034 80BD     	 pop {r7,pc}
 2564              	.L90:
 2565 0036 C046     	 .align 2
 2566              	.L89:
 2567 0038 00000000 	 .word Index
 2568 003c 00000000 	 .word data_buffer
 2569              	 .cfi_endproc
 2570              	.LFE313:
 2572              	 .section .text.readAllEEprom,"ax",%progbits
 2573              	 .align 2
 2574              	 .global readAllEEprom
 2575              	 .code 16
 2576              	 .thumb_func
 2578              	readAllEEprom:
 2579              	.LFB314:
 535:../samuel/samuel_io.c **** 
 536:../samuel/samuel_io.c **** 
 537:../samuel/samuel_io.c ****  //------------------------------------------------
 538:../samuel/samuel_io.c **** 
 539:../samuel/samuel_io.c **** 
 540:../samuel/samuel_io.c ****  //------------------------------------------------
 541:../samuel/samuel_io.c ****  int readAllEEprom(void)
 542:../samuel/samuel_io.c ****  {
 2580              	 .loc 3 542 0
 2581              	 .cfi_startproc
 2582 0000 80B5     	 push {r7,lr}
 2583              	.LCFI60:
 2584              	 .cfi_def_cfa_offset 8
 2585              	 .cfi_offset 7,-8
 2586              	 .cfi_offset 14,-4
 2587 0002 00AF     	 add r7,sp,#0
 2588              	.LCFI61:
 2589              	 .cfi_def_cfa_register 7
 543:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2590              	 .loc 3 543 0
 2591 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2592 0008 031C     	 mov r3,r0
 2593 000a 1A1C     	 mov r2,r3
 2594 000c 614B     	 ldr r3,.L97
 2595 000e 1A70     	 strb r2,[r3]
 544:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2596              	 .loc 3 544 0
 2597 0010 604B     	 ldr r3,.L97
 2598 0012 1B78     	 ldrb r3,[r3]
 2599 0014 032B     	 cmp r3,#3
 2600 0016 0AD1     	 bne .L92
 545:../samuel/samuel_io.c ****    {
 546:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2601              	 .loc 3 546 0
 2602 0018 5F4B     	 ldr r3,.L97+4
 2603 001a 0120     	 mov r0,#1
 2604 001c 0021     	 mov r1,#0
 2605 001e 1A1C     	 mov r2,r3
 2606 0020 1023     	 mov r3,#16
 2607 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2608 0026 031C     	 mov r3,r0
 2609 0028 1A1C     	 mov r2,r3
 2610 002a 5C4B     	 ldr r3,.L97+8
 2611 002c 1A70     	 strb r2,[r3]
 2612              	.L92:
 547:../samuel/samuel_io.c ****    }
 548:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2613              	 .loc 3 548 0
 2614 002e 5B4B     	 ldr r3,.L97+8
 2615 0030 1B78     	 ldrb r3,[r3]
 2616 0032 002B     	 cmp r3,#0
 2617 0034 14D1     	 bne .L93
 549:../samuel/samuel_io.c ****    {
 550:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2618              	 .loc 3 550 0
 2619 0036 584B     	 ldr r3,.L97+4
 2620 0038 5B78     	 ldrb r3,[r3,#1]
 2621 003a 9AB2     	 uxth r2,r3
 2622 003c 584B     	 ldr r3,.L97+12
 2623 003e 1A80     	 strh r2,[r3]
 551:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2624              	 .loc 3 551 0
 2625 0040 554B     	 ldr r3,.L97+4
 2626 0042 9B78     	 ldrb r3,[r3,#2]
 2627 0044 9AB2     	 uxth r2,r3
 2628 0046 574B     	 ldr r3,.L97+16
 2629 0048 1A80     	 strh r2,[r3]
 552:../samuel/samuel_io.c **** 
 553:../samuel/samuel_io.c **** 
 554:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2630              	 .loc 3 554 0
 2631 004a 574B     	 ldr r3,.L97+20
 2632 004c 0220     	 mov r0,#2
 2633 004e 0021     	 mov r1,#0
 2634 0050 1A1C     	 mov r2,r3
 2635 0052 1023     	 mov r3,#16
 2636 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2637 0058 031C     	 mov r3,r0
 2638 005a 1A1C     	 mov r2,r3
 2639 005c 4F4B     	 ldr r3,.L97+8
 2640 005e 1A70     	 strb r2,[r3]
 2641              	.L93:
 555:../samuel/samuel_io.c ****    }
 556:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2642              	 .loc 3 556 0
 2643 0060 4E4B     	 ldr r3,.L97+8
 2644 0062 1B78     	 ldrb r3,[r3]
 2645 0064 002B     	 cmp r3,#0
 2646 0066 1ED1     	 bne .L94
 557:../samuel/samuel_io.c ****    {
 558:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2647              	 .loc 3 558 0
 2648 0068 4F4B     	 ldr r3,.L97+20
 2649 006a 5A78     	 ldrb r2,[r3,#1]
 2650 006c 4F4B     	 ldr r3,.L97+24
 2651 006e 1A70     	 strb r2,[r3]
 559:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2652              	 .loc 3 559 0
 2653 0070 4D4B     	 ldr r3,.L97+20
 2654 0072 9A78     	 ldrb r2,[r3,#2]
 2655 0074 4E4B     	 ldr r3,.L97+28
 2656 0076 1A70     	 strb r2,[r3]
 560:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2657              	 .loc 3 560 0
 2658 0078 4B4B     	 ldr r3,.L97+20
 2659 007a DB78     	 ldrb r3,[r3,#3]
 2660 007c 9BB2     	 uxth r3,r3
 2661 007e 1B02     	 lsl r3,r3,#8
 2662 0080 9AB2     	 uxth r2,r3
 2663 0082 494B     	 ldr r3,.L97+20
 2664 0084 1B79     	 ldrb r3,[r3,#4]
 2665 0086 9BB2     	 uxth r3,r3
 2666 0088 D318     	 add r3,r2,r3
 2667 008a 9AB2     	 uxth r2,r3
 2668 008c 494B     	 ldr r3,.L97+32
 2669 008e 1A80     	 strh r2,[r3]
 561:../samuel/samuel_io.c **** 
 562:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2670              	 .loc 3 562 0
 2671 0090 494B     	 ldr r3,.L97+36
 2672 0092 0520     	 mov r0,#5
 2673 0094 0021     	 mov r1,#0
 2674 0096 1A1C     	 mov r2,r3
 2675 0098 2023     	 mov r3,#32
 2676 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2677 009e 031C     	 mov r3,r0
 2678 00a0 1A1C     	 mov r2,r3
 2679 00a2 3E4B     	 ldr r3,.L97+8
 2680 00a4 1A70     	 strb r2,[r3]
 2681              	.L94:
 563:../samuel/samuel_io.c ****    }
 564:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2682              	 .loc 3 564 0
 2683 00a6 3D4B     	 ldr r3,.L97+8
 2684 00a8 1B78     	 ldrb r3,[r3]
 2685 00aa 002B     	 cmp r3,#0
 2686 00ac 67D1     	 bne .L95
 565:../samuel/samuel_io.c ****    {
 566:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2687              	 .loc 3 566 0
 2688 00ae 424B     	 ldr r3,.L97+36
 2689 00b0 5A78     	 ldrb r2,[r3,#1]
 2690 00b2 424B     	 ldr r3,.L97+40
 2691 00b4 1A70     	 strb r2,[r3]
 567:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2692              	 .loc 3 567 0
 2693 00b6 404B     	 ldr r3,.L97+36
 2694 00b8 9A78     	 ldrb r2,[r3,#2]
 2695 00ba 414B     	 ldr r3,.L97+44
 2696 00bc 1A70     	 strb r2,[r3]
 568:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2697              	 .loc 3 568 0
 2698 00be 3E4B     	 ldr r3,.L97+36
 2699 00c0 DB78     	 ldrb r3,[r3,#3]
 2700 00c2 9BB2     	 uxth r3,r3
 2701 00c4 1B02     	 lsl r3,r3,#8
 2702 00c6 9AB2     	 uxth r2,r3
 2703 00c8 3B4B     	 ldr r3,.L97+36
 2704 00ca 1B79     	 ldrb r3,[r3,#4]
 2705 00cc 9BB2     	 uxth r3,r3
 2706 00ce D318     	 add r3,r2,r3
 2707 00d0 9AB2     	 uxth r2,r3
 2708 00d2 3C4B     	 ldr r3,.L97+48
 2709 00d4 1A80     	 strh r2,[r3]
 569:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2710              	 .loc 3 569 0
 2711 00d6 384B     	 ldr r3,.L97+36
 2712 00d8 5B79     	 ldrb r3,[r3,#5]
 2713 00da 9BB2     	 uxth r3,r3
 2714 00dc 1B02     	 lsl r3,r3,#8
 2715 00de 9AB2     	 uxth r2,r3
 2716 00e0 354B     	 ldr r3,.L97+36
 2717 00e2 9B79     	 ldrb r3,[r3,#6]
 2718 00e4 9BB2     	 uxth r3,r3
 2719 00e6 D318     	 add r3,r2,r3
 2720 00e8 9AB2     	 uxth r2,r3
 2721 00ea 374B     	 ldr r3,.L97+52
 2722 00ec 1A80     	 strh r2,[r3]
 570:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2723              	 .loc 3 570 0
 2724 00ee 324B     	 ldr r3,.L97+36
 2725 00f0 DB79     	 ldrb r3,[r3,#7]
 2726 00f2 9BB2     	 uxth r3,r3
 2727 00f4 1B02     	 lsl r3,r3,#8
 2728 00f6 9AB2     	 uxth r2,r3
 2729 00f8 2F4B     	 ldr r3,.L97+36
 2730 00fa 1B7A     	 ldrb r3,[r3,#8]
 2731 00fc 9BB2     	 uxth r3,r3
 2732 00fe D318     	 add r3,r2,r3
 2733 0100 9AB2     	 uxth r2,r3
 2734 0102 324B     	 ldr r3,.L97+56
 2735 0104 1A80     	 strh r2,[r3]
 571:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2736              	 .loc 3 571 0
 2737 0106 2C4B     	 ldr r3,.L97+36
 2738 0108 5B7A     	 ldrb r3,[r3,#9]
 2739 010a 9BB2     	 uxth r3,r3
 2740 010c 1B02     	 lsl r3,r3,#8
 2741 010e 9AB2     	 uxth r2,r3
 2742 0110 294B     	 ldr r3,.L97+36
 2743 0112 9B7A     	 ldrb r3,[r3,#10]
 2744 0114 9BB2     	 uxth r3,r3
 2745 0116 D318     	 add r3,r2,r3
 2746 0118 9AB2     	 uxth r2,r3
 2747 011a 2D4B     	 ldr r3,.L97+60
 2748 011c 1A80     	 strh r2,[r3]
 572:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2749              	 .loc 3 572 0
 2750 011e 264B     	 ldr r3,.L97+36
 2751 0120 DB7A     	 ldrb r3,[r3,#11]
 2752 0122 9BB2     	 uxth r3,r3
 2753 0124 1B02     	 lsl r3,r3,#8
 2754 0126 9AB2     	 uxth r2,r3
 2755 0128 234B     	 ldr r3,.L97+36
 2756 012a 1B7B     	 ldrb r3,[r3,#12]
 2757 012c 9BB2     	 uxth r3,r3
 2758 012e D318     	 add r3,r2,r3
 2759 0130 9AB2     	 uxth r2,r3
 2760 0132 284B     	 ldr r3,.L97+64
 2761 0134 1A80     	 strh r2,[r3]
 573:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2762              	 .loc 3 573 0
 2763 0136 204B     	 ldr r3,.L97+36
 2764 0138 5B7B     	 ldrb r3,[r3,#13]
 2765 013a 9BB2     	 uxth r3,r3
 2766 013c 1B02     	 lsl r3,r3,#8
 2767 013e 9AB2     	 uxth r2,r3
 2768 0140 1D4B     	 ldr r3,.L97+36
 2769 0142 9B7B     	 ldrb r3,[r3,#14]
 2770 0144 9BB2     	 uxth r3,r3
 2771 0146 D318     	 add r3,r2,r3
 2772 0148 9AB2     	 uxth r2,r3
 2773 014a 234B     	 ldr r3,.L97+68
 2774 014c 1A80     	 strh r2,[r3]
 574:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 2775              	 .loc 3 574 0
 2776 014e 1A4B     	 ldr r3,.L97+36
 2777 0150 DB7B     	 ldrb r3,[r3,#15]
 2778 0152 9BB2     	 uxth r3,r3
 2779 0154 1B02     	 lsl r3,r3,#8
 2780 0156 9AB2     	 uxth r2,r3
 2781 0158 174B     	 ldr r3,.L97+36
 2782 015a 1B7C     	 ldrb r3,[r3,#16]
 2783 015c 9BB2     	 uxth r3,r3
 2784 015e D318     	 add r3,r2,r3
 2785 0160 9AB2     	 uxth r2,r3
 2786 0162 1E4B     	 ldr r3,.L97+72
 2787 0164 1A80     	 strh r2,[r3]
 575:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 2788              	 .loc 3 575 0
 2789 0166 144B     	 ldr r3,.L97+36
 2790 0168 5B7C     	 ldrb r3,[r3,#17]
 2791 016a 9BB2     	 uxth r3,r3
 2792 016c 1B02     	 lsl r3,r3,#8
 2793 016e 9AB2     	 uxth r2,r3
 2794 0170 114B     	 ldr r3,.L97+36
 2795 0172 9B7C     	 ldrb r3,[r3,#18]
 2796 0174 9BB2     	 uxth r3,r3
 2797 0176 D318     	 add r3,r2,r3
 2798 0178 9AB2     	 uxth r2,r3
 2799 017a 194B     	 ldr r3,.L97+76
 2800 017c 1A80     	 strh r2,[r3]
 2801              	.L95:
 576:../samuel/samuel_io.c **** 
 577:../samuel/samuel_io.c ****    }
 578:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 2802              	 .loc 3 578 0
 2803 017e 054B     	 ldr r3,.L97
 2804 0180 1B78     	 ldrb r3,[r3]
 2805 0182 1A1C     	 mov r2,r3
 2806 0184 054B     	 ldr r3,.L97+8
 2807 0186 1B78     	 ldrb r3,[r3]
 2808 0188 1B01     	 lsl r3,r3,#4
 2809 018a D318     	 add r3,r2,r3
 579:../samuel/samuel_io.c ****  }
 2810              	 .loc 3 579 0
 2811 018c 181C     	 mov r0,r3
 2812 018e BD46     	 mov sp,r7
 2813              	 
 2814 0190 80BD     	 pop {r7,pc}
 2815              	.L98:
 2816 0192 C046     	 .align 2
 2817              	.L97:
 2818 0194 00000000 	 .word EEprom_status
 2819 0198 00000000 	 .word ReadBuffer1
 2820 019c 00000000 	 .word oper_status
 2821 01a0 00000000 	 .word Ser_NrH
 2822 01a4 00000000 	 .word Ser_NrL
 2823 01a8 00000000 	 .word ReadBuffer2
 2824 01ac 00000000 	 .word node_id_alt
 2825 01b0 00000000 	 .word node_id
 2826 01b4 00000000 	 .word node_id_16bit
 2827 01b8 00000000 	 .word ReadBuffer3
 2828 01bc 00000000 	 .word RegOnOff
 2829 01c0 00000000 	 .word RegOnOff2
 2830 01c4 00000000 	 .word dimAkt_Ww
 2831 01c8 00000000 	 .word dimAkt_Cw
 2832 01cc 00000000 	 .word dimOff_Ww
 2833 01d0 00000000 	 .word dimOff_Cw
 2834 01d4 00000000 	 .word dimNorm1_Ww
 2835 01d8 00000000 	 .word dimNorm1_Cw
 2836 01dc 00000000 	 .word dimNorm2_Ww
 2837 01e0 00000000 	 .word dimNorm2_Cw
 2838              	 .cfi_endproc
 2839              	.LFE314:
 2841              	 .section .text.readSerNrEEprom,"ax",%progbits
 2842              	 .align 2
 2843              	 .global readSerNrEEprom
 2844              	 .code 16
 2845              	 .thumb_func
 2847              	readSerNrEEprom:
 2848              	.LFB315:
 580:../samuel/samuel_io.c ****  //------------------------------------------------
 581:../samuel/samuel_io.c **** 
 582:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 583:../samuel/samuel_io.c ****  {
 2849              	 .loc 3 583 0
 2850              	 .cfi_startproc
 2851 0000 80B5     	 push {r7,lr}
 2852              	.LCFI62:
 2853              	 .cfi_def_cfa_offset 8
 2854              	 .cfi_offset 7,-8
 2855              	 .cfi_offset 14,-4
 2856 0002 00AF     	 add r7,sp,#0
 2857              	.LCFI63:
 2858              	 .cfi_def_cfa_register 7
 584:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2859              	 .loc 3 584 0
 2860 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2861 0008 031C     	 mov r3,r0
 2862 000a 1A1C     	 mov r2,r3
 2863 000c 0D4B     	 ldr r3,.L102
 2864 000e 1A70     	 strb r2,[r3]
 585:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2865              	 .loc 3 585 0
 2866 0010 0C4B     	 ldr r3,.L102
 2867 0012 1B78     	 ldrb r3,[r3]
 2868 0014 032B     	 cmp r3,#3
 2869 0016 0AD1     	 bne .L100
 586:../samuel/samuel_io.c **** 	 {
 587:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2870              	 .loc 3 587 0
 2871 0018 0B4B     	 ldr r3,.L102+4
 2872 001a 0120     	 mov r0,#1
 2873 001c 0021     	 mov r1,#0
 2874 001e 1A1C     	 mov r2,r3
 2875 0020 1023     	 mov r3,#16
 2876 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2877 0026 031C     	 mov r3,r0
 2878 0028 1A1C     	 mov r2,r3
 2879 002a 084B     	 ldr r3,.L102+8
 2880 002c 1A70     	 strb r2,[r3]
 2881              	.L100:
 588:../samuel/samuel_io.c ****      }
 589:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 2882              	 .loc 3 589 0
 2883 002e 054B     	 ldr r3,.L102
 2884 0030 1B78     	 ldrb r3,[r3]
 2885 0032 1A1C     	 mov r2,r3
 2886 0034 054B     	 ldr r3,.L102+8
 2887 0036 1B78     	 ldrb r3,[r3]
 2888 0038 1B01     	 lsl r3,r3,#4
 2889 003a D318     	 add r3,r2,r3
 590:../samuel/samuel_io.c ****  }
 2890              	 .loc 3 590 0
 2891 003c 181C     	 mov r0,r3
 2892 003e BD46     	 mov sp,r7
 2893              	 
 2894 0040 80BD     	 pop {r7,pc}
 2895              	.L103:
 2896 0042 C046     	 .align 2
 2897              	.L102:
 2898 0044 00000000 	 .word EEprom_status
 2899 0048 00000000 	 .word ReadBuffer1
 2900 004c 00000000 	 .word oper_status
 2901              	 .cfi_endproc
 2902              	.LFE315:
 2904              	 .section .text.readNodeIdEEprom,"ax",%progbits
 2905              	 .align 2
 2906              	 .global readNodeIdEEprom
 2907              	 .code 16
 2908              	 .thumb_func
 2910              	readNodeIdEEprom:
 2911              	.LFB316:
 591:../samuel/samuel_io.c ****  //------------------------------------------------
 592:../samuel/samuel_io.c **** 
 593:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 594:../samuel/samuel_io.c ****  {
 2912              	 .loc 3 594 0
 2913              	 .cfi_startproc
 2914 0000 80B5     	 push {r7,lr}
 2915              	.LCFI64:
 2916              	 .cfi_def_cfa_offset 8
 2917              	 .cfi_offset 7,-8
 2918              	 .cfi_offset 14,-4
 2919 0002 00AF     	 add r7,sp,#0
 2920              	.LCFI65:
 2921              	 .cfi_def_cfa_register 7
 595:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2922              	 .loc 3 595 0
 2923 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2924 0008 031C     	 mov r3,r0
 2925 000a 1A1C     	 mov r2,r3
 2926 000c 0D4B     	 ldr r3,.L107
 2927 000e 1A70     	 strb r2,[r3]
 596:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2928              	 .loc 3 596 0
 2929 0010 0C4B     	 ldr r3,.L107
 2930 0012 1B78     	 ldrb r3,[r3]
 2931 0014 032B     	 cmp r3,#3
 2932 0016 0AD1     	 bne .L105
 597:../samuel/samuel_io.c **** 	 {
 598:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2933              	 .loc 3 598 0
 2934 0018 0B4B     	 ldr r3,.L107+4
 2935 001a 0220     	 mov r0,#2
 2936 001c 0021     	 mov r1,#0
 2937 001e 1A1C     	 mov r2,r3
 2938 0020 1023     	 mov r3,#16
 2939 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2940 0026 031C     	 mov r3,r0
 2941 0028 1A1C     	 mov r2,r3
 2942 002a 084B     	 ldr r3,.L107+8
 2943 002c 1A70     	 strb r2,[r3]
 2944              	.L105:
 599:../samuel/samuel_io.c ****      }
 600:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2945              	 .loc 3 600 0
 2946 002e 054B     	 ldr r3,.L107
 2947 0030 1B78     	 ldrb r3,[r3]
 2948 0032 1A1C     	 mov r2,r3
 2949 0034 054B     	 ldr r3,.L107+8
 2950 0036 1B78     	 ldrb r3,[r3]
 2951 0038 1B01     	 lsl r3,r3,#4
 2952 003a D318     	 add r3,r2,r3
 601:../samuel/samuel_io.c ****  }
 2953              	 .loc 3 601 0
 2954 003c 181C     	 mov r0,r3
 2955 003e BD46     	 mov sp,r7
 2956              	 
 2957 0040 80BD     	 pop {r7,pc}
 2958              	.L108:
 2959 0042 C046     	 .align 2
 2960              	.L107:
 2961 0044 00000000 	 .word EEprom_status
 2962 0048 00000000 	 .word ReadBuffer2
 2963 004c 00000000 	 .word oper_status
 2964              	 .cfi_endproc
 2965              	.LFE316:
 2967              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 2968              	 .align 2
 2969              	 .global read_akt_light_EEprom
 2970              	 .code 16
 2971              	 .thumb_func
 2973              	read_akt_light_EEprom:
 2974              	.LFB317:
 602:../samuel/samuel_io.c **** 
 603:../samuel/samuel_io.c ****  //------------------------------------------------
 604:../samuel/samuel_io.c **** 
 605:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 606:../samuel/samuel_io.c ****  {
 2975              	 .loc 3 606 0
 2976              	 .cfi_startproc
 2977 0000 80B5     	 push {r7,lr}
 2978              	.LCFI66:
 2979              	 .cfi_def_cfa_offset 8
 2980              	 .cfi_offset 7,-8
 2981              	 .cfi_offset 14,-4
 2982 0002 00AF     	 add r7,sp,#0
 2983              	.LCFI67:
 2984              	 .cfi_def_cfa_register 7
 607:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2985              	 .loc 3 607 0
 2986 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2987 0008 031C     	 mov r3,r0
 2988 000a 1A1C     	 mov r2,r3
 2989 000c 0D4B     	 ldr r3,.L112
 2990 000e 1A70     	 strb r2,[r3]
 608:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2991              	 .loc 3 608 0
 2992 0010 0C4B     	 ldr r3,.L112
 2993 0012 1B78     	 ldrb r3,[r3]
 2994 0014 032B     	 cmp r3,#3
 2995 0016 0AD1     	 bne .L110
 609:../samuel/samuel_io.c **** 	 {
 610:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 2996              	 .loc 3 610 0
 2997 0018 0B4B     	 ldr r3,.L112+4
 2998 001a 0420     	 mov r0,#4
 2999 001c 0021     	 mov r1,#0
 3000 001e 1A1C     	 mov r2,r3
 3001 0020 1023     	 mov r3,#16
 3002 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3003 0026 031C     	 mov r3,r0
 3004 0028 1A1C     	 mov r2,r3
 3005 002a 084B     	 ldr r3,.L112+8
 3006 002c 1A70     	 strb r2,[r3]
 3007              	.L110:
 611:../samuel/samuel_io.c ****      }
 612:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3008              	 .loc 3 612 0
 3009 002e 054B     	 ldr r3,.L112
 3010 0030 1B78     	 ldrb r3,[r3]
 3011 0032 1A1C     	 mov r2,r3
 3012 0034 054B     	 ldr r3,.L112+8
 3013 0036 1B78     	 ldrb r3,[r3]
 3014 0038 1B01     	 lsl r3,r3,#4
 3015 003a D318     	 add r3,r2,r3
 613:../samuel/samuel_io.c ****  }
 3016              	 .loc 3 613 0
 3017 003c 181C     	 mov r0,r3
 3018 003e BD46     	 mov sp,r7
 3019              	 
 3020 0040 80BD     	 pop {r7,pc}
 3021              	.L113:
 3022 0042 C046     	 .align 2
 3023              	.L112:
 3024 0044 00000000 	 .word EEprom_status
 3025 0048 00000000 	 .word ReadBuffer2
 3026 004c 00000000 	 .word oper_status
 3027              	 .cfi_endproc
 3028              	.LFE317:
 3030              	 .section .text.read_off_light_EEprom,"ax",%progbits
 3031              	 .align 2
 3032              	 .global read_off_light_EEprom
 3033              	 .code 16
 3034              	 .thumb_func
 3036              	read_off_light_EEprom:
 3037              	.LFB318:
 614:../samuel/samuel_io.c ****  //------------------------------------------------
 615:../samuel/samuel_io.c **** 
 616:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 617:../samuel/samuel_io.c ****  {
 3038              	 .loc 3 617 0
 3039              	 .cfi_startproc
 3040 0000 80B5     	 push {r7,lr}
 3041              	.LCFI68:
 3042              	 .cfi_def_cfa_offset 8
 3043              	 .cfi_offset 7,-8
 3044              	 .cfi_offset 14,-4
 3045 0002 00AF     	 add r7,sp,#0
 3046              	.LCFI69:
 3047              	 .cfi_def_cfa_register 7
 618:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3048              	 .loc 3 618 0
 3049 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3050 0008 031C     	 mov r3,r0
 3051 000a 1A1C     	 mov r2,r3
 3052 000c 0D4B     	 ldr r3,.L117
 3053 000e 1A70     	 strb r2,[r3]
 619:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3054              	 .loc 3 619 0
 3055 0010 0C4B     	 ldr r3,.L117
 3056 0012 1B78     	 ldrb r3,[r3]
 3057 0014 032B     	 cmp r3,#3
 3058 0016 0AD1     	 bne .L115
 620:../samuel/samuel_io.c **** 	 {
 621:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 3059              	 .loc 3 621 0
 3060 0018 0B4B     	 ldr r3,.L117+4
 3061 001a 0520     	 mov r0,#5
 3062 001c 0021     	 mov r1,#0
 3063 001e 1A1C     	 mov r2,r3
 3064 0020 1023     	 mov r3,#16
 3065 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3066 0026 031C     	 mov r3,r0
 3067 0028 1A1C     	 mov r2,r3
 3068 002a 084B     	 ldr r3,.L117+8
 3069 002c 1A70     	 strb r2,[r3]
 3070              	.L115:
 622:../samuel/samuel_io.c ****      }
 623:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3071              	 .loc 3 623 0
 3072 002e 054B     	 ldr r3,.L117
 3073 0030 1B78     	 ldrb r3,[r3]
 3074 0032 1A1C     	 mov r2,r3
 3075 0034 054B     	 ldr r3,.L117+8
 3076 0036 1B78     	 ldrb r3,[r3]
 3077 0038 1B01     	 lsl r3,r3,#4
 3078 003a D318     	 add r3,r2,r3
 624:../samuel/samuel_io.c ****  }
 3079              	 .loc 3 624 0
 3080 003c 181C     	 mov r0,r3
 3081 003e BD46     	 mov sp,r7
 3082              	 
 3083 0040 80BD     	 pop {r7,pc}
 3084              	.L118:
 3085 0042 C046     	 .align 2
 3086              	.L117:
 3087 0044 00000000 	 .word EEprom_status
 3088 0048 00000000 	 .word ReadBuffer2
 3089 004c 00000000 	 .word oper_status
 3090              	 .cfi_endproc
 3091              	.LFE318:
 3093              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 3094              	 .align 2
 3095              	 .global writeSernr_B1_EEprom
 3096              	 .code 16
 3097              	 .thumb_func
 3099              	writeSernr_B1_EEprom:
 3100              	.LFB319:
 625:../samuel/samuel_io.c **** 
 626:../samuel/samuel_io.c ****  //------------------------------------------------
 627:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 628:../samuel/samuel_io.c ****  {
 3101              	 .loc 3 628 0
 3102              	 .cfi_startproc
 3103 0000 80B5     	 push {r7,lr}
 3104              	.LCFI70:
 3105              	 .cfi_def_cfa_offset 8
 3106              	 .cfi_offset 7,-8
 3107              	 .cfi_offset 14,-4
 3108 0002 82B0     	 sub sp,sp,#8
 3109              	.LCFI71:
 3110              	 .cfi_def_cfa_offset 16
 3111 0004 00AF     	 add r7,sp,#0
 3112              	.LCFI72:
 3113              	 .cfi_def_cfa_register 7
 629:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3114              	 .loc 3 629 0
 3115 0006 8023     	 mov r3,#128
 3116 0008 7B60     	 str r3,[r7,#4]
 630:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3117              	 .loc 3 630 0
 3118 000a 144B     	 ldr r3,.L123
 3119 000c 1A88     	 ldrh r2,[r3]
 3120 000e BA23     	 mov r3,#186
 3121 0010 1B01     	 lsl r3,r3,#4
 3122 0012 9A42     	 cmp r2,r3
 3123 0014 14D9     	 bls .L120
 631:../samuel/samuel_io.c ****   {
 632:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3124              	 .loc 3 632 0
 3125 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3126 001a 031C     	 mov r3,r0
 3127 001c 1A1C     	 mov r2,r3
 3128 001e 104B     	 ldr r3,.L123+4
 3129 0020 1A70     	 strb r2,[r3]
 633:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3130              	 .loc 3 633 0
 3131 0022 0F4B     	 ldr r3,.L123+4
 3132 0024 1B78     	 ldrb r3,[r3]
 3133 0026 032B     	 cmp r3,#3
 3134 0028 08D1     	 bne .L121
 634:../samuel/samuel_io.c ****     {
 635:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3135              	 .loc 3 635 0
 3136 002a 0E4B     	 ldr r3,.L123+8
 3137 002c 0120     	 mov r0,#1
 3138 002e 191C     	 mov r1,r3
 3139 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3140 0034 031C     	 mov r3,r0
 3141 0036 1A1C     	 mov r2,r3
 3142 0038 0B4B     	 ldr r3,.L123+12
 3143 003a 1A70     	 strb r2,[r3]
 3144              	.L121:
 636:../samuel/samuel_io.c ****     }
 637:../samuel/samuel_io.c **** 	 a = 0;
 3145              	 .loc 3 637 0
 3146 003c 0023     	 mov r3,#0
 3147 003e 7B60     	 str r3,[r7,#4]
 3148              	.L120:
 638:../samuel/samuel_io.c ****   }
 639:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3149              	 .loc 3 639 0
 3150 0040 074B     	 ldr r3,.L123+4
 3151 0042 1B78     	 ldrb r3,[r3]
 3152 0044 1A1C     	 mov r2,r3
 3153 0046 084B     	 ldr r3,.L123+12
 3154 0048 1B78     	 ldrb r3,[r3]
 3155 004a 1B01     	 lsl r3,r3,#4
 3156 004c D218     	 add r2,r2,r3
 3157 004e 7B68     	 ldr r3,[r7,#4]
 3158 0050 D318     	 add r3,r2,r3
 640:../samuel/samuel_io.c ****  }
 3159              	 .loc 3 640 0
 3160 0052 181C     	 mov r0,r3
 3161 0054 BD46     	 mov sp,r7
 3162 0056 02B0     	 add sp,sp,#8
 3163              	 
 3164 0058 80BD     	 pop {r7,pc}
 3165              	.L124:
 3166 005a C046     	 .align 2
 3167              	.L123:
 3168 005c 00000000 	 .word resultB
 3169 0060 00000000 	 .word EEprom_status
 3170 0064 00000000 	 .word ReadBuffer1
 3171 0068 00000000 	 .word oper_status
 3172              	 .cfi_endproc
 3173              	.LFE319:
 3175              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3176              	 .align 2
 3177              	 .global writeNodeid_B2_EEprom
 3178              	 .code 16
 3179              	 .thumb_func
 3181              	writeNodeid_B2_EEprom:
 3182              	.LFB320:
 641:../samuel/samuel_io.c ****  //------------------------------------------------
 642:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 643:../samuel/samuel_io.c ****  {
 3183              	 .loc 3 643 0
 3184              	 .cfi_startproc
 3185 0000 80B5     	 push {r7,lr}
 3186              	.LCFI73:
 3187              	 .cfi_def_cfa_offset 8
 3188              	 .cfi_offset 7,-8
 3189              	 .cfi_offset 14,-4
 3190 0002 82B0     	 sub sp,sp,#8
 3191              	.LCFI74:
 3192              	 .cfi_def_cfa_offset 16
 3193 0004 00AF     	 add r7,sp,#0
 3194              	.LCFI75:
 3195              	 .cfi_def_cfa_register 7
 644:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3196              	 .loc 3 644 0
 3197 0006 8023     	 mov r3,#128
 3198 0008 7B60     	 str r3,[r7,#4]
 645:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3199              	 .loc 3 645 0
 3200 000a 144B     	 ldr r3,.L129
 3201 000c 1A88     	 ldrh r2,[r3]
 3202 000e BA23     	 mov r3,#186
 3203 0010 1B01     	 lsl r3,r3,#4
 3204 0012 9A42     	 cmp r2,r3
 3205 0014 14D9     	 bls .L126
 646:../samuel/samuel_io.c ****     {
 647:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3206              	 .loc 3 647 0
 3207 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3208 001a 031C     	 mov r3,r0
 3209 001c 1A1C     	 mov r2,r3
 3210 001e 104B     	 ldr r3,.L129+4
 3211 0020 1A70     	 strb r2,[r3]
 648:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3212              	 .loc 3 648 0
 3213 0022 0F4B     	 ldr r3,.L129+4
 3214 0024 1B78     	 ldrb r3,[r3]
 3215 0026 032B     	 cmp r3,#3
 3216 0028 08D1     	 bne .L127
 649:../samuel/samuel_io.c ****       {
 650:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3217              	 .loc 3 650 0
 3218 002a 0E4B     	 ldr r3,.L129+8
 3219 002c 0220     	 mov r0,#2
 3220 002e 191C     	 mov r1,r3
 3221 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3222 0034 031C     	 mov r3,r0
 3223 0036 1A1C     	 mov r2,r3
 3224 0038 0B4B     	 ldr r3,.L129+12
 3225 003a 1A70     	 strb r2,[r3]
 3226              	.L127:
 651:../samuel/samuel_io.c ****       }
 652:../samuel/samuel_io.c **** 	 a = 0;
 3227              	 .loc 3 652 0
 3228 003c 0023     	 mov r3,#0
 3229 003e 7B60     	 str r3,[r7,#4]
 3230              	.L126:
 653:../samuel/samuel_io.c ****     }
 654:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3231              	 .loc 3 654 0
 3232 0040 074B     	 ldr r3,.L129+4
 3233 0042 1B78     	 ldrb r3,[r3]
 3234 0044 1A1C     	 mov r2,r3
 3235 0046 084B     	 ldr r3,.L129+12
 3236 0048 1B78     	 ldrb r3,[r3]
 3237 004a 1B01     	 lsl r3,r3,#4
 3238 004c D218     	 add r2,r2,r3
 3239 004e 7B68     	 ldr r3,[r7,#4]
 3240 0050 D318     	 add r3,r2,r3
 655:../samuel/samuel_io.c ****  }
 3241              	 .loc 3 655 0
 3242 0052 181C     	 mov r0,r3
 3243 0054 BD46     	 mov sp,r7
 3244 0056 02B0     	 add sp,sp,#8
 3245              	 
 3246 0058 80BD     	 pop {r7,pc}
 3247              	.L130:
 3248 005a C046     	 .align 2
 3249              	.L129:
 3250 005c 00000000 	 .word resultB
 3251 0060 00000000 	 .word EEprom_status
 3252 0064 00000000 	 .word ReadBuffer2
 3253 0068 00000000 	 .word oper_status
 3254              	 .cfi_endproc
 3255              	.LFE320:
 3257              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3258              	 .align 2
 3259              	 .global writeLamp_data_B3_EEprom
 3260              	 .code 16
 3261              	 .thumb_func
 3263              	writeLamp_data_B3_EEprom:
 3264              	.LFB321:
 656:../samuel/samuel_io.c ****  //----------------------------
 657:../samuel/samuel_io.c **** 
 658:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 659:../samuel/samuel_io.c ****  {
 3265              	 .loc 3 659 0
 3266              	 .cfi_startproc
 3267 0000 80B5     	 push {r7,lr}
 3268              	.LCFI76:
 3269              	 .cfi_def_cfa_offset 8
 3270              	 .cfi_offset 7,-8
 3271              	 .cfi_offset 14,-4
 3272 0002 82B0     	 sub sp,sp,#8
 3273              	.LCFI77:
 3274              	 .cfi_def_cfa_offset 16
 3275 0004 00AF     	 add r7,sp,#0
 3276              	.LCFI78:
 3277              	 .cfi_def_cfa_register 7
 660:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3278              	 .loc 3 660 0
 3279 0006 8023     	 mov r3,#128
 3280 0008 7B60     	 str r3,[r7,#4]
 661:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3281              	 .loc 3 661 0
 3282 000a 144B     	 ldr r3,.L135
 3283 000c 1A88     	 ldrh r2,[r3]
 3284 000e BA23     	 mov r3,#186
 3285 0010 1B01     	 lsl r3,r3,#4
 3286 0012 9A42     	 cmp r2,r3
 3287 0014 14D9     	 bls .L132
 662:../samuel/samuel_io.c ****   {
 663:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3288              	 .loc 3 663 0
 3289 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3290 001a 031C     	 mov r3,r0
 3291 001c 1A1C     	 mov r2,r3
 3292 001e 104B     	 ldr r3,.L135+4
 3293 0020 1A70     	 strb r2,[r3]
 664:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3294              	 .loc 3 664 0
 3295 0022 0F4B     	 ldr r3,.L135+4
 3296 0024 1B78     	 ldrb r3,[r3]
 3297 0026 032B     	 cmp r3,#3
 3298 0028 08D1     	 bne .L133
 665:../samuel/samuel_io.c ****     {
 666:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3299              	 .loc 3 666 0
 3300 002a 0E4B     	 ldr r3,.L135+8
 3301 002c 0320     	 mov r0,#3
 3302 002e 191C     	 mov r1,r3
 3303 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3304 0034 031C     	 mov r3,r0
 3305 0036 1A1C     	 mov r2,r3
 3306 0038 0B4B     	 ldr r3,.L135+12
 3307 003a 1A70     	 strb r2,[r3]
 3308              	.L133:
 667:../samuel/samuel_io.c ****     }
 668:../samuel/samuel_io.c **** 	 a = 0;
 3309              	 .loc 3 668 0
 3310 003c 0023     	 mov r3,#0
 3311 003e 7B60     	 str r3,[r7,#4]
 3312              	.L132:
 669:../samuel/samuel_io.c ****   }
 670:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3313              	 .loc 3 670 0
 3314 0040 074B     	 ldr r3,.L135+4
 3315 0042 1B78     	 ldrb r3,[r3]
 3316 0044 1A1C     	 mov r2,r3
 3317 0046 084B     	 ldr r3,.L135+12
 3318 0048 1B78     	 ldrb r3,[r3]
 3319 004a 1B01     	 lsl r3,r3,#4
 3320 004c D218     	 add r2,r2,r3
 3321 004e 7B68     	 ldr r3,[r7,#4]
 3322 0050 D318     	 add r3,r2,r3
 671:../samuel/samuel_io.c ****  }
 3323              	 .loc 3 671 0
 3324 0052 181C     	 mov r0,r3
 3325 0054 BD46     	 mov sp,r7
 3326 0056 02B0     	 add sp,sp,#8
 3327              	 
 3328 0058 80BD     	 pop {r7,pc}
 3329              	.L136:
 3330 005a C046     	 .align 2
 3331              	.L135:
 3332 005c 00000000 	 .word resultB
 3333 0060 00000000 	 .word EEprom_status
 3334 0064 00000000 	 .word ReadBuffer3
 3335 0068 00000000 	 .word oper_status
 3336              	 .cfi_endproc
 3337              	.LFE321:
 3339              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3340              	 .align 2
 3341              	 .global writeakt_light_data_B4_EEprom
 3342              	 .code 16
 3343              	 .thumb_func
 3345              	writeakt_light_data_B4_EEprom:
 3346              	.LFB322:
 672:../samuel/samuel_io.c **** 
 673:../samuel/samuel_io.c ****  //------------------------------------------------
 674:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 675:../samuel/samuel_io.c ****  {
 3347              	 .loc 3 675 0
 3348              	 .cfi_startproc
 3349 0000 80B5     	 push {r7,lr}
 3350              	.LCFI79:
 3351              	 .cfi_def_cfa_offset 8
 3352              	 .cfi_offset 7,-8
 3353              	 .cfi_offset 14,-4
 3354 0002 82B0     	 sub sp,sp,#8
 3355              	.LCFI80:
 3356              	 .cfi_def_cfa_offset 16
 3357 0004 00AF     	 add r7,sp,#0
 3358              	.LCFI81:
 3359              	 .cfi_def_cfa_register 7
 676:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3360              	 .loc 3 676 0
 3361 0006 8023     	 mov r3,#128
 3362 0008 7B60     	 str r3,[r7,#4]
 677:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3363              	 .loc 3 677 0
 3364 000a 144B     	 ldr r3,.L141
 3365 000c 1A88     	 ldrh r2,[r3]
 3366 000e BA23     	 mov r3,#186
 3367 0010 1B01     	 lsl r3,r3,#4
 3368 0012 9A42     	 cmp r2,r3
 3369 0014 14D9     	 bls .L138
 678:../samuel/samuel_io.c ****     {
 679:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3370              	 .loc 3 679 0
 3371 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3372 001a 031C     	 mov r3,r0
 3373 001c 1A1C     	 mov r2,r3
 3374 001e 104B     	 ldr r3,.L141+4
 3375 0020 1A70     	 strb r2,[r3]
 680:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3376              	 .loc 3 680 0
 3377 0022 0F4B     	 ldr r3,.L141+4
 3378 0024 1B78     	 ldrb r3,[r3]
 3379 0026 032B     	 cmp r3,#3
 3380 0028 08D1     	 bne .L139
 681:../samuel/samuel_io.c ****       {
 682:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3381              	 .loc 3 682 0
 3382 002a 0E4B     	 ldr r3,.L141+8
 3383 002c 0420     	 mov r0,#4
 3384 002e 191C     	 mov r1,r3
 3385 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3386 0034 031C     	 mov r3,r0
 3387 0036 1A1C     	 mov r2,r3
 3388 0038 0B4B     	 ldr r3,.L141+12
 3389 003a 1A70     	 strb r2,[r3]
 3390              	.L139:
 683:../samuel/samuel_io.c ****       }
 684:../samuel/samuel_io.c **** 	 a = 0;
 3391              	 .loc 3 684 0
 3392 003c 0023     	 mov r3,#0
 3393 003e 7B60     	 str r3,[r7,#4]
 3394              	.L138:
 685:../samuel/samuel_io.c ****     }
 686:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3395              	 .loc 3 686 0
 3396 0040 074B     	 ldr r3,.L141+4
 3397 0042 1B78     	 ldrb r3,[r3]
 3398 0044 1A1C     	 mov r2,r3
 3399 0046 084B     	 ldr r3,.L141+12
 3400 0048 1B78     	 ldrb r3,[r3]
 3401 004a 1B01     	 lsl r3,r3,#4
 3402 004c D218     	 add r2,r2,r3
 3403 004e 7B68     	 ldr r3,[r7,#4]
 3404 0050 D318     	 add r3,r2,r3
 687:../samuel/samuel_io.c ****  }
 3405              	 .loc 3 687 0
 3406 0052 181C     	 mov r0,r3
 3407 0054 BD46     	 mov sp,r7
 3408 0056 02B0     	 add sp,sp,#8
 3409              	 
 3410 0058 80BD     	 pop {r7,pc}
 3411              	.L142:
 3412 005a C046     	 .align 2
 3413              	.L141:
 3414 005c 00000000 	 .word resultB
 3415 0060 00000000 	 .word EEprom_status
 3416 0064 00000000 	 .word ReadBuffer2
 3417 0068 00000000 	 .word oper_status
 3418              	 .cfi_endproc
 3419              	.LFE322:
 3421              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3422              	 .align 2
 3423              	 .global writeOff_light_B5_EEprom
 3424              	 .code 16
 3425              	 .thumb_func
 3427              	writeOff_light_B5_EEprom:
 3428              	.LFB323:
 688:../samuel/samuel_io.c ****  //----------------------------
 689:../samuel/samuel_io.c **** 
 690:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 691:../samuel/samuel_io.c ****  {
 3429              	 .loc 3 691 0
 3430              	 .cfi_startproc
 3431 0000 80B5     	 push {r7,lr}
 3432              	.LCFI82:
 3433              	 .cfi_def_cfa_offset 8
 3434              	 .cfi_offset 7,-8
 3435              	 .cfi_offset 14,-4
 3436 0002 82B0     	 sub sp,sp,#8
 3437              	.LCFI83:
 3438              	 .cfi_def_cfa_offset 16
 3439 0004 00AF     	 add r7,sp,#0
 3440              	.LCFI84:
 3441              	 .cfi_def_cfa_register 7
 692:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3442              	 .loc 3 692 0
 3443 0006 8023     	 mov r3,#128
 3444 0008 7B60     	 str r3,[r7,#4]
 693:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3445              	 .loc 3 693 0
 3446 000a 144B     	 ldr r3,.L147
 3447 000c 1A88     	 ldrh r2,[r3]
 3448 000e BA23     	 mov r3,#186
 3449 0010 1B01     	 lsl r3,r3,#4
 3450 0012 9A42     	 cmp r2,r3
 3451 0014 14D9     	 bls .L144
 694:../samuel/samuel_io.c ****   {
 695:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3452              	 .loc 3 695 0
 3453 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3454 001a 031C     	 mov r3,r0
 3455 001c 1A1C     	 mov r2,r3
 3456 001e 104B     	 ldr r3,.L147+4
 3457 0020 1A70     	 strb r2,[r3]
 696:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3458              	 .loc 3 696 0
 3459 0022 0F4B     	 ldr r3,.L147+4
 3460 0024 1B78     	 ldrb r3,[r3]
 3461 0026 032B     	 cmp r3,#3
 3462 0028 08D1     	 bne .L145
 697:../samuel/samuel_io.c ****     {
 698:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3463              	 .loc 3 698 0
 3464 002a 0E4B     	 ldr r3,.L147+8
 3465 002c 0520     	 mov r0,#5
 3466 002e 191C     	 mov r1,r3
 3467 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3468 0034 031C     	 mov r3,r0
 3469 0036 1A1C     	 mov r2,r3
 3470 0038 0B4B     	 ldr r3,.L147+12
 3471 003a 1A70     	 strb r2,[r3]
 3472              	.L145:
 699:../samuel/samuel_io.c **** 
 700:../samuel/samuel_io.c **** 
 701:../samuel/samuel_io.c **** 
 702:../samuel/samuel_io.c **** 
 703:../samuel/samuel_io.c ****     }
 704:../samuel/samuel_io.c **** 	 a = 0;
 3473              	 .loc 3 704 0
 3474 003c 0023     	 mov r3,#0
 3475 003e 7B60     	 str r3,[r7,#4]
 3476              	.L144:
 705:../samuel/samuel_io.c ****   }
 706:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3477              	 .loc 3 706 0
 3478 0040 074B     	 ldr r3,.L147+4
 3479 0042 1B78     	 ldrb r3,[r3]
 3480 0044 1A1C     	 mov r2,r3
 3481 0046 084B     	 ldr r3,.L147+12
 3482 0048 1B78     	 ldrb r3,[r3]
 3483 004a 1B01     	 lsl r3,r3,#4
 3484 004c D218     	 add r2,r2,r3
 3485 004e 7B68     	 ldr r3,[r7,#4]
 3486 0050 D318     	 add r3,r2,r3
 707:../samuel/samuel_io.c ****  }
 3487              	 .loc 3 707 0
 3488 0052 181C     	 mov r0,r3
 3489 0054 BD46     	 mov sp,r7
 3490 0056 02B0     	 add sp,sp,#8
 3491              	 
 3492 0058 80BD     	 pop {r7,pc}
 3493              	.L148:
 3494 005a C046     	 .align 2
 3495              	.L147:
 3496 005c 00000000 	 .word resultB
 3497 0060 00000000 	 .word EEprom_status
 3498 0064 00000000 	 .word ReadBuffer2
 3499 0068 00000000 	 .word oper_status
 3500              	 .cfi_endproc
 3501              	.LFE323:
 3503              	 .section .text.sysiniValueB1,"ax",%progbits
 3504              	 .align 2
 3505              	 .global sysiniValueB1
 3506              	 .code 16
 3507              	 .thumb_func
 3509              	sysiniValueB1:
 3510              	.LFB324:
 708:../samuel/samuel_io.c **** 
 709:../samuel/samuel_io.c **** ///#############################################
 710:../samuel/samuel_io.c ****  //initialisierung
 711:../samuel/samuel_io.c **** 
 712:../samuel/samuel_io.c **** 
 713:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 714:../samuel/samuel_io.c ****  {
 3511              	 .loc 3 714 0
 3512              	 .cfi_startproc
 3513 0000 80B5     	 push {r7,lr}
 3514              	.LCFI85:
 3515              	 .cfi_def_cfa_offset 8
 3516              	 .cfi_offset 7,-8
 3517              	 .cfi_offset 14,-4
 3518 0002 00AF     	 add r7,sp,#0
 3519              	.LCFI86:
 3520              	 .cfi_def_cfa_register 7
 715:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 716:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 717:../samuel/samuel_io.c **** 
 718:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3521              	 .loc 3 718 0
 3522 0004 124B     	 ldr r3,.L150
 3523 0006 134A     	 ldr r2,.L150+4
 3524 0008 1A80     	 strh r2,[r3]
 719:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3525              	 .loc 3 719 0
 3526 000a 134B     	 ldr r3,.L150+8
 3527 000c 134A     	 ldr r2,.L150+12
 3528 000e 1A80     	 strh r2,[r3]
 720:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3529              	 .loc 3 720 0
 3530 0010 134B     	 ldr r3,.L150+16
 3531 0012 FA22     	 mov r2,#250
 3532 0014 9200     	 lsl r2,r2,#2
 3533 0016 1A80     	 strh r2,[r3]
 721:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3534              	 .loc 3 721 0
 3535 0018 124B     	 ldr r3,.L150+20
 3536 001a FA22     	 mov r2,#250
 3537 001c 9200     	 lsl r2,r2,#2
 3538 001e 1A80     	 strh r2,[r3]
 722:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3539              	 .loc 3 722 0
 3540 0020 114B     	 ldr r3,.L150+24
 3541 0022 FA22     	 mov r2,#250
 3542 0024 9200     	 lsl r2,r2,#2
 3543 0026 1A80     	 strh r2,[r3]
 723:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3544              	 .loc 3 723 0
 3545 0028 104B     	 ldr r3,.L150+28
 3546 002a FA22     	 mov r2,#250
 3547 002c 9200     	 lsl r2,r2,#2
 3548 002e 1A80     	 strh r2,[r3]
 724:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3549              	 .loc 3 724 0
 3550 0030 0F4B     	 ldr r3,.L150+32
 3551 0032 FA22     	 mov r2,#250
 3552 0034 9200     	 lsl r2,r2,#2
 3553 0036 1A80     	 strh r2,[r3]
 725:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3554              	 .loc 3 725 0
 3555 0038 0E4B     	 ldr r3,.L150+36
 3556 003a FA22     	 mov r2,#250
 3557 003c 9200     	 lsl r2,r2,#2
 3558 003e 1A80     	 strh r2,[r3]
 726:../samuel/samuel_io.c **** 
 727:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3559              	 .loc 3 727 0
 3560 0040 0D4B     	 ldr r3,.L150+40
 3561 0042 0022     	 mov r2,#0
 3562 0044 1A80     	 strh r2,[r3]
 728:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3563              	 .loc 3 728 0
 3564 0046 0D4B     	 ldr r3,.L150+44
 3565 0048 0022     	 mov r2,#0
 3566 004a 1A80     	 strh r2,[r3]
 729:../samuel/samuel_io.c **** 
 730:../samuel/samuel_io.c ****  }
 3567              	 .loc 3 730 0
 3568 004c BD46     	 mov sp,r7
 3569              	 
 3570 004e 80BD     	 pop {r7,pc}
 3571              	.L151:
 3572              	 .align 2
 3573              	.L150:
 3574 0050 00000000 	 .word Ser_NrH
 3575 0054 7A7B0000 	 .word 31610
 3576 0058 00000000 	 .word Ser_NrL
 3577 005c 59580000 	 .word 22617
 3578 0060 00000000 	 .word Hard_Vers
 3579 0064 00000000 	 .word Soft_Vers
 3580 0068 00000000 	 .word GEH_Vers
 3581 006c 00000000 	 .word Mon_Vers
 3582 0070 00000000 	 .word LED_WW_Vers
 3583 0074 00000000 	 .word LED_CW_Vers
 3584 0078 00000000 	 .word neu_Ser_NrH
 3585 007c 00000000 	 .word neu_Ser_NrL
 3586              	 .cfi_endproc
 3587              	.LFE324:
 3589              	 .section .text.sysiniValueB2,"ax",%progbits
 3590              	 .align 2
 3591              	 .global sysiniValueB2
 3592              	 .code 16
 3593              	 .thumb_func
 3595              	sysiniValueB2:
 3596              	.LFB325:
 731:../samuel/samuel_io.c **** 
 732:../samuel/samuel_io.c **** 
 733:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 734:../samuel/samuel_io.c ****  {
 3597              	 .loc 3 734 0
 3598              	 .cfi_startproc
 3599 0000 80B5     	 push {r7,lr}
 3600              	.LCFI87:
 3601              	 .cfi_def_cfa_offset 8
 3602              	 .cfi_offset 7,-8
 3603              	 .cfi_offset 14,-4
 3604 0002 00AF     	 add r7,sp,#0
 3605              	.LCFI88:
 3606              	 .cfi_def_cfa_register 7
 735:../samuel/samuel_io.c ****            node_id = 1;
 3607              	 .loc 3 735 0
 3608 0004 114B     	 ldr r3,.L153
 3609 0006 0122     	 mov r2,#1
 3610 0008 1A70     	 strb r2,[r3]
 736:../samuel/samuel_io.c ****            node_id_alt = 1;
 3611              	 .loc 3 736 0
 3612 000a 114B     	 ldr r3,.L153+4
 3613 000c 0122     	 mov r2,#1
 3614 000e 1A70     	 strb r2,[r3]
 737:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3615              	 .loc 3 737 0
 3616 0010 104B     	 ldr r3,.L153+8
 3617 0012 114A     	 ldr r2,.L153+12
 3618 0014 1A80     	 strh r2,[r3]
 738:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3619              	 .loc 3 738 0
 3620 0016 114B     	 ldr r3,.L153+16
 3621 0018 FA22     	 mov r2,#250
 3622 001a D200     	 lsl r2,r2,#3
 3623 001c 1A80     	 strh r2,[r3]
 739:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3624              	 .loc 3 739 0
 3625 001e 104B     	 ldr r3,.L153+20
 3626 0020 FA22     	 mov r2,#250
 3627 0022 D200     	 lsl r2,r2,#3
 3628 0024 1A80     	 strh r2,[r3]
 740:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3629              	 .loc 3 740 0
 3630 0026 0F4B     	 ldr r3,.L153+24
 3631 0028 E122     	 mov r2,#225
 3632 002a 1201     	 lsl r2,r2,#4
 3633 002c 1A80     	 strh r2,[r3]
 741:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3634              	 .loc 3 741 0
 3635 002e 0E4B     	 ldr r3,.L153+28
 3636 0030 0E4A     	 ldr r2,.L153+32
 3637 0032 1A80     	 strh r2,[r3]
 742:../samuel/samuel_io.c **** 		   led_grupp=10;
 3638              	 .loc 3 742 0
 3639 0034 0E4B     	 ldr r3,.L153+36
 3640 0036 0A22     	 mov r2,#10
 3641 0038 1A80     	 strh r2,[r3]
 743:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3642              	 .loc 3 743 0
 3643 003a 0E4B     	 ldr r3,.L153+40
 3644 003c 3522     	 mov r2,#53
 3645 003e 1A80     	 strh r2,[r3]
 744:../samuel/samuel_io.c **** 
 745:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3646              	 .loc 3 745 0
 3647 0040 0D4B     	 ldr r3,.L153+44
 3648 0042 0122     	 mov r2,#1
 3649 0044 1A70     	 strb r2,[r3]
 746:../samuel/samuel_io.c ****  }
 3650              	 .loc 3 746 0
 3651 0046 BD46     	 mov sp,r7
 3652              	 
 3653 0048 80BD     	 pop {r7,pc}
 3654              	.L154:
 3655 004a C046     	 .align 2
 3656              	.L153:
 3657 004c 00000000 	 .word node_id
 3658 0050 00000000 	 .word node_id_alt
 3659 0054 00000000 	 .word node_id_16bit
 3660 0058 34120000 	 .word 4660
 3661 005c 00000000 	 .word val_Pow_Nom
 3662 0060 00000000 	 .word val_Pow_max
 3663 0064 00000000 	 .word val_Spannung_min
 3664 0068 00000000 	 .word val_Spannung_max
 3665 006c 68100000 	 .word 4200
 3666 0070 00000000 	 .word led_grupp
 3667 0074 00000000 	 .word led_Strom
 3668 0078 00000000 	 .word node_id_neu
 3669              	 .cfi_endproc
 3670              	.LFE325:
 3672              	 .section .text.sysiniValueB4,"ax",%progbits
 3673              	 .align 2
 3674              	 .global sysiniValueB4
 3675              	 .code 16
 3676              	 .thumb_func
 3678              	sysiniValueB4:
 3679              	.LFB326:
 747:../samuel/samuel_io.c **** 
 748:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 749:../samuel/samuel_io.c ****  {
 3680              	 .loc 3 749 0
 3681              	 .cfi_startproc
 3682 0000 80B5     	 push {r7,lr}
 3683              	.LCFI89:
 3684              	 .cfi_def_cfa_offset 8
 3685              	 .cfi_offset 7,-8
 3686              	 .cfi_offset 14,-4
 3687 0002 00AF     	 add r7,sp,#0
 3688              	.LCFI90:
 3689              	 .cfi_def_cfa_register 7
 750:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3690              	 .loc 3 750 0
 3691 0004 264B     	 ldr r3,.L156
 3692 0006 0A22     	 mov r2,#10
 3693 0008 1A70     	 strb r2,[r3]
 751:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3694              	 .loc 3 751 0
 3695 000a 264B     	 ldr r3,.L156+4
 3696 000c 0A22     	 mov r2,#10
 3697 000e 1A70     	 strb r2,[r3]
 752:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3698              	 .loc 3 752 0
 3699 0010 254B     	 ldr r3,.L156+8
 3700 0012 0A22     	 mov r2,#10
 3701 0014 1A70     	 strb r2,[r3]
 753:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3702              	 .loc 3 753 0
 3703 0016 254B     	 ldr r3,.L156+12
 3704 0018 0A22     	 mov r2,#10
 3705 001a 1A70     	 strb r2,[r3]
 754:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3706              	 .loc 3 754 0
 3707 001c 244B     	 ldr r3,.L156+16
 3708 001e 0A22     	 mov r2,#10
 3709 0020 1A80     	 strh r2,[r3]
 755:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3710              	 .loc 3 755 0
 3711 0022 244B     	 ldr r3,.L156+20
 3712 0024 B022     	 mov r2,#176
 3713 0026 1A80     	 strh r2,[r3]
 756:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3714              	 .loc 3 756 0
 3715 0028 234B     	 ldr r3,.L156+24
 3716 002a 0122     	 mov r2,#1
 3717 002c 5242     	 neg r2,r2
 3718 002e 1A80     	 strh r2,[r3]
 757:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3719              	 .loc 3 757 0
 3720 0030 224B     	 ldr r3,.L156+28
 3721 0032 0022     	 mov r2,#0
 3722 0034 1A80     	 strh r2,[r3]
 758:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3723              	 .loc 3 758 0
 3724 0036 224B     	 ldr r3,.L156+32
 3725 0038 FA22     	 mov r2,#250
 3726 003a 9200     	 lsl r2,r2,#2
 3727 003c 1A80     	 strh r2,[r3]
 759:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3728              	 .loc 3 759 0
 3729 003e 214B     	 ldr r3,.L156+36
 3730 0040 FA22     	 mov r2,#250
 3731 0042 9200     	 lsl r2,r2,#2
 3732 0044 1A80     	 strh r2,[r3]
 760:../samuel/samuel_io.c **** 
 761:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3733              	 .loc 3 761 0
 3734 0046 1B4B     	 ldr r3,.L156+20
 3735 0048 1A88     	 ldrh r2,[r3]
 3736 004a 1F4B     	 ldr r3,.L156+40
 3737 004c 1A80     	 strh r2,[r3]
 762:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3738              	 .loc 3 762 0
 3739 004e 194B     	 ldr r3,.L156+20
 3740 0050 1A88     	 ldrh r2,[r3]
 3741 0052 1E4B     	 ldr r3,.L156+44
 3742 0054 1A80     	 strh r2,[r3]
 763:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3743              	 .loc 3 763 0
 3744 0056 174B     	 ldr r3,.L156+20
 3745 0058 1A88     	 ldrh r2,[r3]
 3746 005a 1D4B     	 ldr r3,.L156+48
 3747 005c 1A80     	 strh r2,[r3]
 764:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3748              	 .loc 3 764 0
 3749 005e 154B     	 ldr r3,.L156+20
 3750 0060 1A88     	 ldrh r2,[r3]
 3751 0062 1C4B     	 ldr r3,.L156+52
 3752 0064 1A80     	 strh r2,[r3]
 765:../samuel/samuel_io.c **** 
 766:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3753              	 .loc 3 766 0
 3754 0066 144B     	 ldr r3,.L156+24
 3755 0068 1B88     	 ldrh r3,[r3]
 3756 006a 1B0A     	 lsr r3,r3,#8
 3757 006c 9AB2     	 uxth r2,r3
 3758 006e 1A4B     	 ldr r3,.L156+56
 3759 0070 1A80     	 strh r2,[r3]
 767:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3760              	 .loc 3 767 0
 3761 0072 114B     	 ldr r3,.L156+24
 3762 0074 1B88     	 ldrh r3,[r3]
 3763 0076 1B0A     	 lsr r3,r3,#8
 3764 0078 9AB2     	 uxth r2,r3
 3765 007a 184B     	 ldr r3,.L156+60
 3766 007c 1A80     	 strh r2,[r3]
 768:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3767              	 .loc 3 768 0
 3768 007e 0E4B     	 ldr r3,.L156+24
 3769 0080 1B88     	 ldrh r3,[r3]
 3770 0082 FF22     	 mov r2,#255
 3771 0084 1340     	 and r3,r2
 3772 0086 9AB2     	 uxth r2,r3
 3773 0088 154B     	 ldr r3,.L156+64
 3774 008a 1A80     	 strh r2,[r3]
 769:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3775              	 .loc 3 769 0
 3776 008c 0A4B     	 ldr r3,.L156+24
 3777 008e 1B88     	 ldrh r3,[r3]
 3778 0090 FF22     	 mov r2,#255
 3779 0092 1340     	 and r3,r2
 3780 0094 9AB2     	 uxth r2,r3
 3781 0096 134B     	 ldr r3,.L156+68
 3782 0098 1A80     	 strh r2,[r3]
 770:../samuel/samuel_io.c ****  }
 3783              	 .loc 3 770 0
 3784 009a BD46     	 mov sp,r7
 3785              	 
 3786 009c 80BD     	 pop {r7,pc}
 3787              	.L157:
 3788 009e C046     	 .align 2
 3789              	.L156:
 3790 00a0 00000000 	 .word Dimm_Gamma
 3791 00a4 00000000 	 .word Dimm_Stufen
 3792 00a8 00000000 	 .word Dimm_StufenGR
 3793 00ac 00000000 	 .word Dimm_Valu
 3794 00b0 00000000 	 .word Smooth_Value
 3795 00b4 00000000 	 .word linearwalk_gen
 3796 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 3797 00bc 00000000 	 .word Reserve_1
 3798 00c0 00000000 	 .word Dimm_Max_WW
 3799 00c4 00000000 	 .word Dimm_Max_CW
 3800 00c8 00000000 	 .word linearwalk_ww1
 3801 00cc 00000000 	 .word linearwalk_ww2
 3802 00d0 00000000 	 .word linearwalk_cw1
 3803 00d4 00000000 	 .word linearwalk_cw2
 3804 00d8 00000000 	 .word Farbe_ww1_Quot
 3805 00dc 00000000 	 .word Farbe_cw1_Quot
 3806 00e0 00000000 	 .word Farbe_ww2_Quot
 3807 00e4 00000000 	 .word Farbe_cw2_Quot
 3808              	 .cfi_endproc
 3809              	.LFE326:
 3811              	 .section .text.sysiniValueB5,"ax",%progbits
 3812              	 .align 2
 3813              	 .global sysiniValueB5
 3814              	 .code 16
 3815              	 .thumb_func
 3817              	sysiniValueB5:
 3818              	.LFB327:
 771:../samuel/samuel_io.c **** 
 772:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 773:../samuel/samuel_io.c ****  {
 3819              	 .loc 3 773 0
 3820              	 .cfi_startproc
 3821 0000 80B5     	 push {r7,lr}
 3822              	.LCFI91:
 3823              	 .cfi_def_cfa_offset 8
 3824              	 .cfi_offset 7,-8
 3825              	 .cfi_offset 14,-4
 3826 0002 00AF     	 add r7,sp,#0
 3827              	.LCFI92:
 3828              	 .cfi_def_cfa_register 7
 774:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 3829              	 .loc 3 774 0
 3830 0004 0E4B     	 ldr r3,.L159
 3831 0006 0522     	 mov r2,#5
 3832 0008 1A70     	 strb r2,[r3]
 775:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 3833              	 .loc 3 775 0
 3834 000a 0E4B     	 ldr r3,.L159+4
 3835 000c 0022     	 mov r2,#0
 3836 000e 1A70     	 strb r2,[r3]
 776:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 3837              	 .loc 3 776 0
 3838 0010 0D4B     	 ldr r3,.L159+8
 3839 0012 0022     	 mov r2,#0
 3840 0014 1A80     	 strh r2,[r3]
 777:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 3841              	 .loc 3 777 0
 3842 0016 0D4B     	 ldr r3,.L159+12
 3843 0018 0D4A     	 ldr r2,.L159+16
 3844 001a 1A80     	 strh r2,[r3]
 778:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 3845              	 .loc 3 778 0
 3846 001c 0D4B     	 ldr r3,.L159+20
 3847 001e 0C4A     	 ldr r2,.L159+16
 3848 0020 1A80     	 strh r2,[r3]
 779:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 3849              	 .loc 3 779 0
 3850 0022 0D4B     	 ldr r3,.L159+24
 3851 0024 0D4A     	 ldr r2,.L159+28
 3852 0026 1A80     	 strh r2,[r3]
 780:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 3853              	 .loc 3 780 0
 3854 0028 0D4B     	 ldr r3,.L159+32
 3855 002a 0C4A     	 ldr r2,.L159+28
 3856 002c 1A80     	 strh r2,[r3]
 781:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 3857              	 .loc 3 781 0
 3858 002e 0D4B     	 ldr r3,.L159+36
 3859 0030 0D4A     	 ldr r2,.L159+40
 3860 0032 1A80     	 strh r2,[r3]
 782:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 3861              	 .loc 3 782 0
 3862 0034 0D4B     	 ldr r3,.L159+44
 3863 0036 0C4A     	 ldr r2,.L159+40
 3864 0038 1A80     	 strh r2,[r3]
 783:../samuel/samuel_io.c ****  }
 3865              	 .loc 3 783 0
 3866 003a BD46     	 mov sp,r7
 3867              	 
 3868 003c 80BD     	 pop {r7,pc}
 3869              	.L160:
 3870 003e C046     	 .align 2
 3871              	.L159:
 3872 0040 00000000 	 .word RegOnOff
 3873 0044 00000000 	 .word RegOnOff2
 3874 0048 00000000 	 .word Reserve_2
 3875 004c 00000000 	 .word dimOff_Ww
 3876 0050 FF0F0000 	 .word 4095
 3877 0054 00000000 	 .word dimOff_Cw
 3878 0058 00000000 	 .word dimNorm1_Ww
 3879 005c FF010000 	 .word 511
 3880 0060 00000000 	 .word dimNorm1_Cw
 3881 0064 00000000 	 .word dimNorm2_Ww
 3882 0068 FF020000 	 .word 767
 3883 006c 00000000 	 .word dimNorm2_Cw
 3884              	 .cfi_endproc
 3885              	.LFE327:
 3887              	 .section .text.bcuInit,"ax",%progbits
 3888              	 .align 2
 3889              	 .global bcuInit
 3890              	 .code 16
 3891              	 .thumb_func
 3893              	bcuInit:
 3894              	.LFB328:
 784:../samuel/samuel_io.c **** 
 785:../samuel/samuel_io.c ****  //-----------------------------------------------
 786:../samuel/samuel_io.c ****  // BCCU Vorgaben
 787:../samuel/samuel_io.c **** 
 788:../samuel/samuel_io.c ****  void bcuInit(void)
 789:../samuel/samuel_io.c ****  {
 3895              	 .loc 3 789 0
 3896              	 .cfi_startproc
 3897 0000 80B5     	 push {r7,lr}
 3898              	.LCFI93:
 3899              	 .cfi_def_cfa_offset 8
 3900              	 .cfi_offset 7,-8
 3901              	 .cfi_offset 14,-4
 3902 0002 00AF     	 add r7,sp,#0
 3903              	.LCFI94:
 3904              	 .cfi_def_cfa_register 7
 790:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 3905              	 .loc 3 790 0
 3906 0004 194B     	 ldr r3,.L171
 3907 0006 1B78     	 ldrb r3,[r3]
 3908 0008 052B     	 cmp r3,#5
 3909 000a 2CD8     	 bhi .L170
 3910 000c 9A00     	 lsl r2,r3,#2
 3911 000e 184B     	 ldr r3,.L171+4
 3912 0010 D318     	 add r3,r2,r3
 3913 0012 1B68     	 ldr r3,[r3]
 3914 0014 9F46     	 mov pc,r3
 3915              	 .section .rodata.bcuInit,"a",%progbits
 3916              	 .align 2
 3917              	.L164:
 3918 0000 66000000 	 .word .L170
 3919 0004 16000000 	 .word .L163
 3920 0008 24000000 	 .word .L165
 3921 000c 32000000 	 .word .L166
 3922 0010 42000000 	 .word .L167
 3923 0014 54000000 	 .word .L168
 3924              	 .section .text.bcuInit
 3925              	.L163:
 791:../samuel/samuel_io.c **** 		{
 792:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 3926              	 .loc 3 792 0
 3927 0016 174B     	 ldr r3,.L171+8
 3928 0018 0022     	 mov r2,#0
 3929 001a 1A80     	 strh r2,[r3]
 793:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 3930              	 .loc 3 793 0
 3931 001c 164B     	 ldr r3,.L171+12
 3932 001e 0022     	 mov r2,#0
 3933 0020 1A80     	 strh r2,[r3]
 794:../samuel/samuel_io.c **** 									break;
 3934              	 .loc 3 794 0
 3935 0022 21E0     	 b .L161
 3936              	.L165:
 795:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 3937              	 .loc 3 795 0
 3938 0024 134B     	 ldr r3,.L171+8
 3939 0026 154A     	 ldr r2,.L171+16
 3940 0028 1A80     	 strh r2,[r3]
 796:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 3941              	 .loc 3 796 0
 3942 002a 134B     	 ldr r3,.L171+12
 3943 002c 134A     	 ldr r2,.L171+16
 3944 002e 1A80     	 strh r2,[r3]
 797:../samuel/samuel_io.c **** 									break;
 3945              	 .loc 3 797 0
 3946 0030 1AE0     	 b .L161
 3947              	.L166:
 798:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 3948              	 .loc 3 798 0
 3949 0032 134B     	 ldr r3,.L171+20
 3950 0034 1A88     	 ldrh r2,[r3]
 3951 0036 0F4B     	 ldr r3,.L171+8
 3952 0038 1A80     	 strh r2,[r3]
 799:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 3953              	 .loc 3 799 0
 3954 003a 124B     	 ldr r3,.L171+24
 3955 003c 1A88     	 ldrh r2,[r3]
 3956 003e 0E4B     	 ldr r3,.L171+12
 3957 0040 1A80     	 strh r2,[r3]
 3958              	.L167:
 800:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 3959              	 .loc 3 800 0
 3960 0042 114B     	 ldr r3,.L171+28
 3961 0044 1A88     	 ldrh r2,[r3]
 3962 0046 0B4B     	 ldr r3,.L171+8
 3963 0048 1A80     	 strh r2,[r3]
 801:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 3964              	 .loc 3 801 0
 3965 004a 104B     	 ldr r3,.L171+32
 3966 004c 1A88     	 ldrh r2,[r3]
 3967 004e 0A4B     	 ldr r3,.L171+12
 3968 0050 1A80     	 strh r2,[r3]
 802:../samuel/samuel_io.c **** 									break;
 3969              	 .loc 3 802 0
 3970 0052 09E0     	 b .L161
 3971              	.L168:
 803:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 3972              	 .loc 3 803 0
 3973 0054 0E4B     	 ldr r3,.L171+36
 3974 0056 1A88     	 ldrh r2,[r3]
 3975 0058 064B     	 ldr r3,.L171+8
 3976 005a 1A80     	 strh r2,[r3]
 804:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 3977              	 .loc 3 804 0
 3978 005c 0D4B     	 ldr r3,.L171+40
 3979 005e 1A88     	 ldrh r2,[r3]
 3980 0060 054B     	 ldr r3,.L171+12
 3981 0062 1A80     	 strh r2,[r3]
 805:../samuel/samuel_io.c **** 									break;
 3982              	 .loc 3 805 0
 3983 0064 00E0     	 b .L161
 3984              	.L170:
 806:../samuel/samuel_io.c **** 		default:
 807:../samuel/samuel_io.c **** 									break;
 3985              	 .loc 3 807 0
 3986 0066 C046     	 mov r8,r8
 3987              	.L161:
 808:../samuel/samuel_io.c **** 		}
 809:../samuel/samuel_io.c **** 
 810:../samuel/samuel_io.c ****  }
 3988              	 .loc 3 810 0
 3989 0068 BD46     	 mov sp,r7
 3990              	 
 3991 006a 80BD     	 pop {r7,pc}
 3992              	.L172:
 3993              	 .align 2
 3994              	.L171:
 3995 006c 00000000 	 .word RegOnOff
 3996 0070 00000000 	 .word .L164
 3997 0074 00000000 	 .word dimAkt_Ww
 3998 0078 00000000 	 .word dimAkt_Cw
 3999 007c FF7F0000 	 .word 32767
 4000 0080 00000000 	 .word dimNorm1_Ww
 4001 0084 00000000 	 .word dimNorm1_Cw
 4002 0088 00000000 	 .word dimNorm2_Ww
 4003 008c 00000000 	 .word dimNorm2_Cw
 4004 0090 00000000 	 .word dimOff_Ww
 4005 0094 00000000 	 .word dimOff_Cw
 4006              	 .cfi_endproc
 4007              	.LFE328:
 4009              	 .section .text.bcuUebergabe,"ax",%progbits
 4010              	 .align 2
 4011              	 .global bcuUebergabe
 4012              	 .code 16
 4013              	 .thumb_func
 4015              	bcuUebergabe:
 4016              	.LFB329:
 811:../samuel/samuel_io.c ****  //----------------------------------
 812:../samuel/samuel_io.c **** 
 813:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 814:../samuel/samuel_io.c ****  {
 4017              	 .loc 3 814 0
 4018              	 .cfi_startproc
 4019 0000 80B5     	 push {r7,lr}
 4020              	.LCFI95:
 4021              	 .cfi_def_cfa_offset 8
 4022              	 .cfi_offset 7,-8
 4023              	 .cfi_offset 14,-4
 4024 0002 00AF     	 add r7,sp,#0
 4025              	.LCFI96:
 4026              	 .cfi_def_cfa_register 7
 815:../samuel/samuel_io.c **** 
 816:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 817:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 818:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 819:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 820:../samuel/samuel_io.c **** 
 821:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 4027              	 .loc 3 821 0
 4028 0004 204B     	 ldr r3,.L174
 4029 0006 1B88     	 ldrh r3,[r3]
 4030 0008 1A1C     	 mov r2,r3
 4031 000a 204B     	 ldr r3,.L174+4
 4032 000c 181C     	 mov r0,r3
 4033 000e 111C     	 mov r1,r2
 4034 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 822:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 4035              	 .loc 3 822 0
 4036 0014 1E4B     	 ldr r3,.L174+8
 4037 0016 1B88     	 ldrh r3,[r3]
 4038 0018 1A1C     	 mov r2,r3
 4039 001a 1E4B     	 ldr r3,.L174+12
 4040 001c 181C     	 mov r0,r3
 4041 001e 111C     	 mov r1,r2
 4042 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 823:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 4043              	 .loc 3 823 0
 4044 0024 1C4B     	 ldr r3,.L174+16
 4045 0026 1B88     	 ldrh r3,[r3]
 4046 0028 1A1C     	 mov r2,r3
 4047 002a 1C4B     	 ldr r3,.L174+20
 4048 002c 181C     	 mov r0,r3
 4049 002e 111C     	 mov r1,r2
 4050 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 824:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 4051              	 .loc 3 824 0
 4052 0034 1A4B     	 ldr r3,.L174+24
 4053 0036 1B88     	 ldrh r3,[r3]
 4054 0038 1A1C     	 mov r2,r3
 4055 003a 1A4B     	 ldr r3,.L174+28
 4056 003c 181C     	 mov r0,r3
 4057 003e 111C     	 mov r1,r2
 4058 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 825:../samuel/samuel_io.c **** 
 826:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 4059              	 .loc 3 826 0
 4060 0044 184B     	 ldr r3,.L174+32
 4061 0046 1B88     	 ldrh r3,[r3]
 4062 0048 1A1C     	 mov r2,r3
 4063 004a 104B     	 ldr r3,.L174+4
 4064 004c 181C     	 mov r0,r3
 4065 004e 111C     	 mov r1,r2
 4066 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 827:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 4067              	 .loc 3 827 0
 4068 0054 154B     	 ldr r3,.L174+36
 4069 0056 1B88     	 ldrh r3,[r3]
 4070 0058 1A1C     	 mov r2,r3
 4071 005a 0E4B     	 ldr r3,.L174+12
 4072 005c 181C     	 mov r0,r3
 4073 005e 111C     	 mov r1,r2
 4074 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 828:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 4075              	 .loc 3 828 0
 4076 0064 124B     	 ldr r3,.L174+40
 4077 0066 1B88     	 ldrh r3,[r3]
 4078 0068 1A1C     	 mov r2,r3
 4079 006a 0C4B     	 ldr r3,.L174+20
 4080 006c 181C     	 mov r0,r3
 4081 006e 111C     	 mov r1,r2
 4082 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 829:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 4083              	 .loc 3 829 0
 4084 0074 0F4B     	 ldr r3,.L174+44
 4085 0076 1B88     	 ldrh r3,[r3]
 4086 0078 1A1C     	 mov r2,r3
 4087 007a 0A4B     	 ldr r3,.L174+28
 4088 007c 181C     	 mov r0,r3
 4089 007e 111C     	 mov r1,r2
 4090 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 830:../samuel/samuel_io.c **** 
 831:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 832:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 833:../samuel/samuel_io.c **** 
 834:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 835:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 836:../samuel/samuel_io.c ****  }
 4091              	 .loc 3 836 0
 4092 0084 BD46     	 mov sp,r7
 4093              	 
 4094 0086 80BD     	 pop {r7,pc}
 4095              	.L175:
 4096              	 .align 2
 4097              	.L174:
 4098 0088 00000000 	 .word Farbe_ww2
 4099 008c 00000000 	 .word PDM_BCCU_0
 4100 0090 00000000 	 .word Farbe_cw2
 4101 0094 00000000 	 .word PDM_BCCU_1
 4102 0098 00000000 	 .word Farbe_ww1
 4103 009c 00000000 	 .word PDM_BCCU_2
 4104 00a0 00000000 	 .word Farbe_cw1
 4105 00a4 00000000 	 .word PDM_BCCU_3
 4106 00a8 00000000 	 .word linearwalk_ww2
 4107 00ac 00000000 	 .word linearwalk_cw2
 4108 00b0 00000000 	 .word linearwalk_ww1
 4109 00b4 00000000 	 .word linearwalk_cw1
 4110              	 .cfi_endproc
 4111              	.LFE329:
 4113              	 .section .text.bcuAktBerechnung,"ax",%progbits
 4114              	 .align 2
 4115              	 .global bcuAktBerechnung
 4116              	 .code 16
 4117              	 .thumb_func
 4119              	bcuAktBerechnung:
 4120              	.LFB330:
 837:../samuel/samuel_io.c ****  //----------------------------------
 838:../samuel/samuel_io.c **** 
 839:../samuel/samuel_io.c **** 
 840:../samuel/samuel_io.c ****  //----------------------------------
 841:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 842:../samuel/samuel_io.c ****   {
 4121              	 .loc 3 842 0
 4122              	 .cfi_startproc
 4123 0000 80B5     	 push {r7,lr}
 4124              	.LCFI97:
 4125              	 .cfi_def_cfa_offset 8
 4126              	 .cfi_offset 7,-8
 4127              	 .cfi_offset 14,-4
 4128 0002 82B0     	 sub sp,sp,#8
 4129              	.LCFI98:
 4130              	 .cfi_def_cfa_offset 16
 4131 0004 00AF     	 add r7,sp,#0
 4132              	.LCFI99:
 4133              	 .cfi_def_cfa_register 7
 843:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 844:../samuel/samuel_io.c **** 
 845:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4134              	 .loc 3 845 0
 4135 0006 284B     	 ldr r3,.L177
 4136 0008 1B88     	 ldrh r3,[r3]
 4137 000a 1B0A     	 lsr r3,r3,#8
 4138 000c 9AB2     	 uxth r2,r3
 4139 000e 274B     	 ldr r3,.L177+4
 4140 0010 1A80     	 strh r2,[r3]
 846:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4141              	 .loc 3 846 0
 4142 0012 254B     	 ldr r3,.L177
 4143 0014 1B88     	 ldrh r3,[r3]
 4144 0016 1B0A     	 lsr r3,r3,#8
 4145 0018 9AB2     	 uxth r2,r3
 4146 001a 254B     	 ldr r3,.L177+8
 4147 001c 1A80     	 strh r2,[r3]
 847:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4148              	 .loc 3 847 0
 4149 001e 224B     	 ldr r3,.L177
 4150 0020 1B88     	 ldrh r3,[r3]
 4151 0022 FF22     	 mov r2,#255
 4152 0024 1340     	 and r3,r2
 4153 0026 9AB2     	 uxth r2,r3
 4154 0028 224B     	 ldr r3,.L177+12
 4155 002a 1A80     	 strh r2,[r3]
 848:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4156              	 .loc 3 848 0
 4157 002c 1E4B     	 ldr r3,.L177
 4158 002e 1B88     	 ldrh r3,[r3]
 4159 0030 FF22     	 mov r2,#255
 4160 0032 1340     	 and r3,r2
 4161 0034 9AB2     	 uxth r2,r3
 4162 0036 204B     	 ldr r3,.L177+16
 4163 0038 1A80     	 strh r2,[r3]
 849:../samuel/samuel_io.c **** 
 850:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4164              	 .loc 3 850 0
 4165 003a 204B     	 ldr r3,.L177+20
 4166 003c 1B88     	 ldrh r3,[r3]
 4167 003e 1A1C     	 mov r2,r3
 4168 0040 1A4B     	 ldr r3,.L177+4
 4169 0042 1B88     	 ldrh r3,[r3]
 4170 0044 5343     	 mul r3,r2
 4171 0046 7B60     	 str r3,[r7,#4]
 851:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4172              	 .loc 3 851 0
 4173 0048 7B68     	 ldr r3,[r7,#4]
 4174 004a 1B0A     	 lsr r3,r3,#8
 4175 004c 1B09     	 lsr r3,r3,#4
 4176 004e 9AB2     	 uxth r2,r3
 4177 0050 1B4B     	 ldr r3,.L177+24
 4178 0052 1A80     	 strh r2,[r3]
 852:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4179              	 .loc 3 852 0
 4180 0054 194B     	 ldr r3,.L177+20
 4181 0056 1B88     	 ldrh r3,[r3]
 4182 0058 1A1C     	 mov r2,r3
 4183 005a 164B     	 ldr r3,.L177+12
 4184 005c 1B88     	 ldrh r3,[r3]
 4185 005e 5343     	 mul r3,r2
 4186 0060 7B60     	 str r3,[r7,#4]
 853:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4187              	 .loc 3 853 0
 4188 0062 7B68     	 ldr r3,[r7,#4]
 4189 0064 1B0A     	 lsr r3,r3,#8
 4190 0066 1B09     	 lsr r3,r3,#4
 4191 0068 9AB2     	 uxth r2,r3
 4192 006a 164B     	 ldr r3,.L177+28
 4193 006c 1A80     	 strh r2,[r3]
 854:../samuel/samuel_io.c **** 
 855:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4194              	 .loc 3 855 0
 4195 006e 164B     	 ldr r3,.L177+32
 4196 0070 1B88     	 ldrh r3,[r3]
 4197 0072 1A1C     	 mov r2,r3
 4198 0074 0E4B     	 ldr r3,.L177+8
 4199 0076 1B88     	 ldrh r3,[r3]
 4200 0078 5343     	 mul r3,r2
 4201 007a 7B60     	 str r3,[r7,#4]
 856:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4202              	 .loc 3 856 0
 4203 007c 7B68     	 ldr r3,[r7,#4]
 4204 007e 1B0A     	 lsr r3,r3,#8
 4205 0080 1B09     	 lsr r3,r3,#4
 4206 0082 9AB2     	 uxth r2,r3
 4207 0084 114B     	 ldr r3,.L177+36
 4208 0086 1A80     	 strh r2,[r3]
 857:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4209              	 .loc 3 857 0
 4210 0088 0F4B     	 ldr r3,.L177+32
 4211 008a 1B88     	 ldrh r3,[r3]
 4212 008c 1A1C     	 mov r2,r3
 4213 008e 0A4B     	 ldr r3,.L177+16
 4214 0090 1B88     	 ldrh r3,[r3]
 4215 0092 5343     	 mul r3,r2
 4216 0094 7B60     	 str r3,[r7,#4]
 858:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4217              	 .loc 3 858 0
 4218 0096 7B68     	 ldr r3,[r7,#4]
 4219 0098 1B0A     	 lsr r3,r3,#8
 4220 009a 1B09     	 lsr r3,r3,#4
 4221 009c 9AB2     	 uxth r2,r3
 4222 009e 0C4B     	 ldr r3,.L177+40
 4223 00a0 1A80     	 strh r2,[r3]
 859:../samuel/samuel_io.c ****   }
 4224              	 .loc 3 859 0
 4225 00a2 BD46     	 mov sp,r7
 4226 00a4 02B0     	 add sp,sp,#8
 4227              	 
 4228 00a6 80BD     	 pop {r7,pc}
 4229              	.L178:
 4230              	 .align 2
 4231              	.L177:
 4232 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4233 00ac 00000000 	 .word Farbe_ww1_Quot
 4234 00b0 00000000 	 .word Farbe_cw1_Quot
 4235 00b4 00000000 	 .word Farbe_ww2_Quot
 4236 00b8 00000000 	 .word Farbe_cw2_Quot
 4237 00bc 00000000 	 .word dimAkt_Ww
 4238 00c0 00000000 	 .word Farbe_ww1
 4239 00c4 00000000 	 .word Farbe_ww2
 4240 00c8 00000000 	 .word dimAkt_Cw
 4241 00cc 00000000 	 .word Farbe_cw1
 4242 00d0 00000000 	 .word Farbe_cw2
 4243              	 .cfi_endproc
 4244              	.LFE330:
 4246              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4247              	 .align 2
 4248              	 .global bcudirAktBerechnung
 4249              	 .code 16
 4250              	 .thumb_func
 4252              	bcudirAktBerechnung:
 4253              	.LFB331:
 860:../samuel/samuel_io.c **** 
 861:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 862:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 863:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 864:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 865:../samuel/samuel_io.c **** 
 866:../samuel/samuel_io.c ****   {
 4254              	 .loc 3 866 0
 4255              	 .cfi_startproc
 4256 0000 80B5     	 push {r7,lr}
 4257              	.LCFI100:
 4258              	 .cfi_def_cfa_offset 8
 4259              	 .cfi_offset 7,-8
 4260              	 .cfi_offset 14,-4
 4261 0002 82B0     	 sub sp,sp,#8
 4262              	.LCFI101:
 4263              	 .cfi_def_cfa_offset 16
 4264 0004 00AF     	 add r7,sp,#0
 4265              	.LCFI102:
 4266              	 .cfi_def_cfa_register 7
 867:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 868:../samuel/samuel_io.c **** 
 869:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4267              	 .loc 3 869 0
 4268 0006 2A4B     	 ldr r3,.L180
 4269 0008 0122     	 mov r2,#1
 4270 000a 5242     	 neg r2,r2
 4271 000c 1A80     	 strh r2,[r3]
 870:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4272              	 .loc 3 870 0
 4273 000e 284B     	 ldr r3,.L180
 4274 0010 1B88     	 ldrh r3,[r3]
 4275 0012 1B0A     	 lsr r3,r3,#8
 4276 0014 9AB2     	 uxth r2,r3
 4277 0016 274B     	 ldr r3,.L180+4
 4278 0018 1A80     	 strh r2,[r3]
 871:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4279              	 .loc 3 871 0
 4280 001a 254B     	 ldr r3,.L180
 4281 001c 1B88     	 ldrh r3,[r3]
 4282 001e 1B0A     	 lsr r3,r3,#8
 4283 0020 9AB2     	 uxth r2,r3
 4284 0022 254B     	 ldr r3,.L180+8
 4285 0024 1A80     	 strh r2,[r3]
 872:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4286              	 .loc 3 872 0
 4287 0026 224B     	 ldr r3,.L180
 4288 0028 1B88     	 ldrh r3,[r3]
 4289 002a FF22     	 mov r2,#255
 4290 002c 1340     	 and r3,r2
 4291 002e 9AB2     	 uxth r2,r3
 4292 0030 224B     	 ldr r3,.L180+12
 4293 0032 1A80     	 strh r2,[r3]
 873:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4294              	 .loc 3 873 0
 4295 0034 1E4B     	 ldr r3,.L180
 4296 0036 1B88     	 ldrh r3,[r3]
 4297 0038 FF22     	 mov r2,#255
 4298 003a 1340     	 and r3,r2
 4299 003c 9AB2     	 uxth r2,r3
 4300 003e 204B     	 ldr r3,.L180+16
 4301 0040 1A80     	 strh r2,[r3]
 874:../samuel/samuel_io.c **** 
 875:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4302              	 .loc 3 875 0
 4303 0042 204B     	 ldr r3,.L180+20
 4304 0044 1B88     	 ldrh r3,[r3]
 4305 0046 1A1C     	 mov r2,r3
 4306 0048 1A4B     	 ldr r3,.L180+4
 4307 004a 1B88     	 ldrh r3,[r3]
 4308 004c 5343     	 mul r3,r2
 4309 004e 7B60     	 str r3,[r7,#4]
 876:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4310              	 .loc 3 876 0
 4311 0050 7B68     	 ldr r3,[r7,#4]
 4312 0052 1B0A     	 lsr r3,r3,#8
 4313 0054 1B09     	 lsr r3,r3,#4
 4314 0056 9AB2     	 uxth r2,r3
 4315 0058 1B4B     	 ldr r3,.L180+24
 4316 005a 1A80     	 strh r2,[r3]
 877:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4317              	 .loc 3 877 0
 4318 005c 194B     	 ldr r3,.L180+20
 4319 005e 1B88     	 ldrh r3,[r3]
 4320 0060 1A1C     	 mov r2,r3
 4321 0062 164B     	 ldr r3,.L180+12
 4322 0064 1B88     	 ldrh r3,[r3]
 4323 0066 5343     	 mul r3,r2
 4324 0068 7B60     	 str r3,[r7,#4]
 878:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4325              	 .loc 3 878 0
 4326 006a 7B68     	 ldr r3,[r7,#4]
 4327 006c 1B0A     	 lsr r3,r3,#8
 4328 006e 1B09     	 lsr r3,r3,#4
 4329 0070 9AB2     	 uxth r2,r3
 4330 0072 164B     	 ldr r3,.L180+28
 4331 0074 1A80     	 strh r2,[r3]
 879:../samuel/samuel_io.c **** 
 880:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4332              	 .loc 3 880 0
 4333 0076 164B     	 ldr r3,.L180+32
 4334 0078 1B88     	 ldrh r3,[r3]
 4335 007a 1A1C     	 mov r2,r3
 4336 007c 0E4B     	 ldr r3,.L180+8
 4337 007e 1B88     	 ldrh r3,[r3]
 4338 0080 5343     	 mul r3,r2
 4339 0082 7B60     	 str r3,[r7,#4]
 881:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4340              	 .loc 3 881 0
 4341 0084 7B68     	 ldr r3,[r7,#4]
 4342 0086 1B0A     	 lsr r3,r3,#8
 4343 0088 1B09     	 lsr r3,r3,#4
 4344 008a 9AB2     	 uxth r2,r3
 4345 008c 114B     	 ldr r3,.L180+36
 4346 008e 1A80     	 strh r2,[r3]
 882:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4347              	 .loc 3 882 0
 4348 0090 0F4B     	 ldr r3,.L180+32
 4349 0092 1B88     	 ldrh r3,[r3]
 4350 0094 1A1C     	 mov r2,r3
 4351 0096 0A4B     	 ldr r3,.L180+16
 4352 0098 1B88     	 ldrh r3,[r3]
 4353 009a 5343     	 mul r3,r2
 4354 009c 7B60     	 str r3,[r7,#4]
 883:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4355              	 .loc 3 883 0
 4356 009e 7B68     	 ldr r3,[r7,#4]
 4357 00a0 1B0A     	 lsr r3,r3,#8
 4358 00a2 1B09     	 lsr r3,r3,#4
 4359 00a4 9AB2     	 uxth r2,r3
 4360 00a6 0C4B     	 ldr r3,.L180+40
 4361 00a8 1A80     	 strh r2,[r3]
 884:../samuel/samuel_io.c ****   }
 4362              	 .loc 3 884 0
 4363 00aa BD46     	 mov sp,r7
 4364 00ac 02B0     	 add sp,sp,#8
 4365              	 
 4366 00ae 80BD     	 pop {r7,pc}
 4367              	.L181:
 4368              	 .align 2
 4369              	.L180:
 4370 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4371 00b4 00000000 	 .word Farbe_ww1_Quot
 4372 00b8 00000000 	 .word Farbe_cw1_Quot
 4373 00bc 00000000 	 .word Farbe_ww2_Quot
 4374 00c0 00000000 	 .word Farbe_cw2_Quot
 4375 00c4 00000000 	 .word dimAkt_Ww
 4376 00c8 00000000 	 .word Farbe_ww1
 4377 00cc 00000000 	 .word Farbe_ww2
 4378 00d0 00000000 	 .word dimAkt_Cw
 4379 00d4 00000000 	 .word Farbe_cw1
 4380 00d8 00000000 	 .word Farbe_cw2
 4381              	 .cfi_endproc
 4382              	.LFE331:
 4384              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4385              	 .align 2
 4386              	 .global bcuColorBerechnung
 4387              	 .code 16
 4388              	 .thumb_func
 4390              	bcuColorBerechnung:
 4391              	.LFB332:
 885:../samuel/samuel_io.c ****  //----------------------------------
 886:../samuel/samuel_io.c **** 
 887:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 888:../samuel/samuel_io.c ****   {
 4392              	 .loc 3 888 0
 4393              	 .cfi_startproc
 4394 0000 80B5     	 push {r7,lr}
 4395              	.LCFI103:
 4396              	 .cfi_def_cfa_offset 8
 4397              	 .cfi_offset 7,-8
 4398              	 .cfi_offset 14,-4
 4399 0002 82B0     	 sub sp,sp,#8
 4400              	.LCFI104:
 4401              	 .cfi_def_cfa_offset 16
 4402 0004 00AF     	 add r7,sp,#0
 4403              	.LCFI105:
 4404              	 .cfi_def_cfa_register 7
 889:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 890:../samuel/samuel_io.c **** 
 891:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4405              	 .loc 3 891 0
 4406 0006 1E4B     	 ldr r3,.L183
 4407 0008 0122     	 mov r2,#1
 4408 000a 5242     	 neg r2,r2
 4409 000c 1A80     	 strh r2,[r3]
 892:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4410              	 .loc 3 892 0
 4411 000e 1C4B     	 ldr r3,.L183
 4412 0010 1B88     	 ldrh r3,[r3]
 4413 0012 1A1C     	 mov r2,r3
 4414 0014 1B4B     	 ldr r3,.L183+4
 4415 0016 1B88     	 ldrh r3,[r3]
 4416 0018 5343     	 mul r3,r2
 4417 001a 7B60     	 str r3,[r7,#4]
 893:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4418              	 .loc 3 893 0
 4419 001c 7B68     	 ldr r3,[r7,#4]
 4420 001e 1B0C     	 lsr r3,r3,#16
 4421 0020 7B60     	 str r3,[r7,#4]
 894:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4422              	 .loc 3 894 0
 4423 0022 194B     	 ldr r3,.L183+8
 4424 0024 1B88     	 ldrh r3,[r3]
 4425 0026 1A1C     	 mov r2,r3
 4426 0028 184B     	 ldr r3,.L183+12
 4427 002a 9B1A     	 sub r3,r3,r2
 4428 002c 1A1C     	 mov r2,r3
 4429 002e 7B68     	 ldr r3,[r7,#4]
 4430 0030 5343     	 mul r3,r2
 4431 0032 7B60     	 str r3,[r7,#4]
 895:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4432              	 .loc 3 895 0
 4433 0034 7B68     	 ldr r3,[r7,#4]
 4434 0036 1B0C     	 lsr r3,r3,#16
 4435 0038 7B60     	 str r3,[r7,#4]
 896:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4436              	 .loc 3 896 0
 4437 003a 7B68     	 ldr r3,[r7,#4]
 4438 003c 9AB2     	 uxth r2,r3
 4439 003e 104B     	 ldr r3,.L183
 4440 0040 1A80     	 strh r2,[r3]
 897:../samuel/samuel_io.c **** 
 898:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4441              	 .loc 3 898 0
 4442 0042 134B     	 ldr r3,.L183+16
 4443 0044 0122     	 mov r2,#1
 4444 0046 5242     	 neg r2,r2
 4445 0048 1A80     	 strh r2,[r3]
 899:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4446              	 .loc 3 899 0
 4447 004a 114B     	 ldr r3,.L183+16
 4448 004c 1B88     	 ldrh r3,[r3]
 4449 004e 1A1C     	 mov r2,r3
 4450 0050 0C4B     	 ldr r3,.L183+4
 4451 0052 1B88     	 ldrh r3,[r3]
 4452 0054 5343     	 mul r3,r2
 4453 0056 7B60     	 str r3,[r7,#4]
 900:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4454              	 .loc 3 900 0
 4455 0058 7B68     	 ldr r3,[r7,#4]
 4456 005a 1B0C     	 lsr r3,r3,#16
 4457 005c 7B60     	 str r3,[r7,#4]
 901:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4458              	 .loc 3 901 0
 4459 005e 0A4B     	 ldr r3,.L183+8
 4460 0060 1B88     	 ldrh r3,[r3]
 4461 0062 1A1C     	 mov r2,r3
 4462 0064 7B68     	 ldr r3,[r7,#4]
 4463 0066 5343     	 mul r3,r2
 4464 0068 7B60     	 str r3,[r7,#4]
 902:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4465              	 .loc 3 902 0
 4466 006a 7B68     	 ldr r3,[r7,#4]
 4467 006c 1B0C     	 lsr r3,r3,#16
 4468 006e 7B60     	 str r3,[r7,#4]
 903:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4469              	 .loc 3 903 0
 4470 0070 7B68     	 ldr r3,[r7,#4]
 4471 0072 9AB2     	 uxth r2,r3
 4472 0074 064B     	 ldr r3,.L183+16
 4473 0076 1A80     	 strh r2,[r3]
 904:../samuel/samuel_io.c ****   }
 4474              	 .loc 3 904 0
 4475 0078 BD46     	 mov sp,r7
 4476 007a 02B0     	 add sp,sp,#8
 4477              	 
 4478 007c 80BD     	 pop {r7,pc}
 4479              	.L184:
 4480 007e C046     	 .align 2
 4481              	.L183:
 4482 0080 00000000 	 .word dimAkt_Ww
 4483 0084 00000000 	 .word Brightness_Gen
 4484 0088 00000000 	 .word ColorQuot_Gen
 4485 008c FFFF0000 	 .word 65535
 4486 0090 00000000 	 .word dimAkt_Cw
 4487              	 .cfi_endproc
 4488              	.LFE332:
 4490              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4491              	 .align 2
 4492              	 .global Offlight_zahler_write
 4493              	 .code 16
 4494              	 .thumb_func
 4496              	Offlight_zahler_write:
 4497              	.LFB333:
 905:../samuel/samuel_io.c ****  //----------------------------------
 906:../samuel/samuel_io.c **** 
 907:../samuel/samuel_io.c **** 
 908:../samuel/samuel_io.c **** 
 909:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 910:../samuel/samuel_io.c ****  {
 4498              	 .loc 3 910 0
 4499              	 .cfi_startproc
 4500 0000 80B5     	 push {r7,lr}
 4501              	.LCFI106:
 4502              	 .cfi_def_cfa_offset 8
 4503              	 .cfi_offset 7,-8
 4504              	 .cfi_offset 14,-4
 4505 0002 82B0     	 sub sp,sp,#8
 4506              	.LCFI107:
 4507              	 .cfi_def_cfa_offset 16
 4508 0004 00AF     	 add r7,sp,#0
 4509              	.LCFI108:
 4510              	 .cfi_def_cfa_register 7
 911:../samuel/samuel_io.c ****      uint8_t a;
 912:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4511              	 .loc 3 912 0
 4512 0006 3B4B     	 ldr r3,.L191
 4513 0008 1B78     	 ldrb r3,[r3]
 4514 000a 052B     	 cmp r3,#5
 4515 000c 00D0     	 beq .LCB3748
 4516 000e 6EE0     	 b .L185
 4517              	.LCB3748:
 913:../samuel/samuel_io.c **** 	 {
 914:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4518              	 .loc 3 914 0
 4519 0010 394B     	 ldr r3,.L191+4
 4520 0012 1B88     	 ldrh r3,[r3]
 4521 0014 0133     	 add r3,r3,#1
 4522 0016 9AB2     	 uxth r2,r3
 4523 0018 374B     	 ldr r3,.L191+4
 4524 001a 1A80     	 strh r2,[r3]
 915:../samuel/samuel_io.c **** 
 916:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4525              	 .loc 3 916 0
 4526 001c 364B     	 ldr r3,.L191+4
 4527 001e 1B88     	 ldrh r3,[r3]
 4528 0020 3B2B     	 cmp r3,#59
 4529 0022 64D9     	 bls .L185
 917:../samuel/samuel_io.c **** 	  {
 918:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4530              	 .loc 3 918 0
 4531 0024 344B     	 ldr r3,.L191+4
 4532 0026 0022     	 mov r2,#0
 4533 0028 1A80     	 strh r2,[r3]
 919:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4534              	 .loc 3 919 0
 4535 002a FFF7FEFF 	 bl read_off_light_EEprom
 4536 002e 021C     	 mov r2,r0
 4537 0030 FB1D     	 add r3,r7,#7
 4538 0032 1A70     	 strb r2,[r3]
 920:../samuel/samuel_io.c **** 			if (a == 0x03)
 4539              	 .loc 3 920 0
 4540 0034 FB1D     	 add r3,r7,#7
 4541 0036 1B78     	 ldrb r3,[r3]
 4542 0038 032B     	 cmp r3,#3
 4543 003a 52D1     	 bne .L187
 921:../samuel/samuel_io.c **** 			{
 922:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4544              	 .loc 3 922 0
 4545 003c 2F4B     	 ldr r3,.L191+8
 4546 003e 1A88     	 ldrh r2,[r3]
 4547 0040 2F4B     	 ldr r3,.L191+12
 4548 0042 1A80     	 strh r2,[r3]
 923:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4549              	 .loc 3 923 0
 4550 0044 2F4B     	 ldr r3,.L191+16
 4551 0046 1A88     	 ldrh r2,[r3]
 4552 0048 2F4B     	 ldr r3,.L191+20
 4553 004a 1A80     	 strh r2,[r3]
 924:../samuel/samuel_io.c **** 
 925:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4554              	 .loc 3 925 0
 4555 004c 2F4B     	 ldr r3,.L191+24
 4556 004e 1B79     	 ldrb r3,[r3,#4]
 4557 0050 9AB2     	 uxth r2,r3
 4558 0052 2B4B     	 ldr r3,.L191+12
 4559 0054 1B88     	 ldrh r3,[r3]
 4560 0056 1B0A     	 lsr r3,r3,#8
 4561 0058 9BB2     	 uxth r3,r3
 4562 005a 9A42     	 cmp r2,r3
 4563 005c 20D1     	 bne .L188
 4564              	 .loc 3 925 0 is_stmt 0 discriminator 1
 4565 005e 2B4B     	 ldr r3,.L191+24
 4566 0060 5B79     	 ldrb r3,[r3,#5]
 4567 0062 1A1C     	 mov r2,r3
 4568 0064 264B     	 ldr r3,.L191+12
 4569 0066 1B88     	 ldrh r3,[r3]
 4570 0068 191C     	 mov r1,r3
 4571 006a FF23     	 mov r3,#255
 4572 006c 0B40     	 and r3,r1
 4573 006e 9A42     	 cmp r2,r3
 4574 0070 16D1     	 bne .L188
 4575              	 .loc 3 925 0 discriminator 2
 4576 0072 264B     	 ldr r3,.L191+24
 4577 0074 9B79     	 ldrb r3,[r3,#6]
 4578 0076 9AB2     	 uxth r2,r3
 4579 0078 234B     	 ldr r3,.L191+20
 4580 007a 1B88     	 ldrh r3,[r3]
 4581 007c 1B0A     	 lsr r3,r3,#8
 4582 007e 9BB2     	 uxth r3,r3
 4583 0080 9A42     	 cmp r2,r3
 4584 0082 0DD1     	 bne .L188
 4585              	 .loc 3 925 0 discriminator 3
 4586 0084 214B     	 ldr r3,.L191+24
 4587 0086 DB79     	 ldrb r3,[r3,#7]
 4588 0088 1A1C     	 mov r2,r3
 4589 008a 1F4B     	 ldr r3,.L191+20
 4590 008c 1B88     	 ldrh r3,[r3]
 4591 008e 191C     	 mov r1,r3
 4592 0090 FF23     	 mov r3,#255
 4593 0092 0B40     	 and r3,r1
 4594 0094 9A42     	 cmp r2,r3
 4595 0096 03D1     	 bne .L188
 926:../samuel/samuel_io.c **** 			 {
 927:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4596              	 .loc 3 927 0 is_stmt 1
 4597 0098 174B     	 ldr r3,.L191+4
 4598 009a 0022     	 mov r2,#0
 4599 009c 1A80     	 strh r2,[r3]
 4600 009e 23E0     	 b .L190
 4601              	.L188:
 928:../samuel/samuel_io.c **** 			 }
 929:../samuel/samuel_io.c **** 			 else{
 930:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4602              	 .loc 3 930 0
 4603 00a0 174B     	 ldr r3,.L191+12
 4604 00a2 1B88     	 ldrh r3,[r3]
 4605 00a4 1B0A     	 lsr r3,r3,#8
 4606 00a6 9BB2     	 uxth r3,r3
 4607 00a8 DAB2     	 uxtb r2,r3
 4608 00aa 184B     	 ldr r3,.L191+24
 4609 00ac 1A71     	 strb r2,[r3,#4]
 931:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4610              	 .loc 3 931 0
 4611 00ae 144B     	 ldr r3,.L191+12
 4612 00b0 1B88     	 ldrh r3,[r3]
 4613 00b2 DAB2     	 uxtb r2,r3
 4614 00b4 154B     	 ldr r3,.L191+24
 4615 00b6 5A71     	 strb r2,[r3,#5]
 932:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4616              	 .loc 3 932 0
 4617 00b8 134B     	 ldr r3,.L191+20
 4618 00ba 1B88     	 ldrh r3,[r3]
 4619 00bc 1B0A     	 lsr r3,r3,#8
 4620 00be 9BB2     	 uxth r3,r3
 4621 00c0 DAB2     	 uxtb r2,r3
 4622 00c2 124B     	 ldr r3,.L191+24
 4623 00c4 9A71     	 strb r2,[r3,#6]
 933:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4624              	 .loc 3 933 0
 4625 00c6 104B     	 ldr r3,.L191+20
 4626 00c8 1B88     	 ldrh r3,[r3]
 4627 00ca DAB2     	 uxtb r2,r3
 4628 00cc 0F4B     	 ldr r3,.L191+24
 4629 00ce DA71     	 strb r2,[r3,#7]
 934:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4630              	 .loc 3 934 0
 4631 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4632 00d4 021C     	 mov r2,r0
 4633 00d6 FB1D     	 add r3,r7,#7
 4634 00d8 1A70     	 strb r2,[r3]
 935:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4635              	 .loc 3 935 0
 4636 00da 074B     	 ldr r3,.L191+4
 4637 00dc 0022     	 mov r2,#0
 4638 00de 1A80     	 strh r2,[r3]
 4639 00e0 02E0     	 b .L190
 4640              	.L187:
 936:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 937:../samuel/samuel_io.c **** 			 }
 938:../samuel/samuel_io.c **** 			}
 939:../samuel/samuel_io.c **** 			else {
 940:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4641              	 .loc 3 940 0
 4642 00e2 054B     	 ldr r3,.L191+4
 4643 00e4 1E22     	 mov r2,#30
 4644 00e6 1A80     	 strh r2,[r3]
 4645              	.L190:
 941:../samuel/samuel_io.c **** 			}
 942:../samuel/samuel_io.c **** 
 943:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4646              	 .loc 3 943 0
 4647 00e8 034B     	 ldr r3,.L191+4
 4648 00ea 0022     	 mov r2,#0
 4649 00ec 1A80     	 strh r2,[r3]
 4650              	.L185:
 944:../samuel/samuel_io.c **** 	  }//zahler_offlight
 945:../samuel/samuel_io.c **** 	 }//regonoff
 946:../samuel/samuel_io.c ****  }
 4651              	 .loc 3 946 0
 4652 00ee BD46     	 mov sp,r7
 4653 00f0 02B0     	 add sp,sp,#8
 4654              	 
 4655 00f2 80BD     	 pop {r7,pc}
 4656              	.L192:
 4657              	 .align 2
 4658              	.L191:
 4659 00f4 00000000 	 .word RegOnOff
 4660 00f8 00000000 	 .word zahler_offlight
 4661 00fc 00000000 	 .word dimAkt_Ww
 4662 0100 00000000 	 .word dimOff_Ww
 4663 0104 00000000 	 .word dimAkt_Cw
 4664 0108 00000000 	 .word dimOff_Cw
 4665 010c 00000000 	 .word ReadBuffer2
 4666              	 .cfi_endproc
 4667              	.LFE333:
 4669              	 .section .text.plus39V_stop,"ax",%progbits
 4670              	 .align 2
 4671              	 .global plus39V_stop
 4672              	 .code 16
 4673              	 .thumb_func
 4675              	plus39V_stop:
 4676              	.LFB334:
 947:../samuel/samuel_io.c **** 
 948:../samuel/samuel_io.c ****  //----------------------------------------------------
 949:../samuel/samuel_io.c **** 
 950:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
 951:../samuel/samuel_io.c ****   {
 4677              	 .loc 3 951 0
 4678              	 .cfi_startproc
 4679 0000 80B5     	 push {r7,lr}
 4680              	.LCFI109:
 4681              	 .cfi_def_cfa_offset 8
 4682              	 .cfi_offset 7,-8
 4683              	 .cfi_offset 14,-4
 4684 0002 00AF     	 add r7,sp,#0
 4685              	.LCFI110:
 4686              	 .cfi_def_cfa_register 7
 952:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 953:../samuel/samuel_io.c **** 
 954:../samuel/samuel_io.c **** 
 955:../samuel/samuel_io.c ****   }
 4687              	 .loc 3 955 0
 4688 0004 BD46     	 mov sp,r7
 4689              	 
 4690 0006 80BD     	 pop {r7,pc}
 4691              	 .cfi_endproc
 4692              	.LFE334:
 4694              	 .section .text.plus39V_start,"ax",%progbits
 4695              	 .align 2
 4696              	 .global plus39V_start
 4697              	 .code 16
 4698              	 .thumb_func
 4700              	plus39V_start:
 4701              	.LFB335:
 956:../samuel/samuel_io.c **** 
 957:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
 958:../samuel/samuel_io.c ****   {
 4702              	 .loc 3 958 0
 4703              	 .cfi_startproc
 4704 0000 80B5     	 push {r7,lr}
 4705              	.LCFI111:
 4706              	 .cfi_def_cfa_offset 8
 4707              	 .cfi_offset 7,-8
 4708              	 .cfi_offset 14,-4
 4709 0002 00AF     	 add r7,sp,#0
 4710              	.LCFI112:
 4711              	 .cfi_def_cfa_register 7
 959:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 960:../samuel/samuel_io.c **** 
 961:../samuel/samuel_io.c ****   }
 4712              	 .loc 3 961 0
 4713 0004 BD46     	 mov sp,r7
 4714              	 
 4715 0006 80BD     	 pop {r7,pc}
 4716              	 .cfi_endproc
 4717              	.LFE335:
 4719              	 .section .text.Time1msec,"ax",%progbits
 4720              	 .align 2
 4721              	 .global Time1msec
 4722              	 .code 16
 4723              	 .thumb_func
 4725              	Time1msec:
 4726              	.LFB336:
 962:../samuel/samuel_io.c **** 
 963:../samuel/samuel_io.c ****  //----------------------------------
 964:../samuel/samuel_io.c **** 
 965:../samuel/samuel_io.c ****   void Time1msec (void) //
 966:../samuel/samuel_io.c ****   {
 4727              	 .loc 3 966 0
 4728              	 .cfi_startproc
 4729 0000 80B5     	 push {r7,lr}
 4730              	.LCFI113:
 4731              	 .cfi_def_cfa_offset 8
 4732              	 .cfi_offset 7,-8
 4733              	 .cfi_offset 14,-4
 4734 0002 00AF     	 add r7,sp,#0
 4735              	.LCFI114:
 4736              	 .cfi_def_cfa_register 7
 967:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4737              	 .loc 3 967 0
 4738 0004 024B     	 ldr r3,.L196
 4739 0006 181C     	 mov r0,r3
 4740 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
 968:../samuel/samuel_io.c **** 
 969:../samuel/samuel_io.c ****   }
 4741              	 .loc 3 969 0
 4742 000c BD46     	 mov sp,r7
 4743              	 
 4744 000e 80BD     	 pop {r7,pc}
 4745              	.L197:
 4746              	 .align 2
 4747              	.L196:
 4748 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4749              	 .cfi_endproc
 4750              	.LFE336:
 4752              	 .section .text.Time20msec,"ax",%progbits
 4753              	 .align 2
 4754              	 .global Time20msec
 4755              	 .code 16
 4756              	 .thumb_func
 4758              	Time20msec:
 4759              	.LFB337:
 970:../samuel/samuel_io.c ****   //----------------------------------
 971:../samuel/samuel_io.c **** 
 972:../samuel/samuel_io.c ****    void Time20msec (void) //
 973:../samuel/samuel_io.c ****    {
 4760              	 .loc 3 973 0
 4761              	 .cfi_startproc
 4762 0000 80B5     	 push {r7,lr}
 4763              	.LCFI115:
 4764              	 .cfi_def_cfa_offset 8
 4765              	 .cfi_offset 7,-8
 4766              	 .cfi_offset 14,-4
 4767 0002 00AF     	 add r7,sp,#0
 4768              	.LCFI116:
 4769              	 .cfi_def_cfa_register 7
 974:../samuel/samuel_io.c **** 
 975:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 976:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 4770              	 .loc 3 976 0
 4771 0004 364B     	 ldr r3,.L205
 4772 0006 1B88     	 ldrh r3,[r3]
 4773 0008 1A1C     	 mov r2,r3
 4774 000a 131C     	 mov r3,r2
 4775 000c 5B00     	 lsl r3,r3,#1
 4776 000e 9B18     	 add r3,r3,r2
 4777 0010 344A     	 ldr r2,.L205+4
 4778 0012 1288     	 ldrh r2,[r2]
 4779 0014 9B18     	 add r3,r3,r2
 4780 0016 002B     	 cmp r3,#0
 4781 0018 00DA     	 bge .L199
 4782 001a 0333     	 add r3,r3,#3
 4783              	.L199:
 4784 001c 9B10     	 asr r3,r3,#2
 4785 001e 9AB2     	 uxth r2,r3
 4786 0020 2F4B     	 ldr r3,.L205
 4787 0022 1A80     	 strh r2,[r3]
 977:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 4788              	 .loc 3 977 0
 4789 0024 304B     	 ldr r3,.L205+8
 4790 0026 1B88     	 ldrh r3,[r3]
 4791 0028 1A1C     	 mov r2,r3
 4792 002a 131C     	 mov r3,r2
 4793 002c 5B00     	 lsl r3,r3,#1
 4794 002e 9B18     	 add r3,r3,r2
 4795 0030 2E4A     	 ldr r2,.L205+12
 4796 0032 1288     	 ldrh r2,[r2]
 4797 0034 9B18     	 add r3,r3,r2
 4798 0036 002B     	 cmp r3,#0
 4799 0038 00DA     	 bge .L200
 4800 003a 0333     	 add r3,r3,#3
 4801              	.L200:
 4802 003c 9B10     	 asr r3,r3,#2
 4803 003e 9AB2     	 uxth r2,r3
 4804 0040 294B     	 ldr r3,.L205+8
 4805 0042 1A80     	 strh r2,[r3]
 978:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 4806              	 .loc 3 978 0
 4807 0044 2A4B     	 ldr r3,.L205+16
 4808 0046 1B88     	 ldrh r3,[r3]
 4809 0048 1A1C     	 mov r2,r3
 4810 004a 131C     	 mov r3,r2
 4811 004c 5B00     	 lsl r3,r3,#1
 4812 004e 9B18     	 add r3,r3,r2
 4813 0050 284A     	 ldr r2,.L205+20
 4814 0052 1288     	 ldrh r2,[r2]
 4815 0054 9B18     	 add r3,r3,r2
 4816 0056 002B     	 cmp r3,#0
 4817 0058 00DA     	 bge .L201
 4818 005a 0333     	 add r3,r3,#3
 4819              	.L201:
 4820 005c 9B10     	 asr r3,r3,#2
 4821 005e 9AB2     	 uxth r2,r3
 4822 0060 234B     	 ldr r3,.L205+16
 4823 0062 1A80     	 strh r2,[r3]
 979:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 4824              	 .loc 3 979 0
 4825 0064 244B     	 ldr r3,.L205+24
 4826 0066 1B88     	 ldrh r3,[r3]
 4827 0068 1A1C     	 mov r2,r3
 4828 006a 131C     	 mov r3,r2
 4829 006c 5B00     	 lsl r3,r3,#1
 4830 006e 9B18     	 add r3,r3,r2
 4831 0070 224A     	 ldr r2,.L205+28
 4832 0072 1288     	 ldrh r2,[r2]
 4833 0074 9B18     	 add r3,r3,r2
 4834 0076 002B     	 cmp r3,#0
 4835 0078 00DA     	 bge .L202
 4836 007a 0333     	 add r3,r3,#3
 4837              	.L202:
 4838 007c 9B10     	 asr r3,r3,#2
 4839 007e 9AB2     	 uxth r2,r3
 4840 0080 1D4B     	 ldr r3,.L205+24
 4841 0082 1A80     	 strh r2,[r3]
 980:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 4842              	 .loc 3 980 0
 4843 0084 1E4B     	 ldr r3,.L205+32
 4844 0086 1B88     	 ldrh r3,[r3]
 4845 0088 0133     	 add r3,r3,#1
 4846 008a 9AB2     	 uxth r2,r3
 4847 008c 1C4B     	 ldr r3,.L205+32
 4848 008e 1A80     	 strh r2,[r3]
 981:../samuel/samuel_io.c **** 
 982:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 4849              	 .loc 3 982 0
 4850 0090 1B4B     	 ldr r3,.L205+32
 4851 0092 1B88     	 ldrh r3,[r3]
 4852 0094 052B     	 cmp r3,#5
 4853 0096 21D9     	 bls .L198
 983:../samuel/samuel_io.c ****       {
 984:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
 985:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 4854              	 .loc 3 985 0
 4855 0098 194B     	 ldr r3,.L205+32
 4856 009a 0022     	 mov r2,#0
 4857 009c 1A80     	 strh r2,[r3]
 986:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 4858              	 .loc 3 986 0
 4859 009e 104B     	 ldr r3,.L205
 4860 00a0 1B88     	 ldrh r3,[r3]
 4861 00a2 184A     	 ldr r2,.L205+36
 4862 00a4 9342     	 cmp r3,r2
 4863 00a6 09D8     	 bhi .L204
 987:../samuel/samuel_io.c ****      	     {
 988:../samuel/samuel_io.c ****      	     plus39V_stop();
 4864              	 .loc 3 988 0
 4865 00a8 FFF7FEFF 	 bl plus39V_stop
 989:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 4866              	 .loc 3 989 0
 4867 00ac 164B     	 ldr r3,.L205+40
 4868 00ae 0022     	 mov r2,#0
 4869 00b0 1A70     	 strb r2,[r3]
 990:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 4870              	 .loc 3 990 0
 4871 00b2 164B     	 ldr r3,.L205+44
 4872 00b4 181C     	 mov r0,r3
 4873 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4874 00ba 0FE0     	 b .L198
 4875              	.L204:
 991:../samuel/samuel_io.c ****      	     }
 992:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 4876              	 .loc 3 992 0
 4877 00bc 084B     	 ldr r3,.L205
 4878 00be 1A88     	 ldrh r2,[r3]
 4879 00c0 BF23     	 mov r3,#191
 4880 00c2 1B01     	 lsl r3,r3,#4
 4881 00c4 9A42     	 cmp r2,r3
 4882 00c6 09D9     	 bls .L198
 993:../samuel/samuel_io.c ****  			 {
 994:../samuel/samuel_io.c ****      	     plus39V_start();
 4883              	 .loc 3 994 0
 4884 00c8 FFF7FEFF 	 bl plus39V_start
 995:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 4885              	 .loc 3 995 0
 4886 00cc 0E4B     	 ldr r3,.L205+40
 4887 00ce 1B78     	 ldrb r3,[r3]
 4888 00d0 002B     	 cmp r3,#0
 4889 00d2 03D1     	 bne .L198
 996:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 4890              	 .loc 3 996 0
 4891 00d4 0D4B     	 ldr r3,.L205+44
 4892 00d6 181C     	 mov r0,r3
 4893 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4894              	.L198:
 997:../samuel/samuel_io.c ****  			 }
 998:../samuel/samuel_io.c ****       }
 999:../samuel/samuel_io.c **** 
1000:../samuel/samuel_io.c **** 
1001:../samuel/samuel_io.c ****    }
 4895              	 .loc 3 1001 0
 4896 00dc BD46     	 mov sp,r7
 4897              	 
 4898 00de 80BD     	 pop {r7,pc}
 4899              	.L206:
 4900              	 .align 2
 4901              	.L205:
 4902 00e0 00000000 	 .word resultA2
 4903 00e4 00000000 	 .word resultAalt
 4904 00e8 00000000 	 .word resultB2
 4905 00ec 00000000 	 .word resultBalt
 4906 00f0 00000000 	 .word resultC2
 4907 00f4 00000000 	 .word resultCalt
 4908 00f8 00000000 	 .word resultD2
 4909 00fc 00000000 	 .word resultDalt
 4910 0100 00000000 	 .word adc_ready20m
 4911 0104 9F0B0000 	 .word 2975
 4912 0108 00000000 	 .word B_nextLedOff
 4913 010c 00000000 	 .word VCC_LED_shtdwn
 4914              	 .cfi_endproc
 4915              	.LFE337:
 4917              	 .section .text.firstuartBack,"ax",%progbits
 4918              	 .align 2
 4919              	 .global firstuartBack
 4920              	 .code 16
 4921              	 .thumb_func
 4923              	firstuartBack:
 4924              	.LFB338:
1002:../samuel/samuel_io.c ****   //------------------------------
1003:../samuel/samuel_io.c **** 
1004:../samuel/samuel_io.c ****    void firstuartBack (void) //
1005:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 4925              	 .loc 3 1005 0
 4926              	 .cfi_startproc
 4927 0000 98B5     	 push {r3,r4,r7,lr}
 4928              	.LCFI117:
 4929              	 .cfi_def_cfa_offset 16
 4930              	 .cfi_offset 3,-16
 4931              	 .cfi_offset 4,-12
 4932              	 .cfi_offset 7,-8
 4933              	 .cfi_offset 14,-4
 4934 0002 00AF     	 add r7,sp,#0
 4935              	.LCFI118:
 4936              	 .cfi_def_cfa_register 7
 4937              	 .loc 3 1005 0
 4938 0004 174B     	 ldr r3,.L209
 4939 0006 1B78     	 ldrb r3,[r3]
 4940 0008 002B     	 cmp r3,#0
 4941 000a 29D1     	 bne .L207
1006:../samuel/samuel_io.c ****    	   {
1007:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 4942              	 .loc 3 1007 0
 4943 000c FFF7FEFF 	 bl new_data_HalloBack
1008:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 4944              	 .loc 3 1008 0
 4945 0010 154B     	 ldr r3,.L209+4
 4946 0012 3022     	 mov r2,#48
 4947 0014 5A71     	 strb r2,[r3,#5]
1009:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 4948              	 .loc 3 1009 0
 4949 0016 154B     	 ldr r3,.L209+8
 4950 0018 1B88     	 ldrh r3,[r3]
 4951 001a 1B0A     	 lsr r3,r3,#8
 4952 001c 9BB2     	 uxth r3,r3
 4953 001e DAB2     	 uxtb r2,r3
 4954 0020 114B     	 ldr r3,.L209+4
 4955 0022 9A71     	 strb r2,[r3,#6]
1010:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 4956              	 .loc 3 1010 0
 4957 0024 114B     	 ldr r3,.L209+8
 4958 0026 1B88     	 ldrh r3,[r3]
 4959 0028 DAB2     	 uxtb r2,r3
 4960 002a 0F4B     	 ldr r3,.L209+4
 4961 002c DA71     	 strb r2,[r3,#7]
1011:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 4962              	 .loc 3 1011 0
 4963 002e 104B     	 ldr r3,.L209+12
 4964 0030 1B88     	 ldrh r3,[r3]
 4965 0032 1B0A     	 lsr r3,r3,#8
 4966 0034 9BB2     	 uxth r3,r3
 4967 0036 DAB2     	 uxtb r2,r3
 4968 0038 0B4B     	 ldr r3,.L209+4
 4969 003a 1A72     	 strb r2,[r3,#8]
1012:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 4970              	 .loc 3 1012 0
 4971 003c 0C4B     	 ldr r3,.L209+12
 4972 003e 1B88     	 ldrh r3,[r3]
 4973 0040 DAB2     	 uxtb r2,r3
 4974 0042 094B     	 ldr r3,.L209+4
 4975 0044 5A72     	 strb r2,[r3,#9]
1013:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 4976              	 .loc 3 1013 0
 4977 0046 0B4B     	 ldr r3,.L209+16
 4978 0048 1B78     	 ldrb r3,[r3]
 4979 004a 1C1C     	 mov r4,r3
 4980 004c 0A4A     	 ldr r2,.L209+20
 4981 004e 064B     	 ldr r3,.L209+4
 4982 0050 101C     	 mov r0,r2
 4983 0052 191C     	 mov r1,r3
 4984 0054 221C     	 mov r2,r4
 4985 0056 FFF7FEFF 	 bl UART_Transmit
1014:../samuel/samuel_io.c ****    	   B_first_uart=1;
 4986              	 .loc 3 1014 0
 4987 005a 024B     	 ldr r3,.L209
 4988 005c 0122     	 mov r2,#1
 4989 005e 1A70     	 strb r2,[r3]
 4990              	.L207:
1015:../samuel/samuel_io.c ****    	   }
1016:../samuel/samuel_io.c ****    }
 4991              	 .loc 3 1016 0
 4992 0060 BD46     	 mov sp,r7
 4993              	 
 4994 0062 98BD     	 pop {r3,r4,r7,pc}
 4995              	.L210:
 4996              	 .align 2
 4997              	.L209:
 4998 0064 00000000 	 .word B_first_uart
 4999 0068 00000000 	 .word new_data
 5000 006c 00000000 	 .word Ser_NrH
 5001 0070 00000000 	 .word Ser_NrL
 5002 0074 00000000 	 .word transmit_buf_size
 5003 0078 00000000 	 .word UART_1
 5004              	 .cfi_endproc
 5005              	.LFE338:
 5007              	 .text
 5008              	.Letext0:
 5009              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5010              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5011              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 5012              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc/xmc1_gpio.h"
 5013              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc/xmc_usic.h"
 5014              	 .file 9 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc/xmc_uart.h"
 5015              	 .file 10 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/UART/uart.h"
 5016              	 .file 11 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 5017              	 .file 12 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc/xmc_vadc.h"
 5018              	 .file 13 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 5019              	 .file 14 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/XMCLib/inc/xmc_bccu.h"
 5020              	 .file 15 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 5021              	 .file 16 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIM_BCCU/dim_bccu.h"
 5022              	 .file 17 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 5023              	 .file 18 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 5024              	 .file 19 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 5025              	 .file 20 "../samuel/samuel_io.h"
 5026              	 .file 21 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5027              	 .file 22 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/UART/uart_extern.h"
 5028              	 .file 23 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 5029              	 .file 24 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 5030              	 .file 25 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 5031              	 .file 26 "C:/DAVEv4-64Bit/work/Demo_9_See_PWM_Steps/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4496   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:4923   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:728    .text.lightprog01:000001c0 $d
    {standard input}:734    .text.light_aus:00000000 $t
    {standard input}:739    .text.light_aus:00000000 light_aus
    {standard input}:4252   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:4015   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:793    .text.light_aus:00000048 $d
    {standard input}:803    .text.analog_start:00000000 $t
    {standard input}:808    .text.analog_start:00000000 analog_start
    {standard input}:828    .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:833    .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:853    .text.new_data_fill:00000000 $t
    {standard input}:858    .text.new_data_fill:00000000 new_data_fill
    {standard input}:925    .text.new_data_fill:00000050 $d
    {standard input}:931    .text.new_data_unbekanntBack:00000000 $t
    {standard input}:936    .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:1005   .text.new_data_unbekanntBack:00000054 $d
    {standard input}:1012   .text.new_data_BroadcastBack:00000000 $t
    {standard input}:1017   .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:1098   .text.new_data_BroadcastBack:0000006c $d
    {standard input}:1107   .text.new_data_analog1Back:00000000 $t
    {standard input}:1112   .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1193   .text.new_data_analog1Back:0000006c $d
    {standard input}:1202   .text.new_data_analog2Back:00000000 $t
    {standard input}:1207   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1288   .text.new_data_analog2Back:0000006c $d
    {standard input}:1297   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1302   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1383   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1392   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1397   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1488   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1499   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1504   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1585   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1594   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1599   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1680   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1689   .text.new_data_HalloBack:00000000 $t
    {standard input}:1694   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1763   .text.new_data_HalloBack:00000054 $d
    {standard input}:1770   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:1775   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:1861   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:1871   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:1876   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:1985   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:1996   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:2001   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:2092   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:2102   .text.new_data_SerNrBack:00000000 $t
    {standard input}:2107   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2188   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2197   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2202   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2339   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2347   .text.clearEpromBuffer:00000000 $t
    {standard input}:2352   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2449   .text.clearEpromBuffer:00000080 $d
    {standard input}:2457   .text.fillEpromBuffer:00000000 $t
    {standard input}:2462   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2508   .text.fillEpromBuffer:00000034 $d
    {standard input}:2514   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2519   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2567   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2573   .text.readAllEEprom:00000000 $t
    {standard input}:2578   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:2818   .text.readAllEEprom:00000194 $d
    {standard input}:2842   .text.readSerNrEEprom:00000000 $t
    {standard input}:2847   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:2898   .text.readSerNrEEprom:00000044 $d
    {standard input}:2905   .text.readNodeIdEEprom:00000000 $t
    {standard input}:2910   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:2961   .text.readNodeIdEEprom:00000044 $d
    {standard input}:2968   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:2973   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:3024   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:3031   .text.read_off_light_EEprom:00000000 $t
    {standard input}:3036   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:3087   .text.read_off_light_EEprom:00000044 $d
    {standard input}:3094   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:3099   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3168   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3176   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3181   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3250   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3258   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3263   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3332   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3340   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3345   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3414   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3422   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3427   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3496   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3504   .text.sysiniValueB1:00000000 $t
    {standard input}:3509   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3574   .text.sysiniValueB1:00000050 $d
    {standard input}:3590   .text.sysiniValueB2:00000000 $t
    {standard input}:3595   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3657   .text.sysiniValueB2:0000004c $d
    {standard input}:3673   .text.sysiniValueB4:00000000 $t
    {standard input}:3678   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:3790   .text.sysiniValueB4:000000a0 $d
    {standard input}:3812   .text.sysiniValueB5:00000000 $t
    {standard input}:3817   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:3872   .text.sysiniValueB5:00000040 $d
    {standard input}:3888   .text.bcuInit:00000000 $t
    {standard input}:3893   .text.bcuInit:00000000 bcuInit
    {standard input}:3916   .rodata.bcuInit:00000000 $d
    {standard input}:3995   .text.bcuInit:0000006c $d
    {standard input}:4010   .text.bcuUebergabe:00000000 $t
    {standard input}:4098   .text.bcuUebergabe:00000088 $d
    {standard input}:4114   .text.bcuAktBerechnung:00000000 $t
    {standard input}:4119   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4232   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4247   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4370   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4385   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4390   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4482   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4491   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4659   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4670   .text.plus39V_stop:00000000 $t
    {standard input}:4675   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4695   .text.plus39V_start:00000000 $t
    {standard input}:4700   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4720   .text.Time1msec:00000000 $t
    {standard input}:4725   .text.Time1msec:00000000 Time1msec
    {standard input}:4748   .text.Time1msec:00000010 $d
    {standard input}:4753   .text.Time20msec:00000000 $t
    {standard input}:4758   .text.Time20msec:00000000 Time20msec
    {standard input}:4902   .text.Time20msec:000000e0 $d
    {standard input}:4918   .text.firstuartBack:00000000 $t
    {standard input}:4998   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
