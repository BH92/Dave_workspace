   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 724B     	 ldr r3,.L20
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c 704B     	 ldr r3,.L20
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 121 )  //ende
 469              	 .loc 3 119 0
 470 0010 6F4B     	 ldr r3,.L20
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 792B     	 cmp r3,#121
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 6D4B     	 ldr r3,.L20
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e D4E0     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 6B4B     	 ldr r3,.L20
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 20D1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 2000;
 485              	 .loc 3 125 0
 486 0028 6A4B     	 ldr r3,.L20+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c FA22     	 mov r2,#250
 489 002e D200     	 lsl r2,r2,#3
 490 0030 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 2000;
 491              	 .loc 3 126 0
 492 0032 684B     	 ldr r3,.L20+4
 493 0034 DB6A     	 ldr r3,[r3,#44]
 494 0036 FA22     	 mov r2,#250
 495 0038 D200     	 lsl r2,r2,#3
 496 003a 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 2000;
 497              	 .loc 3 127 0
 498 003c 654B     	 ldr r3,.L20+4
 499 003e DB6A     	 ldr r3,[r3,#44]
 500 0040 FA22     	 mov r2,#250
 501 0042 D200     	 lsl r2,r2,#3
 502 0044 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 2000;
 503              	 .loc 3 128 0
 504 0046 634B     	 ldr r3,.L20+4
 505 0048 DB6A     	 ldr r3,[r3,#44]
 506 004a FA22     	 mov r2,#250
 507 004c D200     	 lsl r2,r2,#3
 508 004e DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 509              	 .loc 3 129 0
 510 0050 604B     	 ldr r3,.L20+4
 511 0052 181C     	 mov r0,r3
 512 0054 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 513              	 .loc 3 130 0
 514 0058 5E4A     	 ldr r2,.L20+4
 515 005a E523     	 mov r3,#229
 516 005c 9B00     	 lsl r3,r3,#2
 517 005e 101C     	 mov r0,r2
 518 0060 0021     	 mov r1,#0
 519 0062 1A1C     	 mov r2,r3
 520 0064 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 521 0068 AFE0     	 b .L12
 522              	.L15:
 131:../samuel/samuel_io.c **** 	 			 }
 132:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 40 )
 523              	 .loc 3 132 0
 524 006a 594B     	 ldr r3,.L20
 525 006c 1B88     	 ldrh r3,[r3]
 526 006e 282B     	 cmp r3,#40
 527 0070 20D1     	 bne .L16
 133:../samuel/samuel_io.c **** 	 			 {
 134:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 700;
 528              	 .loc 3 134 0
 529 0072 584B     	 ldr r3,.L20+4
 530 0074 DB6A     	 ldr r3,[r3,#44]
 531 0076 AF22     	 mov r2,#175
 532 0078 9200     	 lsl r2,r2,#2
 533 007a 1A80     	 strh r2,[r3]
 135:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 700;
 534              	 .loc 3 135 0
 535 007c 554B     	 ldr r3,.L20+4
 536 007e DB6A     	 ldr r3,[r3,#44]
 537 0080 AF22     	 mov r2,#175
 538 0082 9200     	 lsl r2,r2,#2
 539 0084 5A80     	 strh r2,[r3,#2]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 700;
 540              	 .loc 3 136 0
 541 0086 534B     	 ldr r3,.L20+4
 542 0088 DB6A     	 ldr r3,[r3,#44]
 543 008a AF22     	 mov r2,#175
 544 008c 9200     	 lsl r2,r2,#2
 545 008e 9A80     	 strh r2,[r3,#4]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 700;
 546              	 .loc 3 137 0
 547 0090 504B     	 ldr r3,.L20+4
 548 0092 DB6A     	 ldr r3,[r3,#44]
 549 0094 AF22     	 mov r2,#175
 550 0096 9200     	 lsl r2,r2,#2
 551 0098 DA80     	 strh r2,[r3,#6]
 138:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 552              	 .loc 3 138 0
 553 009a 4E4B     	 ldr r3,.L20+4
 554 009c 181C     	 mov r0,r3
 555 009e FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 139:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 556              	 .loc 3 139 0
 557 00a2 4C4A     	 ldr r2,.L20+4
 558 00a4 E523     	 mov r3,#229
 559 00a6 9B00     	 lsl r3,r3,#2
 560 00a8 101C     	 mov r0,r2
 561 00aa 0021     	 mov r1,#0
 562 00ac 1A1C     	 mov r2,r3
 563 00ae FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 564 00b2 8AE0     	 b .L12
 565              	.L16:
 140:../samuel/samuel_io.c **** 	 			 }
 141:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 60 )
 566              	 .loc 3 141 0
 567 00b4 464B     	 ldr r3,.L20
 568 00b6 1B88     	 ldrh r3,[r3]
 569 00b8 3C2B     	 cmp r3,#60
 570 00ba 1ED1     	 bne .L17
 142:../samuel/samuel_io.c **** 	 			 {
 143:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 2000;
 571              	 .loc 3 143 0
 572 00bc 454B     	 ldr r3,.L20+4
 573 00be DB6A     	 ldr r3,[r3,#44]
 574 00c0 FA22     	 mov r2,#250
 575 00c2 D200     	 lsl r2,r2,#3
 576 00c4 1A80     	 strh r2,[r3]
 144:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 577              	 .loc 3 144 0
 578 00c6 434B     	 ldr r3,.L20+4
 579 00c8 DB6A     	 ldr r3,[r3,#44]
 580 00ca 0022     	 mov r2,#0
 581 00cc 5A80     	 strh r2,[r3,#2]
 145:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 2000;
 582              	 .loc 3 145 0
 583 00ce 414B     	 ldr r3,.L20+4
 584 00d0 DB6A     	 ldr r3,[r3,#44]
 585 00d2 FA22     	 mov r2,#250
 586 00d4 D200     	 lsl r2,r2,#3
 587 00d6 9A80     	 strh r2,[r3,#4]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 588              	 .loc 3 146 0
 589 00d8 3E4B     	 ldr r3,.L20+4
 590 00da DB6A     	 ldr r3,[r3,#44]
 591 00dc 0022     	 mov r2,#0
 592 00de DA80     	 strh r2,[r3,#6]
 147:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 593              	 .loc 3 147 0
 594 00e0 3C4B     	 ldr r3,.L20+4
 595 00e2 181C     	 mov r0,r3
 596 00e4 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 148:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 597              	 .loc 3 148 0
 598 00e8 3A4A     	 ldr r2,.L20+4
 599 00ea E523     	 mov r3,#229
 600 00ec 9B00     	 lsl r3,r3,#2
 601 00ee 101C     	 mov r0,r2
 602 00f0 0021     	 mov r1,#0
 603 00f2 1A1C     	 mov r2,r3
 604 00f4 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 605 00f8 67E0     	 b .L12
 606              	.L17:
 149:../samuel/samuel_io.c **** 	 			 }
 150:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 80 )
 607              	 .loc 3 150 0
 608 00fa 354B     	 ldr r3,.L20
 609 00fc 1B88     	 ldrh r3,[r3]
 610 00fe 502B     	 cmp r3,#80
 611 0100 1ED1     	 bne .L18
 151:../samuel/samuel_io.c **** 	 			 {
 152:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 700;
 612              	 .loc 3 152 0
 613 0102 344B     	 ldr r3,.L20+4
 614 0104 DB6A     	 ldr r3,[r3,#44]
 615 0106 AF22     	 mov r2,#175
 616 0108 9200     	 lsl r2,r2,#2
 617 010a 1A80     	 strh r2,[r3]
 153:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 618              	 .loc 3 153 0
 619 010c 314B     	 ldr r3,.L20+4
 620 010e DB6A     	 ldr r3,[r3,#44]
 621 0110 0022     	 mov r2,#0
 622 0112 5A80     	 strh r2,[r3,#2]
 154:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 700;
 623              	 .loc 3 154 0
 624 0114 2F4B     	 ldr r3,.L20+4
 625 0116 DB6A     	 ldr r3,[r3,#44]
 626 0118 AF22     	 mov r2,#175
 627 011a 9200     	 lsl r2,r2,#2
 628 011c 9A80     	 strh r2,[r3,#4]
 155:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 629              	 .loc 3 155 0
 630 011e 2D4B     	 ldr r3,.L20+4
 631 0120 DB6A     	 ldr r3,[r3,#44]
 632 0122 0022     	 mov r2,#0
 633 0124 DA80     	 strh r2,[r3,#6]
 156:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 634              	 .loc 3 156 0
 635 0126 2B4B     	 ldr r3,.L20+4
 636 0128 181C     	 mov r0,r3
 637 012a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 157:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 638              	 .loc 3 157 0
 639 012e 294A     	 ldr r2,.L20+4
 640 0130 E523     	 mov r3,#229
 641 0132 9B00     	 lsl r3,r3,#2
 642 0134 101C     	 mov r0,r2
 643 0136 0021     	 mov r1,#0
 644 0138 1A1C     	 mov r2,r3
 645 013a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 646 013e 44E0     	 b .L12
 647              	.L18:
 158:../samuel/samuel_io.c **** 	 			 }
 159:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 100 )
 648              	 .loc 3 159 0
 649 0140 234B     	 ldr r3,.L20
 650 0142 1B88     	 ldrh r3,[r3]
 651 0144 642B     	 cmp r3,#100
 652 0146 1ED1     	 bne .L19
 160:../samuel/samuel_io.c **** 	 			 {
 161:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 653              	 .loc 3 161 0
 654 0148 224B     	 ldr r3,.L20+4
 655 014a DB6A     	 ldr r3,[r3,#44]
 656 014c 0022     	 mov r2,#0
 657 014e 1A80     	 strh r2,[r3]
 162:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 2000;
 658              	 .loc 3 162 0
 659 0150 204B     	 ldr r3,.L20+4
 660 0152 DB6A     	 ldr r3,[r3,#44]
 661 0154 FA22     	 mov r2,#250
 662 0156 D200     	 lsl r2,r2,#3
 663 0158 5A80     	 strh r2,[r3,#2]
 163:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 664              	 .loc 3 163 0
 665 015a 1E4B     	 ldr r3,.L20+4
 666 015c DB6A     	 ldr r3,[r3,#44]
 667 015e 0022     	 mov r2,#0
 668 0160 9A80     	 strh r2,[r3,#4]
 164:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 2000;
 669              	 .loc 3 164 0
 670 0162 1C4B     	 ldr r3,.L20+4
 671 0164 DB6A     	 ldr r3,[r3,#44]
 672 0166 FA22     	 mov r2,#250
 673 0168 D200     	 lsl r2,r2,#3
 674 016a DA80     	 strh r2,[r3,#6]
 165:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 675              	 .loc 3 165 0
 676 016c 194B     	 ldr r3,.L20+4
 677 016e 181C     	 mov r0,r3
 678 0170 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 166:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 679              	 .loc 3 166 0
 680 0174 174A     	 ldr r2,.L20+4
 681 0176 E523     	 mov r3,#229
 682 0178 9B00     	 lsl r3,r3,#2
 683 017a 101C     	 mov r0,r2
 684 017c 0021     	 mov r1,#0
 685 017e 1A1C     	 mov r2,r3
 686 0180 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 687 0184 21E0     	 b .L12
 688              	.L19:
 167:../samuel/samuel_io.c **** 	 			 }
 168:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 120 )
 689              	 .loc 3 168 0
 690 0186 124B     	 ldr r3,.L20
 691 0188 1B88     	 ldrh r3,[r3]
 692 018a 782B     	 cmp r3,#120
 693 018c 1DD1     	 bne .L12
 169:../samuel/samuel_io.c **** 	 			 {
 170:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 694              	 .loc 3 170 0
 695 018e 114B     	 ldr r3,.L20+4
 696 0190 DB6A     	 ldr r3,[r3,#44]
 697 0192 0022     	 mov r2,#0
 698 0194 1A80     	 strh r2,[r3]
 171:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 700;
 699              	 .loc 3 171 0
 700 0196 0F4B     	 ldr r3,.L20+4
 701 0198 DB6A     	 ldr r3,[r3,#44]
 702 019a AF22     	 mov r2,#175
 703 019c 9200     	 lsl r2,r2,#2
 704 019e 5A80     	 strh r2,[r3,#2]
 172:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 705              	 .loc 3 172 0
 706 01a0 0C4B     	 ldr r3,.L20+4
 707 01a2 DB6A     	 ldr r3,[r3,#44]
 708 01a4 0022     	 mov r2,#0
 709 01a6 9A80     	 strh r2,[r3,#4]
 173:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 700;
 710              	 .loc 3 173 0
 711 01a8 0A4B     	 ldr r3,.L20+4
 712 01aa DB6A     	 ldr r3,[r3,#44]
 713 01ac AF22     	 mov r2,#175
 714 01ae 9200     	 lsl r2,r2,#2
 715 01b0 DA80     	 strh r2,[r3,#6]
 174:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 716              	 .loc 3 174 0
 717 01b2 084B     	 ldr r3,.L20+4
 718 01b4 181C     	 mov r0,r3
 719 01b6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 175:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 720              	 .loc 3 175 0
 721 01ba 064A     	 ldr r2,.L20+4
 722 01bc E523     	 mov r3,#229
 723 01be 9B00     	 lsl r3,r3,#2
 724 01c0 101C     	 mov r0,r2
 725 01c2 0021     	 mov r1,#0
 726 01c4 1A1C     	 mov r2,r3
 727 01c6 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 728              	.L12:
 176:../samuel/samuel_io.c **** 	 			 }
 177:../samuel/samuel_io.c **** 				 else
 178:../samuel/samuel_io.c **** 
 179:../samuel/samuel_io.c **** 				 {
 180:../samuel/samuel_io.c **** 
 181:../samuel/samuel_io.c **** 				 }
 182:../samuel/samuel_io.c **** 
 183:../samuel/samuel_io.c ****    }
 729              	 .loc 3 183 0
 730 01ca BD46     	 mov sp,r7
 731              	 
 732 01cc 80BD     	 pop {r7,pc}
 733              	.L21:
 734 01ce C046     	 .align 2
 735              	.L20:
 736 01d0 00000000 	 .word zahler_lightprog01
 737 01d4 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 738              	 .cfi_endproc
 739              	.LFE292:
 741              	 .section .text.light_aus,"ax",%progbits
 742              	 .align 2
 743              	 .global light_aus
 744              	 .code 16
 745              	 .thumb_func
 747              	light_aus:
 748              	.LFB293:
 184:../samuel/samuel_io.c ****   //------------------------------------------
 185:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 186:../samuel/samuel_io.c ****    {
 749              	 .loc 3 186 0
 750              	 .cfi_startproc
 751 0000 80B5     	 push {r7,lr}
 752              	.LCFI18:
 753              	 .cfi_def_cfa_offset 8
 754              	 .cfi_offset 7,-8
 755              	 .cfi_offset 14,-4
 756 0002 00AF     	 add r7,sp,#0
 757              	.LCFI19:
 758              	 .cfi_def_cfa_register 7
 187:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 759              	 .loc 3 187 0
 760 0004 104B     	 ldr r3,.L23
 761 0006 1A88     	 ldrh r2,[r3]
 762 0008 104B     	 ldr r3,.L23+4
 763 000a 1A80     	 strh r2,[r3]
 188:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 764              	 .loc 3 188 0
 765 000c 0E4B     	 ldr r3,.L23
 766 000e 1A88     	 ldrh r2,[r3]
 767 0010 0F4B     	 ldr r3,.L23+8
 768 0012 1A80     	 strh r2,[r3]
 189:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 769              	 .loc 3 189 0
 770 0014 0C4B     	 ldr r3,.L23
 771 0016 1A88     	 ldrh r2,[r3]
 772 0018 0E4B     	 ldr r3,.L23+12
 773 001a 1A80     	 strh r2,[r3]
 190:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 774              	 .loc 3 190 0
 775 001c 0A4B     	 ldr r3,.L23
 776 001e 1A88     	 ldrh r2,[r3]
 777 0020 0D4B     	 ldr r3,.L23+16
 778 0022 1A80     	 strh r2,[r3]
 191:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 779              	 .loc 3 191 0
 780 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 192:../samuel/samuel_io.c **** 	  bcuUebergabe();
 781              	 .loc 3 192 0
 782 0028 FFF7FEFF 	 bl bcuUebergabe
 193:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 194:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 783              	 .loc 3 194 0
 784 002c 0B4A     	 ldr r2,.L23+20
 785 002e 8023     	 mov r3,#128
 786 0030 1B01     	 lsl r3,r3,#4
 787 0032 101C     	 mov r0,r2
 788 0034 191C     	 mov r1,r3
 789 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 195:../samuel/samuel_io.c **** 	     // Start Dimming
 196:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 790              	 .loc 3 196 0
 791 003a 084B     	 ldr r3,.L23+20
 792 003c 181C     	 mov r0,r3
 793 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 197:../samuel/samuel_io.c **** 
 198:../samuel/samuel_io.c ****    }
 794              	 .loc 3 198 0
 795 0042 BD46     	 mov sp,r7
 796              	 
 797 0044 80BD     	 pop {r7,pc}
 798              	.L24:
 799 0046 C046     	 .align 2
 800              	.L23:
 801 0048 00000000 	 .word linearwalk_gen
 802 004c 00000000 	 .word linearwalk_ww1
 803 0050 00000000 	 .word linearwalk_ww2
 804 0054 00000000 	 .word linearwalk_cw1
 805 0058 00000000 	 .word linearwalk_cw2
 806 005c 00000000 	 .word DIM_BCCU_0
 807              	 .cfi_endproc
 808              	.LFE293:
 810              	 .section .text.analog_start,"ax",%progbits
 811              	 .align 2
 812              	 .global analog_start
 813              	 .code 16
 814              	 .thumb_func
 816              	analog_start:
 817              	.LFB294:
 199:../samuel/samuel_io.c ****   //------------------------------------------
 200:../samuel/samuel_io.c **** 
 201:../samuel/samuel_io.c **** 
 202:../samuel/samuel_io.c **** 
 203:../samuel/samuel_io.c ****  void analog_start (void)
 204:../samuel/samuel_io.c ****   {
 818              	 .loc 3 204 0
 819              	 .cfi_startproc
 820 0000 80B5     	 push {r7,lr}
 821              	.LCFI20:
 822              	 .cfi_def_cfa_offset 8
 823              	 .cfi_offset 7,-8
 824              	 .cfi_offset 14,-4
 825 0002 00AF     	 add r7,sp,#0
 826              	.LCFI21:
 827              	 .cfi_def_cfa_register 7
 205:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 206:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 207:../samuel/samuel_io.c **** 
 208:../samuel/samuel_io.c ****   }
 828              	 .loc 3 208 0
 829 0004 BD46     	 mov sp,r7
 830              	 
 831 0006 80BD     	 pop {r7,pc}
 832              	 .cfi_endproc
 833              	.LFE294:
 835              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 836              	 .align 2
 837              	 .global SCU_0_IRQHandler
 838              	 .code 16
 839              	 .thumb_func
 841              	SCU_0_IRQHandler:
 842              	.LFB295:
 209:../samuel/samuel_io.c **** 
 210:../samuel/samuel_io.c **** 
 211:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 212:../samuel/samuel_io.c ****   {
 843              	 .loc 3 212 0
 844              	 .cfi_startproc
 845 0000 80B5     	 push {r7,lr}
 846              	.LCFI22:
 847              	 .cfi_def_cfa_offset 8
 848              	 .cfi_offset 7,-8
 849              	 .cfi_offset 14,-4
 850 0002 00AF     	 add r7,sp,#0
 851              	.LCFI23:
 852              	 .cfi_def_cfa_register 7
 213:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 214:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 215:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 216:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 217:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 218:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 219:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 220:../samuel/samuel_io.c ****   }
 853              	 .loc 3 220 0
 854 0004 BD46     	 mov sp,r7
 855              	 
 856 0006 80BD     	 pop {r7,pc}
 857              	 .cfi_endproc
 858              	.LFE295:
 860              	 .section .text.new_data_fill,"ax",%progbits
 861              	 .align 2
 862              	 .global new_data_fill
 863              	 .code 16
 864              	 .thumb_func
 866              	new_data_fill:
 867              	.LFB296:
 221:../samuel/samuel_io.c **** 
 222:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 223:../samuel/samuel_io.c ****  {
 868              	 .loc 3 223 0
 869              	 .cfi_startproc
 870 0000 80B5     	 push {r7,lr}
 871              	.LCFI24:
 872              	 .cfi_def_cfa_offset 8
 873              	 .cfi_offset 7,-8
 874              	 .cfi_offset 14,-4
 875 0002 00AF     	 add r7,sp,#0
 876              	.LCFI25:
 877              	 .cfi_def_cfa_register 7
 224:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 878              	 .loc 3 224 0
 879 0004 124B     	 ldr r3,.L28
 880 0006 0B22     	 mov r2,#11
 881 0008 1A70     	 strb r2,[r3]
 225:../samuel/samuel_io.c **** 	 new_data[0]=1;
 882              	 .loc 3 225 0
 883 000a 124B     	 ldr r3,.L28+4
 884 000c 0122     	 mov r2,#1
 885 000e 1A70     	 strb r2,[r3]
 226:../samuel/samuel_io.c **** 	 new_data[1]=2;
 886              	 .loc 3 226 0
 887 0010 104B     	 ldr r3,.L28+4
 888 0012 0222     	 mov r2,#2
 889 0014 5A70     	 strb r2,[r3,#1]
 227:../samuel/samuel_io.c **** 	 new_data[2]=3;
 890              	 .loc 3 227 0
 891 0016 0F4B     	 ldr r3,.L28+4
 892 0018 0322     	 mov r2,#3
 893 001a 9A70     	 strb r2,[r3,#2]
 228:../samuel/samuel_io.c **** 	 new_data[3]=4;
 894              	 .loc 3 228 0
 895 001c 0D4B     	 ldr r3,.L28+4
 896 001e 0422     	 mov r2,#4
 897 0020 DA70     	 strb r2,[r3,#3]
 229:../samuel/samuel_io.c **** 	 new_data[4]=5;
 898              	 .loc 3 229 0
 899 0022 0C4B     	 ldr r3,.L28+4
 900 0024 0522     	 mov r2,#5
 901 0026 1A71     	 strb r2,[r3,#4]
 230:../samuel/samuel_io.c **** 	 new_data[5]=6;
 902              	 .loc 3 230 0
 903 0028 0A4B     	 ldr r3,.L28+4
 904 002a 0622     	 mov r2,#6
 905 002c 5A71     	 strb r2,[r3,#5]
 231:../samuel/samuel_io.c ****  	 new_data[6]=7;
 906              	 .loc 3 231 0
 907 002e 094B     	 ldr r3,.L28+4
 908 0030 0722     	 mov r2,#7
 909 0032 9A71     	 strb r2,[r3,#6]
 232:../samuel/samuel_io.c ****  	 new_data[7]=8;
 910              	 .loc 3 232 0
 911 0034 074B     	 ldr r3,.L28+4
 912 0036 0822     	 mov r2,#8
 913 0038 DA71     	 strb r2,[r3,#7]
 233:../samuel/samuel_io.c ****  	 new_data[8]=9;
 914              	 .loc 3 233 0
 915 003a 064B     	 ldr r3,.L28+4
 916 003c 0922     	 mov r2,#9
 917 003e 1A72     	 strb r2,[r3,#8]
 234:../samuel/samuel_io.c ****  	 new_data[9]='a';
 918              	 .loc 3 234 0
 919 0040 044B     	 ldr r3,.L28+4
 920 0042 6122     	 mov r2,#97
 921 0044 5A72     	 strb r2,[r3,#9]
 235:../samuel/samuel_io.c **** 	 new_data[10]='b';
 922              	 .loc 3 235 0
 923 0046 034B     	 ldr r3,.L28+4
 924 0048 6222     	 mov r2,#98
 925 004a 9A72     	 strb r2,[r3,#10]
 236:../samuel/samuel_io.c ****  }
 926              	 .loc 3 236 0
 927 004c BD46     	 mov sp,r7
 928              	 
 929 004e 80BD     	 pop {r7,pc}
 930              	.L29:
 931              	 .align 2
 932              	.L28:
 933 0050 00000000 	 .word transmit_buf_size
 934 0054 00000000 	 .word new_data
 935              	 .cfi_endproc
 936              	.LFE296:
 938              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 939              	 .align 2
 940              	 .global new_data_unbekanntBack
 941              	 .code 16
 942              	 .thumb_func
 944              	new_data_unbekanntBack:
 945              	.LFB297:
 237:../samuel/samuel_io.c **** 
 238:../samuel/samuel_io.c **** 
 239:../samuel/samuel_io.c **** 
 240:../samuel/samuel_io.c **** 
 241:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 242:../samuel/samuel_io.c ****  {
 946              	 .loc 3 242 0
 947              	 .cfi_startproc
 948 0000 80B5     	 push {r7,lr}
 949              	.LCFI26:
 950              	 .cfi_def_cfa_offset 8
 951              	 .cfi_offset 7,-8
 952              	 .cfi_offset 14,-4
 953 0002 00AF     	 add r7,sp,#0
 954              	.LCFI27:
 955              	 .cfi_def_cfa_register 7
 243:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 956              	 .loc 3 243 0
 957 0004 134B     	 ldr r3,.L31
 958 0006 0B22     	 mov r2,#11
 959 0008 1A70     	 strb r2,[r3]
 244:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 960              	 .loc 3 244 0
 961 000a 134B     	 ldr r3,.L31+4
 962 000c 4C22     	 mov r2,#76
 963 000e 1A70     	 strb r2,[r3]
 245:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 964              	 .loc 3 245 0
 965 0010 114B     	 ldr r3,.L31+4
 966 0012 4922     	 mov r2,#73
 967 0014 5A70     	 strb r2,[r3,#1]
 246:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 968              	 .loc 3 246 0
 969 0016 104B     	 ldr r3,.L31+4
 970 0018 4E22     	 mov r2,#78
 971 001a 9A70     	 strb r2,[r3,#2]
 247:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 972              	 .loc 3 247 0
 973 001c 0F4B     	 ldr r3,.L31+8
 974 001e 1A78     	 ldrb r2,[r3]
 975 0020 0D4B     	 ldr r3,.L31+4
 976 0022 DA70     	 strb r2,[r3,#3]
 248:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 977              	 .loc 3 248 0
 978 0024 0B4B     	 ldr r3,.L31
 979 0026 1A78     	 ldrb r2,[r3]
 980 0028 0B4B     	 ldr r3,.L31+4
 981 002a 1A71     	 strb r2,[r3,#4]
 249:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 982              	 .loc 3 249 0
 983 002c 0A4B     	 ldr r3,.L31+4
 984 002e 3122     	 mov r2,#49
 985 0030 5A71     	 strb r2,[r3,#5]
 250:../samuel/samuel_io.c **** 	 new_data[6]='n';
 986              	 .loc 3 250 0
 987 0032 094B     	 ldr r3,.L31+4
 988 0034 6E22     	 mov r2,#110
 989 0036 9A71     	 strb r2,[r3,#6]
 251:../samuel/samuel_io.c **** 	 new_data[7]='o';
 990              	 .loc 3 251 0
 991 0038 074B     	 ldr r3,.L31+4
 992 003a 6F22     	 mov r2,#111
 993 003c DA71     	 strb r2,[r3,#7]
 252:../samuel/samuel_io.c **** 	 new_data[8]='n';
 994              	 .loc 3 252 0
 995 003e 064B     	 ldr r3,.L31+4
 996 0040 6E22     	 mov r2,#110
 997 0042 1A72     	 strb r2,[r3,#8]
 253:../samuel/samuel_io.c **** 	 new_data[9]='o';
 998              	 .loc 3 253 0
 999 0044 044B     	 ldr r3,.L31+4
 1000 0046 6F22     	 mov r2,#111
 1001 0048 5A72     	 strb r2,[r3,#9]
 254:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1002              	 .loc 3 254 0
 1003 004a 034B     	 ldr r3,.L31+4
 1004 004c FF22     	 mov r2,#255
 1005 004e 9A72     	 strb r2,[r3,#10]
 255:../samuel/samuel_io.c ****  }
 1006              	 .loc 3 255 0
 1007 0050 BD46     	 mov sp,r7
 1008              	 
 1009 0052 80BD     	 pop {r7,pc}
 1010              	.L32:
 1011              	 .align 2
 1012              	.L31:
 1013 0054 00000000 	 .word transmit_buf_size
 1014 0058 00000000 	 .word new_data
 1015 005c 00000000 	 .word node_id
 1016              	 .cfi_endproc
 1017              	.LFE297:
 1019              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 1020              	 .align 2
 1021              	 .global new_data_BroadcastBack
 1022              	 .code 16
 1023              	 .thumb_func
 1025              	new_data_BroadcastBack:
 1026              	.LFB298:
 256:../samuel/samuel_io.c **** 
 257:../samuel/samuel_io.c **** //------------------------------------------
 258:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 259:../samuel/samuel_io.c ****  {
 1027              	 .loc 3 259 0
 1028              	 .cfi_startproc
 1029 0000 80B5     	 push {r7,lr}
 1030              	.LCFI28:
 1031              	 .cfi_def_cfa_offset 8
 1032              	 .cfi_offset 7,-8
 1033              	 .cfi_offset 14,-4
 1034 0002 00AF     	 add r7,sp,#0
 1035              	.LCFI29:
 1036              	 .cfi_def_cfa_register 7
 260:../samuel/samuel_io.c **** 
 261:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1037              	 .loc 3 261 0
 1038 0004 194B     	 ldr r3,.L34
 1039 0006 0B22     	 mov r2,#11
 1040 0008 1A70     	 strb r2,[r3]
 262:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1041              	 .loc 3 262 0
 1042 000a 194B     	 ldr r3,.L34+4
 1043 000c 4C22     	 mov r2,#76
 1044 000e 1A70     	 strb r2,[r3]
 263:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1045              	 .loc 3 263 0
 1046 0010 174B     	 ldr r3,.L34+4
 1047 0012 4922     	 mov r2,#73
 1048 0014 5A70     	 strb r2,[r3,#1]
 264:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1049              	 .loc 3 264 0
 1050 0016 164B     	 ldr r3,.L34+4
 1051 0018 4E22     	 mov r2,#78
 1052 001a 9A70     	 strb r2,[r3,#2]
 265:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1053              	 .loc 3 265 0
 1054 001c 154B     	 ldr r3,.L34+8
 1055 001e 1A78     	 ldrb r2,[r3]
 1056 0020 134B     	 ldr r3,.L34+4
 1057 0022 DA70     	 strb r2,[r3,#3]
 266:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1058              	 .loc 3 266 0
 1059 0024 114B     	 ldr r3,.L34
 1060 0026 1A78     	 ldrb r2,[r3]
 1061 0028 114B     	 ldr r3,.L34+4
 1062 002a 1A71     	 strb r2,[r3,#4]
 267:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 1063              	 .loc 3 267 0
 1064 002c 104B     	 ldr r3,.L34+4
 1065 002e 6F22     	 mov r2,#111
 1066 0030 5A71     	 strb r2,[r3,#5]
 268:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 1067              	 .loc 3 268 0
 1068 0032 114B     	 ldr r3,.L34+12
 1069 0034 1B88     	 ldrh r3,[r3]
 1070 0036 1B0A     	 lsr r3,r3,#8
 1071 0038 9BB2     	 uxth r3,r3
 1072 003a DAB2     	 uxtb r2,r3
 1073 003c 0C4B     	 ldr r3,.L34+4
 1074 003e 9A71     	 strb r2,[r3,#6]
 269:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 1075              	 .loc 3 269 0
 1076 0040 0D4B     	 ldr r3,.L34+12
 1077 0042 1B88     	 ldrh r3,[r3]
 1078 0044 DAB2     	 uxtb r2,r3
 1079 0046 0A4B     	 ldr r3,.L34+4
 1080 0048 DA71     	 strb r2,[r3,#7]
 270:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 1081              	 .loc 3 270 0
 1082 004a 0C4B     	 ldr r3,.L34+16
 1083 004c 1B88     	 ldrh r3,[r3]
 1084 004e 1B0A     	 lsr r3,r3,#8
 1085 0050 9BB2     	 uxth r3,r3
 1086 0052 DAB2     	 uxtb r2,r3
 1087 0054 064B     	 ldr r3,.L34+4
 1088 0056 1A72     	 strb r2,[r3,#8]
 271:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 1089              	 .loc 3 271 0
 1090 0058 084B     	 ldr r3,.L34+16
 1091 005a 1B88     	 ldrh r3,[r3]
 1092 005c DAB2     	 uxtb r2,r3
 1093 005e 044B     	 ldr r3,.L34+4
 1094 0060 5A72     	 strb r2,[r3,#9]
 272:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1095              	 .loc 3 272 0
 1096 0062 034B     	 ldr r3,.L34+4
 1097 0064 FF22     	 mov r2,#255
 1098 0066 9A72     	 strb r2,[r3,#10]
 273:../samuel/samuel_io.c ****  }
 1099              	 .loc 3 273 0
 1100 0068 BD46     	 mov sp,r7
 1101              	 
 1102 006a 80BD     	 pop {r7,pc}
 1103              	.L35:
 1104              	 .align 2
 1105              	.L34:
 1106 006c 00000000 	 .word transmit_buf_size
 1107 0070 00000000 	 .word new_data
 1108 0074 00000000 	 .word node_id
 1109 0078 00000000 	 .word Ser_NrH
 1110 007c 00000000 	 .word Ser_NrL
 1111              	 .cfi_endproc
 1112              	.LFE298:
 1114              	 .section .text.new_data_analog1Back,"ax",%progbits
 1115              	 .align 2
 1116              	 .global new_data_analog1Back
 1117              	 .code 16
 1118              	 .thumb_func
 1120              	new_data_analog1Back:
 1121              	.LFB299:
 274:../samuel/samuel_io.c ****  //------------------------------------------
 275:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 276:../samuel/samuel_io.c ****  {
 1122              	 .loc 3 276 0
 1123              	 .cfi_startproc
 1124 0000 80B5     	 push {r7,lr}
 1125              	.LCFI30:
 1126              	 .cfi_def_cfa_offset 8
 1127              	 .cfi_offset 7,-8
 1128              	 .cfi_offset 14,-4
 1129 0002 00AF     	 add r7,sp,#0
 1130              	.LCFI31:
 1131              	 .cfi_def_cfa_register 7
 277:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1132              	 .loc 3 277 0
 1133 0004 194B     	 ldr r3,.L37
 1134 0006 0B22     	 mov r2,#11
 1135 0008 1A70     	 strb r2,[r3]
 278:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1136              	 .loc 3 278 0
 1137 000a 194B     	 ldr r3,.L37+4
 1138 000c 4C22     	 mov r2,#76
 1139 000e 1A70     	 strb r2,[r3]
 279:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1140              	 .loc 3 279 0
 1141 0010 174B     	 ldr r3,.L37+4
 1142 0012 4922     	 mov r2,#73
 1143 0014 5A70     	 strb r2,[r3,#1]
 280:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1144              	 .loc 3 280 0
 1145 0016 164B     	 ldr r3,.L37+4
 1146 0018 4E22     	 mov r2,#78
 1147 001a 9A70     	 strb r2,[r3,#2]
 281:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1148              	 .loc 3 281 0
 1149 001c 154B     	 ldr r3,.L37+8
 1150 001e 1A78     	 ldrb r2,[r3]
 1151 0020 134B     	 ldr r3,.L37+4
 1152 0022 DA70     	 strb r2,[r3,#3]
 282:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1153              	 .loc 3 282 0
 1154 0024 114B     	 ldr r3,.L37
 1155 0026 1A78     	 ldrb r2,[r3]
 1156 0028 114B     	 ldr r3,.L37+4
 1157 002a 1A71     	 strb r2,[r3,#4]
 283:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1158              	 .loc 3 283 0
 1159 002c 104B     	 ldr r3,.L37+4
 1160 002e 6122     	 mov r2,#97
 1161 0030 5A71     	 strb r2,[r3,#5]
 284:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1162              	 .loc 3 284 0
 1163 0032 114B     	 ldr r3,.L37+12
 1164 0034 1B88     	 ldrh r3,[r3]
 1165 0036 1B0A     	 lsr r3,r3,#8
 1166 0038 9BB2     	 uxth r3,r3
 1167 003a DAB2     	 uxtb r2,r3
 1168 003c 0C4B     	 ldr r3,.L37+4
 1169 003e 9A71     	 strb r2,[r3,#6]
 285:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1170              	 .loc 3 285 0
 1171 0040 0D4B     	 ldr r3,.L37+12
 1172 0042 1B88     	 ldrh r3,[r3]
 1173 0044 DAB2     	 uxtb r2,r3
 1174 0046 0A4B     	 ldr r3,.L37+4
 1175 0048 DA71     	 strb r2,[r3,#7]
 286:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1176              	 .loc 3 286 0
 1177 004a 0C4B     	 ldr r3,.L37+16
 1178 004c 1B88     	 ldrh r3,[r3]
 1179 004e 1B0A     	 lsr r3,r3,#8
 1180 0050 9BB2     	 uxth r3,r3
 1181 0052 DAB2     	 uxtb r2,r3
 1182 0054 064B     	 ldr r3,.L37+4
 1183 0056 1A72     	 strb r2,[r3,#8]
 287:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1184              	 .loc 3 287 0
 1185 0058 084B     	 ldr r3,.L37+16
 1186 005a 1B88     	 ldrh r3,[r3]
 1187 005c DAB2     	 uxtb r2,r3
 1188 005e 044B     	 ldr r3,.L37+4
 1189 0060 5A72     	 strb r2,[r3,#9]
 288:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1190              	 .loc 3 288 0
 1191 0062 034B     	 ldr r3,.L37+4
 1192 0064 FF22     	 mov r2,#255
 1193 0066 9A72     	 strb r2,[r3,#10]
 289:../samuel/samuel_io.c ****  }
 1194              	 .loc 3 289 0
 1195 0068 BD46     	 mov sp,r7
 1196              	 
 1197 006a 80BD     	 pop {r7,pc}
 1198              	.L38:
 1199              	 .align 2
 1200              	.L37:
 1201 006c 00000000 	 .word transmit_buf_size
 1202 0070 00000000 	 .word new_data
 1203 0074 00000000 	 .word node_id
 1204 0078 00000000 	 .word resultA2
 1205 007c 00000000 	 .word resultB2
 1206              	 .cfi_endproc
 1207              	.LFE299:
 1209              	 .section .text.new_data_analog2Back,"ax",%progbits
 1210              	 .align 2
 1211              	 .global new_data_analog2Back
 1212              	 .code 16
 1213              	 .thumb_func
 1215              	new_data_analog2Back:
 1216              	.LFB300:
 290:../samuel/samuel_io.c ****  //------------------------------------------------------
 291:../samuel/samuel_io.c **** 
 292:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 293:../samuel/samuel_io.c ****  {
 1217              	 .loc 3 293 0
 1218              	 .cfi_startproc
 1219 0000 80B5     	 push {r7,lr}
 1220              	.LCFI32:
 1221              	 .cfi_def_cfa_offset 8
 1222              	 .cfi_offset 7,-8
 1223              	 .cfi_offset 14,-4
 1224 0002 00AF     	 add r7,sp,#0
 1225              	.LCFI33:
 1226              	 .cfi_def_cfa_register 7
 294:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1227              	 .loc 3 294 0
 1228 0004 194B     	 ldr r3,.L40
 1229 0006 0B22     	 mov r2,#11
 1230 0008 1A70     	 strb r2,[r3]
 295:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1231              	 .loc 3 295 0
 1232 000a 194B     	 ldr r3,.L40+4
 1233 000c 4C22     	 mov r2,#76
 1234 000e 1A70     	 strb r2,[r3]
 296:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1235              	 .loc 3 296 0
 1236 0010 174B     	 ldr r3,.L40+4
 1237 0012 4922     	 mov r2,#73
 1238 0014 5A70     	 strb r2,[r3,#1]
 297:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1239              	 .loc 3 297 0
 1240 0016 164B     	 ldr r3,.L40+4
 1241 0018 4E22     	 mov r2,#78
 1242 001a 9A70     	 strb r2,[r3,#2]
 298:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1243              	 .loc 3 298 0
 1244 001c 154B     	 ldr r3,.L40+8
 1245 001e 1A78     	 ldrb r2,[r3]
 1246 0020 134B     	 ldr r3,.L40+4
 1247 0022 DA70     	 strb r2,[r3,#3]
 299:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1248              	 .loc 3 299 0
 1249 0024 114B     	 ldr r3,.L40
 1250 0026 1A78     	 ldrb r2,[r3]
 1251 0028 114B     	 ldr r3,.L40+4
 1252 002a 1A71     	 strb r2,[r3,#4]
 300:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1253              	 .loc 3 300 0
 1254 002c 104B     	 ldr r3,.L40+4
 1255 002e 6222     	 mov r2,#98
 1256 0030 5A71     	 strb r2,[r3,#5]
 301:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1257              	 .loc 3 301 0
 1258 0032 114B     	 ldr r3,.L40+12
 1259 0034 1B88     	 ldrh r3,[r3]
 1260 0036 1B0A     	 lsr r3,r3,#8
 1261 0038 9BB2     	 uxth r3,r3
 1262 003a DAB2     	 uxtb r2,r3
 1263 003c 0C4B     	 ldr r3,.L40+4
 1264 003e 9A71     	 strb r2,[r3,#6]
 302:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1265              	 .loc 3 302 0
 1266 0040 0D4B     	 ldr r3,.L40+12
 1267 0042 1B88     	 ldrh r3,[r3]
 1268 0044 DAB2     	 uxtb r2,r3
 1269 0046 0A4B     	 ldr r3,.L40+4
 1270 0048 DA71     	 strb r2,[r3,#7]
 303:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1271              	 .loc 3 303 0
 1272 004a 0C4B     	 ldr r3,.L40+16
 1273 004c 1B88     	 ldrh r3,[r3]
 1274 004e 1B0A     	 lsr r3,r3,#8
 1275 0050 9BB2     	 uxth r3,r3
 1276 0052 DAB2     	 uxtb r2,r3
 1277 0054 064B     	 ldr r3,.L40+4
 1278 0056 1A72     	 strb r2,[r3,#8]
 304:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1279              	 .loc 3 304 0
 1280 0058 084B     	 ldr r3,.L40+16
 1281 005a 1B88     	 ldrh r3,[r3]
 1282 005c DAB2     	 uxtb r2,r3
 1283 005e 044B     	 ldr r3,.L40+4
 1284 0060 5A72     	 strb r2,[r3,#9]
 305:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1285              	 .loc 3 305 0
 1286 0062 034B     	 ldr r3,.L40+4
 1287 0064 FF22     	 mov r2,#255
 1288 0066 9A72     	 strb r2,[r3,#10]
 306:../samuel/samuel_io.c ****  }
 1289              	 .loc 3 306 0
 1290 0068 BD46     	 mov sp,r7
 1291              	 
 1292 006a 80BD     	 pop {r7,pc}
 1293              	.L41:
 1294              	 .align 2
 1295              	.L40:
 1296 006c 00000000 	 .word transmit_buf_size
 1297 0070 00000000 	 .word new_data
 1298 0074 00000000 	 .word node_id
 1299 0078 00000000 	 .word resultC2
 1300 007c 00000000 	 .word resultD2
 1301              	 .cfi_endproc
 1302              	.LFE300:
 1304              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1305              	 .align 2
 1306              	 .global new_data_aktLichtBack
 1307              	 .code 16
 1308              	 .thumb_func
 1310              	new_data_aktLichtBack:
 1311              	.LFB301:
 307:../samuel/samuel_io.c ****  //------------------------------------------------------
 308:../samuel/samuel_io.c **** 
 309:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 310:../samuel/samuel_io.c ****  {
 1312              	 .loc 3 310 0
 1313              	 .cfi_startproc
 1314 0000 80B5     	 push {r7,lr}
 1315              	.LCFI34:
 1316              	 .cfi_def_cfa_offset 8
 1317              	 .cfi_offset 7,-8
 1318              	 .cfi_offset 14,-4
 1319 0002 00AF     	 add r7,sp,#0
 1320              	.LCFI35:
 1321              	 .cfi_def_cfa_register 7
 311:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1322              	 .loc 3 311 0
 1323 0004 194B     	 ldr r3,.L43
 1324 0006 0B22     	 mov r2,#11
 1325 0008 1A70     	 strb r2,[r3]
 312:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1326              	 .loc 3 312 0
 1327 000a 194B     	 ldr r3,.L43+4
 1328 000c 4C22     	 mov r2,#76
 1329 000e 1A70     	 strb r2,[r3]
 313:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1330              	 .loc 3 313 0
 1331 0010 174B     	 ldr r3,.L43+4
 1332 0012 4922     	 mov r2,#73
 1333 0014 5A70     	 strb r2,[r3,#1]
 314:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1334              	 .loc 3 314 0
 1335 0016 164B     	 ldr r3,.L43+4
 1336 0018 4E22     	 mov r2,#78
 1337 001a 9A70     	 strb r2,[r3,#2]
 315:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1338              	 .loc 3 315 0
 1339 001c 154B     	 ldr r3,.L43+8
 1340 001e 1A78     	 ldrb r2,[r3]
 1341 0020 134B     	 ldr r3,.L43+4
 1342 0022 DA70     	 strb r2,[r3,#3]
 316:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1343              	 .loc 3 316 0
 1344 0024 114B     	 ldr r3,.L43
 1345 0026 1A78     	 ldrb r2,[r3]
 1346 0028 114B     	 ldr r3,.L43+4
 1347 002a 1A71     	 strb r2,[r3,#4]
 317:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1348              	 .loc 3 317 0
 1349 002c 104B     	 ldr r3,.L43+4
 1350 002e 6622     	 mov r2,#102
 1351 0030 5A71     	 strb r2,[r3,#5]
 318:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1352              	 .loc 3 318 0
 1353 0032 114B     	 ldr r3,.L43+12
 1354 0034 1B88     	 ldrh r3,[r3]
 1355 0036 1B0A     	 lsr r3,r3,#8
 1356 0038 9BB2     	 uxth r3,r3
 1357 003a DAB2     	 uxtb r2,r3
 1358 003c 0C4B     	 ldr r3,.L43+4
 1359 003e 9A71     	 strb r2,[r3,#6]
 319:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1360              	 .loc 3 319 0
 1361 0040 0D4B     	 ldr r3,.L43+12
 1362 0042 1B88     	 ldrh r3,[r3]
 1363 0044 DAB2     	 uxtb r2,r3
 1364 0046 0A4B     	 ldr r3,.L43+4
 1365 0048 DA71     	 strb r2,[r3,#7]
 320:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1366              	 .loc 3 320 0
 1367 004a 0C4B     	 ldr r3,.L43+16
 1368 004c 1B88     	 ldrh r3,[r3]
 1369 004e 1B0A     	 lsr r3,r3,#8
 1370 0050 9BB2     	 uxth r3,r3
 1371 0052 DAB2     	 uxtb r2,r3
 1372 0054 064B     	 ldr r3,.L43+4
 1373 0056 1A72     	 strb r2,[r3,#8]
 321:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1374              	 .loc 3 321 0
 1375 0058 084B     	 ldr r3,.L43+16
 1376 005a 1B88     	 ldrh r3,[r3]
 1377 005c DAB2     	 uxtb r2,r3
 1378 005e 044B     	 ldr r3,.L43+4
 1379 0060 5A72     	 strb r2,[r3,#9]
 322:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1380              	 .loc 3 322 0
 1381 0062 034B     	 ldr r3,.L43+4
 1382 0064 FF22     	 mov r2,#255
 1383 0066 9A72     	 strb r2,[r3,#10]
 323:../samuel/samuel_io.c ****  }
 1384              	 .loc 3 323 0
 1385 0068 BD46     	 mov sp,r7
 1386              	 
 1387 006a 80BD     	 pop {r7,pc}
 1388              	.L44:
 1389              	 .align 2
 1390              	.L43:
 1391 006c 00000000 	 .word transmit_buf_size
 1392 0070 00000000 	 .word new_data
 1393 0074 00000000 	 .word node_id
 1394 0078 00000000 	 .word dimAkt_Ww
 1395 007c 00000000 	 .word dimAkt_Cw
 1396              	 .cfi_endproc
 1397              	.LFE301:
 1399              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1400              	 .align 2
 1401              	 .global new_data_offLichtBack
 1402              	 .code 16
 1403              	 .thumb_func
 1405              	new_data_offLichtBack:
 1406              	.LFB302:
 324:../samuel/samuel_io.c ****  //------------------------------------------------------
 325:../samuel/samuel_io.c **** 
 326:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 327:../samuel/samuel_io.c ****  {
 1407              	 .loc 3 327 0
 1408              	 .cfi_startproc
 1409 0000 80B5     	 push {r7,lr}
 1410              	.LCFI36:
 1411              	 .cfi_def_cfa_offset 8
 1412              	 .cfi_offset 7,-8
 1413              	 .cfi_offset 14,-4
 1414 0002 00AF     	 add r7,sp,#0
 1415              	.LCFI37:
 1416              	 .cfi_def_cfa_register 7
 328:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1417              	 .loc 3 328 0
 1418 0004 1D4B     	 ldr r3,.L46
 1419 0006 0D22     	 mov r2,#13
 1420 0008 1A70     	 strb r2,[r3]
 329:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1421              	 .loc 3 329 0
 1422 000a 1D4B     	 ldr r3,.L46+4
 1423 000c 4C22     	 mov r2,#76
 1424 000e 1A70     	 strb r2,[r3]
 330:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1425              	 .loc 3 330 0
 1426 0010 1B4B     	 ldr r3,.L46+4
 1427 0012 4922     	 mov r2,#73
 1428 0014 5A70     	 strb r2,[r3,#1]
 331:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1429              	 .loc 3 331 0
 1430 0016 1A4B     	 ldr r3,.L46+4
 1431 0018 4E22     	 mov r2,#78
 1432 001a 9A70     	 strb r2,[r3,#2]
 332:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1433              	 .loc 3 332 0
 1434 001c 194B     	 ldr r3,.L46+8
 1435 001e 1A78     	 ldrb r2,[r3]
 1436 0020 174B     	 ldr r3,.L46+4
 1437 0022 DA70     	 strb r2,[r3,#3]
 333:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1438              	 .loc 3 333 0
 1439 0024 154B     	 ldr r3,.L46
 1440 0026 1A78     	 ldrb r2,[r3]
 1441 0028 154B     	 ldr r3,.L46+4
 1442 002a 1A71     	 strb r2,[r3,#4]
 334:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1443              	 .loc 3 334 0
 1444 002c 144B     	 ldr r3,.L46+4
 1445 002e 6722     	 mov r2,#103
 1446 0030 5A71     	 strb r2,[r3,#5]
 335:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1447              	 .loc 3 335 0
 1448 0032 154B     	 ldr r3,.L46+12
 1449 0034 1B88     	 ldrh r3,[r3]
 1450 0036 1B0A     	 lsr r3,r3,#8
 1451 0038 9BB2     	 uxth r3,r3
 1452 003a DAB2     	 uxtb r2,r3
 1453 003c 104B     	 ldr r3,.L46+4
 1454 003e 9A71     	 strb r2,[r3,#6]
 336:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1455              	 .loc 3 336 0
 1456 0040 114B     	 ldr r3,.L46+12
 1457 0042 1B88     	 ldrh r3,[r3]
 1458 0044 DAB2     	 uxtb r2,r3
 1459 0046 0E4B     	 ldr r3,.L46+4
 1460 0048 DA71     	 strb r2,[r3,#7]
 337:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1461              	 .loc 3 337 0
 1462 004a 104B     	 ldr r3,.L46+16
 1463 004c 1B88     	 ldrh r3,[r3]
 1464 004e 1B0A     	 lsr r3,r3,#8
 1465 0050 9BB2     	 uxth r3,r3
 1466 0052 DAB2     	 uxtb r2,r3
 1467 0054 0A4B     	 ldr r3,.L46+4
 1468 0056 1A72     	 strb r2,[r3,#8]
 338:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1469              	 .loc 3 338 0
 1470 0058 0C4B     	 ldr r3,.L46+16
 1471 005a 1B88     	 ldrh r3,[r3]
 1472 005c DAB2     	 uxtb r2,r3
 1473 005e 084B     	 ldr r3,.L46+4
 1474 0060 5A72     	 strb r2,[r3,#9]
 339:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1475              	 .loc 3 339 0
 1476 0062 0B4B     	 ldr r3,.L46+20
 1477 0064 1A78     	 ldrb r2,[r3]
 1478 0066 064B     	 ldr r3,.L46+4
 1479 0068 9A72     	 strb r2,[r3,#10]
 340:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1480              	 .loc 3 340 0
 1481 006a 0A4B     	 ldr r3,.L46+24
 1482 006c 1A78     	 ldrb r2,[r3]
 1483 006e 044B     	 ldr r3,.L46+4
 1484 0070 DA72     	 strb r2,[r3,#11]
 341:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1485              	 .loc 3 341 0
 1486 0072 034B     	 ldr r3,.L46+4
 1487 0074 FF22     	 mov r2,#255
 1488 0076 1A73     	 strb r2,[r3,#12]
 342:../samuel/samuel_io.c ****  }
 1489              	 .loc 3 342 0
 1490 0078 BD46     	 mov sp,r7
 1491              	 
 1492 007a 80BD     	 pop {r7,pc}
 1493              	.L47:
 1494              	 .align 2
 1495              	.L46:
 1496 007c 00000000 	 .word transmit_buf_size
 1497 0080 00000000 	 .word new_data
 1498 0084 00000000 	 .word node_id
 1499 0088 00000000 	 .word dimOff_Ww
 1500 008c 00000000 	 .word dimOff_Cw
 1501 0090 00000000 	 .word RegOnOff
 1502 0094 00000000 	 .word RegOnOff2
 1503              	 .cfi_endproc
 1504              	.LFE302:
 1506              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1507              	 .align 2
 1508              	 .global new_data_Bright_Color_Back
 1509              	 .code 16
 1510              	 .thumb_func
 1512              	new_data_Bright_Color_Back:
 1513              	.LFB303:
 343:../samuel/samuel_io.c ****  //------------------------------------------------------
 344:../samuel/samuel_io.c **** 
 345:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 346:../samuel/samuel_io.c ****   {
 1514              	 .loc 3 346 0
 1515              	 .cfi_startproc
 1516 0000 80B5     	 push {r7,lr}
 1517              	.LCFI38:
 1518              	 .cfi_def_cfa_offset 8
 1519              	 .cfi_offset 7,-8
 1520              	 .cfi_offset 14,-4
 1521 0002 00AF     	 add r7,sp,#0
 1522              	.LCFI39:
 1523              	 .cfi_def_cfa_register 7
 347:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1524              	 .loc 3 347 0
 1525 0004 194B     	 ldr r3,.L49
 1526 0006 0B22     	 mov r2,#11
 1527 0008 1A70     	 strb r2,[r3]
 348:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1528              	 .loc 3 348 0
 1529 000a 194B     	 ldr r3,.L49+4
 1530 000c 4C22     	 mov r2,#76
 1531 000e 1A70     	 strb r2,[r3]
 349:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1532              	 .loc 3 349 0
 1533 0010 174B     	 ldr r3,.L49+4
 1534 0012 4922     	 mov r2,#73
 1535 0014 5A70     	 strb r2,[r3,#1]
 350:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1536              	 .loc 3 350 0
 1537 0016 164B     	 ldr r3,.L49+4
 1538 0018 4E22     	 mov r2,#78
 1539 001a 9A70     	 strb r2,[r3,#2]
 351:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1540              	 .loc 3 351 0
 1541 001c 154B     	 ldr r3,.L49+8
 1542 001e 1A78     	 ldrb r2,[r3]
 1543 0020 134B     	 ldr r3,.L49+4
 1544 0022 DA70     	 strb r2,[r3,#3]
 352:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1545              	 .loc 3 352 0
 1546 0024 114B     	 ldr r3,.L49
 1547 0026 1A78     	 ldrb r2,[r3]
 1548 0028 114B     	 ldr r3,.L49+4
 1549 002a 1A71     	 strb r2,[r3,#4]
 353:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1550              	 .loc 3 353 0
 1551 002c 104B     	 ldr r3,.L49+4
 1552 002e 6822     	 mov r2,#104
 1553 0030 5A71     	 strb r2,[r3,#5]
 354:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1554              	 .loc 3 354 0
 1555 0032 114B     	 ldr r3,.L49+12
 1556 0034 1B88     	 ldrh r3,[r3]
 1557 0036 1B0A     	 lsr r3,r3,#8
 1558 0038 9BB2     	 uxth r3,r3
 1559 003a DAB2     	 uxtb r2,r3
 1560 003c 0C4B     	 ldr r3,.L49+4
 1561 003e 9A71     	 strb r2,[r3,#6]
 355:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1562              	 .loc 3 355 0
 1563 0040 0D4B     	 ldr r3,.L49+12
 1564 0042 1B88     	 ldrh r3,[r3]
 1565 0044 DAB2     	 uxtb r2,r3
 1566 0046 0A4B     	 ldr r3,.L49+4
 1567 0048 DA71     	 strb r2,[r3,#7]
 356:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1568              	 .loc 3 356 0
 1569 004a 0C4B     	 ldr r3,.L49+16
 1570 004c 1B88     	 ldrh r3,[r3]
 1571 004e 1B0A     	 lsr r3,r3,#8
 1572 0050 9BB2     	 uxth r3,r3
 1573 0052 DAB2     	 uxtb r2,r3
 1574 0054 064B     	 ldr r3,.L49+4
 1575 0056 1A72     	 strb r2,[r3,#8]
 357:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1576              	 .loc 3 357 0
 1577 0058 084B     	 ldr r3,.L49+16
 1578 005a 1B88     	 ldrh r3,[r3]
 1579 005c DAB2     	 uxtb r2,r3
 1580 005e 044B     	 ldr r3,.L49+4
 1581 0060 5A72     	 strb r2,[r3,#9]
 358:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1582              	 .loc 3 358 0
 1583 0062 034B     	 ldr r3,.L49+4
 1584 0064 FF22     	 mov r2,#255
 1585 0066 9A72     	 strb r2,[r3,#10]
 359:../samuel/samuel_io.c ****   }
 1586              	 .loc 3 359 0
 1587 0068 BD46     	 mov sp,r7
 1588              	 
 1589 006a 80BD     	 pop {r7,pc}
 1590              	.L50:
 1591              	 .align 2
 1592              	.L49:
 1593 006c 00000000 	 .word transmit_buf_size
 1594 0070 00000000 	 .word new_data
 1595 0074 00000000 	 .word node_id
 1596 0078 00000000 	 .word Brightness_Gen
 1597 007c 00000000 	 .word ColorQuot_Gen
 1598              	 .cfi_endproc
 1599              	.LFE303:
 1601              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1602              	 .align 2
 1603              	 .global new_data_Quot_Walk_Back
 1604              	 .code 16
 1605              	 .thumb_func
 1607              	new_data_Quot_Walk_Back:
 1608              	.LFB304:
 360:../samuel/samuel_io.c ****   //------------------------------------------------------
 361:../samuel/samuel_io.c **** 
 362:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 363:../samuel/samuel_io.c ****   {
 1609              	 .loc 3 363 0
 1610              	 .cfi_startproc
 1611 0000 80B5     	 push {r7,lr}
 1612              	.LCFI40:
 1613              	 .cfi_def_cfa_offset 8
 1614              	 .cfi_offset 7,-8
 1615              	 .cfi_offset 14,-4
 1616 0002 00AF     	 add r7,sp,#0
 1617              	.LCFI41:
 1618              	 .cfi_def_cfa_register 7
 364:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1619              	 .loc 3 364 0
 1620 0004 194B     	 ldr r3,.L52
 1621 0006 0B22     	 mov r2,#11
 1622 0008 1A70     	 strb r2,[r3]
 365:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1623              	 .loc 3 365 0
 1624 000a 194B     	 ldr r3,.L52+4
 1625 000c 4C22     	 mov r2,#76
 1626 000e 1A70     	 strb r2,[r3]
 366:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1627              	 .loc 3 366 0
 1628 0010 174B     	 ldr r3,.L52+4
 1629 0012 4922     	 mov r2,#73
 1630 0014 5A70     	 strb r2,[r3,#1]
 367:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1631              	 .loc 3 367 0
 1632 0016 164B     	 ldr r3,.L52+4
 1633 0018 4E22     	 mov r2,#78
 1634 001a 9A70     	 strb r2,[r3,#2]
 368:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1635              	 .loc 3 368 0
 1636 001c 154B     	 ldr r3,.L52+8
 1637 001e 1A78     	 ldrb r2,[r3]
 1638 0020 134B     	 ldr r3,.L52+4
 1639 0022 DA70     	 strb r2,[r3,#3]
 369:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1640              	 .loc 3 369 0
 1641 0024 114B     	 ldr r3,.L52
 1642 0026 1A78     	 ldrb r2,[r3]
 1643 0028 114B     	 ldr r3,.L52+4
 1644 002a 1A71     	 strb r2,[r3,#4]
 370:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1645              	 .loc 3 370 0
 1646 002c 104B     	 ldr r3,.L52+4
 1647 002e 6922     	 mov r2,#105
 1648 0030 5A71     	 strb r2,[r3,#5]
 371:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1649              	 .loc 3 371 0
 1650 0032 114B     	 ldr r3,.L52+12
 1651 0034 1B88     	 ldrh r3,[r3]
 1652 0036 1B0A     	 lsr r3,r3,#8
 1653 0038 9BB2     	 uxth r3,r3
 1654 003a DAB2     	 uxtb r2,r3
 1655 003c 0C4B     	 ldr r3,.L52+4
 1656 003e 9A71     	 strb r2,[r3,#6]
 372:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1657              	 .loc 3 372 0
 1658 0040 0D4B     	 ldr r3,.L52+12
 1659 0042 1B88     	 ldrh r3,[r3]
 1660 0044 DAB2     	 uxtb r2,r3
 1661 0046 0A4B     	 ldr r3,.L52+4
 1662 0048 DA71     	 strb r2,[r3,#7]
 373:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1663              	 .loc 3 373 0
 1664 004a 0C4B     	 ldr r3,.L52+16
 1665 004c 1B88     	 ldrh r3,[r3]
 1666 004e 1B0A     	 lsr r3,r3,#8
 1667 0050 9BB2     	 uxth r3,r3
 1668 0052 DAB2     	 uxtb r2,r3
 1669 0054 064B     	 ldr r3,.L52+4
 1670 0056 1A72     	 strb r2,[r3,#8]
 374:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1671              	 .loc 3 374 0
 1672 0058 084B     	 ldr r3,.L52+16
 1673 005a 1B88     	 ldrh r3,[r3]
 1674 005c DAB2     	 uxtb r2,r3
 1675 005e 044B     	 ldr r3,.L52+4
 1676 0060 5A72     	 strb r2,[r3,#9]
 375:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1677              	 .loc 3 375 0
 1678 0062 034B     	 ldr r3,.L52+4
 1679 0064 FF22     	 mov r2,#255
 1680 0066 9A72     	 strb r2,[r3,#10]
 376:../samuel/samuel_io.c ****   }
 1681              	 .loc 3 376 0
 1682 0068 BD46     	 mov sp,r7
 1683              	 
 1684 006a 80BD     	 pop {r7,pc}
 1685              	.L53:
 1686              	 .align 2
 1687              	.L52:
 1688 006c 00000000 	 .word transmit_buf_size
 1689 0070 00000000 	 .word new_data
 1690 0074 00000000 	 .word node_id
 1691 0078 00000000 	 .word linearwalk_gen
 1692 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1693              	 .cfi_endproc
 1694              	.LFE304:
 1696              	 .section .text.new_data_HalloBack,"ax",%progbits
 1697              	 .align 2
 1698              	 .global new_data_HalloBack
 1699              	 .code 16
 1700              	 .thumb_func
 1702              	new_data_HalloBack:
 1703              	.LFB305:
 377:../samuel/samuel_io.c ****  //------------------------------------------
 378:../samuel/samuel_io.c **** 
 379:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 380:../samuel/samuel_io.c ****   {
 1704              	 .loc 3 380 0
 1705              	 .cfi_startproc
 1706 0000 80B5     	 push {r7,lr}
 1707              	.LCFI42:
 1708              	 .cfi_def_cfa_offset 8
 1709              	 .cfi_offset 7,-8
 1710              	 .cfi_offset 14,-4
 1711 0002 00AF     	 add r7,sp,#0
 1712              	.LCFI43:
 1713              	 .cfi_def_cfa_register 7
 381:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1714              	 .loc 3 381 0
 1715 0004 134B     	 ldr r3,.L55
 1716 0006 0B22     	 mov r2,#11
 1717 0008 1A70     	 strb r2,[r3]
 382:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1718              	 .loc 3 382 0
 1719 000a 134B     	 ldr r3,.L55+4
 1720 000c 4C22     	 mov r2,#76
 1721 000e 1A70     	 strb r2,[r3]
 383:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1722              	 .loc 3 383 0
 1723 0010 114B     	 ldr r3,.L55+4
 1724 0012 4922     	 mov r2,#73
 1725 0014 5A70     	 strb r2,[r3,#1]
 384:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1726              	 .loc 3 384 0
 1727 0016 104B     	 ldr r3,.L55+4
 1728 0018 4E22     	 mov r2,#78
 1729 001a 9A70     	 strb r2,[r3,#2]
 385:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1730              	 .loc 3 385 0
 1731 001c 0F4B     	 ldr r3,.L55+8
 1732 001e 1A78     	 ldrb r2,[r3]
 1733 0020 0D4B     	 ldr r3,.L55+4
 1734 0022 DA70     	 strb r2,[r3,#3]
 386:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1735              	 .loc 3 386 0
 1736 0024 0B4B     	 ldr r3,.L55
 1737 0026 1A78     	 ldrb r2,[r3]
 1738 0028 0B4B     	 ldr r3,.L55+4
 1739 002a 1A71     	 strb r2,[r3,#4]
 387:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1740              	 .loc 3 387 0
 1741 002c 0A4B     	 ldr r3,.L55+4
 1742 002e 6A22     	 mov r2,#106
 1743 0030 5A71     	 strb r2,[r3,#5]
 388:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1744              	 .loc 3 388 0
 1745 0032 094B     	 ldr r3,.L55+4
 1746 0034 6F22     	 mov r2,#111
 1747 0036 9A71     	 strb r2,[r3,#6]
 389:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1748              	 .loc 3 389 0
 1749 0038 074B     	 ldr r3,.L55+4
 1750 003a 6B22     	 mov r2,#107
 1751 003c DA71     	 strb r2,[r3,#7]
 390:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1752              	 .loc 3 390 0
 1753 003e 064B     	 ldr r3,.L55+4
 1754 0040 6F22     	 mov r2,#111
 1755 0042 1A72     	 strb r2,[r3,#8]
 391:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1756              	 .loc 3 391 0
 1757 0044 044B     	 ldr r3,.L55+4
 1758 0046 6B22     	 mov r2,#107
 1759 0048 5A72     	 strb r2,[r3,#9]
 392:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1760              	 .loc 3 392 0
 1761 004a 034B     	 ldr r3,.L55+4
 1762 004c FF22     	 mov r2,#255
 1763 004e 9A72     	 strb r2,[r3,#10]
 393:../samuel/samuel_io.c ****   }
 1764              	 .loc 3 393 0
 1765 0050 BD46     	 mov sp,r7
 1766              	 
 1767 0052 80BD     	 pop {r7,pc}
 1768              	.L56:
 1769              	 .align 2
 1770              	.L55:
 1771 0054 00000000 	 .word transmit_buf_size
 1772 0058 00000000 	 .word new_data
 1773 005c 00000000 	 .word node_id
 1774              	 .cfi_endproc
 1775              	.LFE305:
 1777              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 1778              	 .align 2
 1779              	 .global new_data_neuNodeIdBack
 1780              	 .code 16
 1781              	 .thumb_func
 1783              	new_data_neuNodeIdBack:
 1784              	.LFB306:
 394:../samuel/samuel_io.c ****   //------------------------------------------------------
 395:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 396:../samuel/samuel_io.c ****    {
 1785              	 .loc 3 396 0
 1786              	 .cfi_startproc
 1787 0000 80B5     	 push {r7,lr}
 1788              	.LCFI44:
 1789              	 .cfi_def_cfa_offset 8
 1790              	 .cfi_offset 7,-8
 1791              	 .cfi_offset 14,-4
 1792 0002 00AF     	 add r7,sp,#0
 1793              	.LCFI45:
 1794              	 .cfi_def_cfa_register 7
 397:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 1795              	 .loc 3 397 0
 1796 0004 1B4B     	 ldr r3,.L58
 1797 0006 0C22     	 mov r2,#12
 1798 0008 1A70     	 strb r2,[r3]
 398:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1799              	 .loc 3 398 0
 1800 000a 1B4B     	 ldr r3,.L58+4
 1801 000c 4C22     	 mov r2,#76
 1802 000e 1A70     	 strb r2,[r3]
 399:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1803              	 .loc 3 399 0
 1804 0010 194B     	 ldr r3,.L58+4
 1805 0012 4922     	 mov r2,#73
 1806 0014 5A70     	 strb r2,[r3,#1]
 400:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1807              	 .loc 3 400 0
 1808 0016 184B     	 ldr r3,.L58+4
 1809 0018 4E22     	 mov r2,#78
 1810 001a 9A70     	 strb r2,[r3,#2]
 401:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1811              	 .loc 3 401 0
 1812 001c 174B     	 ldr r3,.L58+8
 1813 001e 1A78     	 ldrb r2,[r3]
 1814 0020 154B     	 ldr r3,.L58+4
 1815 0022 DA70     	 strb r2,[r3,#3]
 402:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1816              	 .loc 3 402 0
 1817 0024 134B     	 ldr r3,.L58
 1818 0026 1A78     	 ldrb r2,[r3]
 1819 0028 134B     	 ldr r3,.L58+4
 1820 002a 1A71     	 strb r2,[r3,#4]
 403:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 1821              	 .loc 3 403 0
 1822 002c 124B     	 ldr r3,.L58+4
 1823 002e 6B22     	 mov r2,#107
 1824 0030 5A71     	 strb r2,[r3,#5]
 404:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 1825              	 .loc 3 404 0
 1826 0032 134B     	 ldr r3,.L58+12
 1827 0034 1A78     	 ldrb r2,[r3]
 1828 0036 104B     	 ldr r3,.L58+4
 1829 0038 9A71     	 strb r2,[r3,#6]
 405:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 1830              	 .loc 3 405 0
 1831 003a 124B     	 ldr r3,.L58+16
 1832 003c 1B88     	 ldrh r3,[r3]
 1833 003e 1B0A     	 lsr r3,r3,#8
 1834 0040 9BB2     	 uxth r3,r3
 1835 0042 DAB2     	 uxtb r2,r3
 1836 0044 0C4B     	 ldr r3,.L58+4
 1837 0046 DA71     	 strb r2,[r3,#7]
 406:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 1838              	 .loc 3 406 0
 1839 0048 0E4B     	 ldr r3,.L58+16
 1840 004a 1B88     	 ldrh r3,[r3]
 1841 004c DAB2     	 uxtb r2,r3
 1842 004e 0A4B     	 ldr r3,.L58+4
 1843 0050 1A72     	 strb r2,[r3,#8]
 407:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 1844              	 .loc 3 407 0
 1845 0052 0D4B     	 ldr r3,.L58+20
 1846 0054 1B88     	 ldrh r3,[r3]
 1847 0056 1B0A     	 lsr r3,r3,#8
 1848 0058 9BB2     	 uxth r3,r3
 1849 005a DAB2     	 uxtb r2,r3
 1850 005c 064B     	 ldr r3,.L58+4
 1851 005e 5A72     	 strb r2,[r3,#9]
 408:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 1852              	 .loc 3 408 0
 1853 0060 094B     	 ldr r3,.L58+20
 1854 0062 1B88     	 ldrh r3,[r3]
 1855 0064 DAB2     	 uxtb r2,r3
 1856 0066 044B     	 ldr r3,.L58+4
 1857 0068 9A72     	 strb r2,[r3,#10]
 409:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 1858              	 .loc 3 409 0
 1859 006a 034B     	 ldr r3,.L58+4
 1860 006c FF22     	 mov r2,#255
 1861 006e DA72     	 strb r2,[r3,#11]
 410:../samuel/samuel_io.c ****    }
 1862              	 .loc 3 410 0
 1863 0070 BD46     	 mov sp,r7
 1864              	 
 1865 0072 80BD     	 pop {r7,pc}
 1866              	.L59:
 1867              	 .align 2
 1868              	.L58:
 1869 0074 00000000 	 .word transmit_buf_size
 1870 0078 00000000 	 .word new_data
 1871 007c 00000000 	 .word node_id
 1872 0080 00000000 	 .word node_id_neu
 1873 0084 00000000 	 .word Ser_NrH
 1874 0088 00000000 	 .word Ser_NrL
 1875              	 .cfi_endproc
 1876              	.LFE306:
 1878              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 1879              	 .align 2
 1880              	 .global new_data_neuSerNrBack
 1881              	 .code 16
 1882              	 .thumb_func
 1884              	new_data_neuSerNrBack:
 1885              	.LFB307:
 411:../samuel/samuel_io.c ****    //------------------------------------------------------
 412:../samuel/samuel_io.c **** 
 413:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 414:../samuel/samuel_io.c ****    {
 1886              	 .loc 3 414 0
 1887              	 .cfi_startproc
 1888 0000 80B5     	 push {r7,lr}
 1889              	.LCFI46:
 1890              	 .cfi_def_cfa_offset 8
 1891              	 .cfi_offset 7,-8
 1892              	 .cfi_offset 14,-4
 1893 0002 00AF     	 add r7,sp,#0
 1894              	.LCFI47:
 1895              	 .cfi_def_cfa_register 7
 415:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 1896              	 .loc 3 415 0
 1897 0004 254B     	 ldr r3,.L61
 1898 0006 0F22     	 mov r2,#15
 1899 0008 1A70     	 strb r2,[r3]
 416:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1900              	 .loc 3 416 0
 1901 000a 254B     	 ldr r3,.L61+4
 1902 000c 4C22     	 mov r2,#76
 1903 000e 1A70     	 strb r2,[r3]
 417:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1904              	 .loc 3 417 0
 1905 0010 234B     	 ldr r3,.L61+4
 1906 0012 4922     	 mov r2,#73
 1907 0014 5A70     	 strb r2,[r3,#1]
 418:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1908              	 .loc 3 418 0
 1909 0016 224B     	 ldr r3,.L61+4
 1910 0018 4E22     	 mov r2,#78
 1911 001a 9A70     	 strb r2,[r3,#2]
 419:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1912              	 .loc 3 419 0
 1913 001c 214B     	 ldr r3,.L61+8
 1914 001e 1A78     	 ldrb r2,[r3]
 1915 0020 1F4B     	 ldr r3,.L61+4
 1916 0022 DA70     	 strb r2,[r3,#3]
 420:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1917              	 .loc 3 420 0
 1918 0024 1D4B     	 ldr r3,.L61
 1919 0026 1A78     	 ldrb r2,[r3]
 1920 0028 1D4B     	 ldr r3,.L61+4
 1921 002a 1A71     	 strb r2,[r3,#4]
 421:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 1922              	 .loc 3 421 0
 1923 002c 1C4B     	 ldr r3,.L61+4
 1924 002e 6C22     	 mov r2,#108
 1925 0030 5A71     	 strb r2,[r3,#5]
 422:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 1926              	 .loc 3 422 0
 1927 0032 1D4B     	 ldr r3,.L61+12
 1928 0034 1B88     	 ldrh r3,[r3]
 1929 0036 1B0A     	 lsr r3,r3,#8
 1930 0038 9BB2     	 uxth r3,r3
 1931 003a DAB2     	 uxtb r2,r3
 1932 003c 184B     	 ldr r3,.L61+4
 1933 003e 9A71     	 strb r2,[r3,#6]
 423:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 1934              	 .loc 3 423 0
 1935 0040 194B     	 ldr r3,.L61+12
 1936 0042 1B88     	 ldrh r3,[r3]
 1937 0044 DAB2     	 uxtb r2,r3
 1938 0046 164B     	 ldr r3,.L61+4
 1939 0048 DA71     	 strb r2,[r3,#7]
 424:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 1940              	 .loc 3 424 0
 1941 004a 184B     	 ldr r3,.L61+16
 1942 004c 1B88     	 ldrh r3,[r3]
 1943 004e 1B0A     	 lsr r3,r3,#8
 1944 0050 9BB2     	 uxth r3,r3
 1945 0052 DAB2     	 uxtb r2,r3
 1946 0054 124B     	 ldr r3,.L61+4
 1947 0056 1A72     	 strb r2,[r3,#8]
 425:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 1948              	 .loc 3 425 0
 1949 0058 144B     	 ldr r3,.L61+16
 1950 005a 1B88     	 ldrh r3,[r3]
 1951 005c DAB2     	 uxtb r2,r3
 1952 005e 104B     	 ldr r3,.L61+4
 1953 0060 5A72     	 strb r2,[r3,#9]
 426:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 1954              	 .loc 3 426 0
 1955 0062 134B     	 ldr r3,.L61+20
 1956 0064 1B88     	 ldrh r3,[r3]
 1957 0066 1B0A     	 lsr r3,r3,#8
 1958 0068 9BB2     	 uxth r3,r3
 1959 006a DAB2     	 uxtb r2,r3
 1960 006c 0C4B     	 ldr r3,.L61+4
 1961 006e 9A72     	 strb r2,[r3,#10]
 427:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 1962              	 .loc 3 427 0
 1963 0070 0F4B     	 ldr r3,.L61+20
 1964 0072 1B88     	 ldrh r3,[r3]
 1965 0074 DAB2     	 uxtb r2,r3
 1966 0076 0A4B     	 ldr r3,.L61+4
 1967 0078 DA72     	 strb r2,[r3,#11]
 428:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 1968              	 .loc 3 428 0
 1969 007a 0E4B     	 ldr r3,.L61+24
 1970 007c 1B88     	 ldrh r3,[r3]
 1971 007e 1B0A     	 lsr r3,r3,#8
 1972 0080 9BB2     	 uxth r3,r3
 1973 0082 DAB2     	 uxtb r2,r3
 1974 0084 064B     	 ldr r3,.L61+4
 1975 0086 1A73     	 strb r2,[r3,#12]
 429:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 1976              	 .loc 3 429 0
 1977 0088 0A4B     	 ldr r3,.L61+24
 1978 008a 1B88     	 ldrh r3,[r3]
 1979 008c DAB2     	 uxtb r2,r3
 1980 008e 044B     	 ldr r3,.L61+4
 1981 0090 5A73     	 strb r2,[r3,#13]
 430:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 1982              	 .loc 3 430 0
 1983 0092 034B     	 ldr r3,.L61+4
 1984 0094 FF22     	 mov r2,#255
 1985 0096 9A73     	 strb r2,[r3,#14]
 431:../samuel/samuel_io.c ****    }
 1986              	 .loc 3 431 0
 1987 0098 BD46     	 mov sp,r7
 1988              	 
 1989 009a 80BD     	 pop {r7,pc}
 1990              	.L62:
 1991              	 .align 2
 1992              	.L61:
 1993 009c 00000000 	 .word transmit_buf_size
 1994 00a0 00000000 	 .word new_data
 1995 00a4 00000000 	 .word node_id
 1996 00a8 00000000 	 .word neu_Ser_NrH
 1997 00ac 00000000 	 .word neu_Ser_NrL
 1998 00b0 00000000 	 .word Ser_NrH
 1999 00b4 00000000 	 .word Ser_NrL
 2000              	 .cfi_endproc
 2001              	.LFE307:
 2003              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 2004              	 .align 2
 2005              	 .global new_data_NodeIdBack
 2006              	 .code 16
 2007              	 .thumb_func
 2009              	new_data_NodeIdBack:
 2010              	.LFB308:
 432:../samuel/samuel_io.c ****    //------------------------------------------------------
 433:../samuel/samuel_io.c **** 
 434:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 435:../samuel/samuel_io.c ****    {
 2011              	 .loc 3 435 0
 2012              	 .cfi_startproc
 2013 0000 80B5     	 push {r7,lr}
 2014              	.LCFI48:
 2015              	 .cfi_def_cfa_offset 8
 2016              	 .cfi_offset 7,-8
 2017              	 .cfi_offset 14,-4
 2018 0002 00AF     	 add r7,sp,#0
 2019              	.LCFI49:
 2020              	 .cfi_def_cfa_register 7
 436:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 2021              	 .loc 3 436 0
 2022 0004 1D4B     	 ldr r3,.L64
 2023 0006 0D22     	 mov r2,#13
 2024 0008 1A70     	 strb r2,[r3]
 437:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2025              	 .loc 3 437 0
 2026 000a 1D4B     	 ldr r3,.L64+4
 2027 000c 4C22     	 mov r2,#76
 2028 000e 1A70     	 strb r2,[r3]
 438:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2029              	 .loc 3 438 0
 2030 0010 1B4B     	 ldr r3,.L64+4
 2031 0012 4922     	 mov r2,#73
 2032 0014 5A70     	 strb r2,[r3,#1]
 439:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2033              	 .loc 3 439 0
 2034 0016 1A4B     	 ldr r3,.L64+4
 2035 0018 4E22     	 mov r2,#78
 2036 001a 9A70     	 strb r2,[r3,#2]
 440:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2037              	 .loc 3 440 0
 2038 001c 194B     	 ldr r3,.L64+8
 2039 001e 1A78     	 ldrb r2,[r3]
 2040 0020 174B     	 ldr r3,.L64+4
 2041 0022 DA70     	 strb r2,[r3,#3]
 441:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2042              	 .loc 3 441 0
 2043 0024 154B     	 ldr r3,.L64
 2044 0026 1A78     	 ldrb r2,[r3]
 2045 0028 154B     	 ldr r3,.L64+4
 2046 002a 1A71     	 strb r2,[r3,#4]
 442:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 2047              	 .loc 3 442 0
 2048 002c 144B     	 ldr r3,.L64+4
 2049 002e 6D22     	 mov r2,#109
 2050 0030 5A71     	 strb r2,[r3,#5]
 443:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 2051              	 .loc 3 443 0
 2052 0032 154B     	 ldr r3,.L64+12
 2053 0034 1A78     	 ldrb r2,[r3]
 2054 0036 124B     	 ldr r3,.L64+4
 2055 0038 9A71     	 strb r2,[r3,#6]
 444:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 2056              	 .loc 3 444 0
 2057 003a 124B     	 ldr r3,.L64+8
 2058 003c 1A78     	 ldrb r2,[r3]
 2059 003e 104B     	 ldr r3,.L64+4
 2060 0040 DA71     	 strb r2,[r3,#7]
 445:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 2061              	 .loc 3 445 0
 2062 0042 124B     	 ldr r3,.L64+16
 2063 0044 1B88     	 ldrh r3,[r3]
 2064 0046 1B0A     	 lsr r3,r3,#8
 2065 0048 9BB2     	 uxth r3,r3
 2066 004a DAB2     	 uxtb r2,r3
 2067 004c 0C4B     	 ldr r3,.L64+4
 2068 004e 1A72     	 strb r2,[r3,#8]
 446:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 2069              	 .loc 3 446 0
 2070 0050 0E4B     	 ldr r3,.L64+16
 2071 0052 1B88     	 ldrh r3,[r3]
 2072 0054 DAB2     	 uxtb r2,r3
 2073 0056 0A4B     	 ldr r3,.L64+4
 2074 0058 5A72     	 strb r2,[r3,#9]
 447:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 2075              	 .loc 3 447 0
 2076 005a 0D4B     	 ldr r3,.L64+20
 2077 005c 1B88     	 ldrh r3,[r3]
 2078 005e 1B0A     	 lsr r3,r3,#8
 2079 0060 9BB2     	 uxth r3,r3
 2080 0062 DAB2     	 uxtb r2,r3
 2081 0064 064B     	 ldr r3,.L64+4
 2082 0066 9A72     	 strb r2,[r3,#10]
 448:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 2083              	 .loc 3 448 0
 2084 0068 094B     	 ldr r3,.L64+20
 2085 006a 1B88     	 ldrh r3,[r3]
 2086 006c DAB2     	 uxtb r2,r3
 2087 006e 044B     	 ldr r3,.L64+4
 2088 0070 DA72     	 strb r2,[r3,#11]
 449:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 2089              	 .loc 3 449 0
 2090 0072 034B     	 ldr r3,.L64+4
 2091 0074 FF22     	 mov r2,#255
 2092 0076 1A73     	 strb r2,[r3,#12]
 450:../samuel/samuel_io.c ****    }
 2093              	 .loc 3 450 0
 2094 0078 BD46     	 mov sp,r7
 2095              	 
 2096 007a 80BD     	 pop {r7,pc}
 2097              	.L65:
 2098              	 .align 2
 2099              	.L64:
 2100 007c 00000000 	 .word transmit_buf_size
 2101 0080 00000000 	 .word new_data
 2102 0084 00000000 	 .word node_id
 2103 0088 00000000 	 .word node_id_alt
 2104 008c 00000000 	 .word Ser_NrH
 2105 0090 00000000 	 .word Ser_NrL
 2106              	 .cfi_endproc
 2107              	.LFE308:
 2109              	 .section .text.new_data_SerNrBack,"ax",%progbits
 2110              	 .align 2
 2111              	 .global new_data_SerNrBack
 2112              	 .code 16
 2113              	 .thumb_func
 2115              	new_data_SerNrBack:
 2116              	.LFB309:
 451:../samuel/samuel_io.c **** 
 452:../samuel/samuel_io.c ****    //------------------------------------------------------
 453:../samuel/samuel_io.c **** 
 454:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 455:../samuel/samuel_io.c ****    {
 2117              	 .loc 3 455 0
 2118              	 .cfi_startproc
 2119 0000 80B5     	 push {r7,lr}
 2120              	.LCFI50:
 2121              	 .cfi_def_cfa_offset 8
 2122              	 .cfi_offset 7,-8
 2123              	 .cfi_offset 14,-4
 2124 0002 00AF     	 add r7,sp,#0
 2125              	.LCFI51:
 2126              	 .cfi_def_cfa_register 7
 456:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 2127              	 .loc 3 456 0
 2128 0004 194B     	 ldr r3,.L67
 2129 0006 0B22     	 mov r2,#11
 2130 0008 1A70     	 strb r2,[r3]
 457:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2131              	 .loc 3 457 0
 2132 000a 194B     	 ldr r3,.L67+4
 2133 000c 4C22     	 mov r2,#76
 2134 000e 1A70     	 strb r2,[r3]
 458:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2135              	 .loc 3 458 0
 2136 0010 174B     	 ldr r3,.L67+4
 2137 0012 4922     	 mov r2,#73
 2138 0014 5A70     	 strb r2,[r3,#1]
 459:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2139              	 .loc 3 459 0
 2140 0016 164B     	 ldr r3,.L67+4
 2141 0018 4E22     	 mov r2,#78
 2142 001a 9A70     	 strb r2,[r3,#2]
 460:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2143              	 .loc 3 460 0
 2144 001c 154B     	 ldr r3,.L67+8
 2145 001e 1A78     	 ldrb r2,[r3]
 2146 0020 134B     	 ldr r3,.L67+4
 2147 0022 DA70     	 strb r2,[r3,#3]
 461:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2148              	 .loc 3 461 0
 2149 0024 114B     	 ldr r3,.L67
 2150 0026 1A78     	 ldrb r2,[r3]
 2151 0028 114B     	 ldr r3,.L67+4
 2152 002a 1A71     	 strb r2,[r3,#4]
 462:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2153              	 .loc 3 462 0
 2154 002c 104B     	 ldr r3,.L67+4
 2155 002e 6E22     	 mov r2,#110
 2156 0030 5A71     	 strb r2,[r3,#5]
 463:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2157              	 .loc 3 463 0
 2158 0032 114B     	 ldr r3,.L67+12
 2159 0034 1B88     	 ldrh r3,[r3]
 2160 0036 1B0A     	 lsr r3,r3,#8
 2161 0038 9BB2     	 uxth r3,r3
 2162 003a DAB2     	 uxtb r2,r3
 2163 003c 0C4B     	 ldr r3,.L67+4
 2164 003e 9A71     	 strb r2,[r3,#6]
 464:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2165              	 .loc 3 464 0
 2166 0040 0D4B     	 ldr r3,.L67+12
 2167 0042 1B88     	 ldrh r3,[r3]
 2168 0044 DAB2     	 uxtb r2,r3
 2169 0046 0A4B     	 ldr r3,.L67+4
 2170 0048 DA71     	 strb r2,[r3,#7]
 465:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2171              	 .loc 3 465 0
 2172 004a 0C4B     	 ldr r3,.L67+16
 2173 004c 1B88     	 ldrh r3,[r3]
 2174 004e 1B0A     	 lsr r3,r3,#8
 2175 0050 9BB2     	 uxth r3,r3
 2176 0052 DAB2     	 uxtb r2,r3
 2177 0054 064B     	 ldr r3,.L67+4
 2178 0056 1A72     	 strb r2,[r3,#8]
 466:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2179              	 .loc 3 466 0
 2180 0058 084B     	 ldr r3,.L67+16
 2181 005a 1B88     	 ldrh r3,[r3]
 2182 005c DAB2     	 uxtb r2,r3
 2183 005e 044B     	 ldr r3,.L67+4
 2184 0060 5A72     	 strb r2,[r3,#9]
 467:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2185              	 .loc 3 467 0
 2186 0062 034B     	 ldr r3,.L67+4
 2187 0064 FF22     	 mov r2,#255
 2188 0066 9A72     	 strb r2,[r3,#10]
 468:../samuel/samuel_io.c ****    }
 2189              	 .loc 3 468 0
 2190 0068 BD46     	 mov sp,r7
 2191              	 
 2192 006a 80BD     	 pop {r7,pc}
 2193              	.L68:
 2194              	 .align 2
 2195              	.L67:
 2196 006c 00000000 	 .word transmit_buf_size
 2197 0070 00000000 	 .word new_data
 2198 0074 00000000 	 .word node_id
 2199 0078 00000000 	 .word Ser_NrH
 2200 007c 00000000 	 .word Ser_NrL
 2201              	 .cfi_endproc
 2202              	.LFE309:
 2204              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2205              	 .align 2
 2206              	 .global new_data_readbuff2Back
 2207              	 .code 16
 2208              	 .thumb_func
 2210              	new_data_readbuff2Back:
 2211              	.LFB310:
 469:../samuel/samuel_io.c ****    //-------------------------------------
 470:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 471:../samuel/samuel_io.c ****    {
 2212              	 .loc 3 471 0
 2213              	 .cfi_startproc
 2214 0000 80B5     	 push {r7,lr}
 2215              	.LCFI52:
 2216              	 .cfi_def_cfa_offset 8
 2217              	 .cfi_offset 7,-8
 2218              	 .cfi_offset 14,-4
 2219 0002 00AF     	 add r7,sp,#0
 2220              	.LCFI53:
 2221              	 .cfi_def_cfa_register 7
 472:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2222              	 .loc 3 472 0
 2223 0004 2F4B     	 ldr r3,.L70
 2224 0006 1822     	 mov r2,#24
 2225 0008 1A70     	 strb r2,[r3]
 473:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2226              	 .loc 3 473 0
 2227 000a 2F4B     	 ldr r3,.L70+4
 2228 000c 4C22     	 mov r2,#76
 2229 000e 1A70     	 strb r2,[r3]
 474:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2230              	 .loc 3 474 0
 2231 0010 2D4B     	 ldr r3,.L70+4
 2232 0012 4922     	 mov r2,#73
 2233 0014 5A70     	 strb r2,[r3,#1]
 475:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2234              	 .loc 3 475 0
 2235 0016 2C4B     	 ldr r3,.L70+4
 2236 0018 4E22     	 mov r2,#78
 2237 001a 9A70     	 strb r2,[r3,#2]
 476:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2238              	 .loc 3 476 0
 2239 001c 2B4B     	 ldr r3,.L70+8
 2240 001e 1A78     	 ldrb r2,[r3]
 2241 0020 294B     	 ldr r3,.L70+4
 2242 0022 DA70     	 strb r2,[r3,#3]
 477:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2243              	 .loc 3 477 0
 2244 0024 274B     	 ldr r3,.L70
 2245 0026 1A78     	 ldrb r2,[r3]
 2246 0028 274B     	 ldr r3,.L70+4
 2247 002a 1A71     	 strb r2,[r3,#4]
 478:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2248              	 .loc 3 478 0
 2249 002c 264B     	 ldr r3,.L70+4
 2250 002e 7022     	 mov r2,#112
 2251 0030 5A71     	 strb r2,[r3,#5]
 479:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2252              	 .loc 3 479 0
 2253 0032 254B     	 ldr r3,.L70+4
 2254 0034 0022     	 mov r2,#0
 2255 0036 9A71     	 strb r2,[r3,#6]
 480:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2256              	 .loc 3 480 0
 2257 0038 254B     	 ldr r3,.L70+12
 2258 003a 1A78     	 ldrb r2,[r3]
 2259 003c 224B     	 ldr r3,.L70+4
 2260 003e DA71     	 strb r2,[r3,#7]
 481:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2261              	 .loc 3 481 0
 2262 0040 234B     	 ldr r3,.L70+12
 2263 0042 5A78     	 ldrb r2,[r3,#1]
 2264 0044 204B     	 ldr r3,.L70+4
 2265 0046 1A72     	 strb r2,[r3,#8]
 482:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2266              	 .loc 3 482 0
 2267 0048 214B     	 ldr r3,.L70+12
 2268 004a 9A78     	 ldrb r2,[r3,#2]
 2269 004c 1E4B     	 ldr r3,.L70+4
 2270 004e 5A72     	 strb r2,[r3,#9]
 483:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2271              	 .loc 3 483 0
 2272 0050 1F4B     	 ldr r3,.L70+12
 2273 0052 DA78     	 ldrb r2,[r3,#3]
 2274 0054 1C4B     	 ldr r3,.L70+4
 2275 0056 9A72     	 strb r2,[r3,#10]
 484:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2276              	 .loc 3 484 0
 2277 0058 1D4B     	 ldr r3,.L70+12
 2278 005a 1A79     	 ldrb r2,[r3,#4]
 2279 005c 1A4B     	 ldr r3,.L70+4
 2280 005e DA72     	 strb r2,[r3,#11]
 485:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2281              	 .loc 3 485 0
 2282 0060 1B4B     	 ldr r3,.L70+12
 2283 0062 5A79     	 ldrb r2,[r3,#5]
 2284 0064 184B     	 ldr r3,.L70+4
 2285 0066 1A73     	 strb r2,[r3,#12]
 486:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2286              	 .loc 3 486 0
 2287 0068 194B     	 ldr r3,.L70+12
 2288 006a 9A79     	 ldrb r2,[r3,#6]
 2289 006c 164B     	 ldr r3,.L70+4
 2290 006e 5A73     	 strb r2,[r3,#13]
 487:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2291              	 .loc 3 487 0
 2292 0070 174B     	 ldr r3,.L70+12
 2293 0072 DA79     	 ldrb r2,[r3,#7]
 2294 0074 144B     	 ldr r3,.L70+4
 2295 0076 9A73     	 strb r2,[r3,#14]
 488:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2296              	 .loc 3 488 0
 2297 0078 154B     	 ldr r3,.L70+12
 2298 007a 1A7A     	 ldrb r2,[r3,#8]
 2299 007c 124B     	 ldr r3,.L70+4
 2300 007e DA73     	 strb r2,[r3,#15]
 489:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2301              	 .loc 3 489 0
 2302 0080 134B     	 ldr r3,.L70+12
 2303 0082 5A7A     	 ldrb r2,[r3,#9]
 2304 0084 104B     	 ldr r3,.L70+4
 2305 0086 1A74     	 strb r2,[r3,#16]
 490:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2306              	 .loc 3 490 0
 2307 0088 114B     	 ldr r3,.L70+12
 2308 008a 9A7A     	 ldrb r2,[r3,#10]
 2309 008c 0E4B     	 ldr r3,.L70+4
 2310 008e 5A74     	 strb r2,[r3,#17]
 491:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2311              	 .loc 3 491 0
 2312 0090 0F4B     	 ldr r3,.L70+12
 2313 0092 DA7A     	 ldrb r2,[r3,#11]
 2314 0094 0C4B     	 ldr r3,.L70+4
 2315 0096 9A74     	 strb r2,[r3,#18]
 492:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2316              	 .loc 3 492 0
 2317 0098 0D4B     	 ldr r3,.L70+12
 2318 009a 1A7B     	 ldrb r2,[r3,#12]
 2319 009c 0A4B     	 ldr r3,.L70+4
 2320 009e DA74     	 strb r2,[r3,#19]
 493:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2321              	 .loc 3 493 0
 2322 00a0 0B4B     	 ldr r3,.L70+12
 2323 00a2 5A7B     	 ldrb r2,[r3,#13]
 2324 00a4 084B     	 ldr r3,.L70+4
 2325 00a6 1A75     	 strb r2,[r3,#20]
 494:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2326              	 .loc 3 494 0
 2327 00a8 094B     	 ldr r3,.L70+12
 2328 00aa 9A7B     	 ldrb r2,[r3,#14]
 2329 00ac 064B     	 ldr r3,.L70+4
 2330 00ae 5A75     	 strb r2,[r3,#21]
 495:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2331              	 .loc 3 495 0
 2332 00b0 074B     	 ldr r3,.L70+12
 2333 00b2 DA7B     	 ldrb r2,[r3,#15]
 2334 00b4 044B     	 ldr r3,.L70+4
 2335 00b6 9A75     	 strb r2,[r3,#22]
 496:../samuel/samuel_io.c **** 
 497:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2336              	 .loc 3 497 0
 2337 00b8 034B     	 ldr r3,.L70+4
 2338 00ba FF22     	 mov r2,#255
 2339 00bc DA75     	 strb r2,[r3,#23]
 498:../samuel/samuel_io.c ****    }
 2340              	 .loc 3 498 0
 2341 00be BD46     	 mov sp,r7
 2342              	 
 2343 00c0 80BD     	 pop {r7,pc}
 2344              	.L71:
 2345 00c2 C046     	 .align 2
 2346              	.L70:
 2347 00c4 00000000 	 .word transmit_buf_size
 2348 00c8 00000000 	 .word new_data
 2349 00cc 00000000 	 .word node_id
 2350 00d0 00000000 	 .word ReadBuffer2
 2351              	 .cfi_endproc
 2352              	.LFE310:
 2354              	 .section .text.clearEpromBuffer,"ax",%progbits
 2355              	 .align 2
 2356              	 .global clearEpromBuffer
 2357              	 .code 16
 2358              	 .thumb_func
 2360              	clearEpromBuffer:
 2361              	.LFB311:
 499:../samuel/samuel_io.c **** 
 500:../samuel/samuel_io.c ****  //------------------------------------------------------
 501:../samuel/samuel_io.c **** 
 502:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 503:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 504:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 505:../samuel/samuel_io.c ****  {
 2362              	 .loc 3 505 0
 2363              	 .cfi_startproc
 2364 0000 80B5     	 push {r7,lr}
 2365              	.LCFI54:
 2366              	 .cfi_def_cfa_offset 8
 2367              	 .cfi_offset 7,-8
 2368              	 .cfi_offset 14,-4
 2369 0002 00AF     	 add r7,sp,#0
 2370              	.LCFI55:
 2371              	 .cfi_def_cfa_register 7
 506:../samuel/samuel_io.c **** 
 507:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 508:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2372              	 .loc 3 508 0
 2373 0004 1E4B     	 ldr r3,.L79
 2374 0006 0022     	 mov r2,#0
 2375 0008 1A70     	 strb r2,[r3]
 2376 000a 0BE0     	 b .L73
 2377              	.L74:
 509:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2378              	 .loc 3 509 0 discriminator 3
 2379 000c 1C4B     	 ldr r3,.L79
 2380 000e 1B78     	 ldrb r3,[r3]
 2381 0010 1A1C     	 mov r2,r3
 2382 0012 1C4B     	 ldr r3,.L79+4
 2383 0014 0021     	 mov r1,#0
 2384 0016 9954     	 strb r1,[r3,r2]
 508:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2385              	 .loc 3 508 0 discriminator 3
 2386 0018 194B     	 ldr r3,.L79
 2387 001a 1B78     	 ldrb r3,[r3]
 2388 001c 0133     	 add r3,r3,#1
 2389 001e DAB2     	 uxtb r2,r3
 2390 0020 174B     	 ldr r3,.L79
 2391 0022 1A70     	 strb r2,[r3]
 2392              	.L73:
 508:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2393              	 .loc 3 508 0 is_stmt 0 discriminator 1
 2394 0024 164B     	 ldr r3,.L79
 2395 0026 1B78     	 ldrb r3,[r3]
 2396 0028 0F2B     	 cmp r3,#15
 2397 002a EFD9     	 bls .L74
 510:../samuel/samuel_io.c **** 
 511:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 512:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2398              	 .loc 3 512 0 is_stmt 1
 2399 002c 144B     	 ldr r3,.L79
 2400 002e 0022     	 mov r2,#0
 2401 0030 1A70     	 strb r2,[r3]
 2402 0032 0BE0     	 b .L75
 2403              	.L76:
 513:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2404              	 .loc 3 513 0 discriminator 3
 2405 0034 124B     	 ldr r3,.L79
 2406 0036 1B78     	 ldrb r3,[r3]
 2407 0038 1A1C     	 mov r2,r3
 2408 003a 134B     	 ldr r3,.L79+8
 2409 003c 0021     	 mov r1,#0
 2410 003e 9954     	 strb r1,[r3,r2]
 512:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2411              	 .loc 3 512 0 discriminator 3
 2412 0040 0F4B     	 ldr r3,.L79
 2413 0042 1B78     	 ldrb r3,[r3]
 2414 0044 0133     	 add r3,r3,#1
 2415 0046 DAB2     	 uxtb r2,r3
 2416 0048 0D4B     	 ldr r3,.L79
 2417 004a 1A70     	 strb r2,[r3]
 2418              	.L75:
 512:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2419              	 .loc 3 512 0 is_stmt 0 discriminator 1
 2420 004c 0C4B     	 ldr r3,.L79
 2421 004e 1B78     	 ldrb r3,[r3]
 2422 0050 0F2B     	 cmp r3,#15
 2423 0052 EFD9     	 bls .L76
 514:../samuel/samuel_io.c **** 
 515:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 516:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2424              	 .loc 3 516 0 is_stmt 1
 2425 0054 0A4B     	 ldr r3,.L79
 2426 0056 0022     	 mov r2,#0
 2427 0058 1A70     	 strb r2,[r3]
 2428 005a 0BE0     	 b .L77
 2429              	.L78:
 517:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2430              	 .loc 3 517 0 discriminator 3
 2431 005c 084B     	 ldr r3,.L79
 2432 005e 1B78     	 ldrb r3,[r3]
 2433 0060 1A1C     	 mov r2,r3
 2434 0062 0A4B     	 ldr r3,.L79+12
 2435 0064 0021     	 mov r1,#0
 2436 0066 9954     	 strb r1,[r3,r2]
 516:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2437              	 .loc 3 516 0 discriminator 3
 2438 0068 054B     	 ldr r3,.L79
 2439 006a 1B78     	 ldrb r3,[r3]
 2440 006c 0133     	 add r3,r3,#1
 2441 006e DAB2     	 uxtb r2,r3
 2442 0070 034B     	 ldr r3,.L79
 2443 0072 1A70     	 strb r2,[r3]
 2444              	.L77:
 516:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2445              	 .loc 3 516 0 is_stmt 0 discriminator 1
 2446 0074 024B     	 ldr r3,.L79
 2447 0076 1B78     	 ldrb r3,[r3]
 2448 0078 1F2B     	 cmp r3,#31
 2449 007a EFD9     	 bls .L78
 518:../samuel/samuel_io.c ****  }
 2450              	 .loc 3 518 0 is_stmt 1
 2451 007c BD46     	 mov sp,r7
 2452              	 
 2453 007e 80BD     	 pop {r7,pc}
 2454              	.L80:
 2455              	 .align 2
 2456              	.L79:
 2457 0080 00000000 	 .word Index
 2458 0084 00000000 	 .word ReadBuffer1
 2459 0088 00000000 	 .word ReadBuffer2
 2460 008c 00000000 	 .word ReadBuffer3
 2461              	 .cfi_endproc
 2462              	.LFE311:
 2464              	 .section .text.fillEpromBuffer,"ax",%progbits
 2465              	 .align 2
 2466              	 .global fillEpromBuffer
 2467              	 .code 16
 2468              	 .thumb_func
 2470              	fillEpromBuffer:
 2471              	.LFB312:
 519:../samuel/samuel_io.c **** 
 520:../samuel/samuel_io.c ****  //---------------------------------
 521:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 522:../samuel/samuel_io.c ****  {
 2472              	 .loc 3 522 0
 2473              	 .cfi_startproc
 2474 0000 80B5     	 push {r7,lr}
 2475              	.LCFI56:
 2476              	 .cfi_def_cfa_offset 8
 2477              	 .cfi_offset 7,-8
 2478              	 .cfi_offset 14,-4
 2479 0002 00AF     	 add r7,sp,#0
 2480              	.LCFI57:
 2481              	 .cfi_def_cfa_register 7
 523:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 524:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2482              	 .loc 3 524 0
 2483 0004 0B4B     	 ldr r3,.L84
 2484 0006 0022     	 mov r2,#0
 2485 0008 1A70     	 strb r2,[r3]
 2486 000a 0CE0     	 b .L82
 2487              	.L83:
 525:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2488              	 .loc 3 525 0 discriminator 3
 2489 000c 094B     	 ldr r3,.L84
 2490 000e 1B78     	 ldrb r3,[r3]
 2491 0010 1A1C     	 mov r2,r3
 2492 0012 084B     	 ldr r3,.L84
 2493 0014 1978     	 ldrb r1,[r3]
 2494 0016 084B     	 ldr r3,.L84+4
 2495 0018 9954     	 strb r1,[r3,r2]
 524:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2496              	 .loc 3 524 0 discriminator 3
 2497 001a 064B     	 ldr r3,.L84
 2498 001c 1B78     	 ldrb r3,[r3]
 2499 001e 0133     	 add r3,r3,#1
 2500 0020 DAB2     	 uxtb r2,r3
 2501 0022 044B     	 ldr r3,.L84
 2502 0024 1A70     	 strb r2,[r3]
 2503              	.L82:
 524:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2504              	 .loc 3 524 0 is_stmt 0 discriminator 1
 2505 0026 034B     	 ldr r3,.L84
 2506 0028 1B78     	 ldrb r3,[r3]
 2507 002a 632B     	 cmp r3,#99
 2508 002c EED9     	 bls .L83
 526:../samuel/samuel_io.c ****  }
 2509              	 .loc 3 526 0 is_stmt 1
 2510 002e BD46     	 mov sp,r7
 2511              	 
 2512 0030 80BD     	 pop {r7,pc}
 2513              	.L85:
 2514 0032 C046     	 .align 2
 2515              	.L84:
 2516 0034 00000000 	 .word Index
 2517 0038 00000000 	 .word data_buffer
 2518              	 .cfi_endproc
 2519              	.LFE312:
 2521              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2522              	 .align 2
 2523              	 .global fill2EpromBuffer
 2524              	 .code 16
 2525              	 .thumb_func
 2527              	fill2EpromBuffer:
 2528              	.LFB313:
 527:../samuel/samuel_io.c **** 
 528:../samuel/samuel_io.c ****  //---------------------------------
 529:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 530:../samuel/samuel_io.c ****  {
 2529              	 .loc 3 530 0
 2530              	 .cfi_startproc
 2531 0000 80B5     	 push {r7,lr}
 2532              	.LCFI58:
 2533              	 .cfi_def_cfa_offset 8
 2534              	 .cfi_offset 7,-8
 2535              	 .cfi_offset 14,-4
 2536 0002 00AF     	 add r7,sp,#0
 2537              	.LCFI59:
 2538              	 .cfi_def_cfa_register 7
 531:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 532:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2539              	 .loc 3 532 0
 2540 0004 0C4B     	 ldr r3,.L89
 2541 0006 0022     	 mov r2,#0
 2542 0008 1A70     	 strb r2,[r3]
 2543 000a 0EE0     	 b .L87
 2544              	.L88:
 533:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2545              	 .loc 3 533 0 discriminator 3
 2546 000c 0A4B     	 ldr r3,.L89
 2547 000e 1B78     	 ldrb r3,[r3]
 2548 0010 1A1C     	 mov r2,r3
 2549 0012 094B     	 ldr r3,.L89
 2550 0014 1B78     	 ldrb r3,[r3]
 2551 0016 DB43     	 mvn r3,r3
 2552 0018 D9B2     	 uxtb r1,r3
 2553 001a 084B     	 ldr r3,.L89+4
 2554 001c 9954     	 strb r1,[r3,r2]
 532:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2555              	 .loc 3 532 0 discriminator 3
 2556 001e 064B     	 ldr r3,.L89
 2557 0020 1B78     	 ldrb r3,[r3]
 2558 0022 0133     	 add r3,r3,#1
 2559 0024 DAB2     	 uxtb r2,r3
 2560 0026 044B     	 ldr r3,.L89
 2561 0028 1A70     	 strb r2,[r3]
 2562              	.L87:
 532:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2563              	 .loc 3 532 0 is_stmt 0 discriminator 1
 2564 002a 034B     	 ldr r3,.L89
 2565 002c 1B78     	 ldrb r3,[r3]
 2566 002e 632B     	 cmp r3,#99
 2567 0030 ECD9     	 bls .L88
 534:../samuel/samuel_io.c ****  }
 2568              	 .loc 3 534 0 is_stmt 1
 2569 0032 BD46     	 mov sp,r7
 2570              	 
 2571 0034 80BD     	 pop {r7,pc}
 2572              	.L90:
 2573 0036 C046     	 .align 2
 2574              	.L89:
 2575 0038 00000000 	 .word Index
 2576 003c 00000000 	 .word data_buffer
 2577              	 .cfi_endproc
 2578              	.LFE313:
 2580              	 .section .text.readAllEEprom,"ax",%progbits
 2581              	 .align 2
 2582              	 .global readAllEEprom
 2583              	 .code 16
 2584              	 .thumb_func
 2586              	readAllEEprom:
 2587              	.LFB314:
 535:../samuel/samuel_io.c **** 
 536:../samuel/samuel_io.c **** 
 537:../samuel/samuel_io.c ****  //------------------------------------------------
 538:../samuel/samuel_io.c **** 
 539:../samuel/samuel_io.c **** 
 540:../samuel/samuel_io.c ****  //------------------------------------------------
 541:../samuel/samuel_io.c ****  int readAllEEprom(void)
 542:../samuel/samuel_io.c ****  {
 2588              	 .loc 3 542 0
 2589              	 .cfi_startproc
 2590 0000 80B5     	 push {r7,lr}
 2591              	.LCFI60:
 2592              	 .cfi_def_cfa_offset 8
 2593              	 .cfi_offset 7,-8
 2594              	 .cfi_offset 14,-4
 2595 0002 00AF     	 add r7,sp,#0
 2596              	.LCFI61:
 2597              	 .cfi_def_cfa_register 7
 543:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2598              	 .loc 3 543 0
 2599 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2600 0008 031C     	 mov r3,r0
 2601 000a 1A1C     	 mov r2,r3
 2602 000c 614B     	 ldr r3,.L97
 2603 000e 1A70     	 strb r2,[r3]
 544:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2604              	 .loc 3 544 0
 2605 0010 604B     	 ldr r3,.L97
 2606 0012 1B78     	 ldrb r3,[r3]
 2607 0014 032B     	 cmp r3,#3
 2608 0016 0AD1     	 bne .L92
 545:../samuel/samuel_io.c ****    {
 546:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2609              	 .loc 3 546 0
 2610 0018 5F4B     	 ldr r3,.L97+4
 2611 001a 0120     	 mov r0,#1
 2612 001c 0021     	 mov r1,#0
 2613 001e 1A1C     	 mov r2,r3
 2614 0020 1023     	 mov r3,#16
 2615 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2616 0026 031C     	 mov r3,r0
 2617 0028 1A1C     	 mov r2,r3
 2618 002a 5C4B     	 ldr r3,.L97+8
 2619 002c 1A70     	 strb r2,[r3]
 2620              	.L92:
 547:../samuel/samuel_io.c ****    }
 548:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2621              	 .loc 3 548 0
 2622 002e 5B4B     	 ldr r3,.L97+8
 2623 0030 1B78     	 ldrb r3,[r3]
 2624 0032 002B     	 cmp r3,#0
 2625 0034 14D1     	 bne .L93
 549:../samuel/samuel_io.c ****    {
 550:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2626              	 .loc 3 550 0
 2627 0036 584B     	 ldr r3,.L97+4
 2628 0038 5B78     	 ldrb r3,[r3,#1]
 2629 003a 9AB2     	 uxth r2,r3
 2630 003c 584B     	 ldr r3,.L97+12
 2631 003e 1A80     	 strh r2,[r3]
 551:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2632              	 .loc 3 551 0
 2633 0040 554B     	 ldr r3,.L97+4
 2634 0042 9B78     	 ldrb r3,[r3,#2]
 2635 0044 9AB2     	 uxth r2,r3
 2636 0046 574B     	 ldr r3,.L97+16
 2637 0048 1A80     	 strh r2,[r3]
 552:../samuel/samuel_io.c **** 
 553:../samuel/samuel_io.c **** 
 554:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2638              	 .loc 3 554 0
 2639 004a 574B     	 ldr r3,.L97+20
 2640 004c 0220     	 mov r0,#2
 2641 004e 0021     	 mov r1,#0
 2642 0050 1A1C     	 mov r2,r3
 2643 0052 1023     	 mov r3,#16
 2644 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2645 0058 031C     	 mov r3,r0
 2646 005a 1A1C     	 mov r2,r3
 2647 005c 4F4B     	 ldr r3,.L97+8
 2648 005e 1A70     	 strb r2,[r3]
 2649              	.L93:
 555:../samuel/samuel_io.c ****    }
 556:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2650              	 .loc 3 556 0
 2651 0060 4E4B     	 ldr r3,.L97+8
 2652 0062 1B78     	 ldrb r3,[r3]
 2653 0064 002B     	 cmp r3,#0
 2654 0066 1ED1     	 bne .L94
 557:../samuel/samuel_io.c ****    {
 558:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2655              	 .loc 3 558 0
 2656 0068 4F4B     	 ldr r3,.L97+20
 2657 006a 5A78     	 ldrb r2,[r3,#1]
 2658 006c 4F4B     	 ldr r3,.L97+24
 2659 006e 1A70     	 strb r2,[r3]
 559:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2660              	 .loc 3 559 0
 2661 0070 4D4B     	 ldr r3,.L97+20
 2662 0072 9A78     	 ldrb r2,[r3,#2]
 2663 0074 4E4B     	 ldr r3,.L97+28
 2664 0076 1A70     	 strb r2,[r3]
 560:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2665              	 .loc 3 560 0
 2666 0078 4B4B     	 ldr r3,.L97+20
 2667 007a DB78     	 ldrb r3,[r3,#3]
 2668 007c 9BB2     	 uxth r3,r3
 2669 007e 1B02     	 lsl r3,r3,#8
 2670 0080 9AB2     	 uxth r2,r3
 2671 0082 494B     	 ldr r3,.L97+20
 2672 0084 1B79     	 ldrb r3,[r3,#4]
 2673 0086 9BB2     	 uxth r3,r3
 2674 0088 D318     	 add r3,r2,r3
 2675 008a 9AB2     	 uxth r2,r3
 2676 008c 494B     	 ldr r3,.L97+32
 2677 008e 1A80     	 strh r2,[r3]
 561:../samuel/samuel_io.c **** 
 562:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2678              	 .loc 3 562 0
 2679 0090 494B     	 ldr r3,.L97+36
 2680 0092 0520     	 mov r0,#5
 2681 0094 0021     	 mov r1,#0
 2682 0096 1A1C     	 mov r2,r3
 2683 0098 2023     	 mov r3,#32
 2684 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2685 009e 031C     	 mov r3,r0
 2686 00a0 1A1C     	 mov r2,r3
 2687 00a2 3E4B     	 ldr r3,.L97+8
 2688 00a4 1A70     	 strb r2,[r3]
 2689              	.L94:
 563:../samuel/samuel_io.c ****    }
 564:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2690              	 .loc 3 564 0
 2691 00a6 3D4B     	 ldr r3,.L97+8
 2692 00a8 1B78     	 ldrb r3,[r3]
 2693 00aa 002B     	 cmp r3,#0
 2694 00ac 67D1     	 bne .L95
 565:../samuel/samuel_io.c ****    {
 566:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2695              	 .loc 3 566 0
 2696 00ae 424B     	 ldr r3,.L97+36
 2697 00b0 5A78     	 ldrb r2,[r3,#1]
 2698 00b2 424B     	 ldr r3,.L97+40
 2699 00b4 1A70     	 strb r2,[r3]
 567:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2700              	 .loc 3 567 0
 2701 00b6 404B     	 ldr r3,.L97+36
 2702 00b8 9A78     	 ldrb r2,[r3,#2]
 2703 00ba 414B     	 ldr r3,.L97+44
 2704 00bc 1A70     	 strb r2,[r3]
 568:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2705              	 .loc 3 568 0
 2706 00be 3E4B     	 ldr r3,.L97+36
 2707 00c0 DB78     	 ldrb r3,[r3,#3]
 2708 00c2 9BB2     	 uxth r3,r3
 2709 00c4 1B02     	 lsl r3,r3,#8
 2710 00c6 9AB2     	 uxth r2,r3
 2711 00c8 3B4B     	 ldr r3,.L97+36
 2712 00ca 1B79     	 ldrb r3,[r3,#4]
 2713 00cc 9BB2     	 uxth r3,r3
 2714 00ce D318     	 add r3,r2,r3
 2715 00d0 9AB2     	 uxth r2,r3
 2716 00d2 3C4B     	 ldr r3,.L97+48
 2717 00d4 1A80     	 strh r2,[r3]
 569:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2718              	 .loc 3 569 0
 2719 00d6 384B     	 ldr r3,.L97+36
 2720 00d8 5B79     	 ldrb r3,[r3,#5]
 2721 00da 9BB2     	 uxth r3,r3
 2722 00dc 1B02     	 lsl r3,r3,#8
 2723 00de 9AB2     	 uxth r2,r3
 2724 00e0 354B     	 ldr r3,.L97+36
 2725 00e2 9B79     	 ldrb r3,[r3,#6]
 2726 00e4 9BB2     	 uxth r3,r3
 2727 00e6 D318     	 add r3,r2,r3
 2728 00e8 9AB2     	 uxth r2,r3
 2729 00ea 374B     	 ldr r3,.L97+52
 2730 00ec 1A80     	 strh r2,[r3]
 570:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2731              	 .loc 3 570 0
 2732 00ee 324B     	 ldr r3,.L97+36
 2733 00f0 DB79     	 ldrb r3,[r3,#7]
 2734 00f2 9BB2     	 uxth r3,r3
 2735 00f4 1B02     	 lsl r3,r3,#8
 2736 00f6 9AB2     	 uxth r2,r3
 2737 00f8 2F4B     	 ldr r3,.L97+36
 2738 00fa 1B7A     	 ldrb r3,[r3,#8]
 2739 00fc 9BB2     	 uxth r3,r3
 2740 00fe D318     	 add r3,r2,r3
 2741 0100 9AB2     	 uxth r2,r3
 2742 0102 324B     	 ldr r3,.L97+56
 2743 0104 1A80     	 strh r2,[r3]
 571:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2744              	 .loc 3 571 0
 2745 0106 2C4B     	 ldr r3,.L97+36
 2746 0108 5B7A     	 ldrb r3,[r3,#9]
 2747 010a 9BB2     	 uxth r3,r3
 2748 010c 1B02     	 lsl r3,r3,#8
 2749 010e 9AB2     	 uxth r2,r3
 2750 0110 294B     	 ldr r3,.L97+36
 2751 0112 9B7A     	 ldrb r3,[r3,#10]
 2752 0114 9BB2     	 uxth r3,r3
 2753 0116 D318     	 add r3,r2,r3
 2754 0118 9AB2     	 uxth r2,r3
 2755 011a 2D4B     	 ldr r3,.L97+60
 2756 011c 1A80     	 strh r2,[r3]
 572:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2757              	 .loc 3 572 0
 2758 011e 264B     	 ldr r3,.L97+36
 2759 0120 DB7A     	 ldrb r3,[r3,#11]
 2760 0122 9BB2     	 uxth r3,r3
 2761 0124 1B02     	 lsl r3,r3,#8
 2762 0126 9AB2     	 uxth r2,r3
 2763 0128 234B     	 ldr r3,.L97+36
 2764 012a 1B7B     	 ldrb r3,[r3,#12]
 2765 012c 9BB2     	 uxth r3,r3
 2766 012e D318     	 add r3,r2,r3
 2767 0130 9AB2     	 uxth r2,r3
 2768 0132 284B     	 ldr r3,.L97+64
 2769 0134 1A80     	 strh r2,[r3]
 573:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2770              	 .loc 3 573 0
 2771 0136 204B     	 ldr r3,.L97+36
 2772 0138 5B7B     	 ldrb r3,[r3,#13]
 2773 013a 9BB2     	 uxth r3,r3
 2774 013c 1B02     	 lsl r3,r3,#8
 2775 013e 9AB2     	 uxth r2,r3
 2776 0140 1D4B     	 ldr r3,.L97+36
 2777 0142 9B7B     	 ldrb r3,[r3,#14]
 2778 0144 9BB2     	 uxth r3,r3
 2779 0146 D318     	 add r3,r2,r3
 2780 0148 9AB2     	 uxth r2,r3
 2781 014a 234B     	 ldr r3,.L97+68
 2782 014c 1A80     	 strh r2,[r3]
 574:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 2783              	 .loc 3 574 0
 2784 014e 1A4B     	 ldr r3,.L97+36
 2785 0150 DB7B     	 ldrb r3,[r3,#15]
 2786 0152 9BB2     	 uxth r3,r3
 2787 0154 1B02     	 lsl r3,r3,#8
 2788 0156 9AB2     	 uxth r2,r3
 2789 0158 174B     	 ldr r3,.L97+36
 2790 015a 1B7C     	 ldrb r3,[r3,#16]
 2791 015c 9BB2     	 uxth r3,r3
 2792 015e D318     	 add r3,r2,r3
 2793 0160 9AB2     	 uxth r2,r3
 2794 0162 1E4B     	 ldr r3,.L97+72
 2795 0164 1A80     	 strh r2,[r3]
 575:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 2796              	 .loc 3 575 0
 2797 0166 144B     	 ldr r3,.L97+36
 2798 0168 5B7C     	 ldrb r3,[r3,#17]
 2799 016a 9BB2     	 uxth r3,r3
 2800 016c 1B02     	 lsl r3,r3,#8
 2801 016e 9AB2     	 uxth r2,r3
 2802 0170 114B     	 ldr r3,.L97+36
 2803 0172 9B7C     	 ldrb r3,[r3,#18]
 2804 0174 9BB2     	 uxth r3,r3
 2805 0176 D318     	 add r3,r2,r3
 2806 0178 9AB2     	 uxth r2,r3
 2807 017a 194B     	 ldr r3,.L97+76
 2808 017c 1A80     	 strh r2,[r3]
 2809              	.L95:
 576:../samuel/samuel_io.c **** 
 577:../samuel/samuel_io.c ****    }
 578:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 2810              	 .loc 3 578 0
 2811 017e 054B     	 ldr r3,.L97
 2812 0180 1B78     	 ldrb r3,[r3]
 2813 0182 1A1C     	 mov r2,r3
 2814 0184 054B     	 ldr r3,.L97+8
 2815 0186 1B78     	 ldrb r3,[r3]
 2816 0188 1B01     	 lsl r3,r3,#4
 2817 018a D318     	 add r3,r2,r3
 579:../samuel/samuel_io.c ****  }
 2818              	 .loc 3 579 0
 2819 018c 181C     	 mov r0,r3
 2820 018e BD46     	 mov sp,r7
 2821              	 
 2822 0190 80BD     	 pop {r7,pc}
 2823              	.L98:
 2824 0192 C046     	 .align 2
 2825              	.L97:
 2826 0194 00000000 	 .word EEprom_status
 2827 0198 00000000 	 .word ReadBuffer1
 2828 019c 00000000 	 .word oper_status
 2829 01a0 00000000 	 .word Ser_NrH
 2830 01a4 00000000 	 .word Ser_NrL
 2831 01a8 00000000 	 .word ReadBuffer2
 2832 01ac 00000000 	 .word node_id_alt
 2833 01b0 00000000 	 .word node_id
 2834 01b4 00000000 	 .word node_id_16bit
 2835 01b8 00000000 	 .word ReadBuffer3
 2836 01bc 00000000 	 .word RegOnOff
 2837 01c0 00000000 	 .word RegOnOff2
 2838 01c4 00000000 	 .word dimAkt_Ww
 2839 01c8 00000000 	 .word dimAkt_Cw
 2840 01cc 00000000 	 .word dimOff_Ww
 2841 01d0 00000000 	 .word dimOff_Cw
 2842 01d4 00000000 	 .word dimNorm1_Ww
 2843 01d8 00000000 	 .word dimNorm1_Cw
 2844 01dc 00000000 	 .word dimNorm2_Ww
 2845 01e0 00000000 	 .word dimNorm2_Cw
 2846              	 .cfi_endproc
 2847              	.LFE314:
 2849              	 .section .text.readSerNrEEprom,"ax",%progbits
 2850              	 .align 2
 2851              	 .global readSerNrEEprom
 2852              	 .code 16
 2853              	 .thumb_func
 2855              	readSerNrEEprom:
 2856              	.LFB315:
 580:../samuel/samuel_io.c ****  //------------------------------------------------
 581:../samuel/samuel_io.c **** 
 582:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 583:../samuel/samuel_io.c ****  {
 2857              	 .loc 3 583 0
 2858              	 .cfi_startproc
 2859 0000 80B5     	 push {r7,lr}
 2860              	.LCFI62:
 2861              	 .cfi_def_cfa_offset 8
 2862              	 .cfi_offset 7,-8
 2863              	 .cfi_offset 14,-4
 2864 0002 00AF     	 add r7,sp,#0
 2865              	.LCFI63:
 2866              	 .cfi_def_cfa_register 7
 584:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2867              	 .loc 3 584 0
 2868 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2869 0008 031C     	 mov r3,r0
 2870 000a 1A1C     	 mov r2,r3
 2871 000c 0D4B     	 ldr r3,.L102
 2872 000e 1A70     	 strb r2,[r3]
 585:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2873              	 .loc 3 585 0
 2874 0010 0C4B     	 ldr r3,.L102
 2875 0012 1B78     	 ldrb r3,[r3]
 2876 0014 032B     	 cmp r3,#3
 2877 0016 0AD1     	 bne .L100
 586:../samuel/samuel_io.c **** 	 {
 587:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2878              	 .loc 3 587 0
 2879 0018 0B4B     	 ldr r3,.L102+4
 2880 001a 0120     	 mov r0,#1
 2881 001c 0021     	 mov r1,#0
 2882 001e 1A1C     	 mov r2,r3
 2883 0020 1023     	 mov r3,#16
 2884 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2885 0026 031C     	 mov r3,r0
 2886 0028 1A1C     	 mov r2,r3
 2887 002a 084B     	 ldr r3,.L102+8
 2888 002c 1A70     	 strb r2,[r3]
 2889              	.L100:
 588:../samuel/samuel_io.c ****      }
 589:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 2890              	 .loc 3 589 0
 2891 002e 054B     	 ldr r3,.L102
 2892 0030 1B78     	 ldrb r3,[r3]
 2893 0032 1A1C     	 mov r2,r3
 2894 0034 054B     	 ldr r3,.L102+8
 2895 0036 1B78     	 ldrb r3,[r3]
 2896 0038 1B01     	 lsl r3,r3,#4
 2897 003a D318     	 add r3,r2,r3
 590:../samuel/samuel_io.c ****  }
 2898              	 .loc 3 590 0
 2899 003c 181C     	 mov r0,r3
 2900 003e BD46     	 mov sp,r7
 2901              	 
 2902 0040 80BD     	 pop {r7,pc}
 2903              	.L103:
 2904 0042 C046     	 .align 2
 2905              	.L102:
 2906 0044 00000000 	 .word EEprom_status
 2907 0048 00000000 	 .word ReadBuffer1
 2908 004c 00000000 	 .word oper_status
 2909              	 .cfi_endproc
 2910              	.LFE315:
 2912              	 .section .text.readNodeIdEEprom,"ax",%progbits
 2913              	 .align 2
 2914              	 .global readNodeIdEEprom
 2915              	 .code 16
 2916              	 .thumb_func
 2918              	readNodeIdEEprom:
 2919              	.LFB316:
 591:../samuel/samuel_io.c ****  //------------------------------------------------
 592:../samuel/samuel_io.c **** 
 593:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 594:../samuel/samuel_io.c ****  {
 2920              	 .loc 3 594 0
 2921              	 .cfi_startproc
 2922 0000 80B5     	 push {r7,lr}
 2923              	.LCFI64:
 2924              	 .cfi_def_cfa_offset 8
 2925              	 .cfi_offset 7,-8
 2926              	 .cfi_offset 14,-4
 2927 0002 00AF     	 add r7,sp,#0
 2928              	.LCFI65:
 2929              	 .cfi_def_cfa_register 7
 595:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2930              	 .loc 3 595 0
 2931 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2932 0008 031C     	 mov r3,r0
 2933 000a 1A1C     	 mov r2,r3
 2934 000c 0D4B     	 ldr r3,.L107
 2935 000e 1A70     	 strb r2,[r3]
 596:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2936              	 .loc 3 596 0
 2937 0010 0C4B     	 ldr r3,.L107
 2938 0012 1B78     	 ldrb r3,[r3]
 2939 0014 032B     	 cmp r3,#3
 2940 0016 0AD1     	 bne .L105
 597:../samuel/samuel_io.c **** 	 {
 598:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2941              	 .loc 3 598 0
 2942 0018 0B4B     	 ldr r3,.L107+4
 2943 001a 0220     	 mov r0,#2
 2944 001c 0021     	 mov r1,#0
 2945 001e 1A1C     	 mov r2,r3
 2946 0020 1023     	 mov r3,#16
 2947 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2948 0026 031C     	 mov r3,r0
 2949 0028 1A1C     	 mov r2,r3
 2950 002a 084B     	 ldr r3,.L107+8
 2951 002c 1A70     	 strb r2,[r3]
 2952              	.L105:
 599:../samuel/samuel_io.c ****      }
 600:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2953              	 .loc 3 600 0
 2954 002e 054B     	 ldr r3,.L107
 2955 0030 1B78     	 ldrb r3,[r3]
 2956 0032 1A1C     	 mov r2,r3
 2957 0034 054B     	 ldr r3,.L107+8
 2958 0036 1B78     	 ldrb r3,[r3]
 2959 0038 1B01     	 lsl r3,r3,#4
 2960 003a D318     	 add r3,r2,r3
 601:../samuel/samuel_io.c ****  }
 2961              	 .loc 3 601 0
 2962 003c 181C     	 mov r0,r3
 2963 003e BD46     	 mov sp,r7
 2964              	 
 2965 0040 80BD     	 pop {r7,pc}
 2966              	.L108:
 2967 0042 C046     	 .align 2
 2968              	.L107:
 2969 0044 00000000 	 .word EEprom_status
 2970 0048 00000000 	 .word ReadBuffer2
 2971 004c 00000000 	 .word oper_status
 2972              	 .cfi_endproc
 2973              	.LFE316:
 2975              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 2976              	 .align 2
 2977              	 .global read_akt_light_EEprom
 2978              	 .code 16
 2979              	 .thumb_func
 2981              	read_akt_light_EEprom:
 2982              	.LFB317:
 602:../samuel/samuel_io.c **** 
 603:../samuel/samuel_io.c ****  //------------------------------------------------
 604:../samuel/samuel_io.c **** 
 605:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 606:../samuel/samuel_io.c ****  {
 2983              	 .loc 3 606 0
 2984              	 .cfi_startproc
 2985 0000 80B5     	 push {r7,lr}
 2986              	.LCFI66:
 2987              	 .cfi_def_cfa_offset 8
 2988              	 .cfi_offset 7,-8
 2989              	 .cfi_offset 14,-4
 2990 0002 00AF     	 add r7,sp,#0
 2991              	.LCFI67:
 2992              	 .cfi_def_cfa_register 7
 607:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2993              	 .loc 3 607 0
 2994 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2995 0008 031C     	 mov r3,r0
 2996 000a 1A1C     	 mov r2,r3
 2997 000c 0D4B     	 ldr r3,.L112
 2998 000e 1A70     	 strb r2,[r3]
 608:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2999              	 .loc 3 608 0
 3000 0010 0C4B     	 ldr r3,.L112
 3001 0012 1B78     	 ldrb r3,[r3]
 3002 0014 032B     	 cmp r3,#3
 3003 0016 0AD1     	 bne .L110
 609:../samuel/samuel_io.c **** 	 {
 610:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 3004              	 .loc 3 610 0
 3005 0018 0B4B     	 ldr r3,.L112+4
 3006 001a 0420     	 mov r0,#4
 3007 001c 0021     	 mov r1,#0
 3008 001e 1A1C     	 mov r2,r3
 3009 0020 1023     	 mov r3,#16
 3010 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3011 0026 031C     	 mov r3,r0
 3012 0028 1A1C     	 mov r2,r3
 3013 002a 084B     	 ldr r3,.L112+8
 3014 002c 1A70     	 strb r2,[r3]
 3015              	.L110:
 611:../samuel/samuel_io.c ****      }
 612:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3016              	 .loc 3 612 0
 3017 002e 054B     	 ldr r3,.L112
 3018 0030 1B78     	 ldrb r3,[r3]
 3019 0032 1A1C     	 mov r2,r3
 3020 0034 054B     	 ldr r3,.L112+8
 3021 0036 1B78     	 ldrb r3,[r3]
 3022 0038 1B01     	 lsl r3,r3,#4
 3023 003a D318     	 add r3,r2,r3
 613:../samuel/samuel_io.c ****  }
 3024              	 .loc 3 613 0
 3025 003c 181C     	 mov r0,r3
 3026 003e BD46     	 mov sp,r7
 3027              	 
 3028 0040 80BD     	 pop {r7,pc}
 3029              	.L113:
 3030 0042 C046     	 .align 2
 3031              	.L112:
 3032 0044 00000000 	 .word EEprom_status
 3033 0048 00000000 	 .word ReadBuffer2
 3034 004c 00000000 	 .word oper_status
 3035              	 .cfi_endproc
 3036              	.LFE317:
 3038              	 .section .text.read_off_light_EEprom,"ax",%progbits
 3039              	 .align 2
 3040              	 .global read_off_light_EEprom
 3041              	 .code 16
 3042              	 .thumb_func
 3044              	read_off_light_EEprom:
 3045              	.LFB318:
 614:../samuel/samuel_io.c ****  //------------------------------------------------
 615:../samuel/samuel_io.c **** 
 616:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 617:../samuel/samuel_io.c ****  {
 3046              	 .loc 3 617 0
 3047              	 .cfi_startproc
 3048 0000 80B5     	 push {r7,lr}
 3049              	.LCFI68:
 3050              	 .cfi_def_cfa_offset 8
 3051              	 .cfi_offset 7,-8
 3052              	 .cfi_offset 14,-4
 3053 0002 00AF     	 add r7,sp,#0
 3054              	.LCFI69:
 3055              	 .cfi_def_cfa_register 7
 618:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3056              	 .loc 3 618 0
 3057 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3058 0008 031C     	 mov r3,r0
 3059 000a 1A1C     	 mov r2,r3
 3060 000c 0D4B     	 ldr r3,.L117
 3061 000e 1A70     	 strb r2,[r3]
 619:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3062              	 .loc 3 619 0
 3063 0010 0C4B     	 ldr r3,.L117
 3064 0012 1B78     	 ldrb r3,[r3]
 3065 0014 032B     	 cmp r3,#3
 3066 0016 0AD1     	 bne .L115
 620:../samuel/samuel_io.c **** 	 {
 621:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 3067              	 .loc 3 621 0
 3068 0018 0B4B     	 ldr r3,.L117+4
 3069 001a 0520     	 mov r0,#5
 3070 001c 0021     	 mov r1,#0
 3071 001e 1A1C     	 mov r2,r3
 3072 0020 1023     	 mov r3,#16
 3073 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3074 0026 031C     	 mov r3,r0
 3075 0028 1A1C     	 mov r2,r3
 3076 002a 084B     	 ldr r3,.L117+8
 3077 002c 1A70     	 strb r2,[r3]
 3078              	.L115:
 622:../samuel/samuel_io.c ****      }
 623:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3079              	 .loc 3 623 0
 3080 002e 054B     	 ldr r3,.L117
 3081 0030 1B78     	 ldrb r3,[r3]
 3082 0032 1A1C     	 mov r2,r3
 3083 0034 054B     	 ldr r3,.L117+8
 3084 0036 1B78     	 ldrb r3,[r3]
 3085 0038 1B01     	 lsl r3,r3,#4
 3086 003a D318     	 add r3,r2,r3
 624:../samuel/samuel_io.c ****  }
 3087              	 .loc 3 624 0
 3088 003c 181C     	 mov r0,r3
 3089 003e BD46     	 mov sp,r7
 3090              	 
 3091 0040 80BD     	 pop {r7,pc}
 3092              	.L118:
 3093 0042 C046     	 .align 2
 3094              	.L117:
 3095 0044 00000000 	 .word EEprom_status
 3096 0048 00000000 	 .word ReadBuffer2
 3097 004c 00000000 	 .word oper_status
 3098              	 .cfi_endproc
 3099              	.LFE318:
 3101              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 3102              	 .align 2
 3103              	 .global writeSernr_B1_EEprom
 3104              	 .code 16
 3105              	 .thumb_func
 3107              	writeSernr_B1_EEprom:
 3108              	.LFB319:
 625:../samuel/samuel_io.c **** 
 626:../samuel/samuel_io.c ****  //------------------------------------------------
 627:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 628:../samuel/samuel_io.c ****  {
 3109              	 .loc 3 628 0
 3110              	 .cfi_startproc
 3111 0000 80B5     	 push {r7,lr}
 3112              	.LCFI70:
 3113              	 .cfi_def_cfa_offset 8
 3114              	 .cfi_offset 7,-8
 3115              	 .cfi_offset 14,-4
 3116 0002 82B0     	 sub sp,sp,#8
 3117              	.LCFI71:
 3118              	 .cfi_def_cfa_offset 16
 3119 0004 00AF     	 add r7,sp,#0
 3120              	.LCFI72:
 3121              	 .cfi_def_cfa_register 7
 629:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3122              	 .loc 3 629 0
 3123 0006 8023     	 mov r3,#128
 3124 0008 7B60     	 str r3,[r7,#4]
 630:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3125              	 .loc 3 630 0
 3126 000a 144B     	 ldr r3,.L123
 3127 000c 1A88     	 ldrh r2,[r3]
 3128 000e BA23     	 mov r3,#186
 3129 0010 1B01     	 lsl r3,r3,#4
 3130 0012 9A42     	 cmp r2,r3
 3131 0014 14D9     	 bls .L120
 631:../samuel/samuel_io.c ****   {
 632:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3132              	 .loc 3 632 0
 3133 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3134 001a 031C     	 mov r3,r0
 3135 001c 1A1C     	 mov r2,r3
 3136 001e 104B     	 ldr r3,.L123+4
 3137 0020 1A70     	 strb r2,[r3]
 633:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3138              	 .loc 3 633 0
 3139 0022 0F4B     	 ldr r3,.L123+4
 3140 0024 1B78     	 ldrb r3,[r3]
 3141 0026 032B     	 cmp r3,#3
 3142 0028 08D1     	 bne .L121
 634:../samuel/samuel_io.c ****     {
 635:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3143              	 .loc 3 635 0
 3144 002a 0E4B     	 ldr r3,.L123+8
 3145 002c 0120     	 mov r0,#1
 3146 002e 191C     	 mov r1,r3
 3147 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3148 0034 031C     	 mov r3,r0
 3149 0036 1A1C     	 mov r2,r3
 3150 0038 0B4B     	 ldr r3,.L123+12
 3151 003a 1A70     	 strb r2,[r3]
 3152              	.L121:
 636:../samuel/samuel_io.c ****     }
 637:../samuel/samuel_io.c **** 	 a = 0;
 3153              	 .loc 3 637 0
 3154 003c 0023     	 mov r3,#0
 3155 003e 7B60     	 str r3,[r7,#4]
 3156              	.L120:
 638:../samuel/samuel_io.c ****   }
 639:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3157              	 .loc 3 639 0
 3158 0040 074B     	 ldr r3,.L123+4
 3159 0042 1B78     	 ldrb r3,[r3]
 3160 0044 1A1C     	 mov r2,r3
 3161 0046 084B     	 ldr r3,.L123+12
 3162 0048 1B78     	 ldrb r3,[r3]
 3163 004a 1B01     	 lsl r3,r3,#4
 3164 004c D218     	 add r2,r2,r3
 3165 004e 7B68     	 ldr r3,[r7,#4]
 3166 0050 D318     	 add r3,r2,r3
 640:../samuel/samuel_io.c ****  }
 3167              	 .loc 3 640 0
 3168 0052 181C     	 mov r0,r3
 3169 0054 BD46     	 mov sp,r7
 3170 0056 02B0     	 add sp,sp,#8
 3171              	 
 3172 0058 80BD     	 pop {r7,pc}
 3173              	.L124:
 3174 005a C046     	 .align 2
 3175              	.L123:
 3176 005c 00000000 	 .word resultB
 3177 0060 00000000 	 .word EEprom_status
 3178 0064 00000000 	 .word ReadBuffer1
 3179 0068 00000000 	 .word oper_status
 3180              	 .cfi_endproc
 3181              	.LFE319:
 3183              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3184              	 .align 2
 3185              	 .global writeNodeid_B2_EEprom
 3186              	 .code 16
 3187              	 .thumb_func
 3189              	writeNodeid_B2_EEprom:
 3190              	.LFB320:
 641:../samuel/samuel_io.c ****  //------------------------------------------------
 642:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 643:../samuel/samuel_io.c ****  {
 3191              	 .loc 3 643 0
 3192              	 .cfi_startproc
 3193 0000 80B5     	 push {r7,lr}
 3194              	.LCFI73:
 3195              	 .cfi_def_cfa_offset 8
 3196              	 .cfi_offset 7,-8
 3197              	 .cfi_offset 14,-4
 3198 0002 82B0     	 sub sp,sp,#8
 3199              	.LCFI74:
 3200              	 .cfi_def_cfa_offset 16
 3201 0004 00AF     	 add r7,sp,#0
 3202              	.LCFI75:
 3203              	 .cfi_def_cfa_register 7
 644:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3204              	 .loc 3 644 0
 3205 0006 8023     	 mov r3,#128
 3206 0008 7B60     	 str r3,[r7,#4]
 645:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3207              	 .loc 3 645 0
 3208 000a 144B     	 ldr r3,.L129
 3209 000c 1A88     	 ldrh r2,[r3]
 3210 000e BA23     	 mov r3,#186
 3211 0010 1B01     	 lsl r3,r3,#4
 3212 0012 9A42     	 cmp r2,r3
 3213 0014 14D9     	 bls .L126
 646:../samuel/samuel_io.c ****     {
 647:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3214              	 .loc 3 647 0
 3215 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3216 001a 031C     	 mov r3,r0
 3217 001c 1A1C     	 mov r2,r3
 3218 001e 104B     	 ldr r3,.L129+4
 3219 0020 1A70     	 strb r2,[r3]
 648:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3220              	 .loc 3 648 0
 3221 0022 0F4B     	 ldr r3,.L129+4
 3222 0024 1B78     	 ldrb r3,[r3]
 3223 0026 032B     	 cmp r3,#3
 3224 0028 08D1     	 bne .L127
 649:../samuel/samuel_io.c ****       {
 650:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3225              	 .loc 3 650 0
 3226 002a 0E4B     	 ldr r3,.L129+8
 3227 002c 0220     	 mov r0,#2
 3228 002e 191C     	 mov r1,r3
 3229 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3230 0034 031C     	 mov r3,r0
 3231 0036 1A1C     	 mov r2,r3
 3232 0038 0B4B     	 ldr r3,.L129+12
 3233 003a 1A70     	 strb r2,[r3]
 3234              	.L127:
 651:../samuel/samuel_io.c ****       }
 652:../samuel/samuel_io.c **** 	 a = 0;
 3235              	 .loc 3 652 0
 3236 003c 0023     	 mov r3,#0
 3237 003e 7B60     	 str r3,[r7,#4]
 3238              	.L126:
 653:../samuel/samuel_io.c ****     }
 654:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3239              	 .loc 3 654 0
 3240 0040 074B     	 ldr r3,.L129+4
 3241 0042 1B78     	 ldrb r3,[r3]
 3242 0044 1A1C     	 mov r2,r3
 3243 0046 084B     	 ldr r3,.L129+12
 3244 0048 1B78     	 ldrb r3,[r3]
 3245 004a 1B01     	 lsl r3,r3,#4
 3246 004c D218     	 add r2,r2,r3
 3247 004e 7B68     	 ldr r3,[r7,#4]
 3248 0050 D318     	 add r3,r2,r3
 655:../samuel/samuel_io.c ****  }
 3249              	 .loc 3 655 0
 3250 0052 181C     	 mov r0,r3
 3251 0054 BD46     	 mov sp,r7
 3252 0056 02B0     	 add sp,sp,#8
 3253              	 
 3254 0058 80BD     	 pop {r7,pc}
 3255              	.L130:
 3256 005a C046     	 .align 2
 3257              	.L129:
 3258 005c 00000000 	 .word resultB
 3259 0060 00000000 	 .word EEprom_status
 3260 0064 00000000 	 .word ReadBuffer2
 3261 0068 00000000 	 .word oper_status
 3262              	 .cfi_endproc
 3263              	.LFE320:
 3265              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3266              	 .align 2
 3267              	 .global writeLamp_data_B3_EEprom
 3268              	 .code 16
 3269              	 .thumb_func
 3271              	writeLamp_data_B3_EEprom:
 3272              	.LFB321:
 656:../samuel/samuel_io.c ****  //----------------------------
 657:../samuel/samuel_io.c **** 
 658:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 659:../samuel/samuel_io.c ****  {
 3273              	 .loc 3 659 0
 3274              	 .cfi_startproc
 3275 0000 80B5     	 push {r7,lr}
 3276              	.LCFI76:
 3277              	 .cfi_def_cfa_offset 8
 3278              	 .cfi_offset 7,-8
 3279              	 .cfi_offset 14,-4
 3280 0002 82B0     	 sub sp,sp,#8
 3281              	.LCFI77:
 3282              	 .cfi_def_cfa_offset 16
 3283 0004 00AF     	 add r7,sp,#0
 3284              	.LCFI78:
 3285              	 .cfi_def_cfa_register 7
 660:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3286              	 .loc 3 660 0
 3287 0006 8023     	 mov r3,#128
 3288 0008 7B60     	 str r3,[r7,#4]
 661:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3289              	 .loc 3 661 0
 3290 000a 144B     	 ldr r3,.L135
 3291 000c 1A88     	 ldrh r2,[r3]
 3292 000e BA23     	 mov r3,#186
 3293 0010 1B01     	 lsl r3,r3,#4
 3294 0012 9A42     	 cmp r2,r3
 3295 0014 14D9     	 bls .L132
 662:../samuel/samuel_io.c ****   {
 663:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3296              	 .loc 3 663 0
 3297 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3298 001a 031C     	 mov r3,r0
 3299 001c 1A1C     	 mov r2,r3
 3300 001e 104B     	 ldr r3,.L135+4
 3301 0020 1A70     	 strb r2,[r3]
 664:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3302              	 .loc 3 664 0
 3303 0022 0F4B     	 ldr r3,.L135+4
 3304 0024 1B78     	 ldrb r3,[r3]
 3305 0026 032B     	 cmp r3,#3
 3306 0028 08D1     	 bne .L133
 665:../samuel/samuel_io.c ****     {
 666:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3307              	 .loc 3 666 0
 3308 002a 0E4B     	 ldr r3,.L135+8
 3309 002c 0320     	 mov r0,#3
 3310 002e 191C     	 mov r1,r3
 3311 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3312 0034 031C     	 mov r3,r0
 3313 0036 1A1C     	 mov r2,r3
 3314 0038 0B4B     	 ldr r3,.L135+12
 3315 003a 1A70     	 strb r2,[r3]
 3316              	.L133:
 667:../samuel/samuel_io.c ****     }
 668:../samuel/samuel_io.c **** 	 a = 0;
 3317              	 .loc 3 668 0
 3318 003c 0023     	 mov r3,#0
 3319 003e 7B60     	 str r3,[r7,#4]
 3320              	.L132:
 669:../samuel/samuel_io.c ****   }
 670:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3321              	 .loc 3 670 0
 3322 0040 074B     	 ldr r3,.L135+4
 3323 0042 1B78     	 ldrb r3,[r3]
 3324 0044 1A1C     	 mov r2,r3
 3325 0046 084B     	 ldr r3,.L135+12
 3326 0048 1B78     	 ldrb r3,[r3]
 3327 004a 1B01     	 lsl r3,r3,#4
 3328 004c D218     	 add r2,r2,r3
 3329 004e 7B68     	 ldr r3,[r7,#4]
 3330 0050 D318     	 add r3,r2,r3
 671:../samuel/samuel_io.c ****  }
 3331              	 .loc 3 671 0
 3332 0052 181C     	 mov r0,r3
 3333 0054 BD46     	 mov sp,r7
 3334 0056 02B0     	 add sp,sp,#8
 3335              	 
 3336 0058 80BD     	 pop {r7,pc}
 3337              	.L136:
 3338 005a C046     	 .align 2
 3339              	.L135:
 3340 005c 00000000 	 .word resultB
 3341 0060 00000000 	 .word EEprom_status
 3342 0064 00000000 	 .word ReadBuffer3
 3343 0068 00000000 	 .word oper_status
 3344              	 .cfi_endproc
 3345              	.LFE321:
 3347              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3348              	 .align 2
 3349              	 .global writeakt_light_data_B4_EEprom
 3350              	 .code 16
 3351              	 .thumb_func
 3353              	writeakt_light_data_B4_EEprom:
 3354              	.LFB322:
 672:../samuel/samuel_io.c **** 
 673:../samuel/samuel_io.c ****  //------------------------------------------------
 674:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 675:../samuel/samuel_io.c ****  {
 3355              	 .loc 3 675 0
 3356              	 .cfi_startproc
 3357 0000 80B5     	 push {r7,lr}
 3358              	.LCFI79:
 3359              	 .cfi_def_cfa_offset 8
 3360              	 .cfi_offset 7,-8
 3361              	 .cfi_offset 14,-4
 3362 0002 82B0     	 sub sp,sp,#8
 3363              	.LCFI80:
 3364              	 .cfi_def_cfa_offset 16
 3365 0004 00AF     	 add r7,sp,#0
 3366              	.LCFI81:
 3367              	 .cfi_def_cfa_register 7
 676:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3368              	 .loc 3 676 0
 3369 0006 8023     	 mov r3,#128
 3370 0008 7B60     	 str r3,[r7,#4]
 677:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3371              	 .loc 3 677 0
 3372 000a 144B     	 ldr r3,.L141
 3373 000c 1A88     	 ldrh r2,[r3]
 3374 000e BA23     	 mov r3,#186
 3375 0010 1B01     	 lsl r3,r3,#4
 3376 0012 9A42     	 cmp r2,r3
 3377 0014 14D9     	 bls .L138
 678:../samuel/samuel_io.c ****     {
 679:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3378              	 .loc 3 679 0
 3379 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3380 001a 031C     	 mov r3,r0
 3381 001c 1A1C     	 mov r2,r3
 3382 001e 104B     	 ldr r3,.L141+4
 3383 0020 1A70     	 strb r2,[r3]
 680:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3384              	 .loc 3 680 0
 3385 0022 0F4B     	 ldr r3,.L141+4
 3386 0024 1B78     	 ldrb r3,[r3]
 3387 0026 032B     	 cmp r3,#3
 3388 0028 08D1     	 bne .L139
 681:../samuel/samuel_io.c ****       {
 682:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3389              	 .loc 3 682 0
 3390 002a 0E4B     	 ldr r3,.L141+8
 3391 002c 0420     	 mov r0,#4
 3392 002e 191C     	 mov r1,r3
 3393 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3394 0034 031C     	 mov r3,r0
 3395 0036 1A1C     	 mov r2,r3
 3396 0038 0B4B     	 ldr r3,.L141+12
 3397 003a 1A70     	 strb r2,[r3]
 3398              	.L139:
 683:../samuel/samuel_io.c ****       }
 684:../samuel/samuel_io.c **** 	 a = 0;
 3399              	 .loc 3 684 0
 3400 003c 0023     	 mov r3,#0
 3401 003e 7B60     	 str r3,[r7,#4]
 3402              	.L138:
 685:../samuel/samuel_io.c ****     }
 686:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3403              	 .loc 3 686 0
 3404 0040 074B     	 ldr r3,.L141+4
 3405 0042 1B78     	 ldrb r3,[r3]
 3406 0044 1A1C     	 mov r2,r3
 3407 0046 084B     	 ldr r3,.L141+12
 3408 0048 1B78     	 ldrb r3,[r3]
 3409 004a 1B01     	 lsl r3,r3,#4
 3410 004c D218     	 add r2,r2,r3
 3411 004e 7B68     	 ldr r3,[r7,#4]
 3412 0050 D318     	 add r3,r2,r3
 687:../samuel/samuel_io.c ****  }
 3413              	 .loc 3 687 0
 3414 0052 181C     	 mov r0,r3
 3415 0054 BD46     	 mov sp,r7
 3416 0056 02B0     	 add sp,sp,#8
 3417              	 
 3418 0058 80BD     	 pop {r7,pc}
 3419              	.L142:
 3420 005a C046     	 .align 2
 3421              	.L141:
 3422 005c 00000000 	 .word resultB
 3423 0060 00000000 	 .word EEprom_status
 3424 0064 00000000 	 .word ReadBuffer2
 3425 0068 00000000 	 .word oper_status
 3426              	 .cfi_endproc
 3427              	.LFE322:
 3429              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3430              	 .align 2
 3431              	 .global writeOff_light_B5_EEprom
 3432              	 .code 16
 3433              	 .thumb_func
 3435              	writeOff_light_B5_EEprom:
 3436              	.LFB323:
 688:../samuel/samuel_io.c ****  //----------------------------
 689:../samuel/samuel_io.c **** 
 690:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 691:../samuel/samuel_io.c ****  {
 3437              	 .loc 3 691 0
 3438              	 .cfi_startproc
 3439 0000 80B5     	 push {r7,lr}
 3440              	.LCFI82:
 3441              	 .cfi_def_cfa_offset 8
 3442              	 .cfi_offset 7,-8
 3443              	 .cfi_offset 14,-4
 3444 0002 82B0     	 sub sp,sp,#8
 3445              	.LCFI83:
 3446              	 .cfi_def_cfa_offset 16
 3447 0004 00AF     	 add r7,sp,#0
 3448              	.LCFI84:
 3449              	 .cfi_def_cfa_register 7
 692:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3450              	 .loc 3 692 0
 3451 0006 8023     	 mov r3,#128
 3452 0008 7B60     	 str r3,[r7,#4]
 693:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3453              	 .loc 3 693 0
 3454 000a 144B     	 ldr r3,.L147
 3455 000c 1A88     	 ldrh r2,[r3]
 3456 000e BA23     	 mov r3,#186
 3457 0010 1B01     	 lsl r3,r3,#4
 3458 0012 9A42     	 cmp r2,r3
 3459 0014 14D9     	 bls .L144
 694:../samuel/samuel_io.c ****   {
 695:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3460              	 .loc 3 695 0
 3461 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3462 001a 031C     	 mov r3,r0
 3463 001c 1A1C     	 mov r2,r3
 3464 001e 104B     	 ldr r3,.L147+4
 3465 0020 1A70     	 strb r2,[r3]
 696:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3466              	 .loc 3 696 0
 3467 0022 0F4B     	 ldr r3,.L147+4
 3468 0024 1B78     	 ldrb r3,[r3]
 3469 0026 032B     	 cmp r3,#3
 3470 0028 08D1     	 bne .L145
 697:../samuel/samuel_io.c ****     {
 698:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3471              	 .loc 3 698 0
 3472 002a 0E4B     	 ldr r3,.L147+8
 3473 002c 0520     	 mov r0,#5
 3474 002e 191C     	 mov r1,r3
 3475 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3476 0034 031C     	 mov r3,r0
 3477 0036 1A1C     	 mov r2,r3
 3478 0038 0B4B     	 ldr r3,.L147+12
 3479 003a 1A70     	 strb r2,[r3]
 3480              	.L145:
 699:../samuel/samuel_io.c **** 
 700:../samuel/samuel_io.c **** 
 701:../samuel/samuel_io.c **** 
 702:../samuel/samuel_io.c **** 
 703:../samuel/samuel_io.c ****     }
 704:../samuel/samuel_io.c **** 	 a = 0;
 3481              	 .loc 3 704 0
 3482 003c 0023     	 mov r3,#0
 3483 003e 7B60     	 str r3,[r7,#4]
 3484              	.L144:
 705:../samuel/samuel_io.c ****   }
 706:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3485              	 .loc 3 706 0
 3486 0040 074B     	 ldr r3,.L147+4
 3487 0042 1B78     	 ldrb r3,[r3]
 3488 0044 1A1C     	 mov r2,r3
 3489 0046 084B     	 ldr r3,.L147+12
 3490 0048 1B78     	 ldrb r3,[r3]
 3491 004a 1B01     	 lsl r3,r3,#4
 3492 004c D218     	 add r2,r2,r3
 3493 004e 7B68     	 ldr r3,[r7,#4]
 3494 0050 D318     	 add r3,r2,r3
 707:../samuel/samuel_io.c ****  }
 3495              	 .loc 3 707 0
 3496 0052 181C     	 mov r0,r3
 3497 0054 BD46     	 mov sp,r7
 3498 0056 02B0     	 add sp,sp,#8
 3499              	 
 3500 0058 80BD     	 pop {r7,pc}
 3501              	.L148:
 3502 005a C046     	 .align 2
 3503              	.L147:
 3504 005c 00000000 	 .word resultB
 3505 0060 00000000 	 .word EEprom_status
 3506 0064 00000000 	 .word ReadBuffer2
 3507 0068 00000000 	 .word oper_status
 3508              	 .cfi_endproc
 3509              	.LFE323:
 3511              	 .section .text.sysiniValueB1,"ax",%progbits
 3512              	 .align 2
 3513              	 .global sysiniValueB1
 3514              	 .code 16
 3515              	 .thumb_func
 3517              	sysiniValueB1:
 3518              	.LFB324:
 708:../samuel/samuel_io.c **** 
 709:../samuel/samuel_io.c **** ///#############################################
 710:../samuel/samuel_io.c ****  //initialisierung
 711:../samuel/samuel_io.c **** 
 712:../samuel/samuel_io.c **** 
 713:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 714:../samuel/samuel_io.c ****  {
 3519              	 .loc 3 714 0
 3520              	 .cfi_startproc
 3521 0000 80B5     	 push {r7,lr}
 3522              	.LCFI85:
 3523              	 .cfi_def_cfa_offset 8
 3524              	 .cfi_offset 7,-8
 3525              	 .cfi_offset 14,-4
 3526 0002 00AF     	 add r7,sp,#0
 3527              	.LCFI86:
 3528              	 .cfi_def_cfa_register 7
 715:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 716:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 717:../samuel/samuel_io.c **** 
 718:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3529              	 .loc 3 718 0
 3530 0004 124B     	 ldr r3,.L150
 3531 0006 134A     	 ldr r2,.L150+4
 3532 0008 1A80     	 strh r2,[r3]
 719:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3533              	 .loc 3 719 0
 3534 000a 134B     	 ldr r3,.L150+8
 3535 000c 134A     	 ldr r2,.L150+12
 3536 000e 1A80     	 strh r2,[r3]
 720:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3537              	 .loc 3 720 0
 3538 0010 134B     	 ldr r3,.L150+16
 3539 0012 FA22     	 mov r2,#250
 3540 0014 9200     	 lsl r2,r2,#2
 3541 0016 1A80     	 strh r2,[r3]
 721:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3542              	 .loc 3 721 0
 3543 0018 124B     	 ldr r3,.L150+20
 3544 001a FA22     	 mov r2,#250
 3545 001c 9200     	 lsl r2,r2,#2
 3546 001e 1A80     	 strh r2,[r3]
 722:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3547              	 .loc 3 722 0
 3548 0020 114B     	 ldr r3,.L150+24
 3549 0022 FA22     	 mov r2,#250
 3550 0024 9200     	 lsl r2,r2,#2
 3551 0026 1A80     	 strh r2,[r3]
 723:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3552              	 .loc 3 723 0
 3553 0028 104B     	 ldr r3,.L150+28
 3554 002a FA22     	 mov r2,#250
 3555 002c 9200     	 lsl r2,r2,#2
 3556 002e 1A80     	 strh r2,[r3]
 724:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3557              	 .loc 3 724 0
 3558 0030 0F4B     	 ldr r3,.L150+32
 3559 0032 FA22     	 mov r2,#250
 3560 0034 9200     	 lsl r2,r2,#2
 3561 0036 1A80     	 strh r2,[r3]
 725:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3562              	 .loc 3 725 0
 3563 0038 0E4B     	 ldr r3,.L150+36
 3564 003a FA22     	 mov r2,#250
 3565 003c 9200     	 lsl r2,r2,#2
 3566 003e 1A80     	 strh r2,[r3]
 726:../samuel/samuel_io.c **** 
 727:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3567              	 .loc 3 727 0
 3568 0040 0D4B     	 ldr r3,.L150+40
 3569 0042 0022     	 mov r2,#0
 3570 0044 1A80     	 strh r2,[r3]
 728:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3571              	 .loc 3 728 0
 3572 0046 0D4B     	 ldr r3,.L150+44
 3573 0048 0022     	 mov r2,#0
 3574 004a 1A80     	 strh r2,[r3]
 729:../samuel/samuel_io.c **** 
 730:../samuel/samuel_io.c ****  }
 3575              	 .loc 3 730 0
 3576 004c BD46     	 mov sp,r7
 3577              	 
 3578 004e 80BD     	 pop {r7,pc}
 3579              	.L151:
 3580              	 .align 2
 3581              	.L150:
 3582 0050 00000000 	 .word Ser_NrH
 3583 0054 7A7B0000 	 .word 31610
 3584 0058 00000000 	 .word Ser_NrL
 3585 005c 59580000 	 .word 22617
 3586 0060 00000000 	 .word Hard_Vers
 3587 0064 00000000 	 .word Soft_Vers
 3588 0068 00000000 	 .word GEH_Vers
 3589 006c 00000000 	 .word Mon_Vers
 3590 0070 00000000 	 .word LED_WW_Vers
 3591 0074 00000000 	 .word LED_CW_Vers
 3592 0078 00000000 	 .word neu_Ser_NrH
 3593 007c 00000000 	 .word neu_Ser_NrL
 3594              	 .cfi_endproc
 3595              	.LFE324:
 3597              	 .section .text.sysiniValueB2,"ax",%progbits
 3598              	 .align 2
 3599              	 .global sysiniValueB2
 3600              	 .code 16
 3601              	 .thumb_func
 3603              	sysiniValueB2:
 3604              	.LFB325:
 731:../samuel/samuel_io.c **** 
 732:../samuel/samuel_io.c **** 
 733:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 734:../samuel/samuel_io.c ****  {
 3605              	 .loc 3 734 0
 3606              	 .cfi_startproc
 3607 0000 80B5     	 push {r7,lr}
 3608              	.LCFI87:
 3609              	 .cfi_def_cfa_offset 8
 3610              	 .cfi_offset 7,-8
 3611              	 .cfi_offset 14,-4
 3612 0002 00AF     	 add r7,sp,#0
 3613              	.LCFI88:
 3614              	 .cfi_def_cfa_register 7
 735:../samuel/samuel_io.c ****            node_id = 1;
 3615              	 .loc 3 735 0
 3616 0004 114B     	 ldr r3,.L153
 3617 0006 0122     	 mov r2,#1
 3618 0008 1A70     	 strb r2,[r3]
 736:../samuel/samuel_io.c ****            node_id_alt = 1;
 3619              	 .loc 3 736 0
 3620 000a 114B     	 ldr r3,.L153+4
 3621 000c 0122     	 mov r2,#1
 3622 000e 1A70     	 strb r2,[r3]
 737:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3623              	 .loc 3 737 0
 3624 0010 104B     	 ldr r3,.L153+8
 3625 0012 114A     	 ldr r2,.L153+12
 3626 0014 1A80     	 strh r2,[r3]
 738:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3627              	 .loc 3 738 0
 3628 0016 114B     	 ldr r3,.L153+16
 3629 0018 FA22     	 mov r2,#250
 3630 001a D200     	 lsl r2,r2,#3
 3631 001c 1A80     	 strh r2,[r3]
 739:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3632              	 .loc 3 739 0
 3633 001e 104B     	 ldr r3,.L153+20
 3634 0020 FA22     	 mov r2,#250
 3635 0022 D200     	 lsl r2,r2,#3
 3636 0024 1A80     	 strh r2,[r3]
 740:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3637              	 .loc 3 740 0
 3638 0026 0F4B     	 ldr r3,.L153+24
 3639 0028 E122     	 mov r2,#225
 3640 002a 1201     	 lsl r2,r2,#4
 3641 002c 1A80     	 strh r2,[r3]
 741:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3642              	 .loc 3 741 0
 3643 002e 0E4B     	 ldr r3,.L153+28
 3644 0030 0E4A     	 ldr r2,.L153+32
 3645 0032 1A80     	 strh r2,[r3]
 742:../samuel/samuel_io.c **** 		   led_grupp=10;
 3646              	 .loc 3 742 0
 3647 0034 0E4B     	 ldr r3,.L153+36
 3648 0036 0A22     	 mov r2,#10
 3649 0038 1A80     	 strh r2,[r3]
 743:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3650              	 .loc 3 743 0
 3651 003a 0E4B     	 ldr r3,.L153+40
 3652 003c 3522     	 mov r2,#53
 3653 003e 1A80     	 strh r2,[r3]
 744:../samuel/samuel_io.c **** 
 745:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3654              	 .loc 3 745 0
 3655 0040 0D4B     	 ldr r3,.L153+44
 3656 0042 0122     	 mov r2,#1
 3657 0044 1A70     	 strb r2,[r3]
 746:../samuel/samuel_io.c ****  }
 3658              	 .loc 3 746 0
 3659 0046 BD46     	 mov sp,r7
 3660              	 
 3661 0048 80BD     	 pop {r7,pc}
 3662              	.L154:
 3663 004a C046     	 .align 2
 3664              	.L153:
 3665 004c 00000000 	 .word node_id
 3666 0050 00000000 	 .word node_id_alt
 3667 0054 00000000 	 .word node_id_16bit
 3668 0058 34120000 	 .word 4660
 3669 005c 00000000 	 .word val_Pow_Nom
 3670 0060 00000000 	 .word val_Pow_max
 3671 0064 00000000 	 .word val_Spannung_min
 3672 0068 00000000 	 .word val_Spannung_max
 3673 006c 68100000 	 .word 4200
 3674 0070 00000000 	 .word led_grupp
 3675 0074 00000000 	 .word led_Strom
 3676 0078 00000000 	 .word node_id_neu
 3677              	 .cfi_endproc
 3678              	.LFE325:
 3680              	 .section .text.sysiniValueB4,"ax",%progbits
 3681              	 .align 2
 3682              	 .global sysiniValueB4
 3683              	 .code 16
 3684              	 .thumb_func
 3686              	sysiniValueB4:
 3687              	.LFB326:
 747:../samuel/samuel_io.c **** 
 748:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 749:../samuel/samuel_io.c ****  {
 3688              	 .loc 3 749 0
 3689              	 .cfi_startproc
 3690 0000 80B5     	 push {r7,lr}
 3691              	.LCFI89:
 3692              	 .cfi_def_cfa_offset 8
 3693              	 .cfi_offset 7,-8
 3694              	 .cfi_offset 14,-4
 3695 0002 00AF     	 add r7,sp,#0
 3696              	.LCFI90:
 3697              	 .cfi_def_cfa_register 7
 750:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3698              	 .loc 3 750 0
 3699 0004 264B     	 ldr r3,.L156
 3700 0006 0A22     	 mov r2,#10
 3701 0008 1A70     	 strb r2,[r3]
 751:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3702              	 .loc 3 751 0
 3703 000a 264B     	 ldr r3,.L156+4
 3704 000c 0A22     	 mov r2,#10
 3705 000e 1A70     	 strb r2,[r3]
 752:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3706              	 .loc 3 752 0
 3707 0010 254B     	 ldr r3,.L156+8
 3708 0012 0A22     	 mov r2,#10
 3709 0014 1A70     	 strb r2,[r3]
 753:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3710              	 .loc 3 753 0
 3711 0016 254B     	 ldr r3,.L156+12
 3712 0018 0A22     	 mov r2,#10
 3713 001a 1A70     	 strb r2,[r3]
 754:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3714              	 .loc 3 754 0
 3715 001c 244B     	 ldr r3,.L156+16
 3716 001e 0A22     	 mov r2,#10
 3717 0020 1A80     	 strh r2,[r3]
 755:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3718              	 .loc 3 755 0
 3719 0022 244B     	 ldr r3,.L156+20
 3720 0024 B022     	 mov r2,#176
 3721 0026 1A80     	 strh r2,[r3]
 756:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3722              	 .loc 3 756 0
 3723 0028 234B     	 ldr r3,.L156+24
 3724 002a 0122     	 mov r2,#1
 3725 002c 5242     	 neg r2,r2
 3726 002e 1A80     	 strh r2,[r3]
 757:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3727              	 .loc 3 757 0
 3728 0030 224B     	 ldr r3,.L156+28
 3729 0032 0022     	 mov r2,#0
 3730 0034 1A80     	 strh r2,[r3]
 758:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3731              	 .loc 3 758 0
 3732 0036 224B     	 ldr r3,.L156+32
 3733 0038 FA22     	 mov r2,#250
 3734 003a 9200     	 lsl r2,r2,#2
 3735 003c 1A80     	 strh r2,[r3]
 759:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3736              	 .loc 3 759 0
 3737 003e 214B     	 ldr r3,.L156+36
 3738 0040 FA22     	 mov r2,#250
 3739 0042 9200     	 lsl r2,r2,#2
 3740 0044 1A80     	 strh r2,[r3]
 760:../samuel/samuel_io.c **** 
 761:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3741              	 .loc 3 761 0
 3742 0046 1B4B     	 ldr r3,.L156+20
 3743 0048 1A88     	 ldrh r2,[r3]
 3744 004a 1F4B     	 ldr r3,.L156+40
 3745 004c 1A80     	 strh r2,[r3]
 762:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3746              	 .loc 3 762 0
 3747 004e 194B     	 ldr r3,.L156+20
 3748 0050 1A88     	 ldrh r2,[r3]
 3749 0052 1E4B     	 ldr r3,.L156+44
 3750 0054 1A80     	 strh r2,[r3]
 763:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3751              	 .loc 3 763 0
 3752 0056 174B     	 ldr r3,.L156+20
 3753 0058 1A88     	 ldrh r2,[r3]
 3754 005a 1D4B     	 ldr r3,.L156+48
 3755 005c 1A80     	 strh r2,[r3]
 764:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3756              	 .loc 3 764 0
 3757 005e 154B     	 ldr r3,.L156+20
 3758 0060 1A88     	 ldrh r2,[r3]
 3759 0062 1C4B     	 ldr r3,.L156+52
 3760 0064 1A80     	 strh r2,[r3]
 765:../samuel/samuel_io.c **** 
 766:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3761              	 .loc 3 766 0
 3762 0066 144B     	 ldr r3,.L156+24
 3763 0068 1B88     	 ldrh r3,[r3]
 3764 006a 1B0A     	 lsr r3,r3,#8
 3765 006c 9AB2     	 uxth r2,r3
 3766 006e 1A4B     	 ldr r3,.L156+56
 3767 0070 1A80     	 strh r2,[r3]
 767:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3768              	 .loc 3 767 0
 3769 0072 114B     	 ldr r3,.L156+24
 3770 0074 1B88     	 ldrh r3,[r3]
 3771 0076 1B0A     	 lsr r3,r3,#8
 3772 0078 9AB2     	 uxth r2,r3
 3773 007a 184B     	 ldr r3,.L156+60
 3774 007c 1A80     	 strh r2,[r3]
 768:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3775              	 .loc 3 768 0
 3776 007e 0E4B     	 ldr r3,.L156+24
 3777 0080 1B88     	 ldrh r3,[r3]
 3778 0082 FF22     	 mov r2,#255
 3779 0084 1340     	 and r3,r2
 3780 0086 9AB2     	 uxth r2,r3
 3781 0088 154B     	 ldr r3,.L156+64
 3782 008a 1A80     	 strh r2,[r3]
 769:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3783              	 .loc 3 769 0
 3784 008c 0A4B     	 ldr r3,.L156+24
 3785 008e 1B88     	 ldrh r3,[r3]
 3786 0090 FF22     	 mov r2,#255
 3787 0092 1340     	 and r3,r2
 3788 0094 9AB2     	 uxth r2,r3
 3789 0096 134B     	 ldr r3,.L156+68
 3790 0098 1A80     	 strh r2,[r3]
 770:../samuel/samuel_io.c ****  }
 3791              	 .loc 3 770 0
 3792 009a BD46     	 mov sp,r7
 3793              	 
 3794 009c 80BD     	 pop {r7,pc}
 3795              	.L157:
 3796 009e C046     	 .align 2
 3797              	.L156:
 3798 00a0 00000000 	 .word Dimm_Gamma
 3799 00a4 00000000 	 .word Dimm_Stufen
 3800 00a8 00000000 	 .word Dimm_StufenGR
 3801 00ac 00000000 	 .word Dimm_Valu
 3802 00b0 00000000 	 .word Smooth_Value
 3803 00b4 00000000 	 .word linearwalk_gen
 3804 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 3805 00bc 00000000 	 .word Reserve_1
 3806 00c0 00000000 	 .word Dimm_Max_WW
 3807 00c4 00000000 	 .word Dimm_Max_CW
 3808 00c8 00000000 	 .word linearwalk_ww1
 3809 00cc 00000000 	 .word linearwalk_ww2
 3810 00d0 00000000 	 .word linearwalk_cw1
 3811 00d4 00000000 	 .word linearwalk_cw2
 3812 00d8 00000000 	 .word Farbe_ww1_Quot
 3813 00dc 00000000 	 .word Farbe_cw1_Quot
 3814 00e0 00000000 	 .word Farbe_ww2_Quot
 3815 00e4 00000000 	 .word Farbe_cw2_Quot
 3816              	 .cfi_endproc
 3817              	.LFE326:
 3819              	 .section .text.sysiniValueB5,"ax",%progbits
 3820              	 .align 2
 3821              	 .global sysiniValueB5
 3822              	 .code 16
 3823              	 .thumb_func
 3825              	sysiniValueB5:
 3826              	.LFB327:
 771:../samuel/samuel_io.c **** 
 772:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 773:../samuel/samuel_io.c ****  {
 3827              	 .loc 3 773 0
 3828              	 .cfi_startproc
 3829 0000 80B5     	 push {r7,lr}
 3830              	.LCFI91:
 3831              	 .cfi_def_cfa_offset 8
 3832              	 .cfi_offset 7,-8
 3833              	 .cfi_offset 14,-4
 3834 0002 00AF     	 add r7,sp,#0
 3835              	.LCFI92:
 3836              	 .cfi_def_cfa_register 7
 774:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 3837              	 .loc 3 774 0
 3838 0004 0E4B     	 ldr r3,.L159
 3839 0006 0522     	 mov r2,#5
 3840 0008 1A70     	 strb r2,[r3]
 775:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 3841              	 .loc 3 775 0
 3842 000a 0E4B     	 ldr r3,.L159+4
 3843 000c 0022     	 mov r2,#0
 3844 000e 1A70     	 strb r2,[r3]
 776:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 3845              	 .loc 3 776 0
 3846 0010 0D4B     	 ldr r3,.L159+8
 3847 0012 0022     	 mov r2,#0
 3848 0014 1A80     	 strh r2,[r3]
 777:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 3849              	 .loc 3 777 0
 3850 0016 0D4B     	 ldr r3,.L159+12
 3851 0018 0D4A     	 ldr r2,.L159+16
 3852 001a 1A80     	 strh r2,[r3]
 778:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 3853              	 .loc 3 778 0
 3854 001c 0D4B     	 ldr r3,.L159+20
 3855 001e 0C4A     	 ldr r2,.L159+16
 3856 0020 1A80     	 strh r2,[r3]
 779:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 3857              	 .loc 3 779 0
 3858 0022 0D4B     	 ldr r3,.L159+24
 3859 0024 0D4A     	 ldr r2,.L159+28
 3860 0026 1A80     	 strh r2,[r3]
 780:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 3861              	 .loc 3 780 0
 3862 0028 0D4B     	 ldr r3,.L159+32
 3863 002a 0C4A     	 ldr r2,.L159+28
 3864 002c 1A80     	 strh r2,[r3]
 781:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 3865              	 .loc 3 781 0
 3866 002e 0D4B     	 ldr r3,.L159+36
 3867 0030 0D4A     	 ldr r2,.L159+40
 3868 0032 1A80     	 strh r2,[r3]
 782:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 3869              	 .loc 3 782 0
 3870 0034 0D4B     	 ldr r3,.L159+44
 3871 0036 0C4A     	 ldr r2,.L159+40
 3872 0038 1A80     	 strh r2,[r3]
 783:../samuel/samuel_io.c ****  }
 3873              	 .loc 3 783 0
 3874 003a BD46     	 mov sp,r7
 3875              	 
 3876 003c 80BD     	 pop {r7,pc}
 3877              	.L160:
 3878 003e C046     	 .align 2
 3879              	.L159:
 3880 0040 00000000 	 .word RegOnOff
 3881 0044 00000000 	 .word RegOnOff2
 3882 0048 00000000 	 .word Reserve_2
 3883 004c 00000000 	 .word dimOff_Ww
 3884 0050 FF0F0000 	 .word 4095
 3885 0054 00000000 	 .word dimOff_Cw
 3886 0058 00000000 	 .word dimNorm1_Ww
 3887 005c FF010000 	 .word 511
 3888 0060 00000000 	 .word dimNorm1_Cw
 3889 0064 00000000 	 .word dimNorm2_Ww
 3890 0068 FF020000 	 .word 767
 3891 006c 00000000 	 .word dimNorm2_Cw
 3892              	 .cfi_endproc
 3893              	.LFE327:
 3895              	 .section .text.bcuInit,"ax",%progbits
 3896              	 .align 2
 3897              	 .global bcuInit
 3898              	 .code 16
 3899              	 .thumb_func
 3901              	bcuInit:
 3902              	.LFB328:
 784:../samuel/samuel_io.c **** 
 785:../samuel/samuel_io.c ****  //-----------------------------------------------
 786:../samuel/samuel_io.c ****  // BCCU Vorgaben
 787:../samuel/samuel_io.c **** 
 788:../samuel/samuel_io.c ****  void bcuInit(void)
 789:../samuel/samuel_io.c ****  {
 3903              	 .loc 3 789 0
 3904              	 .cfi_startproc
 3905 0000 80B5     	 push {r7,lr}
 3906              	.LCFI93:
 3907              	 .cfi_def_cfa_offset 8
 3908              	 .cfi_offset 7,-8
 3909              	 .cfi_offset 14,-4
 3910 0002 00AF     	 add r7,sp,#0
 3911              	.LCFI94:
 3912              	 .cfi_def_cfa_register 7
 790:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 3913              	 .loc 3 790 0
 3914 0004 194B     	 ldr r3,.L171
 3915 0006 1B78     	 ldrb r3,[r3]
 3916 0008 052B     	 cmp r3,#5
 3917 000a 2CD8     	 bhi .L170
 3918 000c 9A00     	 lsl r2,r3,#2
 3919 000e 184B     	 ldr r3,.L171+4
 3920 0010 D318     	 add r3,r2,r3
 3921 0012 1B68     	 ldr r3,[r3]
 3922 0014 9F46     	 mov pc,r3
 3923              	 .section .rodata.bcuInit,"a",%progbits
 3924              	 .align 2
 3925              	.L164:
 3926 0000 66000000 	 .word .L170
 3927 0004 16000000 	 .word .L163
 3928 0008 24000000 	 .word .L165
 3929 000c 32000000 	 .word .L166
 3930 0010 42000000 	 .word .L167
 3931 0014 54000000 	 .word .L168
 3932              	 .section .text.bcuInit
 3933              	.L163:
 791:../samuel/samuel_io.c **** 		{
 792:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 3934              	 .loc 3 792 0
 3935 0016 174B     	 ldr r3,.L171+8
 3936 0018 0022     	 mov r2,#0
 3937 001a 1A80     	 strh r2,[r3]
 793:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 3938              	 .loc 3 793 0
 3939 001c 164B     	 ldr r3,.L171+12
 3940 001e 0022     	 mov r2,#0
 3941 0020 1A80     	 strh r2,[r3]
 794:../samuel/samuel_io.c **** 									break;
 3942              	 .loc 3 794 0
 3943 0022 21E0     	 b .L161
 3944              	.L165:
 795:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 3945              	 .loc 3 795 0
 3946 0024 134B     	 ldr r3,.L171+8
 3947 0026 154A     	 ldr r2,.L171+16
 3948 0028 1A80     	 strh r2,[r3]
 796:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 3949              	 .loc 3 796 0
 3950 002a 134B     	 ldr r3,.L171+12
 3951 002c 134A     	 ldr r2,.L171+16
 3952 002e 1A80     	 strh r2,[r3]
 797:../samuel/samuel_io.c **** 									break;
 3953              	 .loc 3 797 0
 3954 0030 1AE0     	 b .L161
 3955              	.L166:
 798:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 3956              	 .loc 3 798 0
 3957 0032 134B     	 ldr r3,.L171+20
 3958 0034 1A88     	 ldrh r2,[r3]
 3959 0036 0F4B     	 ldr r3,.L171+8
 3960 0038 1A80     	 strh r2,[r3]
 799:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 3961              	 .loc 3 799 0
 3962 003a 124B     	 ldr r3,.L171+24
 3963 003c 1A88     	 ldrh r2,[r3]
 3964 003e 0E4B     	 ldr r3,.L171+12
 3965 0040 1A80     	 strh r2,[r3]
 3966              	.L167:
 800:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 3967              	 .loc 3 800 0
 3968 0042 114B     	 ldr r3,.L171+28
 3969 0044 1A88     	 ldrh r2,[r3]
 3970 0046 0B4B     	 ldr r3,.L171+8
 3971 0048 1A80     	 strh r2,[r3]
 801:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 3972              	 .loc 3 801 0
 3973 004a 104B     	 ldr r3,.L171+32
 3974 004c 1A88     	 ldrh r2,[r3]
 3975 004e 0A4B     	 ldr r3,.L171+12
 3976 0050 1A80     	 strh r2,[r3]
 802:../samuel/samuel_io.c **** 									break;
 3977              	 .loc 3 802 0
 3978 0052 09E0     	 b .L161
 3979              	.L168:
 803:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 3980              	 .loc 3 803 0
 3981 0054 0E4B     	 ldr r3,.L171+36
 3982 0056 1A88     	 ldrh r2,[r3]
 3983 0058 064B     	 ldr r3,.L171+8
 3984 005a 1A80     	 strh r2,[r3]
 804:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 3985              	 .loc 3 804 0
 3986 005c 0D4B     	 ldr r3,.L171+40
 3987 005e 1A88     	 ldrh r2,[r3]
 3988 0060 054B     	 ldr r3,.L171+12
 3989 0062 1A80     	 strh r2,[r3]
 805:../samuel/samuel_io.c **** 									break;
 3990              	 .loc 3 805 0
 3991 0064 00E0     	 b .L161
 3992              	.L170:
 806:../samuel/samuel_io.c **** 		default:
 807:../samuel/samuel_io.c **** 									break;
 3993              	 .loc 3 807 0
 3994 0066 C046     	 mov r8,r8
 3995              	.L161:
 808:../samuel/samuel_io.c **** 		}
 809:../samuel/samuel_io.c **** 
 810:../samuel/samuel_io.c ****  }
 3996              	 .loc 3 810 0
 3997 0068 BD46     	 mov sp,r7
 3998              	 
 3999 006a 80BD     	 pop {r7,pc}
 4000              	.L172:
 4001              	 .align 2
 4002              	.L171:
 4003 006c 00000000 	 .word RegOnOff
 4004 0070 00000000 	 .word .L164
 4005 0074 00000000 	 .word dimAkt_Ww
 4006 0078 00000000 	 .word dimAkt_Cw
 4007 007c FF7F0000 	 .word 32767
 4008 0080 00000000 	 .word dimNorm1_Ww
 4009 0084 00000000 	 .word dimNorm1_Cw
 4010 0088 00000000 	 .word dimNorm2_Ww
 4011 008c 00000000 	 .word dimNorm2_Cw
 4012 0090 00000000 	 .word dimOff_Ww
 4013 0094 00000000 	 .word dimOff_Cw
 4014              	 .cfi_endproc
 4015              	.LFE328:
 4017              	 .section .text.bcuUebergabe,"ax",%progbits
 4018              	 .align 2
 4019              	 .global bcuUebergabe
 4020              	 .code 16
 4021              	 .thumb_func
 4023              	bcuUebergabe:
 4024              	.LFB329:
 811:../samuel/samuel_io.c ****  //----------------------------------
 812:../samuel/samuel_io.c **** 
 813:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 814:../samuel/samuel_io.c ****  {
 4025              	 .loc 3 814 0
 4026              	 .cfi_startproc
 4027 0000 80B5     	 push {r7,lr}
 4028              	.LCFI95:
 4029              	 .cfi_def_cfa_offset 8
 4030              	 .cfi_offset 7,-8
 4031              	 .cfi_offset 14,-4
 4032 0002 00AF     	 add r7,sp,#0
 4033              	.LCFI96:
 4034              	 .cfi_def_cfa_register 7
 815:../samuel/samuel_io.c **** 
 816:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 817:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 818:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 819:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 820:../samuel/samuel_io.c **** 
 821:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 4035              	 .loc 3 821 0
 4036 0004 204B     	 ldr r3,.L174
 4037 0006 1B88     	 ldrh r3,[r3]
 4038 0008 1A1C     	 mov r2,r3
 4039 000a 204B     	 ldr r3,.L174+4
 4040 000c 181C     	 mov r0,r3
 4041 000e 111C     	 mov r1,r2
 4042 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 822:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 4043              	 .loc 3 822 0
 4044 0014 1E4B     	 ldr r3,.L174+8
 4045 0016 1B88     	 ldrh r3,[r3]
 4046 0018 1A1C     	 mov r2,r3
 4047 001a 1E4B     	 ldr r3,.L174+12
 4048 001c 181C     	 mov r0,r3
 4049 001e 111C     	 mov r1,r2
 4050 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 823:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 4051              	 .loc 3 823 0
 4052 0024 1C4B     	 ldr r3,.L174+16
 4053 0026 1B88     	 ldrh r3,[r3]
 4054 0028 1A1C     	 mov r2,r3
 4055 002a 1C4B     	 ldr r3,.L174+20
 4056 002c 181C     	 mov r0,r3
 4057 002e 111C     	 mov r1,r2
 4058 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 824:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 4059              	 .loc 3 824 0
 4060 0034 1A4B     	 ldr r3,.L174+24
 4061 0036 1B88     	 ldrh r3,[r3]
 4062 0038 1A1C     	 mov r2,r3
 4063 003a 1A4B     	 ldr r3,.L174+28
 4064 003c 181C     	 mov r0,r3
 4065 003e 111C     	 mov r1,r2
 4066 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 825:../samuel/samuel_io.c **** 
 826:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 4067              	 .loc 3 826 0
 4068 0044 184B     	 ldr r3,.L174+32
 4069 0046 1B88     	 ldrh r3,[r3]
 4070 0048 1A1C     	 mov r2,r3
 4071 004a 104B     	 ldr r3,.L174+4
 4072 004c 181C     	 mov r0,r3
 4073 004e 111C     	 mov r1,r2
 4074 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 827:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 4075              	 .loc 3 827 0
 4076 0054 154B     	 ldr r3,.L174+36
 4077 0056 1B88     	 ldrh r3,[r3]
 4078 0058 1A1C     	 mov r2,r3
 4079 005a 0E4B     	 ldr r3,.L174+12
 4080 005c 181C     	 mov r0,r3
 4081 005e 111C     	 mov r1,r2
 4082 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 828:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 4083              	 .loc 3 828 0
 4084 0064 124B     	 ldr r3,.L174+40
 4085 0066 1B88     	 ldrh r3,[r3]
 4086 0068 1A1C     	 mov r2,r3
 4087 006a 0C4B     	 ldr r3,.L174+20
 4088 006c 181C     	 mov r0,r3
 4089 006e 111C     	 mov r1,r2
 4090 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 829:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 4091              	 .loc 3 829 0
 4092 0074 0F4B     	 ldr r3,.L174+44
 4093 0076 1B88     	 ldrh r3,[r3]
 4094 0078 1A1C     	 mov r2,r3
 4095 007a 0A4B     	 ldr r3,.L174+28
 4096 007c 181C     	 mov r0,r3
 4097 007e 111C     	 mov r1,r2
 4098 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 830:../samuel/samuel_io.c **** 
 831:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 832:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 833:../samuel/samuel_io.c **** 
 834:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 835:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 836:../samuel/samuel_io.c ****  }
 4099              	 .loc 3 836 0
 4100 0084 BD46     	 mov sp,r7
 4101              	 
 4102 0086 80BD     	 pop {r7,pc}
 4103              	.L175:
 4104              	 .align 2
 4105              	.L174:
 4106 0088 00000000 	 .word Farbe_ww2
 4107 008c 00000000 	 .word PDM_BCCU_0
 4108 0090 00000000 	 .word Farbe_cw2
 4109 0094 00000000 	 .word PDM_BCCU_1
 4110 0098 00000000 	 .word Farbe_ww1
 4111 009c 00000000 	 .word PDM_BCCU_2
 4112 00a0 00000000 	 .word Farbe_cw1
 4113 00a4 00000000 	 .word PDM_BCCU_3
 4114 00a8 00000000 	 .word linearwalk_ww2
 4115 00ac 00000000 	 .word linearwalk_cw2
 4116 00b0 00000000 	 .word linearwalk_ww1
 4117 00b4 00000000 	 .word linearwalk_cw1
 4118              	 .cfi_endproc
 4119              	.LFE329:
 4121              	 .section .text.bcuAktBerechnung,"ax",%progbits
 4122              	 .align 2
 4123              	 .global bcuAktBerechnung
 4124              	 .code 16
 4125              	 .thumb_func
 4127              	bcuAktBerechnung:
 4128              	.LFB330:
 837:../samuel/samuel_io.c ****  //----------------------------------
 838:../samuel/samuel_io.c **** 
 839:../samuel/samuel_io.c **** 
 840:../samuel/samuel_io.c ****  //----------------------------------
 841:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 842:../samuel/samuel_io.c ****   {
 4129              	 .loc 3 842 0
 4130              	 .cfi_startproc
 4131 0000 80B5     	 push {r7,lr}
 4132              	.LCFI97:
 4133              	 .cfi_def_cfa_offset 8
 4134              	 .cfi_offset 7,-8
 4135              	 .cfi_offset 14,-4
 4136 0002 82B0     	 sub sp,sp,#8
 4137              	.LCFI98:
 4138              	 .cfi_def_cfa_offset 16
 4139 0004 00AF     	 add r7,sp,#0
 4140              	.LCFI99:
 4141              	 .cfi_def_cfa_register 7
 843:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 844:../samuel/samuel_io.c **** 
 845:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4142              	 .loc 3 845 0
 4143 0006 284B     	 ldr r3,.L177
 4144 0008 1B88     	 ldrh r3,[r3]
 4145 000a 1B0A     	 lsr r3,r3,#8
 4146 000c 9AB2     	 uxth r2,r3
 4147 000e 274B     	 ldr r3,.L177+4
 4148 0010 1A80     	 strh r2,[r3]
 846:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4149              	 .loc 3 846 0
 4150 0012 254B     	 ldr r3,.L177
 4151 0014 1B88     	 ldrh r3,[r3]
 4152 0016 1B0A     	 lsr r3,r3,#8
 4153 0018 9AB2     	 uxth r2,r3
 4154 001a 254B     	 ldr r3,.L177+8
 4155 001c 1A80     	 strh r2,[r3]
 847:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4156              	 .loc 3 847 0
 4157 001e 224B     	 ldr r3,.L177
 4158 0020 1B88     	 ldrh r3,[r3]
 4159 0022 FF22     	 mov r2,#255
 4160 0024 1340     	 and r3,r2
 4161 0026 9AB2     	 uxth r2,r3
 4162 0028 224B     	 ldr r3,.L177+12
 4163 002a 1A80     	 strh r2,[r3]
 848:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4164              	 .loc 3 848 0
 4165 002c 1E4B     	 ldr r3,.L177
 4166 002e 1B88     	 ldrh r3,[r3]
 4167 0030 FF22     	 mov r2,#255
 4168 0032 1340     	 and r3,r2
 4169 0034 9AB2     	 uxth r2,r3
 4170 0036 204B     	 ldr r3,.L177+16
 4171 0038 1A80     	 strh r2,[r3]
 849:../samuel/samuel_io.c **** 
 850:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4172              	 .loc 3 850 0
 4173 003a 204B     	 ldr r3,.L177+20
 4174 003c 1B88     	 ldrh r3,[r3]
 4175 003e 1A1C     	 mov r2,r3
 4176 0040 1A4B     	 ldr r3,.L177+4
 4177 0042 1B88     	 ldrh r3,[r3]
 4178 0044 5343     	 mul r3,r2
 4179 0046 7B60     	 str r3,[r7,#4]
 851:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4180              	 .loc 3 851 0
 4181 0048 7B68     	 ldr r3,[r7,#4]
 4182 004a 1B0A     	 lsr r3,r3,#8
 4183 004c 1B09     	 lsr r3,r3,#4
 4184 004e 9AB2     	 uxth r2,r3
 4185 0050 1B4B     	 ldr r3,.L177+24
 4186 0052 1A80     	 strh r2,[r3]
 852:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4187              	 .loc 3 852 0
 4188 0054 194B     	 ldr r3,.L177+20
 4189 0056 1B88     	 ldrh r3,[r3]
 4190 0058 1A1C     	 mov r2,r3
 4191 005a 164B     	 ldr r3,.L177+12
 4192 005c 1B88     	 ldrh r3,[r3]
 4193 005e 5343     	 mul r3,r2
 4194 0060 7B60     	 str r3,[r7,#4]
 853:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4195              	 .loc 3 853 0
 4196 0062 7B68     	 ldr r3,[r7,#4]
 4197 0064 1B0A     	 lsr r3,r3,#8
 4198 0066 1B09     	 lsr r3,r3,#4
 4199 0068 9AB2     	 uxth r2,r3
 4200 006a 164B     	 ldr r3,.L177+28
 4201 006c 1A80     	 strh r2,[r3]
 854:../samuel/samuel_io.c **** 
 855:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4202              	 .loc 3 855 0
 4203 006e 164B     	 ldr r3,.L177+32
 4204 0070 1B88     	 ldrh r3,[r3]
 4205 0072 1A1C     	 mov r2,r3
 4206 0074 0E4B     	 ldr r3,.L177+8
 4207 0076 1B88     	 ldrh r3,[r3]
 4208 0078 5343     	 mul r3,r2
 4209 007a 7B60     	 str r3,[r7,#4]
 856:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4210              	 .loc 3 856 0
 4211 007c 7B68     	 ldr r3,[r7,#4]
 4212 007e 1B0A     	 lsr r3,r3,#8
 4213 0080 1B09     	 lsr r3,r3,#4
 4214 0082 9AB2     	 uxth r2,r3
 4215 0084 114B     	 ldr r3,.L177+36
 4216 0086 1A80     	 strh r2,[r3]
 857:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4217              	 .loc 3 857 0
 4218 0088 0F4B     	 ldr r3,.L177+32
 4219 008a 1B88     	 ldrh r3,[r3]
 4220 008c 1A1C     	 mov r2,r3
 4221 008e 0A4B     	 ldr r3,.L177+16
 4222 0090 1B88     	 ldrh r3,[r3]
 4223 0092 5343     	 mul r3,r2
 4224 0094 7B60     	 str r3,[r7,#4]
 858:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4225              	 .loc 3 858 0
 4226 0096 7B68     	 ldr r3,[r7,#4]
 4227 0098 1B0A     	 lsr r3,r3,#8
 4228 009a 1B09     	 lsr r3,r3,#4
 4229 009c 9AB2     	 uxth r2,r3
 4230 009e 0C4B     	 ldr r3,.L177+40
 4231 00a0 1A80     	 strh r2,[r3]
 859:../samuel/samuel_io.c ****   }
 4232              	 .loc 3 859 0
 4233 00a2 BD46     	 mov sp,r7
 4234 00a4 02B0     	 add sp,sp,#8
 4235              	 
 4236 00a6 80BD     	 pop {r7,pc}
 4237              	.L178:
 4238              	 .align 2
 4239              	.L177:
 4240 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4241 00ac 00000000 	 .word Farbe_ww1_Quot
 4242 00b0 00000000 	 .word Farbe_cw1_Quot
 4243 00b4 00000000 	 .word Farbe_ww2_Quot
 4244 00b8 00000000 	 .word Farbe_cw2_Quot
 4245 00bc 00000000 	 .word dimAkt_Ww
 4246 00c0 00000000 	 .word Farbe_ww1
 4247 00c4 00000000 	 .word Farbe_ww2
 4248 00c8 00000000 	 .word dimAkt_Cw
 4249 00cc 00000000 	 .word Farbe_cw1
 4250 00d0 00000000 	 .word Farbe_cw2
 4251              	 .cfi_endproc
 4252              	.LFE330:
 4254              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4255              	 .align 2
 4256              	 .global bcudirAktBerechnung
 4257              	 .code 16
 4258              	 .thumb_func
 4260              	bcudirAktBerechnung:
 4261              	.LFB331:
 860:../samuel/samuel_io.c **** 
 861:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 862:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 863:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 864:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 865:../samuel/samuel_io.c **** 
 866:../samuel/samuel_io.c ****   {
 4262              	 .loc 3 866 0
 4263              	 .cfi_startproc
 4264 0000 80B5     	 push {r7,lr}
 4265              	.LCFI100:
 4266              	 .cfi_def_cfa_offset 8
 4267              	 .cfi_offset 7,-8
 4268              	 .cfi_offset 14,-4
 4269 0002 82B0     	 sub sp,sp,#8
 4270              	.LCFI101:
 4271              	 .cfi_def_cfa_offset 16
 4272 0004 00AF     	 add r7,sp,#0
 4273              	.LCFI102:
 4274              	 .cfi_def_cfa_register 7
 867:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 868:../samuel/samuel_io.c **** 
 869:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4275              	 .loc 3 869 0
 4276 0006 2A4B     	 ldr r3,.L180
 4277 0008 0122     	 mov r2,#1
 4278 000a 5242     	 neg r2,r2
 4279 000c 1A80     	 strh r2,[r3]
 870:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4280              	 .loc 3 870 0
 4281 000e 284B     	 ldr r3,.L180
 4282 0010 1B88     	 ldrh r3,[r3]
 4283 0012 1B0A     	 lsr r3,r3,#8
 4284 0014 9AB2     	 uxth r2,r3
 4285 0016 274B     	 ldr r3,.L180+4
 4286 0018 1A80     	 strh r2,[r3]
 871:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4287              	 .loc 3 871 0
 4288 001a 254B     	 ldr r3,.L180
 4289 001c 1B88     	 ldrh r3,[r3]
 4290 001e 1B0A     	 lsr r3,r3,#8
 4291 0020 9AB2     	 uxth r2,r3
 4292 0022 254B     	 ldr r3,.L180+8
 4293 0024 1A80     	 strh r2,[r3]
 872:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4294              	 .loc 3 872 0
 4295 0026 224B     	 ldr r3,.L180
 4296 0028 1B88     	 ldrh r3,[r3]
 4297 002a FF22     	 mov r2,#255
 4298 002c 1340     	 and r3,r2
 4299 002e 9AB2     	 uxth r2,r3
 4300 0030 224B     	 ldr r3,.L180+12
 4301 0032 1A80     	 strh r2,[r3]
 873:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4302              	 .loc 3 873 0
 4303 0034 1E4B     	 ldr r3,.L180
 4304 0036 1B88     	 ldrh r3,[r3]
 4305 0038 FF22     	 mov r2,#255
 4306 003a 1340     	 and r3,r2
 4307 003c 9AB2     	 uxth r2,r3
 4308 003e 204B     	 ldr r3,.L180+16
 4309 0040 1A80     	 strh r2,[r3]
 874:../samuel/samuel_io.c **** 
 875:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4310              	 .loc 3 875 0
 4311 0042 204B     	 ldr r3,.L180+20
 4312 0044 1B88     	 ldrh r3,[r3]
 4313 0046 1A1C     	 mov r2,r3
 4314 0048 1A4B     	 ldr r3,.L180+4
 4315 004a 1B88     	 ldrh r3,[r3]
 4316 004c 5343     	 mul r3,r2
 4317 004e 7B60     	 str r3,[r7,#4]
 876:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4318              	 .loc 3 876 0
 4319 0050 7B68     	 ldr r3,[r7,#4]
 4320 0052 1B0A     	 lsr r3,r3,#8
 4321 0054 1B09     	 lsr r3,r3,#4
 4322 0056 9AB2     	 uxth r2,r3
 4323 0058 1B4B     	 ldr r3,.L180+24
 4324 005a 1A80     	 strh r2,[r3]
 877:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4325              	 .loc 3 877 0
 4326 005c 194B     	 ldr r3,.L180+20
 4327 005e 1B88     	 ldrh r3,[r3]
 4328 0060 1A1C     	 mov r2,r3
 4329 0062 164B     	 ldr r3,.L180+12
 4330 0064 1B88     	 ldrh r3,[r3]
 4331 0066 5343     	 mul r3,r2
 4332 0068 7B60     	 str r3,[r7,#4]
 878:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4333              	 .loc 3 878 0
 4334 006a 7B68     	 ldr r3,[r7,#4]
 4335 006c 1B0A     	 lsr r3,r3,#8
 4336 006e 1B09     	 lsr r3,r3,#4
 4337 0070 9AB2     	 uxth r2,r3
 4338 0072 164B     	 ldr r3,.L180+28
 4339 0074 1A80     	 strh r2,[r3]
 879:../samuel/samuel_io.c **** 
 880:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4340              	 .loc 3 880 0
 4341 0076 164B     	 ldr r3,.L180+32
 4342 0078 1B88     	 ldrh r3,[r3]
 4343 007a 1A1C     	 mov r2,r3
 4344 007c 0E4B     	 ldr r3,.L180+8
 4345 007e 1B88     	 ldrh r3,[r3]
 4346 0080 5343     	 mul r3,r2
 4347 0082 7B60     	 str r3,[r7,#4]
 881:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4348              	 .loc 3 881 0
 4349 0084 7B68     	 ldr r3,[r7,#4]
 4350 0086 1B0A     	 lsr r3,r3,#8
 4351 0088 1B09     	 lsr r3,r3,#4
 4352 008a 9AB2     	 uxth r2,r3
 4353 008c 114B     	 ldr r3,.L180+36
 4354 008e 1A80     	 strh r2,[r3]
 882:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4355              	 .loc 3 882 0
 4356 0090 0F4B     	 ldr r3,.L180+32
 4357 0092 1B88     	 ldrh r3,[r3]
 4358 0094 1A1C     	 mov r2,r3
 4359 0096 0A4B     	 ldr r3,.L180+16
 4360 0098 1B88     	 ldrh r3,[r3]
 4361 009a 5343     	 mul r3,r2
 4362 009c 7B60     	 str r3,[r7,#4]
 883:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4363              	 .loc 3 883 0
 4364 009e 7B68     	 ldr r3,[r7,#4]
 4365 00a0 1B0A     	 lsr r3,r3,#8
 4366 00a2 1B09     	 lsr r3,r3,#4
 4367 00a4 9AB2     	 uxth r2,r3
 4368 00a6 0C4B     	 ldr r3,.L180+40
 4369 00a8 1A80     	 strh r2,[r3]
 884:../samuel/samuel_io.c ****   }
 4370              	 .loc 3 884 0
 4371 00aa BD46     	 mov sp,r7
 4372 00ac 02B0     	 add sp,sp,#8
 4373              	 
 4374 00ae 80BD     	 pop {r7,pc}
 4375              	.L181:
 4376              	 .align 2
 4377              	.L180:
 4378 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4379 00b4 00000000 	 .word Farbe_ww1_Quot
 4380 00b8 00000000 	 .word Farbe_cw1_Quot
 4381 00bc 00000000 	 .word Farbe_ww2_Quot
 4382 00c0 00000000 	 .word Farbe_cw2_Quot
 4383 00c4 00000000 	 .word dimAkt_Ww
 4384 00c8 00000000 	 .word Farbe_ww1
 4385 00cc 00000000 	 .word Farbe_ww2
 4386 00d0 00000000 	 .word dimAkt_Cw
 4387 00d4 00000000 	 .word Farbe_cw1
 4388 00d8 00000000 	 .word Farbe_cw2
 4389              	 .cfi_endproc
 4390              	.LFE331:
 4392              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4393              	 .align 2
 4394              	 .global bcuColorBerechnung
 4395              	 .code 16
 4396              	 .thumb_func
 4398              	bcuColorBerechnung:
 4399              	.LFB332:
 885:../samuel/samuel_io.c ****  //----------------------------------
 886:../samuel/samuel_io.c **** 
 887:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 888:../samuel/samuel_io.c ****   {
 4400              	 .loc 3 888 0
 4401              	 .cfi_startproc
 4402 0000 80B5     	 push {r7,lr}
 4403              	.LCFI103:
 4404              	 .cfi_def_cfa_offset 8
 4405              	 .cfi_offset 7,-8
 4406              	 .cfi_offset 14,-4
 4407 0002 82B0     	 sub sp,sp,#8
 4408              	.LCFI104:
 4409              	 .cfi_def_cfa_offset 16
 4410 0004 00AF     	 add r7,sp,#0
 4411              	.LCFI105:
 4412              	 .cfi_def_cfa_register 7
 889:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 890:../samuel/samuel_io.c **** 
 891:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4413              	 .loc 3 891 0
 4414 0006 1E4B     	 ldr r3,.L183
 4415 0008 0122     	 mov r2,#1
 4416 000a 5242     	 neg r2,r2
 4417 000c 1A80     	 strh r2,[r3]
 892:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4418              	 .loc 3 892 0
 4419 000e 1C4B     	 ldr r3,.L183
 4420 0010 1B88     	 ldrh r3,[r3]
 4421 0012 1A1C     	 mov r2,r3
 4422 0014 1B4B     	 ldr r3,.L183+4
 4423 0016 1B88     	 ldrh r3,[r3]
 4424 0018 5343     	 mul r3,r2
 4425 001a 7B60     	 str r3,[r7,#4]
 893:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4426              	 .loc 3 893 0
 4427 001c 7B68     	 ldr r3,[r7,#4]
 4428 001e 1B0C     	 lsr r3,r3,#16
 4429 0020 7B60     	 str r3,[r7,#4]
 894:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4430              	 .loc 3 894 0
 4431 0022 194B     	 ldr r3,.L183+8
 4432 0024 1B88     	 ldrh r3,[r3]
 4433 0026 1A1C     	 mov r2,r3
 4434 0028 184B     	 ldr r3,.L183+12
 4435 002a 9B1A     	 sub r3,r3,r2
 4436 002c 1A1C     	 mov r2,r3
 4437 002e 7B68     	 ldr r3,[r7,#4]
 4438 0030 5343     	 mul r3,r2
 4439 0032 7B60     	 str r3,[r7,#4]
 895:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4440              	 .loc 3 895 0
 4441 0034 7B68     	 ldr r3,[r7,#4]
 4442 0036 1B0C     	 lsr r3,r3,#16
 4443 0038 7B60     	 str r3,[r7,#4]
 896:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4444              	 .loc 3 896 0
 4445 003a 7B68     	 ldr r3,[r7,#4]
 4446 003c 9AB2     	 uxth r2,r3
 4447 003e 104B     	 ldr r3,.L183
 4448 0040 1A80     	 strh r2,[r3]
 897:../samuel/samuel_io.c **** 
 898:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4449              	 .loc 3 898 0
 4450 0042 134B     	 ldr r3,.L183+16
 4451 0044 0122     	 mov r2,#1
 4452 0046 5242     	 neg r2,r2
 4453 0048 1A80     	 strh r2,[r3]
 899:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4454              	 .loc 3 899 0
 4455 004a 114B     	 ldr r3,.L183+16
 4456 004c 1B88     	 ldrh r3,[r3]
 4457 004e 1A1C     	 mov r2,r3
 4458 0050 0C4B     	 ldr r3,.L183+4
 4459 0052 1B88     	 ldrh r3,[r3]
 4460 0054 5343     	 mul r3,r2
 4461 0056 7B60     	 str r3,[r7,#4]
 900:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4462              	 .loc 3 900 0
 4463 0058 7B68     	 ldr r3,[r7,#4]
 4464 005a 1B0C     	 lsr r3,r3,#16
 4465 005c 7B60     	 str r3,[r7,#4]
 901:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4466              	 .loc 3 901 0
 4467 005e 0A4B     	 ldr r3,.L183+8
 4468 0060 1B88     	 ldrh r3,[r3]
 4469 0062 1A1C     	 mov r2,r3
 4470 0064 7B68     	 ldr r3,[r7,#4]
 4471 0066 5343     	 mul r3,r2
 4472 0068 7B60     	 str r3,[r7,#4]
 902:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4473              	 .loc 3 902 0
 4474 006a 7B68     	 ldr r3,[r7,#4]
 4475 006c 1B0C     	 lsr r3,r3,#16
 4476 006e 7B60     	 str r3,[r7,#4]
 903:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4477              	 .loc 3 903 0
 4478 0070 7B68     	 ldr r3,[r7,#4]
 4479 0072 9AB2     	 uxth r2,r3
 4480 0074 064B     	 ldr r3,.L183+16
 4481 0076 1A80     	 strh r2,[r3]
 904:../samuel/samuel_io.c ****   }
 4482              	 .loc 3 904 0
 4483 0078 BD46     	 mov sp,r7
 4484 007a 02B0     	 add sp,sp,#8
 4485              	 
 4486 007c 80BD     	 pop {r7,pc}
 4487              	.L184:
 4488 007e C046     	 .align 2
 4489              	.L183:
 4490 0080 00000000 	 .word dimAkt_Ww
 4491 0084 00000000 	 .word Brightness_Gen
 4492 0088 00000000 	 .word ColorQuot_Gen
 4493 008c FFFF0000 	 .word 65535
 4494 0090 00000000 	 .word dimAkt_Cw
 4495              	 .cfi_endproc
 4496              	.LFE332:
 4498              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4499              	 .align 2
 4500              	 .global Offlight_zahler_write
 4501              	 .code 16
 4502              	 .thumb_func
 4504              	Offlight_zahler_write:
 4505              	.LFB333:
 905:../samuel/samuel_io.c ****  //----------------------------------
 906:../samuel/samuel_io.c **** 
 907:../samuel/samuel_io.c **** 
 908:../samuel/samuel_io.c **** 
 909:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 910:../samuel/samuel_io.c ****  {
 4506              	 .loc 3 910 0
 4507              	 .cfi_startproc
 4508 0000 80B5     	 push {r7,lr}
 4509              	.LCFI106:
 4510              	 .cfi_def_cfa_offset 8
 4511              	 .cfi_offset 7,-8
 4512              	 .cfi_offset 14,-4
 4513 0002 82B0     	 sub sp,sp,#8
 4514              	.LCFI107:
 4515              	 .cfi_def_cfa_offset 16
 4516 0004 00AF     	 add r7,sp,#0
 4517              	.LCFI108:
 4518              	 .cfi_def_cfa_register 7
 911:../samuel/samuel_io.c ****      uint8_t a;
 912:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4519              	 .loc 3 912 0
 4520 0006 3B4B     	 ldr r3,.L191
 4521 0008 1B78     	 ldrb r3,[r3]
 4522 000a 052B     	 cmp r3,#5
 4523 000c 00D0     	 beq .LCB3756
 4524 000e 6EE0     	 b .L185
 4525              	.LCB3756:
 913:../samuel/samuel_io.c **** 	 {
 914:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4526              	 .loc 3 914 0
 4527 0010 394B     	 ldr r3,.L191+4
 4528 0012 1B88     	 ldrh r3,[r3]
 4529 0014 0133     	 add r3,r3,#1
 4530 0016 9AB2     	 uxth r2,r3
 4531 0018 374B     	 ldr r3,.L191+4
 4532 001a 1A80     	 strh r2,[r3]
 915:../samuel/samuel_io.c **** 
 916:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4533              	 .loc 3 916 0
 4534 001c 364B     	 ldr r3,.L191+4
 4535 001e 1B88     	 ldrh r3,[r3]
 4536 0020 3B2B     	 cmp r3,#59
 4537 0022 64D9     	 bls .L185
 917:../samuel/samuel_io.c **** 	  {
 918:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4538              	 .loc 3 918 0
 4539 0024 344B     	 ldr r3,.L191+4
 4540 0026 0022     	 mov r2,#0
 4541 0028 1A80     	 strh r2,[r3]
 919:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4542              	 .loc 3 919 0
 4543 002a FFF7FEFF 	 bl read_off_light_EEprom
 4544 002e 021C     	 mov r2,r0
 4545 0030 FB1D     	 add r3,r7,#7
 4546 0032 1A70     	 strb r2,[r3]
 920:../samuel/samuel_io.c **** 			if (a == 0x03)
 4547              	 .loc 3 920 0
 4548 0034 FB1D     	 add r3,r7,#7
 4549 0036 1B78     	 ldrb r3,[r3]
 4550 0038 032B     	 cmp r3,#3
 4551 003a 52D1     	 bne .L187
 921:../samuel/samuel_io.c **** 			{
 922:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4552              	 .loc 3 922 0
 4553 003c 2F4B     	 ldr r3,.L191+8
 4554 003e 1A88     	 ldrh r2,[r3]
 4555 0040 2F4B     	 ldr r3,.L191+12
 4556 0042 1A80     	 strh r2,[r3]
 923:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4557              	 .loc 3 923 0
 4558 0044 2F4B     	 ldr r3,.L191+16
 4559 0046 1A88     	 ldrh r2,[r3]
 4560 0048 2F4B     	 ldr r3,.L191+20
 4561 004a 1A80     	 strh r2,[r3]
 924:../samuel/samuel_io.c **** 
 925:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4562              	 .loc 3 925 0
 4563 004c 2F4B     	 ldr r3,.L191+24
 4564 004e 1B79     	 ldrb r3,[r3,#4]
 4565 0050 9AB2     	 uxth r2,r3
 4566 0052 2B4B     	 ldr r3,.L191+12
 4567 0054 1B88     	 ldrh r3,[r3]
 4568 0056 1B0A     	 lsr r3,r3,#8
 4569 0058 9BB2     	 uxth r3,r3
 4570 005a 9A42     	 cmp r2,r3
 4571 005c 20D1     	 bne .L188
 4572              	 .loc 3 925 0 is_stmt 0 discriminator 1
 4573 005e 2B4B     	 ldr r3,.L191+24
 4574 0060 5B79     	 ldrb r3,[r3,#5]
 4575 0062 1A1C     	 mov r2,r3
 4576 0064 264B     	 ldr r3,.L191+12
 4577 0066 1B88     	 ldrh r3,[r3]
 4578 0068 191C     	 mov r1,r3
 4579 006a FF23     	 mov r3,#255
 4580 006c 0B40     	 and r3,r1
 4581 006e 9A42     	 cmp r2,r3
 4582 0070 16D1     	 bne .L188
 4583              	 .loc 3 925 0 discriminator 2
 4584 0072 264B     	 ldr r3,.L191+24
 4585 0074 9B79     	 ldrb r3,[r3,#6]
 4586 0076 9AB2     	 uxth r2,r3
 4587 0078 234B     	 ldr r3,.L191+20
 4588 007a 1B88     	 ldrh r3,[r3]
 4589 007c 1B0A     	 lsr r3,r3,#8
 4590 007e 9BB2     	 uxth r3,r3
 4591 0080 9A42     	 cmp r2,r3
 4592 0082 0DD1     	 bne .L188
 4593              	 .loc 3 925 0 discriminator 3
 4594 0084 214B     	 ldr r3,.L191+24
 4595 0086 DB79     	 ldrb r3,[r3,#7]
 4596 0088 1A1C     	 mov r2,r3
 4597 008a 1F4B     	 ldr r3,.L191+20
 4598 008c 1B88     	 ldrh r3,[r3]
 4599 008e 191C     	 mov r1,r3
 4600 0090 FF23     	 mov r3,#255
 4601 0092 0B40     	 and r3,r1
 4602 0094 9A42     	 cmp r2,r3
 4603 0096 03D1     	 bne .L188
 926:../samuel/samuel_io.c **** 			 {
 927:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4604              	 .loc 3 927 0 is_stmt 1
 4605 0098 174B     	 ldr r3,.L191+4
 4606 009a 0022     	 mov r2,#0
 4607 009c 1A80     	 strh r2,[r3]
 4608 009e 23E0     	 b .L190
 4609              	.L188:
 928:../samuel/samuel_io.c **** 			 }
 929:../samuel/samuel_io.c **** 			 else{
 930:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4610              	 .loc 3 930 0
 4611 00a0 174B     	 ldr r3,.L191+12
 4612 00a2 1B88     	 ldrh r3,[r3]
 4613 00a4 1B0A     	 lsr r3,r3,#8
 4614 00a6 9BB2     	 uxth r3,r3
 4615 00a8 DAB2     	 uxtb r2,r3
 4616 00aa 184B     	 ldr r3,.L191+24
 4617 00ac 1A71     	 strb r2,[r3,#4]
 931:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4618              	 .loc 3 931 0
 4619 00ae 144B     	 ldr r3,.L191+12
 4620 00b0 1B88     	 ldrh r3,[r3]
 4621 00b2 DAB2     	 uxtb r2,r3
 4622 00b4 154B     	 ldr r3,.L191+24
 4623 00b6 5A71     	 strb r2,[r3,#5]
 932:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4624              	 .loc 3 932 0
 4625 00b8 134B     	 ldr r3,.L191+20
 4626 00ba 1B88     	 ldrh r3,[r3]
 4627 00bc 1B0A     	 lsr r3,r3,#8
 4628 00be 9BB2     	 uxth r3,r3
 4629 00c0 DAB2     	 uxtb r2,r3
 4630 00c2 124B     	 ldr r3,.L191+24
 4631 00c4 9A71     	 strb r2,[r3,#6]
 933:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4632              	 .loc 3 933 0
 4633 00c6 104B     	 ldr r3,.L191+20
 4634 00c8 1B88     	 ldrh r3,[r3]
 4635 00ca DAB2     	 uxtb r2,r3
 4636 00cc 0F4B     	 ldr r3,.L191+24
 4637 00ce DA71     	 strb r2,[r3,#7]
 934:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4638              	 .loc 3 934 0
 4639 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4640 00d4 021C     	 mov r2,r0
 4641 00d6 FB1D     	 add r3,r7,#7
 4642 00d8 1A70     	 strb r2,[r3]
 935:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4643              	 .loc 3 935 0
 4644 00da 074B     	 ldr r3,.L191+4
 4645 00dc 0022     	 mov r2,#0
 4646 00de 1A80     	 strh r2,[r3]
 4647 00e0 02E0     	 b .L190
 4648              	.L187:
 936:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 937:../samuel/samuel_io.c **** 			 }
 938:../samuel/samuel_io.c **** 			}
 939:../samuel/samuel_io.c **** 			else {
 940:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4649              	 .loc 3 940 0
 4650 00e2 054B     	 ldr r3,.L191+4
 4651 00e4 1E22     	 mov r2,#30
 4652 00e6 1A80     	 strh r2,[r3]
 4653              	.L190:
 941:../samuel/samuel_io.c **** 			}
 942:../samuel/samuel_io.c **** 
 943:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4654              	 .loc 3 943 0
 4655 00e8 034B     	 ldr r3,.L191+4
 4656 00ea 0022     	 mov r2,#0
 4657 00ec 1A80     	 strh r2,[r3]
 4658              	.L185:
 944:../samuel/samuel_io.c **** 	  }//zahler_offlight
 945:../samuel/samuel_io.c **** 	 }//regonoff
 946:../samuel/samuel_io.c ****  }
 4659              	 .loc 3 946 0
 4660 00ee BD46     	 mov sp,r7
 4661 00f0 02B0     	 add sp,sp,#8
 4662              	 
 4663 00f2 80BD     	 pop {r7,pc}
 4664              	.L192:
 4665              	 .align 2
 4666              	.L191:
 4667 00f4 00000000 	 .word RegOnOff
 4668 00f8 00000000 	 .word zahler_offlight
 4669 00fc 00000000 	 .word dimAkt_Ww
 4670 0100 00000000 	 .word dimOff_Ww
 4671 0104 00000000 	 .word dimAkt_Cw
 4672 0108 00000000 	 .word dimOff_Cw
 4673 010c 00000000 	 .word ReadBuffer2
 4674              	 .cfi_endproc
 4675              	.LFE333:
 4677              	 .section .text.plus39V_stop,"ax",%progbits
 4678              	 .align 2
 4679              	 .global plus39V_stop
 4680              	 .code 16
 4681              	 .thumb_func
 4683              	plus39V_stop:
 4684              	.LFB334:
 947:../samuel/samuel_io.c **** 
 948:../samuel/samuel_io.c ****  //----------------------------------------------------
 949:../samuel/samuel_io.c **** 
 950:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
 951:../samuel/samuel_io.c ****   {
 4685              	 .loc 3 951 0
 4686              	 .cfi_startproc
 4687 0000 80B5     	 push {r7,lr}
 4688              	.LCFI109:
 4689              	 .cfi_def_cfa_offset 8
 4690              	 .cfi_offset 7,-8
 4691              	 .cfi_offset 14,-4
 4692 0002 00AF     	 add r7,sp,#0
 4693              	.LCFI110:
 4694              	 .cfi_def_cfa_register 7
 952:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 953:../samuel/samuel_io.c **** 
 954:../samuel/samuel_io.c **** 
 955:../samuel/samuel_io.c ****   }
 4695              	 .loc 3 955 0
 4696 0004 BD46     	 mov sp,r7
 4697              	 
 4698 0006 80BD     	 pop {r7,pc}
 4699              	 .cfi_endproc
 4700              	.LFE334:
 4702              	 .section .text.plus39V_start,"ax",%progbits
 4703              	 .align 2
 4704              	 .global plus39V_start
 4705              	 .code 16
 4706              	 .thumb_func
 4708              	plus39V_start:
 4709              	.LFB335:
 956:../samuel/samuel_io.c **** 
 957:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
 958:../samuel/samuel_io.c ****   {
 4710              	 .loc 3 958 0
 4711              	 .cfi_startproc
 4712 0000 80B5     	 push {r7,lr}
 4713              	.LCFI111:
 4714              	 .cfi_def_cfa_offset 8
 4715              	 .cfi_offset 7,-8
 4716              	 .cfi_offset 14,-4
 4717 0002 00AF     	 add r7,sp,#0
 4718              	.LCFI112:
 4719              	 .cfi_def_cfa_register 7
 959:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 960:../samuel/samuel_io.c **** 
 961:../samuel/samuel_io.c ****   }
 4720              	 .loc 3 961 0
 4721 0004 BD46     	 mov sp,r7
 4722              	 
 4723 0006 80BD     	 pop {r7,pc}
 4724              	 .cfi_endproc
 4725              	.LFE335:
 4727              	 .section .text.Time1msec,"ax",%progbits
 4728              	 .align 2
 4729              	 .global Time1msec
 4730              	 .code 16
 4731              	 .thumb_func
 4733              	Time1msec:
 4734              	.LFB336:
 962:../samuel/samuel_io.c **** 
 963:../samuel/samuel_io.c ****  //----------------------------------
 964:../samuel/samuel_io.c **** 
 965:../samuel/samuel_io.c ****   void Time1msec (void) //
 966:../samuel/samuel_io.c ****   {
 4735              	 .loc 3 966 0
 4736              	 .cfi_startproc
 4737 0000 80B5     	 push {r7,lr}
 4738              	.LCFI113:
 4739              	 .cfi_def_cfa_offset 8
 4740              	 .cfi_offset 7,-8
 4741              	 .cfi_offset 14,-4
 4742 0002 00AF     	 add r7,sp,#0
 4743              	.LCFI114:
 4744              	 .cfi_def_cfa_register 7
 967:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4745              	 .loc 3 967 0
 4746 0004 024B     	 ldr r3,.L196
 4747 0006 181C     	 mov r0,r3
 4748 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
 968:../samuel/samuel_io.c **** 
 969:../samuel/samuel_io.c ****   }
 4749              	 .loc 3 969 0
 4750 000c BD46     	 mov sp,r7
 4751              	 
 4752 000e 80BD     	 pop {r7,pc}
 4753              	.L197:
 4754              	 .align 2
 4755              	.L196:
 4756 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4757              	 .cfi_endproc
 4758              	.LFE336:
 4760              	 .section .text.Time20msec,"ax",%progbits
 4761              	 .align 2
 4762              	 .global Time20msec
 4763              	 .code 16
 4764              	 .thumb_func
 4766              	Time20msec:
 4767              	.LFB337:
 970:../samuel/samuel_io.c ****   //----------------------------------
 971:../samuel/samuel_io.c **** 
 972:../samuel/samuel_io.c ****    void Time20msec (void) //
 973:../samuel/samuel_io.c ****    {
 4768              	 .loc 3 973 0
 4769              	 .cfi_startproc
 4770 0000 80B5     	 push {r7,lr}
 4771              	.LCFI115:
 4772              	 .cfi_def_cfa_offset 8
 4773              	 .cfi_offset 7,-8
 4774              	 .cfi_offset 14,-4
 4775 0002 00AF     	 add r7,sp,#0
 4776              	.LCFI116:
 4777              	 .cfi_def_cfa_register 7
 974:../samuel/samuel_io.c **** 
 975:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 976:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 4778              	 .loc 3 976 0
 4779 0004 364B     	 ldr r3,.L205
 4780 0006 1B88     	 ldrh r3,[r3]
 4781 0008 1A1C     	 mov r2,r3
 4782 000a 131C     	 mov r3,r2
 4783 000c 5B00     	 lsl r3,r3,#1
 4784 000e 9B18     	 add r3,r3,r2
 4785 0010 344A     	 ldr r2,.L205+4
 4786 0012 1288     	 ldrh r2,[r2]
 4787 0014 9B18     	 add r3,r3,r2
 4788 0016 002B     	 cmp r3,#0
 4789 0018 00DA     	 bge .L199
 4790 001a 0333     	 add r3,r3,#3
 4791              	.L199:
 4792 001c 9B10     	 asr r3,r3,#2
 4793 001e 9AB2     	 uxth r2,r3
 4794 0020 2F4B     	 ldr r3,.L205
 4795 0022 1A80     	 strh r2,[r3]
 977:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 4796              	 .loc 3 977 0
 4797 0024 304B     	 ldr r3,.L205+8
 4798 0026 1B88     	 ldrh r3,[r3]
 4799 0028 1A1C     	 mov r2,r3
 4800 002a 131C     	 mov r3,r2
 4801 002c 5B00     	 lsl r3,r3,#1
 4802 002e 9B18     	 add r3,r3,r2
 4803 0030 2E4A     	 ldr r2,.L205+12
 4804 0032 1288     	 ldrh r2,[r2]
 4805 0034 9B18     	 add r3,r3,r2
 4806 0036 002B     	 cmp r3,#0
 4807 0038 00DA     	 bge .L200
 4808 003a 0333     	 add r3,r3,#3
 4809              	.L200:
 4810 003c 9B10     	 asr r3,r3,#2
 4811 003e 9AB2     	 uxth r2,r3
 4812 0040 294B     	 ldr r3,.L205+8
 4813 0042 1A80     	 strh r2,[r3]
 978:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 4814              	 .loc 3 978 0
 4815 0044 2A4B     	 ldr r3,.L205+16
 4816 0046 1B88     	 ldrh r3,[r3]
 4817 0048 1A1C     	 mov r2,r3
 4818 004a 131C     	 mov r3,r2
 4819 004c 5B00     	 lsl r3,r3,#1
 4820 004e 9B18     	 add r3,r3,r2
 4821 0050 284A     	 ldr r2,.L205+20
 4822 0052 1288     	 ldrh r2,[r2]
 4823 0054 9B18     	 add r3,r3,r2
 4824 0056 002B     	 cmp r3,#0
 4825 0058 00DA     	 bge .L201
 4826 005a 0333     	 add r3,r3,#3
 4827              	.L201:
 4828 005c 9B10     	 asr r3,r3,#2
 4829 005e 9AB2     	 uxth r2,r3
 4830 0060 234B     	 ldr r3,.L205+16
 4831 0062 1A80     	 strh r2,[r3]
 979:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 4832              	 .loc 3 979 0
 4833 0064 244B     	 ldr r3,.L205+24
 4834 0066 1B88     	 ldrh r3,[r3]
 4835 0068 1A1C     	 mov r2,r3
 4836 006a 131C     	 mov r3,r2
 4837 006c 5B00     	 lsl r3,r3,#1
 4838 006e 9B18     	 add r3,r3,r2
 4839 0070 224A     	 ldr r2,.L205+28
 4840 0072 1288     	 ldrh r2,[r2]
 4841 0074 9B18     	 add r3,r3,r2
 4842 0076 002B     	 cmp r3,#0
 4843 0078 00DA     	 bge .L202
 4844 007a 0333     	 add r3,r3,#3
 4845              	.L202:
 4846 007c 9B10     	 asr r3,r3,#2
 4847 007e 9AB2     	 uxth r2,r3
 4848 0080 1D4B     	 ldr r3,.L205+24
 4849 0082 1A80     	 strh r2,[r3]
 980:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 4850              	 .loc 3 980 0
 4851 0084 1E4B     	 ldr r3,.L205+32
 4852 0086 1B88     	 ldrh r3,[r3]
 4853 0088 0133     	 add r3,r3,#1
 4854 008a 9AB2     	 uxth r2,r3
 4855 008c 1C4B     	 ldr r3,.L205+32
 4856 008e 1A80     	 strh r2,[r3]
 981:../samuel/samuel_io.c **** 
 982:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 4857              	 .loc 3 982 0
 4858 0090 1B4B     	 ldr r3,.L205+32
 4859 0092 1B88     	 ldrh r3,[r3]
 4860 0094 052B     	 cmp r3,#5
 4861 0096 21D9     	 bls .L198
 983:../samuel/samuel_io.c ****       {
 984:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
 985:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 4862              	 .loc 3 985 0
 4863 0098 194B     	 ldr r3,.L205+32
 4864 009a 0022     	 mov r2,#0
 4865 009c 1A80     	 strh r2,[r3]
 986:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 4866              	 .loc 3 986 0
 4867 009e 104B     	 ldr r3,.L205
 4868 00a0 1B88     	 ldrh r3,[r3]
 4869 00a2 184A     	 ldr r2,.L205+36
 4870 00a4 9342     	 cmp r3,r2
 4871 00a6 09D8     	 bhi .L204
 987:../samuel/samuel_io.c ****      	     {
 988:../samuel/samuel_io.c ****      	     plus39V_stop();
 4872              	 .loc 3 988 0
 4873 00a8 FFF7FEFF 	 bl plus39V_stop
 989:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 4874              	 .loc 3 989 0
 4875 00ac 164B     	 ldr r3,.L205+40
 4876 00ae 0022     	 mov r2,#0
 4877 00b0 1A70     	 strb r2,[r3]
 990:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 4878              	 .loc 3 990 0
 4879 00b2 164B     	 ldr r3,.L205+44
 4880 00b4 181C     	 mov r0,r3
 4881 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4882 00ba 0FE0     	 b .L198
 4883              	.L204:
 991:../samuel/samuel_io.c ****      	     }
 992:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 4884              	 .loc 3 992 0
 4885 00bc 084B     	 ldr r3,.L205
 4886 00be 1A88     	 ldrh r2,[r3]
 4887 00c0 BF23     	 mov r3,#191
 4888 00c2 1B01     	 lsl r3,r3,#4
 4889 00c4 9A42     	 cmp r2,r3
 4890 00c6 09D9     	 bls .L198
 993:../samuel/samuel_io.c ****  			 {
 994:../samuel/samuel_io.c ****      	     plus39V_start();
 4891              	 .loc 3 994 0
 4892 00c8 FFF7FEFF 	 bl plus39V_start
 995:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 4893              	 .loc 3 995 0
 4894 00cc 0E4B     	 ldr r3,.L205+40
 4895 00ce 1B78     	 ldrb r3,[r3]
 4896 00d0 002B     	 cmp r3,#0
 4897 00d2 03D1     	 bne .L198
 996:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 4898              	 .loc 3 996 0
 4899 00d4 0D4B     	 ldr r3,.L205+44
 4900 00d6 181C     	 mov r0,r3
 4901 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4902              	.L198:
 997:../samuel/samuel_io.c ****  			 }
 998:../samuel/samuel_io.c ****       }
 999:../samuel/samuel_io.c **** 
1000:../samuel/samuel_io.c **** 
1001:../samuel/samuel_io.c ****    }
 4903              	 .loc 3 1001 0
 4904 00dc BD46     	 mov sp,r7
 4905              	 
 4906 00de 80BD     	 pop {r7,pc}
 4907              	.L206:
 4908              	 .align 2
 4909              	.L205:
 4910 00e0 00000000 	 .word resultA2
 4911 00e4 00000000 	 .word resultAalt
 4912 00e8 00000000 	 .word resultB2
 4913 00ec 00000000 	 .word resultBalt
 4914 00f0 00000000 	 .word resultC2
 4915 00f4 00000000 	 .word resultCalt
 4916 00f8 00000000 	 .word resultD2
 4917 00fc 00000000 	 .word resultDalt
 4918 0100 00000000 	 .word adc_ready20m
 4919 0104 9F0B0000 	 .word 2975
 4920 0108 00000000 	 .word B_nextLedOff
 4921 010c 00000000 	 .word VCC_LED_shtdwn
 4922              	 .cfi_endproc
 4923              	.LFE337:
 4925              	 .section .text.firstuartBack,"ax",%progbits
 4926              	 .align 2
 4927              	 .global firstuartBack
 4928              	 .code 16
 4929              	 .thumb_func
 4931              	firstuartBack:
 4932              	.LFB338:
1002:../samuel/samuel_io.c ****   //------------------------------
1003:../samuel/samuel_io.c **** 
1004:../samuel/samuel_io.c ****    void firstuartBack (void) //
1005:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 4933              	 .loc 3 1005 0
 4934              	 .cfi_startproc
 4935 0000 98B5     	 push {r3,r4,r7,lr}
 4936              	.LCFI117:
 4937              	 .cfi_def_cfa_offset 16
 4938              	 .cfi_offset 3,-16
 4939              	 .cfi_offset 4,-12
 4940              	 .cfi_offset 7,-8
 4941              	 .cfi_offset 14,-4
 4942 0002 00AF     	 add r7,sp,#0
 4943              	.LCFI118:
 4944              	 .cfi_def_cfa_register 7
 4945              	 .loc 3 1005 0
 4946 0004 174B     	 ldr r3,.L209
 4947 0006 1B78     	 ldrb r3,[r3]
 4948 0008 002B     	 cmp r3,#0
 4949 000a 29D1     	 bne .L207
1006:../samuel/samuel_io.c ****    	   {
1007:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 4950              	 .loc 3 1007 0
 4951 000c FFF7FEFF 	 bl new_data_HalloBack
1008:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 4952              	 .loc 3 1008 0
 4953 0010 154B     	 ldr r3,.L209+4
 4954 0012 3022     	 mov r2,#48
 4955 0014 5A71     	 strb r2,[r3,#5]
1009:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 4956              	 .loc 3 1009 0
 4957 0016 154B     	 ldr r3,.L209+8
 4958 0018 1B88     	 ldrh r3,[r3]
 4959 001a 1B0A     	 lsr r3,r3,#8
 4960 001c 9BB2     	 uxth r3,r3
 4961 001e DAB2     	 uxtb r2,r3
 4962 0020 114B     	 ldr r3,.L209+4
 4963 0022 9A71     	 strb r2,[r3,#6]
1010:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 4964              	 .loc 3 1010 0
 4965 0024 114B     	 ldr r3,.L209+8
 4966 0026 1B88     	 ldrh r3,[r3]
 4967 0028 DAB2     	 uxtb r2,r3
 4968 002a 0F4B     	 ldr r3,.L209+4
 4969 002c DA71     	 strb r2,[r3,#7]
1011:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 4970              	 .loc 3 1011 0
 4971 002e 104B     	 ldr r3,.L209+12
 4972 0030 1B88     	 ldrh r3,[r3]
 4973 0032 1B0A     	 lsr r3,r3,#8
 4974 0034 9BB2     	 uxth r3,r3
 4975 0036 DAB2     	 uxtb r2,r3
 4976 0038 0B4B     	 ldr r3,.L209+4
 4977 003a 1A72     	 strb r2,[r3,#8]
1012:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 4978              	 .loc 3 1012 0
 4979 003c 0C4B     	 ldr r3,.L209+12
 4980 003e 1B88     	 ldrh r3,[r3]
 4981 0040 DAB2     	 uxtb r2,r3
 4982 0042 094B     	 ldr r3,.L209+4
 4983 0044 5A72     	 strb r2,[r3,#9]
1013:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 4984              	 .loc 3 1013 0
 4985 0046 0B4B     	 ldr r3,.L209+16
 4986 0048 1B78     	 ldrb r3,[r3]
 4987 004a 1C1C     	 mov r4,r3
 4988 004c 0A4A     	 ldr r2,.L209+20
 4989 004e 064B     	 ldr r3,.L209+4
 4990 0050 101C     	 mov r0,r2
 4991 0052 191C     	 mov r1,r3
 4992 0054 221C     	 mov r2,r4
 4993 0056 FFF7FEFF 	 bl UART_Transmit
1014:../samuel/samuel_io.c ****    	   B_first_uart=1;
 4994              	 .loc 3 1014 0
 4995 005a 024B     	 ldr r3,.L209
 4996 005c 0122     	 mov r2,#1
 4997 005e 1A70     	 strb r2,[r3]
 4998              	.L207:
1015:../samuel/samuel_io.c ****    	   }
1016:../samuel/samuel_io.c ****    }
 4999              	 .loc 3 1016 0
 5000 0060 BD46     	 mov sp,r7
 5001              	 
 5002 0062 98BD     	 pop {r3,r4,r7,pc}
 5003              	.L210:
 5004              	 .align 2
 5005              	.L209:
 5006 0064 00000000 	 .word B_first_uart
 5007 0068 00000000 	 .word new_data
 5008 006c 00000000 	 .word Ser_NrH
 5009 0070 00000000 	 .word Ser_NrL
 5010 0074 00000000 	 .word transmit_buf_size
 5011 0078 00000000 	 .word UART_1
 5012              	 .cfi_endproc
 5013              	.LFE338:
 5015              	 .text
 5016              	.Letext0:
 5017              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5018              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5019              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 5020              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc/xmc1_gpio.h"
 5021              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc/xmc_usic.h"
 5022              	 .file 9 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc/xmc_uart.h"
 5023              	 .file 10 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/UART/uart.h"
 5024              	 .file 11 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 5025              	 .file 12 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc/xmc_vadc.h"
 5026              	 .file 13 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 5027              	 .file 14 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/XMCLib/inc/xmc_bccu.h"
 5028              	 .file 15 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 5029              	 .file 16 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIM_BCCU/dim_bccu.h"
 5030              	 .file 17 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 5031              	 .file 18 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 5032              	 .file 19 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 5033              	 .file 20 "../samuel/samuel_io.h"
 5034              	 .file 21 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 5035              	 .file 22 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/UART/uart_extern.h"
 5036              	 .file 23 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 5037              	 .file 24 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 5038              	 .file 25 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 5039              	 .file 26 "C:/DAVEv4-64Bit/work/Demo_5_Bright_Dark_All/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4504   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:4931   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:736    .text.lightprog01:000001d0 $d
    {standard input}:742    .text.light_aus:00000000 $t
    {standard input}:747    .text.light_aus:00000000 light_aus
    {standard input}:4260   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:4023   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:801    .text.light_aus:00000048 $d
    {standard input}:811    .text.analog_start:00000000 $t
    {standard input}:816    .text.analog_start:00000000 analog_start
    {standard input}:836    .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:841    .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:861    .text.new_data_fill:00000000 $t
    {standard input}:866    .text.new_data_fill:00000000 new_data_fill
    {standard input}:933    .text.new_data_fill:00000050 $d
    {standard input}:939    .text.new_data_unbekanntBack:00000000 $t
    {standard input}:944    .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:1013   .text.new_data_unbekanntBack:00000054 $d
    {standard input}:1020   .text.new_data_BroadcastBack:00000000 $t
    {standard input}:1025   .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:1106   .text.new_data_BroadcastBack:0000006c $d
    {standard input}:1115   .text.new_data_analog1Back:00000000 $t
    {standard input}:1120   .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1201   .text.new_data_analog1Back:0000006c $d
    {standard input}:1210   .text.new_data_analog2Back:00000000 $t
    {standard input}:1215   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1296   .text.new_data_analog2Back:0000006c $d
    {standard input}:1305   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1310   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1391   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1400   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1405   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1496   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1507   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1512   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1593   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1602   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1607   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1688   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1697   .text.new_data_HalloBack:00000000 $t
    {standard input}:1702   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1771   .text.new_data_HalloBack:00000054 $d
    {standard input}:1778   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:1783   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:1869   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:1879   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:1884   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:1993   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:2004   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:2009   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:2100   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:2110   .text.new_data_SerNrBack:00000000 $t
    {standard input}:2115   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2196   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2205   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2210   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2347   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2355   .text.clearEpromBuffer:00000000 $t
    {standard input}:2360   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2457   .text.clearEpromBuffer:00000080 $d
    {standard input}:2465   .text.fillEpromBuffer:00000000 $t
    {standard input}:2470   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2516   .text.fillEpromBuffer:00000034 $d
    {standard input}:2522   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2527   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2575   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2581   .text.readAllEEprom:00000000 $t
    {standard input}:2586   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:2826   .text.readAllEEprom:00000194 $d
    {standard input}:2850   .text.readSerNrEEprom:00000000 $t
    {standard input}:2855   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:2906   .text.readSerNrEEprom:00000044 $d
    {standard input}:2913   .text.readNodeIdEEprom:00000000 $t
    {standard input}:2918   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:2969   .text.readNodeIdEEprom:00000044 $d
    {standard input}:2976   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:2981   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:3032   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:3039   .text.read_off_light_EEprom:00000000 $t
    {standard input}:3044   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:3095   .text.read_off_light_EEprom:00000044 $d
    {standard input}:3102   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:3107   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3176   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3184   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3189   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3258   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3266   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3271   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3340   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3348   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3353   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3422   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3430   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3435   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3504   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3512   .text.sysiniValueB1:00000000 $t
    {standard input}:3517   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3582   .text.sysiniValueB1:00000050 $d
    {standard input}:3598   .text.sysiniValueB2:00000000 $t
    {standard input}:3603   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3665   .text.sysiniValueB2:0000004c $d
    {standard input}:3681   .text.sysiniValueB4:00000000 $t
    {standard input}:3686   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:3798   .text.sysiniValueB4:000000a0 $d
    {standard input}:3820   .text.sysiniValueB5:00000000 $t
    {standard input}:3825   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:3880   .text.sysiniValueB5:00000040 $d
    {standard input}:3896   .text.bcuInit:00000000 $t
    {standard input}:3901   .text.bcuInit:00000000 bcuInit
    {standard input}:3924   .rodata.bcuInit:00000000 $d
    {standard input}:4003   .text.bcuInit:0000006c $d
    {standard input}:4018   .text.bcuUebergabe:00000000 $t
    {standard input}:4106   .text.bcuUebergabe:00000088 $d
    {standard input}:4122   .text.bcuAktBerechnung:00000000 $t
    {standard input}:4127   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4240   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4255   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4378   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4393   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4398   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4490   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4499   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4667   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4678   .text.plus39V_stop:00000000 $t
    {standard input}:4683   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4703   .text.plus39V_start:00000000 $t
    {standard input}:4708   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4728   .text.Time1msec:00000000 $t
    {standard input}:4733   .text.Time1msec:00000000 Time1msec
    {standard input}:4756   .text.Time1msec:00000010 $d
    {standard input}:4761   .text.Time20msec:00000000 $t
    {standard input}:4766   .text.Time20msec:00000000 Time20msec
    {standard input}:4910   .text.Time20msec:000000e0 $d
    {standard input}:4926   .text.firstuartBack:00000000 $t
    {standard input}:5006   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
