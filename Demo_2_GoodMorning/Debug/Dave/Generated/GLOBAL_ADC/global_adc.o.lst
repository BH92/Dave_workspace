   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "global_adc.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_VADC_GLOBAL_DisablePostCalibration,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_VADC_GLOBAL_DisablePostCalibration:
  23              	.LFB58:
  24              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc/xmc_vadc.h"
   1:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @date 2016-03-09
   4:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** ***************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-15:
  40:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Initial <br>
  41:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *      
  42:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-02-20:
  43:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  44:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *   
  45:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-04-27:
  46:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  47:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  48:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  51:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-20:
  52:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-06-25:
  54:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  55:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  56:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-07-28:
  57:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  58:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  59:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  60:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  61:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  62:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  63:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAlias
  64:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetInputClass
  65:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  66:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  67:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  68:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  69:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  70:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  71:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Added:
  72:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC4300 device supported
  73:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed:
  75:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_TriggerEvent API updated. OR operation removed. 
  76:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_ClearEvent API updated. Multiple events triggering on clearing the event i
  77:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Wrong MACRO name defined in xmc_vadc_map.h file corrected for XMC4200/4100 devices.
  78:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *       XMC_VADC_G3_SAMPLE renamed to XMC_VADC_G1_SAMPLE
  79:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  80:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  81:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  82:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled
  83:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled
  84:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  85:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  86:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  87:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-09:
  88:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Optimization of write only registers
  89:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * 2016-03-18:
  91:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_IsConverterReady(): API checks the STEPCFG register for the read
  92:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *       SHSCFG SFR. 
  93:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  94:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @endcond 
  95:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
  96:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
  97:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
  98:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #ifndef XMC_VADC_H
  99:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_H
 100:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
 101:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * HEADER FILES
 103:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_common.h>
 105:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_scu.h>
 106:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #include <xmc_vadc_map.h>
 107:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 108:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 109:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
 110:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 111:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 112:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
 113:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 114:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @addtogroup VADC
 115:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
 116:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 117:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
 118:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
 119:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * to discrete digital values.
 120:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC1
 121:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
 122:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * converter.
 123:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 124:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 125:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
 126:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
 127:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
 128:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 129:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
 130:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
 131:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
 132:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * which together build separate groups.
 133:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 134:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \if XMC4
 135:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc4x.png"
 136:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \else
 137:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc1x.png"
 138:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \endif
 139:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 140:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 141:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 142:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 143:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 144:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 145:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 146:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 147:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 148:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 149:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 150:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 151:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 152:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 153:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
 154:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 155:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <UL>
 156:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 157:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 158:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 159:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 160:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 161:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 162:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 163:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 164:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 165:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 166:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @{
 167:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 168:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
 169:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 170:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * MACROS
 171:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 172:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 173:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41) || (UC_SERIES == XMC43))
 174:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 175:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 176:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 177:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 178:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 179:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 180:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 181:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 182:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 183:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 184:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 185:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 186:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 187:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 188:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 189:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC44 || UC_SERIES == XMC47 || UC_SERIES == XMC48)
 190:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 191:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 192:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 193:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 194:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 195:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 196:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 197:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 198:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 199:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 200:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 201:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 202:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 203:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 204:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 206:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 207:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 208:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 209:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 210:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 211:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 212:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 213:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 214:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 215:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 216:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 217:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 218:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 219:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 220:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 221:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC14 || UC_SERIES == XMC13 || UC_SERIES == XMC12)
 222:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 223:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 224:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 225:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 226:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 227:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 228:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 229:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 230:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 231:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 232:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 233:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 234:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 235:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 236:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 238:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 239:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 240:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 241:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 242:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 243:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 244:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 245:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 246:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 247:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 248:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 devices */
 249:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 250:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/ 
 251:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 252:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 253:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 254:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 255:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 256:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 257:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 258:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 259:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 261:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 262:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 263:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 264:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 265:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * ENUMS
 266:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 267:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 268:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 269:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC type*/
 270:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 271:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 272:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 273:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                              type to VADC Group type*/
 274:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 275:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 276:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 277:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 278:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 279:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 280:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 281:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 282:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 283:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 284:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 285:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 286:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 287:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 288:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 289:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 290:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 291:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 292:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 293:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 294:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 295:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 296:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 297:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 298:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 299:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 300:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 301:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 302:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 303:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 304:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 305:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 306:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 307:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 308:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 309:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 310:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 311:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 312:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 313:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 314:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 315:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 316:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 317:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 318:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 319:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 320:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 321:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 322:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 323:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 324:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 325:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 326:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 327:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 328:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 329:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 330:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 331:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 332:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 333:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 334:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 335:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 336:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 337:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 338:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 339:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 340:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 341:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 342:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 343:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 344:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 345:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 346:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 347:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 348:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 349:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 350:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 351:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 352:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   
 353:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 354:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 355:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 356:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 357:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 358:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 359:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 360:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 361:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 362:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 363:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 364:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 365:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 366:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 367:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 368:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 369:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 370:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 371:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 372:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 373:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 374:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 375:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 376:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 377:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 378:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 379:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   
 380:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 381:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 382:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 383:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 384:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 385:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 386:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 387:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 388:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 389:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 390:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 391:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 392:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 393:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 394:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 395:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 396:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 397:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 398:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 399:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 400:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 401:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 402:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 403:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 404:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 405:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 406:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 407:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 408:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 409:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 410:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 411:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 412:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 413:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 414:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 415:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 416:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 417:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 418:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 419:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  this enumeration.
 420:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 421:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 422:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 423:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 424:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH ,   /**< Input higher than than programmed reference */
 425:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 426:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 427:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
 428:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 429:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 430:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 431:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 432:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 433:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 434:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 435:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 436:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 437:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 438:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 439:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 440:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 441:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 442:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 443:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 444:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                          awaiting conversion */
 445:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 446:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                          previous set */
 447:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 448:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 449:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 450:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 451:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 452:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 453:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 454:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 455:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 456:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 457:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 458:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 459:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 460:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 461:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 462:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 463:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 464:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 465:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 466:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 467:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 468:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 469:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 470:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 471:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 472:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 473:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 474:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 475:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 476:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 477:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 478:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 479:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 480:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 481:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 482:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 483:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 484:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 485:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 486:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 487:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 488:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 489:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 490:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 491:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 492:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 493:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 494:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 495:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 496:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 497:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 498:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 499:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 500:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 501:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 502:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 503:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 504:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 505:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 506:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 507:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
 508:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 509:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 510:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 511:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 512:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 513:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 514:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 515:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 516:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 517:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
 518:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 519:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 520:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 521:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 522:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 523:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 524:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 525:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 526:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 527:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
 528:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 529:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 530:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 531:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 532:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 533:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 534:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 535:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 536:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 537:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 538:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 539:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 540:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 541:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 542:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 543:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 544:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 545:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 546:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 547:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 548:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 549:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 550:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 551:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 552:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 553:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 554:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 555:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 556:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 557:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 558:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 559:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 560:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 561:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 562:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 563:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 564:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 565:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                           request sources */
 566:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 567:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 568:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 569:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 570:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 571:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 572:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 573:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 574:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 575:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 576:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 577:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 578:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 579:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 580:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 581:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 582:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 583:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 584:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 585:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 586:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 587:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 588:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 589:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 590:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 591:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 592:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 593:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 594:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 595:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 596:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 597:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 598:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 599:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 600:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 601:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 602:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 603:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 604:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 605:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 606:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_SUBTRATION 
 607:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 608:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_LEFT_ALIGN  = 0U,  /**< Always align result to left */
 609:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 610:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_LEFT_ALIGN  = 2U,  /**< Always align result to left */
 611:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 612:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_LEFT_ALIGN   = 4U,  /**< Always align result to left */
 613:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_RIGHT_ALIGN  = 0U,  /**< Always align result to right */
 614:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_SUBTRATION_t;
 615:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 616:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 617:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 618:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 619:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 620:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 621:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 622:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 623:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 624:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 625:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_RS_PRIORITY_t;
 626:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 627:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 628:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 629:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 630:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 631:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 632:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 633:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 634:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level
 635:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level
 636:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 637:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 638:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 639:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 640:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 641:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 642:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 643:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 644:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 645:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 646:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_SELECT_t;
 647:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 648:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 649:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 650:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 651:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 652:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 653:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 654:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_0   = 0,
 655:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_1,
 656:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 657:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_2,
 658:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_3
 659:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 660:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_INDEX_t;
 661:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 662:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 663:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** * Defines channel alias.
 664:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 665:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** */
 666:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 667:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 668:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 669:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 670:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 671:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 672:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 673:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 674:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 675:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 676:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 677:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 678:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 679:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 680:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 681:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 682:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 683:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 684:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 685:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 686:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 687:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 688:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 689:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_GAIN_LEVEL_t;
 690:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 691:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 692:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 693:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 694:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 695:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 696:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 697:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 698:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_LOOP_CH_t;
 699:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 700:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 701:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 702:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 703:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 704:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 705:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 706:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 707:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 708:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 709:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 710:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 711:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 712:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 713:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 714:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 715:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 716:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 717:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 718:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 719:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 720:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 721:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 722:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 723:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 724:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_NODE_t;
 725:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 726:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 727:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * DATA STRUCTURES
 728:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 729:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 730:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
 731:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma push
 732:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma anon_unions
 733:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
 734:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma warning 586
 735:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 736:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 737:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 738:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 739:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 740:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 741:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 742:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 743:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 744:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 745:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion
 746:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 747:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 748:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 749:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 750:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 751:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 752:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 753:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as 
 754:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 755:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 756:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 757:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 758:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 759:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 760:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 761:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 762:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 763:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 764:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 765:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 766:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 767:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 768:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 769:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant s
 770:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       activated or not.*/
 771:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 772:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 773:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t asctrl;
 774:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 775:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 776:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 777:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 778:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 779:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 2;
 780:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trig
 781:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conv
 782:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion
 783:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 784:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_L
 785:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 26;
 786:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 787:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t asmr;
 788:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 789:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 790:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 791:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 792:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 793:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                                  structure for background Request S
 794:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 795:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 796:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 797:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 798:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 799:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 800:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 801:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 802:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 803:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 804:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t input_class                : 2;  /**< Input conversion class selection.
 805:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 806:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 2;
 807:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bo
 808:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 809:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bo
 810:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 811:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 812:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 813:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the con
 814:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either V
 815:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 816:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 4;
 817:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t result_reg_number          : 4;  /**< Group result register number */
 818:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t use_global_result          : 1;  /**< Use global result register for background 
 819:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t result_alignment           : 1;  /**< Alignment of the results read in the resul
 820:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 821:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 6;
 822:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor 
 823:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 824:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacito
 825:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 826:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t chctr;
 827:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 828:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 829:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 830:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 831:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 832:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 8;
 833:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 834:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should
 835:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 836:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should
 837:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 838:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should
 839:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 840:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should
 841:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 842:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 843:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 844:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 845:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 846:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 847:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 848:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 849:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 850:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 851:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 852:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 853:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the speci
 854:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the speci
 855:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the speci
 856:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the speci
 857:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 858:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 12;
 859:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 860:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t bfl;
 861:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 862:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 863:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 864:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 865:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 866:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 867:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 
 868:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 869:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 
 870:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 871:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 
 872:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 873:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 
 874:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 875:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****          uint32_t                           : 16;
 876:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 877:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t bflc;
 878:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 879:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 880:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     bool    channel_priority;  /**< Only non priority channels can be converted by Background Reque
 881:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (whi
 882:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 883:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 884:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 885:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 886:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 887:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 888:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 889:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 890:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 891:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 892:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 893:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 894:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 895:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<B
 896:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back in
 897:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 898:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trig
 899:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 24;
 900:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 901:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 902:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qinr0;
 903:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 904:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 905:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 906:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 907:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 908:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 909:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 910:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 911:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 912:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 913:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 914:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC
 915:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 916:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 917:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 918:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 919:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 920:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as
 921:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 922:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 923:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 924:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 925:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 926:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 927:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 928:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
 929:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 930:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
 931:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
 932:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 933:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 934:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
 935:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 936:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be
 937:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 938:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 939:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qctrl0;
 940:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 941:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 942:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 943:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 944:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 945:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 2;
 946:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
 947:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 29;
 948:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 949:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t qmr0;
 950:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 951:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
 952:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 953:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 954:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 955:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
 956:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
 957:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 958:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
 959:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 960:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 961:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 962:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 963:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 964:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
 965:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
 966:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
 967:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
 968:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
 969:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
 970:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 971:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
 972:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
 973:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
 974:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
 975:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
 976:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
 977:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #else
 978:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 16;
 979:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
 980:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
 981:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globiclass;
 982:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
 983:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
 984:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 985:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
 986:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
 987:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
 988:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
 989:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
 990:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
 991:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
 992:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
 993:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
 994:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
 995:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
 996:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 
 997:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 2;
 998:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter 
 999:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Ra
1000:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 5;
1001:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 17;
1002:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1003:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globcfg;
1004:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1005:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
1006:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1007:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1008:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1009:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1010:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
1011:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1012:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
1013:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1014:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1015:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1016:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1017:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1018:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1019:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1020:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1021:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1022:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1023:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globbound;
1024:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1025:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1026:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1027:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1028:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0
1029:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1
1030:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1031:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1032:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1033:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1034:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1035:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1036:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1037:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be ov
1038:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       result register until the previous value is r
1039:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 6;
1040:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1041:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1042:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t globrcr;
1043:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1044:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1045:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1046:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1047:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1048:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1049:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 2;
1050:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sl
1051:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 28;
1052:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1053:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t clc;
1054:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1055:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1056:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1057:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1058:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1059:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1060:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1061:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1062:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1063:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1064:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1065:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1066:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1067:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1068:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1069:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1070:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1071:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1072:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1073:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1074:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1075:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1076:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1077:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1078:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1079:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1080:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1081:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_iclass0;
1082:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1083:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1084:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1085:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1086:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1087:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1088:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1089:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1090:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1091:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1092:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1093:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1094:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1095:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC w
1096:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1097:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1098:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 13;
1099:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1100:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected.
1101:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1102:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected.
1103:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 5;
1104:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1105:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Ste
1106:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1107:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC
1108:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external
1109:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1110:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b con
1111:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1112:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 1;
1113:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1114:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 2;
1115:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1116:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1117:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_emuxctr;
1118:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1119:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1120:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1121:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1122:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1123:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1124:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1125:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1126:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1127:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1128:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1129:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[
1130:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[
1131:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1132:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1133:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1134:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1135:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1136:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1137:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1138:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1139:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1140:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_bound;
1141:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1142:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1143:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1144:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1145:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1146:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 4;
1147:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1148:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 1;
1149:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode
1150:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1151:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 24;
1152:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1153:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_arbcfg;
1154:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1155:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1156:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1157:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1158:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1159:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1160:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1161:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1162:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1163:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     union
1164:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1165:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        struct
1166:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        {
1167:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1168:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1169:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_V
1170:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       For normal operation select
1171:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1172:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1173:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 2;
1174:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous resu
1175:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIF
1176:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1177:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1178:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        };
1179:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****        uint32_t g_rcr;
1180:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1181:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1182:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1183:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1184:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1185:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1186:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1187:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1188:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1189:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1190:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1191:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1192:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1193:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step0            :3;  /**< Select a Sample and hold unit for the stepper's s
1194:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1195:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step0             :1;  /**< Should the step be added to the sequence */
1196:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step1            :3;  /**< Select a Sample and hold unit for the stepper's s
1197:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1198:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step1             :1;  /**< Should the step be added to the sequence */
1199:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step2            :3;  /**< Select a Sample and hold unit for the stepper's s
1200:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1201:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step2             :1;  /**< Should the step be added to the sequence */
1202:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step3            :3;  /**< Select a Sample and hold unit for the stepper's s
1203:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1204:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step3             :1;  /**< Should the step be added to the sequence */
1205:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step4            :3;  /**< Select a Sample and hold unit for the stepper's s
1206:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1207:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step4             :1;  /**< Should the step be added to the sequence */
1208:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step5            :3;  /**< Select a Sample and hold unit for the stepper's s
1209:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1210:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step5             :1;  /**< Should the step be added to the sequence */
1211:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step6            :3;  /**< Select a Sample and hold unit for the stepper's s
1212:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1213:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step6             :1;  /**< Should the step be added to the sequence */
1214:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step7            :3;  /**< Select a Sample and hold unit for the stepper's s
1215:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1216:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step7             :1;  /**< Should the step be added to the sequence */
1217:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1218:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1219:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t stepcfg;
1220:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1221:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1222:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1223:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1224:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1225:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1226:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1227:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1228:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1229:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1230:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1231:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1232:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t shs_clock_divider        :4; /**< The divider value for the SHS clock. Range: [0x0 t
1233:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :6;
1234:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_reference_select  :2; /**< It is possible to different reference voltage for 
1235:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  */
1236:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :20;
1237:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1238:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t shscfg;
1239:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1240:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1241:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1242:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1243:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CONFIG_t;
1244:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1245:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1246:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1247:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Detailed result structure
1248:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1249:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  typedef struct XMC_VADC_DETAILED_RESULT
1250:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1251:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   union
1252:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   {
1253:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     struct
1254:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     {
1255:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   :16;  /**< Result of the Analog to digital conversion*/
1256:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_counter   :4;   /**< Results reduction counter value*/
1257:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           :5;   /**< Converted channel number*/
1258:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      :3;   /**< Converted external multiplexer channel number.
1259:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1260:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source :2;   /**< Converted request source*/
1261:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      :1;   /**< Fast compare result if conversion mode is fast c
1262:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             :1;   /**< Valid flag is set when a new result is available
1263:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     };
1264:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1265:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   };
1266:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_DETAILED_RESULT_t;
1267:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
1268:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1269:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1270:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
1271:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma pop
1272:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
1273:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   #pragma warning restore
1274:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1275:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1276:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * static inline functions
1277:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1278:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1279:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U) 
1280:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1281:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1282:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1283:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr =
1284:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #else
1285:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1286:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1287:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }
1288:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1289:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1290:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * API Prototypes
1291:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1292:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1293:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #ifdef __cplusplus
1294:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** extern "C" {
1295:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1296:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1297:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1298:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1299:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1300:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1301:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1302:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1303:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1304:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1305:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1306:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1307:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1308:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1309:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1310:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1311:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1312:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1313:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1314:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1315:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param None
1316:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1317:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1318:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1319:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1320:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1321:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1322:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1323:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1324:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1325:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1326:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1327:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1328:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1329:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1330:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1331:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1332:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1333:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1334:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1335:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1336:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1337:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1338:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1339:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1340:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1341:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1342:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * the configurations later in the program.
1343:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1344:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1345:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1346:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1347:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1348:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1349:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1350:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1351:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1352:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1353:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1354:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1355:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1356:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1357:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * register to enable.
1358:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1359:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1360:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1361:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1362:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1363:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1364:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1365:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1366:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1367:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }
1368:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1369:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1370:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1371:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1372:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1373:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1374:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1375:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1376:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1377:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1378:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1379:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1380:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1381:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1382:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1383:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1384:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1385:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1386:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1387:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }
1388:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1389:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1390:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1391:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1392:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1393:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1394:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1395:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1396:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1397:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1398:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1399:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1400:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1401:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1402:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1403:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1404:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1405:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1406:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }
1407:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1408:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1409:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1410:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1411:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1412:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1413:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1414:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1415:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1416:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1417:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1418:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1419:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1420:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1421:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1422:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1423:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1424:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1425:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1426:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }
1427:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1428:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1429:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1430:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1431:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1432:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1433:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1434:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1435:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1436:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1437:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1438:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1439:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1440:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1441:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1442:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1443:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1444:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1445:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1446:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1447:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1448:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1449:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1450:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1451:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }
1452:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #endif
1453:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1454:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1455:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1456:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1457:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1458:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1459:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1460:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1461:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1462:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1463:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1464:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1465:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1466:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1467:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1468:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1469:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1470:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1471:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1472:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1473:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1474:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1475:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
1476:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1477:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1478:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1479:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1480:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1481:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1482:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1483:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1484:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1485:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1486:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1487:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1488:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1489:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1490:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1491:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1492:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1493:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1494:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1495:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1496:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
1497:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  {
1498:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1499:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1500:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1501:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1502:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  }
1503:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  
1504:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1505:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1506:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1507:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1508:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1509:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1510:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1511:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1512:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1513:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1514:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1515:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1516:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1517:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1518:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1519:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1520:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1521:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1522:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1523:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1524:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1525:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1526:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1527:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1528:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1529:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1530:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1531:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1532:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1533:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * calibration feature at runtime.
1534:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1535:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1536:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1537:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1538:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1539:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1540:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
1541:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1542:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1543:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }
1544:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1545:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1546:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** /**
1547:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1548:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1549:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1550:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1551:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1552:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * @return None
1553:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1554:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1555:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1556:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1557:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1558:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1559:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  *
1560:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1561:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1562:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1563:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1564:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  * None
1565:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****  */
1566:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1567:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1568:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** {
  25              	 .loc 1 1568 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 3960     	 str r1,[r7]
1569:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1570:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** 
1571:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
  40              	 .loc 1 1571 0
  41 000a 7B68     	 ldr r3,[r7,#4]
  42 000c 8022     	 mov r2,#128
  43 000e 9A58     	 ldr r2,[r3,r2]
  44 0010 3B68     	 ldr r3,[r7]
  45 0012 1033     	 add r3,r3,#16
  46 0014 191C     	 mov r1,r3
  47 0016 0123     	 mov r3,#1
  48 0018 8B40     	 lsl r3,r3,r1
  49 001a 1A43     	 orr r2,r3
  50 001c 7B68     	 ldr r3,[r7,#4]
  51 001e 8021     	 mov r1,#128
  52 0020 5A50     	 str r2,[r3,r1]
1572:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_vadc.h **** }
  53              	 .loc 1 1572 0
  54 0022 BD46     	 mov sp,r7
  55 0024 02B0     	 add sp,sp,#8
  56              	 
  57 0026 80BD     	 pop {r7,pc}
  58              	 .cfi_endproc
  59              	.LFE58:
  61              	 .section .text.GLOBAL_ADC_GetAppVersion,"ax",%progbits
  62              	 .align 2
  63              	 .global GLOBAL_ADC_GetAppVersion
  64              	 .code 16
  65              	 .thumb_func
  67              	GLOBAL_ADC_GetAppVersion:
  68              	.LFB125:
  69              	 .file 2 "../Dave/Generated/GLOBAL_ADC/global_adc.c"
   1:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /**
   2:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * @file global_adc.c
   3:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * @date 2015-03-18
   4:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
   5:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * NOTE:
   6:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
   8:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * @cond
   9:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  **************************************************************************************************
  10:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * GLOBAL_ADC v4.0.12 - Initializes VADC GLOBAL and GROUP resources.
  11:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  12:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * Copyright (c) 2016, Infineon Technologies AG
  13:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * All rights reserved.
  14:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  15:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * following conditions are met:
  17:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  18:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *   disclaimer.
  20:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  21:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  24:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  27:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  35:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  **************************************************************************************************
  38:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  39:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * Change History
  40:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * --------------
  41:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  42:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * 2015-02-16:
  43:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - Initial version for DAVEv4.<BR>
  44:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  45:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * 2015-04-27:
  46:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - Configuration structure modified.<BR>
  47:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - GLOBAL_ADC_group_t changed to GLOBAL_ADC_GROUP_t.<BR>
  48:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  49:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * 2015-06-20:
  50:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - Updated the copyright section.<BR>
  51:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  52:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * 2015-09-01:
  53:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - Added support for XMC14 and XMC48/47.<BR>
  54:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  55:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * 2015-10-01:
  56:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - Analog clock default value changed to 26Mhz in XMC42.<BR>
  57:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  58:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * 2015-10-08:
  59:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - Added support for XMC4700/XMC4800 devices.<BR>
  60:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  61:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * 2015-12-03:
  62:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - Added support for XMC4300 devices.<BR>
  63:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     - Optimized the manifest.<BR>
  64:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  65:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * 2016-03-18:
  66:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *     -Modified the minimum configurable value for Desired analog clock in XMC1x to 1MHz.<BR>
  67:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  68:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * @endcond
  69:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  *
  70:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  */
  71:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
  72:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /**************************************************************************************************
  73:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * HEADER FILES
  74:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  **************************************************************************************************
  75:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
  76:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /** Inclusion of header file */
  77:../Dave/Generated/GLOBAL_ADC/global_adc.c **** #include "global_adc.h"
  78:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
  79:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /**************************************************************************************************
  80:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * MACROS
  81:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  **************************************************************************************************
  82:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
  83:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /**************************************************************************************************
  84:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * LOCAL DATA
  85:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  **************************************************************************************************
  86:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
  87:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /**************************************************************************************************
  88:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * LOCAL ROUTINES
  89:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  **************************************************************************************************
  90:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
  91:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  /*************************************************************************************************
  92:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * API IMPLEMENTATION
  93:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  **************************************************************************************************
  94:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
  95:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /*This function returns the version of the GLOBAL_ADC APP*/
  96:../Dave/Generated/GLOBAL_ADC/global_adc.c **** DAVE_APP_VERSION_t GLOBAL_ADC_GetAppVersion(void)
  97:../Dave/Generated/GLOBAL_ADC/global_adc.c **** {
  70              	 .loc 2 97 0
  71              	 .cfi_startproc
  72 0000 80B5     	 push {r7,lr}
  73              	.LCFI3:
  74              	 .cfi_def_cfa_offset 8
  75              	 .cfi_offset 7,-8
  76              	 .cfi_offset 14,-4
  77 0002 82B0     	 sub sp,sp,#8
  78              	.LCFI4:
  79              	 .cfi_def_cfa_offset 16
  80 0004 00AF     	 add r7,sp,#0
  81              	.LCFI5:
  82              	 .cfi_def_cfa_register 7
  98:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   DAVE_APP_VERSION_t version;
  99:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
 100:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   version.major = (uint8_t) GLOBAL_ADC_MAJOR_VERSION;
  83              	 .loc 2 100 0
  84 0006 3B1C     	 mov r3,r7
  85 0008 0422     	 mov r2,#4
  86 000a 1A70     	 strb r2,[r3]
 101:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   version.minor = (uint8_t) GLOBAL_ADC_MINOR_VERSION;
  87              	 .loc 2 101 0
  88 000c 3B1C     	 mov r3,r7
  89 000e 0022     	 mov r2,#0
  90 0010 5A70     	 strb r2,[r3,#1]
 102:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   version.patch = (uint8_t) GLOBAL_ADC_PATCH_VERSION;
  91              	 .loc 2 102 0
  92 0012 3B1C     	 mov r3,r7
  93 0014 0C22     	 mov r2,#12
  94 0016 9A70     	 strb r2,[r3,#2]
 103:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
 104:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   return version;
  95              	 .loc 2 104 0
  96 0018 3B1D     	 add r3,r7,#4
  97 001a 3A1C     	 mov r2,r7
  98 001c 1188     	 ldrh r1,[r2]
  99 001e 1980     	 strh r1,[r3]
 100 0020 9278     	 ldrb r2,[r2,#2]
 101 0022 9A70     	 strb r2,[r3,#2]
 102 0024 3A1D     	 add r2,r7,#4
 103 0026 0023     	 mov r3,#0
 104 0028 1178     	 ldrb r1,[r2]
 105 002a FF20     	 mov r0,#255
 106 002c 0140     	 and r1,r0
 107 002e FF20     	 mov r0,#255
 108 0030 8343     	 bic r3,r0
 109 0032 0B43     	 orr r3,r1
 110 0034 5178     	 ldrb r1,[r2,#1]
 111 0036 FF20     	 mov r0,#255
 112 0038 0140     	 and r1,r0
 113 003a 0902     	 lsl r1,r1,#8
 114 003c 0648     	 ldr r0,.L4
 115 003e 0340     	 and r3,r0
 116 0040 0B43     	 orr r3,r1
 117 0042 9278     	 ldrb r2,[r2,#2]
 118 0044 FF21     	 mov r1,#255
 119 0046 0A40     	 and r2,r1
 120 0048 1204     	 lsl r2,r2,#16
 121 004a 0449     	 ldr r1,.L4+4
 122 004c 0B40     	 and r3,r1
 123 004e 1343     	 orr r3,r2
 105:../Dave/Generated/GLOBAL_ADC/global_adc.c **** }
 124              	 .loc 2 105 0
 125 0050 181C     	 mov r0,r3
 126 0052 BD46     	 mov sp,r7
 127 0054 02B0     	 add sp,sp,#8
 128              	 
 129 0056 80BD     	 pop {r7,pc}
 130              	.L5:
 131              	 .align 2
 132              	.L4:
 133 0058 FF00FFFF 	 .word -65281
 134 005c FFFF00FF 	 .word -16711681
 135              	 .cfi_endproc
 136              	.LFE125:
 138              	 .section .text.GLOBAL_ADC_Init,"ax",%progbits
 139              	 .align 2
 140              	 .global GLOBAL_ADC_Init
 141              	 .code 16
 142              	 .thumb_func
 144              	GLOBAL_ADC_Init:
 145              	.LFB126:
 106:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 107:../Dave/Generated/GLOBAL_ADC/global_adc.c **** /**
 108:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  * This function initializes all instances of the ADC Global APP and low level app.
 109:../Dave/Generated/GLOBAL_ADC/global_adc.c ****  */
 110:../Dave/Generated/GLOBAL_ADC/global_adc.c **** GLOBAL_ADC_STATUS_t GLOBAL_ADC_Init(GLOBAL_ADC_t *const handle_ptr)
 111:../Dave/Generated/GLOBAL_ADC/global_adc.c **** {
 146              	 .loc 2 111 0
 147              	 .cfi_startproc
 148 0000 80B5     	 push {r7,lr}
 149              	.LCFI6:
 150              	 .cfi_def_cfa_offset 8
 151              	 .cfi_offset 7,-8
 152              	 .cfi_offset 14,-4
 153 0002 84B0     	 sub sp,sp,#16
 154              	.LCFI7:
 155              	 .cfi_def_cfa_offset 24
 156 0004 00AF     	 add r7,sp,#0
 157              	.LCFI8:
 158              	 .cfi_def_cfa_register 7
 159 0006 7860     	 str r0,[r7,#4]
 112:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   XMC_ASSERT("GLOBAL_ADC_Init:Invalid handle_ptr", (handle_ptr != NULL))
 113:../Dave/Generated/GLOBAL_ADC/global_adc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 114:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   uint32_t group_index;
 115:../Dave/Generated/GLOBAL_ADC/global_adc.c **** #endif
 116:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
 117:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   if (GLOBAL_ADC_UNINITIALIZED == handle_ptr->init_state)
 160              	 .loc 2 117 0
 161 0008 7B68     	 ldr r3,[r7,#4]
 162 000a 1B7D     	 ldrb r3,[r3,#20]
 163 000c 022B     	 cmp r3,#2
 164 000e 52D1     	 bne .L7
 118:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   {  
 119:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     /* Initialize an instance of Global hardware */
 120:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     XMC_VADC_GLOBAL_Init(handle_ptr->module_ptr, handle_ptr->global_config_handle);
 165              	 .loc 2 120 0
 166 0010 7B68     	 ldr r3,[r7,#4]
 167 0012 DA68     	 ldr r2,[r3,#12]
 168 0014 7B68     	 ldr r3,[r7,#4]
 169 0016 9B68     	 ldr r3,[r3,#8]
 170 0018 101C     	 mov r0,r2
 171 001a 191C     	 mov r1,r3
 172 001c FFF7FEFF 	 bl XMC_VADC_GLOBAL_Init
 121:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
 122:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     /* Initialize all the Groups */
 123:../Dave/Generated/GLOBAL_ADC/global_adc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 124:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     for(group_index = (uint32_t)0; group_index < XMC_VADC_MAXIMUM_NUM_GROUPS; group_index++)
 173              	 .loc 2 124 0
 174 0020 0023     	 mov r3,#0
 175 0022 FB60     	 str r3,[r7,#12]
 176 0024 38E0     	 b .L8
 177              	.L10:
 125:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     {
 126:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       /*Initialize Group*/
 127:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       XMC_VADC_GROUP_Init(handle_ptr->group_ptrs_array[group_index]->group_handle,
 178              	 .loc 2 127 0
 179 0026 7B68     	 ldr r3,[r7,#4]
 180 0028 FA68     	 ldr r2,[r7,#12]
 181 002a 9200     	 lsl r2,r2,#2
 182 002c D358     	 ldr r3,[r2,r3]
 183 002e 1968     	 ldr r1,[r3]
 128:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     		            handle_ptr->group_ptrs_array[group_index]->group_config_handle);
 184              	 .loc 2 128 0
 185 0030 7B68     	 ldr r3,[r7,#4]
 186 0032 FA68     	 ldr r2,[r7,#12]
 187 0034 9200     	 lsl r2,r2,#2
 188 0036 D358     	 ldr r3,[r2,r3]
 127:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     		            handle_ptr->group_ptrs_array[group_index]->group_config_handle);
 189              	 .loc 2 127 0
 190 0038 5B68     	 ldr r3,[r3,#4]
 191 003a 081C     	 mov r0,r1
 192 003c 191C     	 mov r1,r3
 193 003e FFF7FEFF 	 bl XMC_VADC_GROUP_Init
 129:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
 130:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       /* Switch on the converter of the Group[group_index]*/
 131:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       XMC_VADC_GROUP_SetPowerMode(handle_ptr->group_ptrs_array[group_index]->group_handle,
 194              	 .loc 2 131 0
 195 0042 7B68     	 ldr r3,[r7,#4]
 196 0044 FA68     	 ldr r2,[r7,#12]
 197 0046 9200     	 lsl r2,r2,#2
 198 0048 D358     	 ldr r3,[r2,r3]
 199 004a 1B68     	 ldr r3,[r3]
 200 004c 181C     	 mov r0,r3
 201 004e 0321     	 mov r1,#3
 202 0050 FFF7FEFF 	 bl XMC_VADC_GROUP_SetPowerMode
 132:../Dave/Generated/GLOBAL_ADC/global_adc.c ****                                   XMC_VADC_GROUP_POWERMODE_NORMAL);
 133:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
 134:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       /* Disable the post calibration option for the respective group*/
 135:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       if ((bool)false == handle_ptr->group_ptrs_array[group_index]->post_calibration)
 203              	 .loc 2 135 0
 204 0054 7B68     	 ldr r3,[r7,#4]
 205 0056 FA68     	 ldr r2,[r7,#12]
 206 0058 9200     	 lsl r2,r2,#2
 207 005a D358     	 ldr r3,[r2,r3]
 208 005c 1B7A     	 ldrb r3,[r3,#8]
 209 005e 0122     	 mov r2,#1
 210 0060 5340     	 eor r3,r2
 211 0062 DBB2     	 uxtb r3,r3
 212 0064 002B     	 cmp r3,#0
 213 0066 06D0     	 beq .L9
 136:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       {
 137:../Dave/Generated/GLOBAL_ADC/global_adc.c ****         XMC_VADC_GLOBAL_DisablePostCalibration(handle_ptr->module_ptr,group_index);
 214              	 .loc 2 137 0
 215 0068 7B68     	 ldr r3,[r7,#4]
 216 006a DA68     	 ldr r2,[r3,#12]
 217 006c FB68     	 ldr r3,[r7,#12]
 218 006e 101C     	 mov r0,r2
 219 0070 191C     	 mov r1,r3
 220 0072 FFF7FEFF 	 bl XMC_VADC_GLOBAL_DisablePostCalibration
 221              	.L9:
 138:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       }
 139:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
 140:../Dave/Generated/GLOBAL_ADC/global_adc.c **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 141:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(handle_ptr->global_shs_ptr, (XMC_VADC_GROUP_INDEX_t
 222              	 .loc 2 141 0 discriminator 2
 223 0076 7B68     	 ldr r3,[r7,#4]
 224 0078 1A69     	 ldr r2,[r3,#16]
 225 007a FB68     	 ldr r3,[r7,#12]
 226 007c DBB2     	 uxtb r3,r3
 227 007e 101C     	 mov r0,r2
 228 0080 191C     	 mov r1,r3
 229 0082 FFF7FEFF 	 bl XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode
 142:../Dave/Generated/GLOBAL_ADC/global_adc.c **** #endif
 143:../Dave/Generated/GLOBAL_ADC/global_adc.c **** 
 144:../Dave/Generated/GLOBAL_ADC/global_adc.c ****       handle_ptr->group_ptrs_array[group_index]->state = GLOBAL_ADC_SUCCESS;
 230              	 .loc 2 144 0 discriminator 2
 231 0086 7B68     	 ldr r3,[r7,#4]
 232 0088 FA68     	 ldr r2,[r7,#12]
 233 008a 9200     	 lsl r2,r2,#2
 234 008c D358     	 ldr r3,[r2,r3]
 235 008e 0022     	 mov r2,#0
 236 0090 5A72     	 strb r2,[r3,#9]
 124:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     {
 237              	 .loc 2 124 0 discriminator 2
 238 0092 FB68     	 ldr r3,[r7,#12]
 239 0094 0133     	 add r3,r3,#1
 240 0096 FB60     	 str r3,[r7,#12]
 241              	.L8:
 124:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     {
 242              	 .loc 2 124 0 is_stmt 0 discriminator 1
 243 0098 FB68     	 ldr r3,[r7,#12]
 244 009a 012B     	 cmp r3,#1
 245 009c C3D9     	 bls .L10
 145:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     }
 146:../Dave/Generated/GLOBAL_ADC/global_adc.c **** #endif /* _XMC_VADC_GROUP_AVAILABLE_ */
 147:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     if((bool)true == handle_ptr->enable_startup_calibration)
 246              	 .loc 2 147 0 is_stmt 1
 247 009e 7B68     	 ldr r3,[r7,#4]
 248 00a0 5B7D     	 ldrb r3,[r3,#21]
 249 00a2 002B     	 cmp r3,#0
 250 00a4 04D0     	 beq .L11
 148:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     {
 149:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     	XMC_VADC_GLOBAL_StartupCalibration(handle_ptr->module_ptr);
 251              	 .loc 2 149 0
 252 00a6 7B68     	 ldr r3,[r7,#4]
 253 00a8 DB68     	 ldr r3,[r3,#12]
 254 00aa 181C     	 mov r0,r3
 255 00ac FFF7FEFF 	 bl XMC_VADC_GLOBAL_StartupCalibration
 256              	.L11:
 150:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     }
 151:../Dave/Generated/GLOBAL_ADC/global_adc.c ****     handle_ptr->init_state = GLOBAL_ADC_SUCCESS;
 257              	 .loc 2 151 0
 258 00b0 7B68     	 ldr r3,[r7,#4]
 259 00b2 0022     	 mov r2,#0
 260 00b4 1A75     	 strb r2,[r3,#20]
 261              	.L7:
 152:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   }
 153:../Dave/Generated/GLOBAL_ADC/global_adc.c ****   return (handle_ptr->init_state);
 262              	 .loc 2 153 0
 263 00b6 7B68     	 ldr r3,[r7,#4]
 264 00b8 1B7D     	 ldrb r3,[r3,#20]
 154:../Dave/Generated/GLOBAL_ADC/global_adc.c **** }
 265              	 .loc 2 154 0
 266 00ba 181C     	 mov r0,r3
 267 00bc BD46     	 mov sp,r7
 268 00be 04B0     	 add sp,sp,#16
 269              	 
 270 00c0 80BD     	 pop {r7,pc}
 271              	 .cfi_endproc
 272              	.LFE126:
 274 00c2 C046     	 .text
 275              	.Letext0:
 276              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 277              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 278              	 .file 5 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 279              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DAVE_common.h"
 280              	 .file 7 "../Dave/Generated/GLOBAL_ADC/global_adc.h"
 281              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 global_adc.c
    {standard input}:18     .text.XMC_VADC_GLOBAL_DisablePostCalibration:00000000 $t
    {standard input}:22     .text.XMC_VADC_GLOBAL_DisablePostCalibration:00000000 XMC_VADC_GLOBAL_DisablePostCalibration
    {standard input}:62     .text.GLOBAL_ADC_GetAppVersion:00000000 $t
    {standard input}:67     .text.GLOBAL_ADC_GetAppVersion:00000000 GLOBAL_ADC_GetAppVersion
    {standard input}:133    .text.GLOBAL_ADC_GetAppVersion:00000058 $d
    {standard input}:139    .text.GLOBAL_ADC_Init:00000000 $t
    {standard input}:144    .text.GLOBAL_ADC_Init:00000000 GLOBAL_ADC_Init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_VADC_GLOBAL_Init
XMC_VADC_GROUP_Init
XMC_VADC_GROUP_SetPowerMode
XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode
XMC_VADC_GLOBAL_StartupCalibration
