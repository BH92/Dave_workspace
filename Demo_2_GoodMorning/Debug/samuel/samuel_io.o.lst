   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "samuel_io.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .comm adc_ready,2,2
  18              	 .global adc_ready20m
  19              	 .section .bss.adc_ready20m,"aw",%nobits
  20              	 .align 1
  23              	adc_ready20m:
  24 0000 0000     	 .space 2
  25              	 .comm resultA,2,2
  26              	 .global resultB
  27              	 .section .data.resultB,"aw",%progbits
  28              	 .align 1
  31              	resultB:
  32 0000 FF0F     	 .short 4095
  33              	 .comm resultC,2,2
  34              	 .comm resultD,2,2
  35              	 .comm resultA2,2,2
  36              	 .comm resultB2,2,2
  37              	 .comm resultC2,2,2
  38              	 .comm resultD2,2,2
  39              	 .comm resultAalt,2,2
  40              	 .comm resultBalt,2,2
  41              	 .comm resultCalt,2,2
  42              	 .global resultDalt
  43              	 .section .bss.resultDalt,"aw",%nobits
  44              	 .align 1
  47              	resultDalt:
  48 0000 0000     	 .space 2
  49              	 .comm resultAalt2,2,2
  50              	 .comm resultBalt2,2,2
  51              	 .comm resultCalt2,2,2
  52              	 .comm resultDCalt2,2,2
  53              	 .global delay_count
  54              	 .section .data.delay_count,"aw",%progbits
  55              	 .align 2
  58              	delay_count:
  59 0000 05000000 	 .word 5
  60              	 .global zahler_offlight
  61              	 .section .bss.zahler_offlight,"aw",%nobits
  62              	 .align 1
  65              	zahler_offlight:
  66 0000 0000     	 .space 2
  67              	 .global zahler_lightprog01
  68              	 .section .bss.zahler_lightprog01,"aw",%nobits
  69              	 .align 1
  72              	zahler_lightprog01:
  73 0000 0000     	 .space 2
  74              	 .comm Ser_NrH,2,2
  75              	 .comm Ser_NrL,2,2
  76              	 .comm Hard_Vers,2,2
  77              	 .comm Soft_Vers,2,2
  78              	 .comm GEH_Vers,2,2
  79              	 .comm Mon_Vers,2,2
  80              	 .comm LED_WW_Vers,2,2
  81              	 .comm LED_CW_Vers,2,2
  82              	 .comm neu_Ser_NrH,2,2
  83              	 .comm neu_Ser_NrL,2,2
  84              	 .comm node_id,1,1
  85              	 .comm node_id_alt,1,1
  86              	 .comm node_id_16bit,2,2
  87              	 .comm val_Pow_Nom,2,2
  88              	 .comm val_Pow_max,2,2
  89              	 .comm val_Spannung_min,2,2
  90              	 .comm val_Spannung_max,2,2
  91              	 .comm led_grupp,2,2
  92              	 .comm led_Strom,2,2
  93              	 .comm node_id_resi,1,1
  94              	 .comm node_id_neu,1,1
  95              	 .comm Dimm_Gamma,1,1
  96              	 .comm Dimm_Stufen,1,1
  97              	 .comm Dimm_StufenGR,1,1
  98              	 .comm Dimm_Valu,1,1
  99              	 .comm Smooth_Value,2,2
 100              	 .global linearwalk_gen
 101              	 .section .data.linearwalk_gen,"aw",%progbits
 102              	 .align 1
 105              	linearwalk_gen:
 106 0000 B000     	 .short 176
 107              	 .comm Farbe_wwcw_Quot_gen,2,2
 108              	 .comm Reserve_1,2,2
 109              	 .comm Dimm_Max_WW,2,2
 110              	 .comm Dimm_Max_CW,2,2
 111              	 .comm dimAkt_Ww,2,2
 112              	 .comm dimAkt_Cw,2,2
 113              	 .comm linearwalk_ww1,2,2
 114              	 .comm linearwalk_ww2,2,2
 115              	 .comm linearwalk_cw1,2,2
 116              	 .comm linearwalk_cw2,2,2
 117              	 .comm Farbe_ww1_Quot,2,2
 118              	 .comm Farbe_cw1_Quot,2,2
 119              	 .comm Farbe_ww2_Quot,2,2
 120              	 .comm Farbe_cw2_Quot,2,2
 121              	 .comm Farbe_ww1,2,2
 122              	 .comm Farbe_ww2,2,2
 123              	 .comm Farbe_cw1,2,2
 124              	 .comm Farbe_cw2,2,2
 125              	 .comm RegOnOff,1,1
 126              	 .comm RegOnOff2,1,1
 127              	 .comm Reserve_2,2,2
 128              	 .comm dimOff_Ww,2,2
 129              	 .comm dimOff_Cw,2,2
 130              	 .comm dimNorm1_Ww,2,2
 131              	 .comm dimNorm1_Cw,2,2
 132              	 .comm dimNorm2_Ww,2,2
 133              	 .comm dimNorm2_Cw,2,2
 134              	 .global Brightness_Gen
 135              	 .section .data.Brightness_Gen,"aw",%progbits
 136              	 .align 1
 139              	Brightness_Gen:
 140 0000 FF7F     	 .short 32767
 141              	 .global ColorQuot_Gen
 142              	 .section .data.ColorQuot_Gen,"aw",%progbits
 143              	 .align 1
 146              	ColorQuot_Gen:
 147 0000 FF7F     	 .short 32767
 148              	 .comm rec_data,16,4
 149              	 .comm new_data,16,4
 150              	 .comm eeprom_data,32,4
 151              	 .global transmit_buf_size
 152              	 .section .data.transmit_buf_size,"aw",%progbits
 155              	transmit_buf_size:
 156 0000 09       	 .byte 9
 157              	 .comm ReadData,8,4
 158              	 .comm execute,1,1
 159              	 .comm charcount,1,1
 160              	 .comm synclevel,1,1
 161              	 .comm command,1,1
 162              	 .comm framelength,1,1
 163              	 .comm Index,1,1
 164              	 .comm ReadBuffer1,16,4
 165              	 .comm ReadBuffer2,16,4
 166              	 .comm ReadBuffer3,32,4
 167              	 .comm data_buffer,100,4
 168              	 .comm ReadBuffer4,32,4
 169              	 .global B_first_uart
 170              	 .section .bss.B_first_uart,"aw",%nobits
 173              	B_first_uart:
 174 0000 00       	 .space 1
 175              	 .global B_nextLedOff
 176              	 .section .bss.B_nextLedOff,"aw",%nobits
 179              	B_nextLedOff:
 180 0000 00       	 .space 1
 181              	 .section .text.XMC_GPIO_SetOutputHigh,"ax",%progbits
 182              	 .align 2
 183              	 .code 16
 184              	 .thumb_func
 186              	XMC_GPIO_SetOutputHigh:
 187              	.LFB41:
 188              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   *************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** {
 189              	 .loc 1 257 0
 190              	 .cfi_startproc
 191 0000 80B5     	 push {r7,lr}
 192              	.LCFI0:
 193              	 .cfi_def_cfa_offset 8
 194              	 .cfi_offset 7,-8
 195              	 .cfi_offset 14,-4
 196 0002 82B0     	 sub sp,sp,#8
 197              	.LCFI1:
 198              	 .cfi_def_cfa_offset 16
 199 0004 00AF     	 add r7,sp,#0
 200              	.LCFI2:
 201              	 .cfi_def_cfa_register 7
 202 0006 7860     	 str r0,[r7,#4]
 203 0008 0A1C     	 mov r2,r1
 204 000a FB1C     	 add r3,r7,#3
 205 000c 1A70     	 strb r2,[r3]
 258:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 206              	 .loc 1 260 0
 207 000e FB1C     	 add r3,r7,#3
 208 0010 1B78     	 ldrb r3,[r3]
 209 0012 0122     	 mov r2,#1
 210 0014 9A40     	 lsl r2,r2,r3
 211 0016 7B68     	 ldr r3,[r7,#4]
 212 0018 5A60     	 str r2,[r3,#4]
 261:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** }
 213              	 .loc 1 261 0
 214 001a BD46     	 mov sp,r7
 215 001c 02B0     	 add sp,sp,#8
 216              	 
 217 001e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE41:
 221              	 .section .text.XMC_GPIO_SetOutputLow,"ax",%progbits
 222              	 .align 2
 223              	 .code 16
 224              	 .thumb_func
 226              	XMC_GPIO_SetOutputLow:
 227              	.LFB42:
 262:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** {
 228              	 .loc 1 283 0
 229              	 .cfi_startproc
 230 0000 80B5     	 push {r7,lr}
 231              	.LCFI3:
 232              	 .cfi_def_cfa_offset 8
 233              	 .cfi_offset 7,-8
 234              	 .cfi_offset 14,-4
 235 0002 82B0     	 sub sp,sp,#8
 236              	.LCFI4:
 237              	 .cfi_def_cfa_offset 16
 238 0004 00AF     	 add r7,sp,#0
 239              	.LCFI5:
 240              	 .cfi_def_cfa_register 7
 241 0006 7860     	 str r0,[r7,#4]
 242 0008 0A1C     	 mov r2,r1
 243 000a FB1C     	 add r3,r7,#3
 244 000c 1A70     	 strb r2,[r3]
 284:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 245              	 .loc 1 286 0
 246 000e FB1C     	 add r3,r7,#3
 247 0010 1B78     	 ldrb r3,[r3]
 248 0012 8022     	 mov r2,#128
 249 0014 5202     	 lsl r2,r2,#9
 250 0016 9A40     	 lsl r2,r2,r3
 251 0018 7B68     	 ldr r3,[r7,#4]
 252 001a 5A60     	 str r2,[r3,#4]
 287:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc\xmc_gpio.h **** }
 253              	 .loc 1 287 0
 254 001c BD46     	 mov sp,r7
 255 001e 02B0     	 add sp,sp,#8
 256              	 
 257 0020 80BD     	 pop {r7,pc}
 258              	 .cfi_endproc
 259              	.LFE42:
 261 0022 C046     	 .section .text.DIGITAL_IO_SetOutputHigh,"ax",%progbits
 262              	 .align 2
 263              	 .code 16
 264              	 .thumb_func
 266              	DIGITAL_IO_SetOutputHigh:
 267              	.LFB49:
 268              	 .file 2 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO/digital_io.h"
   1:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /*
   2:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   3:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @file digital_io.h
   4:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @date 2015-12-22
   5:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   6:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * NOTE:
   7:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   8:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @cond
  10:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  11:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DIGITAL_IO v4.0.14 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  12:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  13:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Copyright (c) 2015, Infineon Technologies AG
  14:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * All rights reserved.
  15:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  16:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * following conditions are met:
  18:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  19:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   disclaimer.
  21:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  22:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  25:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *   products derived from this software without specific prior written permission.
  27:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  28:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  39:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  40:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * Change History
  41:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * --------------
  42:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  43:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-02-16
  44:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Initial version
  45:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-04-22
  47:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - XMC_ASSERT is added in static inline functions.<br>
  48:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  49:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-06-20
  50:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Version check added for XMCLib dependency.<br>
  51:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  52:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * 2015-12-22
  53:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *     - Added hardware controlled IO feature.
  54:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  55:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * @endcond
  56:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  *
  57:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  */
  58:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  59:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  60:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * HEADER FILES
  61:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  62:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  63:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifndef DIGITAL_IO_H
  64:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #define DIGITAL_IO_H
  65:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  66:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <xmc_gpio.h>
  67:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #include <DAVE_common.h>
  68:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #include "digital_io_conf.h"
  69:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
  71:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * MACROS
  72:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  73:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  74:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  75:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  76:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #error "DIGITAL_IO requires XMC Peripheral Library v2.0.0 or higher"
  77:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
  78:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  79:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  /*************************************************************************************************
  80:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * ENUMS
  81:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
  82:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  83:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  84:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_enumerations
  85:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
  86:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  87:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  88:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  89:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization status of DIGITAL_IO APP.
  90:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
  91:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef enum DIGITAL_IO_STATUS
  92:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** {
  93:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_OK = 0U,/**< 0=Status OK */
  94:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   DIGITAL_IO_STATUS_FAILURE = 1U/**< 1=Status Failed */
  95:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_STATUS_t;
  96:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
  97:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
  98:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
  99:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 100:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 101:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 102:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * DATA STRUCTURES
 103:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 104:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 105:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_datastructures
 106:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 107:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 108:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 109:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 110:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Initialization data structure of DIGITAL_IO APP
 111:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 112:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** typedef struct DIGITAL_IO
 113:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 114:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_PORT_t *const gpio_port;             /**< port number */
 115:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_CONFIG_t gpio_config;          /**< mode, initial output level and pad driver stre
 116:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   const uint8_t gpio_pin;                       /**< pin number */
 117:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   const XMC_GPIO_HWCTRL_t hwctrl;               /**< Hardware port control */
 118:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** } DIGITAL_IO_t;
 119:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 120:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 121:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 122:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @}
 123:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 124:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 125:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 126:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**************************************************************************************************
 127:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  * API Prototypes
 128:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****  **************************************************************************************************
 129:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 130:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 131:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #ifdef __cplusplus
 132:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** extern "C" {
 133:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** #endif
 134:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 135:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 136:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @ingroup DIGITAL_IO_apidoc
 137:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @{
 138:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 139:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 140:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 141:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 142:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 143:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Get DIGITAL_IO APP version
 144:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DAVE_APP_VERSION_t APP version information (major, minor and patch number)
 145:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 146:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description: </b><br>
 147:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * The function can be used to check application software compatibility with a
 148:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * specific version of the APP.
 149:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 150:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 151:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 152:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 153:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>
 154:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 155:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 156:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 157:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t init_status;
 158:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_APP_VERSION_t version;
 159:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 160:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // Initialize DIGITAL_IO APP:
 161:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   // DIGITAL_IO_Init() is called from within DAVE_Init().
 162:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   init_status = DAVE_Init();
 163:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(init_status == DAVE_STATUS_SUCCESS)
 164:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 165:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     version = DIGITAL_IO_GetAppVersion();
 166:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     if (version.major != 4U) {
 167:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Probably, not the right version.
 168:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 169:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 170:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 171:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // More code here
 172:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1) {
 173:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 174:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 175:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     return (1);
 176:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 177:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @endcode<BR>
 178:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 179:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** DAVE_APP_VERSION_t DIGITAL_IO_GetAppVersion(void);
 181:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 182:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 183:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 184:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to initialize the port pin as per UI settings.
 185:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 186:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return DIGITAL_IO_STATUS_t DIGITAL_IO APP status. Refer @ref DIGITAL_IO_STATUS_t structure for d
 187:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 188:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 189:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function initializes GPIO port registers IOCR,PDISC,OMR,PDR/PHCR to configure pin direction,
 190:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * and pad driver strength/hysteresis.
 191:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 192:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 193:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * None
 194:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 195:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 196:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 197:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 198:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 199:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 200:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 201:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 202:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 203:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 204:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 205:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 206:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 207:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 208:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 209:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 210:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 211:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 212:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 213:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 214:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 215:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 216:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 217:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return 1U;
 218:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  }
 219:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 220:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 221:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 222:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** DIGITAL_IO_STATUS_t DIGITAL_IO_Init(const DIGITAL_IO_t *const handler);
 223:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 224:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 225:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 226:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to set port pin high.
 227:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 228:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 229:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 230:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 231:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to high level
 232:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 233:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 234:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  DIGITAL_IO_SetOutputLow()
 235:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 236:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 237:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 238:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 239:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * int main(void)
 240:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * {
 241:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DAVE_STATUS_t status;
 242:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_In
 243:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   if(status == DAVE_STATUS_SUCCESS)
 244:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 245:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG("DAVE Apps initialization success\n");
 246:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 247:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   else
 248:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 249:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 250:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     while(1U)
 251:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     {
 252:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     }
 253:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 254:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   //Placeholder for user application code. The while loop below can be replaced with user applica
 255:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   DIGITAL_IO_SetOutputHigh(&DIGITAL_IO_0);
 256:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   while(1U)
 257:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   {
 258:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *     // Add application code here
 259:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   }
 260:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 261:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 262:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 263:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 264:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 265:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 266:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputHigh(const DIGITAL_IO_t *const handler)
 267:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 269              	 .loc 2 267 0
 270              	 .cfi_startproc
 271 0000 80B5     	 push {r7,lr}
 272              	.LCFI6:
 273              	 .cfi_def_cfa_offset 8
 274              	 .cfi_offset 7,-8
 275              	 .cfi_offset 14,-4
 276 0002 82B0     	 sub sp,sp,#8
 277              	.LCFI7:
 278              	 .cfi_def_cfa_offset 16
 279 0004 00AF     	 add r7,sp,#0
 280              	.LCFI8:
 281              	 .cfi_def_cfa_register 7
 282 0006 7860     	 str r0,[r7,#4]
 268:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputHigh: handler null pointer", handler != NULL);
 269:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputHigh(handler->gpio_port, handler->gpio_pin);
 283              	 .loc 2 269 0
 284 0008 7B68     	 ldr r3,[r7,#4]
 285 000a 1A68     	 ldr r2,[r3]
 286 000c 7B68     	 ldr r3,[r7,#4]
 287 000e 1B7B     	 ldrb r3,[r3,#12]
 288 0010 101C     	 mov r0,r2
 289 0012 191C     	 mov r1,r3
 290 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputHigh
 270:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 291              	 .loc 2 270 0
 292 0018 BD46     	 mov sp,r7
 293 001a 02B0     	 add sp,sp,#8
 294              	 
 295 001c 80BD     	 pop {r7,pc}
 296              	 .cfi_endproc
 297              	.LFE49:
 299 001e C046     	 .section .text.DIGITAL_IO_SetOutputLow,"ax",%progbits
 300              	 .align 2
 301              	 .code 16
 302              	 .thumb_func
 304              	DIGITAL_IO_SetOutputLow:
 305              	.LFB50:
 271:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 272:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** /**
 273:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @brief Function to reset port pin.
 274:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @param handler Pointer pointing to APP data structure. Refer @ref DIGITAL_IO_t for details.
 275:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @return None
 276:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 277:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Description:</b><br>
 278:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * This function configures port output modification register Pn_OMR, to make port pin to low level.
 279:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 280:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * \par<b>Related APIs:</b><BR>
 281:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * DIGITAL_IO_SetOutputHigh()
 282:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 283:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * Example Usage:
 284:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * @code
 285:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  #include <DAVE.h>//Declarations from DAVE Code Generation (includes SFR declaration)
 286:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  int main(void)
 287:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  {
 288:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DAVE_STATUS_t status;
 289:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    status = DAVE_Init();  //(DAVE_STATUS_t)DIGITAL_IO_Init(&DIGITAL_IO_0) is called within DAVE_I
 290:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    if(status == DAVE_STATUS_SUCCESS)
 291:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 292:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG("DAVE Apps initialization success\n");
 293:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 294:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    else
 295:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 296:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *      XMC_DEBUG(("DAVE Apps initialization failed with status %d\n", status));
 297:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *      while(1U)
 298:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *      {
 299:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *      }
 300:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 301:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    //Placeholder for user application code. The while loop below can be replaced with user applic
 302:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    DIGITAL_IO_SetOutputLow(&DIGITAL_IO_0);
 303:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    while(1U)
 304:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    {
 305:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *      // Add application code here
 306:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *    }
 307:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *
 308:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *   return (1);
 309:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** * }
 310:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** *  @endcode
 311:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** */
 312:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** 
 313:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** __STATIC_INLINE void DIGITAL_IO_SetOutputLow(const DIGITAL_IO_t *const handler)
 314:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** {
 306              	 .loc 2 314 0
 307              	 .cfi_startproc
 308 0000 80B5     	 push {r7,lr}
 309              	.LCFI9:
 310              	 .cfi_def_cfa_offset 8
 311              	 .cfi_offset 7,-8
 312              	 .cfi_offset 14,-4
 313 0002 82B0     	 sub sp,sp,#8
 314              	.LCFI10:
 315              	 .cfi_def_cfa_offset 16
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI11:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 315:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_ASSERT("DIGITAL_IO_SetOutputLow: handler null pointer", handler != NULL);
 316:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h ****   XMC_GPIO_SetOutputLow(handler->gpio_port,handler->gpio_pin);
 320              	 .loc 2 316 0
 321 0008 7B68     	 ldr r3,[r7,#4]
 322 000a 1A68     	 ldr r2,[r3]
 323 000c 7B68     	 ldr r3,[r7,#4]
 324 000e 1B7B     	 ldrb r3,[r3,#12]
 325 0010 101C     	 mov r0,r2
 326 0012 191C     	 mov r1,r3
 327 0014 FFF7FEFF 	 bl XMC_GPIO_SetOutputLow
 317:C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO\digital_io.h **** }
 328              	 .loc 2 317 0
 329 0018 BD46     	 mov sp,r7
 330 001a 02B0     	 add sp,sp,#8
 331              	 
 332 001c 80BD     	 pop {r7,pc}
 333              	 .cfi_endproc
 334              	.LFE50:
 336              	 .global test
 337 001e C046     	 .section .data.test,"aw",%progbits
 338              	 .align 2
 341              	test:
 342 0000 05000000 	 .word 5
 343              	 .comm EEprom_status,1,1
 344              	 .comm oper_status,1,1
 345              	 .global resultDalt2
 346              	 .section .bss.resultDalt2,"aw",%nobits
 347              	 .align 1
 350              	resultDalt2:
 351 0000 0000     	 .space 2
 352              	 .section .text.digitalo,"ax",%progbits
 353              	 .align 2
 354              	 .global digitalo
 355              	 .code 16
 356              	 .thumb_func
 358              	digitalo:
 359              	.LFB290:
 360              	 .file 3 "../samuel/samuel_io.c"
   1:../samuel/samuel_io.c **** /**
   2:../samuel/samuel_io.c ****  * @file digital_io.c
   3:../samuel/samuel_io.c ****  * @date 2015-08-25
   4:../samuel/samuel_io.c ****  *
   5:../samuel/samuel_io.c ****  * NOTE:
   6:../samuel/samuel_io.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../samuel/samuel_io.c ****  *
   8:../samuel/samuel_io.c ****  * @cond
   9:../samuel/samuel_io.c ****  **************************************************************************************************
  10:../samuel/samuel_io.c ****  * DIGITAL_IO v4.0.12 - The DIGITAL_IO APP is used to configure a port pin as digital Input/Output.
  11:../samuel/samuel_io.c ****  *
  12:../samuel/samuel_io.c ****  * Copyright (c) 2015, Infineon Technologies AG
  13:../samuel/samuel_io.c ****  * All rights reserved.
  14:../samuel/samuel_io.c ****  *
  15:../samuel/samuel_io.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../samuel/samuel_io.c ****  * following conditions are met:
  17:../samuel/samuel_io.c ****  *
  18:../samuel/samuel_io.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../samuel/samuel_io.c ****  *   disclaimer.
  20:../samuel/samuel_io.c ****  *
  21:../samuel/samuel_io.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../samuel/samuel_io.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../samuel/samuel_io.c ****  *
  24:../samuel/samuel_io.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../samuel/samuel_io.c ****  *   products derived from this software without specific prior written permission.
  26:../samuel/samuel_io.c ****  *
  27:../samuel/samuel_io.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../samuel/samuel_io.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../samuel/samuel_io.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../samuel/samuel_io.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../samuel/samuel_io.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../samuel/samuel_io.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../samuel/samuel_io.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../samuel/samuel_io.c ****  *
  35:../samuel/samuel_io.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../samuel/samuel_io.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../samuel/samuel_io.c ****  **************************************************************************************************
  38:../samuel/samuel_io.c ****  *
  39:../samuel/samuel_io.c ****  * Change History
  40:../samuel/samuel_io.c ****  * --------------
  41:../samuel/samuel_io.c ****  *
  42:../samuel/samuel_io.c ****  * 2015-02-16
  43:../samuel/samuel_io.c ****  *     - Initial version<br>
  44:../samuel/samuel_io.c ****  * 2015-12-22
  45:../samuel/samuel_io.c ****  *     - Added hardware controlled IO feature.
  46:../samuel/samuel_io.c ****  *
  47:../samuel/samuel_io.c ****  * @endcond
  48:../samuel/samuel_io.c ****  *
  49:../samuel/samuel_io.c ****  */
  50:../samuel/samuel_io.c **** 
  51:../samuel/samuel_io.c **** /**************************************************************************************************
  52:../samuel/samuel_io.c ****  * HEADER FILES
  53:../samuel/samuel_io.c ****  **************************************************************************************************
  54:../samuel/samuel_io.c **** #include "samuel_io.h"
  55:../samuel/samuel_io.c **** #include <DAVE.h>
  56:../samuel/samuel_io.c **** 
  57:../samuel/samuel_io.c **** /**************************************************************************************************
  58:../samuel/samuel_io.c ****  * MACROS
  59:../samuel/samuel_io.c ****  **************************************************************************************************
  60:../samuel/samuel_io.c **** 
  61:../samuel/samuel_io.c **** /**************************************************************************************************
  62:../samuel/samuel_io.c ****  * LOCAL DATA
  63:../samuel/samuel_io.c ****  **************************************************************************************************
  64:../samuel/samuel_io.c ****    uint32_t delay_count=5;
  65:../samuel/samuel_io.c ****    uint32_t test=5;
  66:../samuel/samuel_io.c ****    uint16_t  resultB = 0x0fff;
  67:../samuel/samuel_io.c ****     E_EEPROM_XMC1_STATUS_t EEprom_status;
  68:../samuel/samuel_io.c **** 	E_EEPROM_XMC1_OPERATION_STATUS_t oper_status;
  69:../samuel/samuel_io.c **** 
  70:../samuel/samuel_io.c ****     uint8_t	   transmit_buf_size = 9;
  71:../samuel/samuel_io.c ****        uint16_t		 Brightness_Gen = 0x7fff;
  72:../samuel/samuel_io.c ****        uint16_t		 ColorQuot_Gen = 0x7fff;
  73:../samuel/samuel_io.c ****        uint16_t  linearwalk_gen= 0xb0;
  74:../samuel/samuel_io.c **** 
  75:../samuel/samuel_io.c ****        uint16_t zahler_offlight = 0x0;
  76:../samuel/samuel_io.c ****        uint16_t zahler_lightprog01 = 0x0;  //n+l
  77:../samuel/samuel_io.c **** 
  78:../samuel/samuel_io.c **** /**************************************************************************************************
  79:../samuel/samuel_io.c ****  * LOCAL ROUTINES
  80:../samuel/samuel_io.c ****  **************************************************************************************************
  81:../samuel/samuel_io.c ****        uint16_t resultA,resultB,resultC,resultD;
  82:../samuel/samuel_io.c ****        uint16_t resultAalt,resultBalt,resultCalt,resultDalt=0;
  83:../samuel/samuel_io.c **** 
  84:../samuel/samuel_io.c ****        uint16_t resultAalt2,resultBalt2,resultCalt2,resultDalt2=0;
  85:../samuel/samuel_io.c **** 
  86:../samuel/samuel_io.c ****        uint16_t adc_ready,adc_ready20m =0;
  87:../samuel/samuel_io.c ****   	 uint8_t B_nextLedOff=0;
  88:../samuel/samuel_io.c **** 	 uint8_t B_first_uart=0;  //  wenn 1 dann wird einmalig eine hallo nachricht gesendet
  89:../samuel/samuel_io.c ****  /*************************************************************************************************
  90:../samuel/samuel_io.c ****  * API IMPLEMENTATION
  91:../samuel/samuel_io.c ****  **************************************************************************************************
  92:../samuel/samuel_io.c **** 
  93:../samuel/samuel_io.c ****   int digitalo (void)
  94:../samuel/samuel_io.c ****   {
 361              	 .loc 3 94 0
 362              	 .cfi_startproc
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI12:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI13:
 370              	 .cfi_def_cfa_register 7
  95:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_Linux_Int); //toggles level at pin
  96:../samuel/samuel_io.c **** 	  test=test+1;
 371              	 .loc 3 96 0
 372 0004 0B4B     	 ldr r3,.L9
 373 0006 1B68     	 ldr r3,[r3]
 374 0008 5A1C     	 add r2,r3,#1
 375 000a 0A4B     	 ldr r3,.L9
 376 000c 1A60     	 str r2,[r3]
  97:../samuel/samuel_io.c ****       for(delay_count = 0;delay_count<0xfffff;delay_count++);
 377              	 .loc 3 97 0
 378 000e 0A4B     	 ldr r3,.L9+4
 379 0010 0022     	 mov r2,#0
 380 0012 1A60     	 str r2,[r3]
 381 0014 04E0     	 b .L6
 382              	.L7:
 383              	 .loc 3 97 0 is_stmt 0 discriminator 3
 384 0016 084B     	 ldr r3,.L9+4
 385 0018 1B68     	 ldr r3,[r3]
 386 001a 5A1C     	 add r2,r3,#1
 387 001c 064B     	 ldr r3,.L9+4
 388 001e 1A60     	 str r2,[r3]
 389              	.L6:
 390              	 .loc 3 97 0 discriminator 1
 391 0020 054B     	 ldr r3,.L9+4
 392 0022 1B68     	 ldr r3,[r3]
 393 0024 054A     	 ldr r2,.L9+8
 394 0026 9342     	 cmp r3,r2
 395 0028 F5D9     	 bls .L7
  98:../samuel/samuel_io.c **** 	  return (test);
 396              	 .loc 3 98 0 is_stmt 1
 397 002a 024B     	 ldr r3,.L9
 398 002c 1B68     	 ldr r3,[r3]
  99:../samuel/samuel_io.c ****   }
 399              	 .loc 3 99 0
 400 002e 181C     	 mov r0,r3
 401 0030 BD46     	 mov sp,r7
 402              	 
 403 0032 80BD     	 pop {r7,pc}
 404              	.L10:
 405              	 .align 2
 406              	.L9:
 407 0034 00000000 	 .word test
 408 0038 00000000 	 .word delay_count
 409 003c FEFF0F00 	 .word 1048574
 410              	 .cfi_endproc
 411              	.LFE290:
 413              	 .section .text.LED_Toggle_EverySec,"ax",%progbits
 414              	 .align 2
 415              	 .global LED_Toggle_EverySec
 416              	 .code 16
 417              	 .thumb_func
 419              	LED_Toggle_EverySec:
 420              	.LFB291:
 100:../samuel/samuel_io.c **** 
 101:../samuel/samuel_io.c ****   void LED_Toggle_EverySec(void)
 102:../samuel/samuel_io.c ****   {
 421              	 .loc 3 102 0
 422              	 .cfi_startproc
 423 0000 80B5     	 push {r7,lr}
 424              	.LCFI14:
 425              	 .cfi_def_cfa_offset 8
 426              	 .cfi_offset 7,-8
 427              	 .cfi_offset 14,-4
 428 0002 00AF     	 add r7,sp,#0
 429              	.LCFI15:
 430              	 .cfi_def_cfa_register 7
 103:../samuel/samuel_io.c ****     // LED Toggle for every second
 104:../samuel/samuel_io.c **** 		//UART_Transmit(&UART_1, new_data,transmit_buf_size);
 105:../samuel/samuel_io.c ****    // DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 106:../samuel/samuel_io.c ****     Offlight_zahler_write();
 431              	 .loc 3 106 0
 432 0004 FFF7FEFF 	 bl Offlight_zahler_write
 107:../samuel/samuel_io.c ****     firstuartBack ();
 433              	 .loc 3 107 0
 434 0008 FFF7FEFF 	 bl firstuartBack
 108:../samuel/samuel_io.c ****     lightprog01 ();  //n+l
 435              	 .loc 3 108 0
 436 000c FFF7FEFF 	 bl lightprog01
 109:../samuel/samuel_io.c ****   ///  light_aus ();//n+l
 110:../samuel/samuel_io.c **** 	  /// analog_start ();
 111:../samuel/samuel_io.c **** 	//a  new_data_fill();
 112:../samuel/samuel_io.c **** 	//a	UART_Transmit(&UART_1, new_data,transmit_buf_size);
 113:../samuel/samuel_io.c ****   }
 437              	 .loc 3 113 0
 438 0010 BD46     	 mov sp,r7
 439              	 
 440 0012 80BD     	 pop {r7,pc}
 441              	 .cfi_endproc
 442              	.LFE291:
 444              	 .section .text.lightprog01,"ax",%progbits
 445              	 .align 2
 446              	 .global lightprog01
 447              	 .code 16
 448              	 .thumb_func
 450              	lightprog01:
 451              	.LFB292:
 114:../samuel/samuel_io.c ****   //------------------------------------------
 115:../samuel/samuel_io.c ****   void lightprog01 (void)//n+l
 116:../samuel/samuel_io.c ****    {
 452              	 .loc 3 116 0
 453              	 .cfi_startproc
 454 0000 80B5     	 push {r7,lr}
 455              	.LCFI16:
 456              	 .cfi_def_cfa_offset 8
 457              	 .cfi_offset 7,-8
 458              	 .cfi_offset 14,-4
 459 0002 00AF     	 add r7,sp,#0
 460              	.LCFI17:
 461              	 .cfi_def_cfa_register 7
 117:../samuel/samuel_io.c **** 
 118:../samuel/samuel_io.c **** 	  ++zahler_lightprog01;
 462              	 .loc 3 118 0
 463 0004 5D4B     	 ldr r3,.L19
 464 0006 1B88     	 ldrh r3,[r3]
 465 0008 0133     	 add r3,r3,#1
 466 000a 9AB2     	 uxth r2,r3
 467 000c 5B4B     	 ldr r3,.L19
 468 000e 1A80     	 strh r2,[r3]
 119:../samuel/samuel_io.c **** 	  if ( zahler_lightprog01 == 101 )  //ende
 469              	 .loc 3 119 0
 470 0010 5A4B     	 ldr r3,.L19
 471 0012 1B88     	 ldrh r3,[r3]
 472 0014 652B     	 cmp r3,#101
 473 0016 03D1     	 bne .L13
 120:../samuel/samuel_io.c **** 	 			 {
 121:../samuel/samuel_io.c **** 		  zahler_lightprog01 = 0;
 474              	 .loc 3 121 0
 475 0018 584B     	 ldr r3,.L19
 476 001a 0022     	 mov r2,#0
 477 001c 1A80     	 strh r2,[r3]
 478 001e ABE0     	 b .L12
 479              	.L13:
 122:../samuel/samuel_io.c **** 	 			 }
 123:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 20)
 480              	 .loc 3 123 0
 481 0020 564B     	 ldr r3,.L19
 482 0022 1B88     	 ldrh r3,[r3]
 483 0024 142B     	 cmp r3,#20
 484 0026 1CD1     	 bne .L15
 124:../samuel/samuel_io.c **** 	 			 {
 125:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 0;
 485              	 .loc 3 125 0
 486 0028 554B     	 ldr r3,.L19+4
 487 002a DB6A     	 ldr r3,[r3,#44]
 488 002c 0022     	 mov r2,#0
 489 002e 1A80     	 strh r2,[r3]
 126:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 490              	 .loc 3 126 0
 491 0030 534B     	 ldr r3,.L19+4
 492 0032 DB6A     	 ldr r3,[r3,#44]
 493 0034 0022     	 mov r2,#0
 494 0036 5A80     	 strh r2,[r3,#2]
 127:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 0;
 495              	 .loc 3 127 0
 496 0038 514B     	 ldr r3,.L19+4
 497 003a DB6A     	 ldr r3,[r3,#44]
 498 003c 0022     	 mov r2,#0
 499 003e 9A80     	 strh r2,[r3,#4]
 128:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 500              	 .loc 3 128 0
 501 0040 4F4B     	 ldr r3,.L19+4
 502 0042 DB6A     	 ldr r3,[r3,#44]
 503 0044 0022     	 mov r2,#0
 504 0046 DA80     	 strh r2,[r3,#6]
 129:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 505              	 .loc 3 129 0
 506 0048 4D4B     	 ldr r3,.L19+4
 507 004a 181C     	 mov r0,r3
 508 004c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 130:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 509              	 .loc 3 130 0
 510 0050 4B4A     	 ldr r2,.L19+4
 511 0052 E523     	 mov r3,#229
 512 0054 9B00     	 lsl r3,r3,#2
 513 0056 101C     	 mov r0,r2
 514 0058 0021     	 mov r1,#0
 515 005a 1A1C     	 mov r2,r3
 516 005c FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 517 0060 8AE0     	 b .L12
 518              	.L15:
 131:../samuel/samuel_io.c **** 	 			 }
 132:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 40 )
 519              	 .loc 3 132 0
 520 0062 464B     	 ldr r3,.L19
 521 0064 1B88     	 ldrh r3,[r3]
 522 0066 282B     	 cmp r3,#40
 523 0068 1ED1     	 bne .L16
 133:../samuel/samuel_io.c **** 	 			 {
 134:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 1000;
 524              	 .loc 3 134 0
 525 006a 454B     	 ldr r3,.L19+4
 526 006c DB6A     	 ldr r3,[r3,#44]
 527 006e FA22     	 mov r2,#250
 528 0070 9200     	 lsl r2,r2,#2
 529 0072 1A80     	 strh r2,[r3]
 135:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 530              	 .loc 3 135 0
 531 0074 424B     	 ldr r3,.L19+4
 532 0076 DB6A     	 ldr r3,[r3,#44]
 533 0078 0022     	 mov r2,#0
 534 007a 5A80     	 strh r2,[r3,#2]
 136:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 1000;
 535              	 .loc 3 136 0
 536 007c 404B     	 ldr r3,.L19+4
 537 007e DB6A     	 ldr r3,[r3,#44]
 538 0080 FA22     	 mov r2,#250
 539 0082 9200     	 lsl r2,r2,#2
 540 0084 9A80     	 strh r2,[r3,#4]
 137:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 541              	 .loc 3 137 0
 542 0086 3E4B     	 ldr r3,.L19+4
 543 0088 DB6A     	 ldr r3,[r3,#44]
 544 008a 0022     	 mov r2,#0
 545 008c DA80     	 strh r2,[r3,#6]
 138:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 546              	 .loc 3 138 0
 547 008e 3C4B     	 ldr r3,.L19+4
 548 0090 181C     	 mov r0,r3
 549 0092 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 139:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 550              	 .loc 3 139 0
 551 0096 3A4A     	 ldr r2,.L19+4
 552 0098 E523     	 mov r3,#229
 553 009a 9B00     	 lsl r3,r3,#2
 554 009c 101C     	 mov r0,r2
 555 009e 0021     	 mov r1,#0
 556 00a0 1A1C     	 mov r2,r3
 557 00a2 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 558 00a6 67E0     	 b .L12
 559              	.L16:
 140:../samuel/samuel_io.c **** 	 			 }
 141:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 60 )
 560              	 .loc 3 141 0
 561 00a8 344B     	 ldr r3,.L19
 562 00aa 1B88     	 ldrh r3,[r3]
 563 00ac 3C2B     	 cmp r3,#60
 564 00ae 1ED1     	 bne .L17
 142:../samuel/samuel_io.c **** 	 			 {
 143:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 2000;
 565              	 .loc 3 143 0
 566 00b0 334B     	 ldr r3,.L19+4
 567 00b2 DB6A     	 ldr r3,[r3,#44]
 568 00b4 FA22     	 mov r2,#250
 569 00b6 D200     	 lsl r2,r2,#3
 570 00b8 1A80     	 strh r2,[r3]
 144:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 0;
 571              	 .loc 3 144 0
 572 00ba 314B     	 ldr r3,.L19+4
 573 00bc DB6A     	 ldr r3,[r3,#44]
 574 00be 0022     	 mov r2,#0
 575 00c0 5A80     	 strh r2,[r3,#2]
 145:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 2000;
 576              	 .loc 3 145 0
 577 00c2 2F4B     	 ldr r3,.L19+4
 578 00c4 DB6A     	 ldr r3,[r3,#44]
 579 00c6 FA22     	 mov r2,#250
 580 00c8 D200     	 lsl r2,r2,#3
 581 00ca 9A80     	 strh r2,[r3,#4]
 146:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 0;
 582              	 .loc 3 146 0
 583 00cc 2C4B     	 ldr r3,.L19+4
 584 00ce DB6A     	 ldr r3,[r3,#44]
 585 00d0 0022     	 mov r2,#0
 586 00d2 DA80     	 strh r2,[r3,#6]
 147:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 587              	 .loc 3 147 0
 588 00d4 2A4B     	 ldr r3,.L19+4
 589 00d6 181C     	 mov r0,r3
 590 00d8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 148:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 591              	 .loc 3 148 0
 592 00dc 284A     	 ldr r2,.L19+4
 593 00de E523     	 mov r3,#229
 594 00e0 9B00     	 lsl r3,r3,#2
 595 00e2 101C     	 mov r0,r2
 596 00e4 0021     	 mov r1,#0
 597 00e6 1A1C     	 mov r2,r3
 598 00e8 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 599 00ec 44E0     	 b .L12
 600              	.L17:
 149:../samuel/samuel_io.c **** 	 			 }
 150:../samuel/samuel_io.c **** 	 			 else if (  zahler_lightprog01 == 80 )
 601              	 .loc 3 150 0
 602 00ee 234B     	 ldr r3,.L19
 603 00f0 1B88     	 ldrh r3,[r3]
 604 00f2 502B     	 cmp r3,#80
 605 00f4 1CD1     	 bne .L18
 151:../samuel/samuel_io.c **** 	 			 {
 152:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 3000;
 606              	 .loc 3 152 0
 607 00f6 224B     	 ldr r3,.L19+4
 608 00f8 DB6A     	 ldr r3,[r3,#44]
 609 00fa 224A     	 ldr r2,.L19+8
 610 00fc 1A80     	 strh r2,[r3]
 153:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 3000;
 611              	 .loc 3 153 0
 612 00fe 204B     	 ldr r3,.L19+4
 613 0100 DB6A     	 ldr r3,[r3,#44]
 614 0102 204A     	 ldr r2,.L19+8
 615 0104 5A80     	 strh r2,[r3,#2]
 154:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 3000;
 616              	 .loc 3 154 0
 617 0106 1E4B     	 ldr r3,.L19+4
 618 0108 DB6A     	 ldr r3,[r3,#44]
 619 010a 1E4A     	 ldr r2,.L19+8
 620 010c 9A80     	 strh r2,[r3,#4]
 155:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 3000;
 621              	 .loc 3 155 0
 622 010e 1C4B     	 ldr r3,.L19+4
 623 0110 DB6A     	 ldr r3,[r3,#44]
 624 0112 1C4A     	 ldr r2,.L19+8
 625 0114 DA80     	 strh r2,[r3,#6]
 156:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 626              	 .loc 3 156 0
 627 0116 1A4B     	 ldr r3,.L19+4
 628 0118 181C     	 mov r0,r3
 629 011a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 157:../samuel/samuel_io.c **** 			 			  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 630              	 .loc 3 157 0
 631 011e 184A     	 ldr r2,.L19+4
 632 0120 E523     	 mov r3,#229
 633 0122 9B00     	 lsl r3,r3,#2
 634 0124 101C     	 mov r0,r2
 635 0126 0021     	 mov r1,#0
 636 0128 1A1C     	 mov r2,r3
 637 012a FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 638 012e 23E0     	 b .L12
 639              	.L18:
 158:../samuel/samuel_io.c **** 	 			 }
 159:../samuel/samuel_io.c **** 	 			 else if ( zahler_lightprog01 == 100 )
 640              	 .loc 3 159 0
 641 0130 124B     	 ldr r3,.L19
 642 0132 1B88     	 ldrh r3,[r3]
 643 0134 642B     	 cmp r3,#100
 644 0136 1FD1     	 bne .L12
 160:../samuel/samuel_io.c **** 	 			 {
 161:../samuel/samuel_io.c **** 	 				   	  PDM_DIMMED_LED_LAMP_0.config->led_intensity[0] = 4000;
 645              	 .loc 3 161 0
 646 0138 114B     	 ldr r3,.L19+4
 647 013a DB6A     	 ldr r3,[r3,#44]
 648 013c FA22     	 mov r2,#250
 649 013e 1201     	 lsl r2,r2,#4
 650 0140 1A80     	 strh r2,[r3]
 162:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[1] = 4000;
 651              	 .loc 3 162 0
 652 0142 0F4B     	 ldr r3,.L19+4
 653 0144 DB6A     	 ldr r3,[r3,#44]
 654 0146 FA22     	 mov r2,#250
 655 0148 1201     	 lsl r2,r2,#4
 656 014a 5A80     	 strh r2,[r3,#2]
 163:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[2] = 4000;
 657              	 .loc 3 163 0
 658 014c 0C4B     	 ldr r3,.L19+4
 659 014e DB6A     	 ldr r3,[r3,#44]
 660 0150 FA22     	 mov r2,#250
 661 0152 1201     	 lsl r2,r2,#4
 662 0154 9A80     	 strh r2,[r3,#4]
 164:../samuel/samuel_io.c **** 	 				      PDM_DIMMED_LED_LAMP_0.config->led_intensity[3] = 4000;
 663              	 .loc 3 164 0
 664 0156 0A4B     	 ldr r3,.L19+4
 665 0158 DB6A     	 ldr r3,[r3,#44]
 666 015a FA22     	 mov r2,#250
 667 015c 1201     	 lsl r2,r2,#4
 668 015e DA80     	 strh r2,[r3,#6]
 165:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetColor(&PDM_DIMMED_LED_LAMP_0);
 669              	 .loc 3 165 0
 670 0160 074B     	 ldr r3,.L19+4
 671 0162 181C     	 mov r0,r3
 672 0164 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetColor
 166:../samuel/samuel_io.c **** 		 				  PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv(&PDM_DIMMED_LED_LAMP_0,0x0,0x394);
 673              	 .loc 3 166 0
 674 0168 054A     	 ldr r2,.L19+4
 675 016a E523     	 mov r3,#229
 676 016c 9B00     	 lsl r3,r3,#2
 677 016e 101C     	 mov r0,r2
 678 0170 0021     	 mov r1,#0
 679 0172 1A1C     	 mov r2,r3
 680 0174 FFF7FEFF 	 bl PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
 681              	.L12:
 167:../samuel/samuel_io.c **** 	 			 }
 168:../samuel/samuel_io.c **** 				 else
 169:../samuel/samuel_io.c **** 
 170:../samuel/samuel_io.c **** 				 {
 171:../samuel/samuel_io.c **** 
 172:../samuel/samuel_io.c **** 				 }
 173:../samuel/samuel_io.c **** 
 174:../samuel/samuel_io.c ****    }
 682              	 .loc 3 174 0
 683 0178 BD46     	 mov sp,r7
 684              	 
 685 017a 80BD     	 pop {r7,pc}
 686              	.L20:
 687              	 .align 2
 688              	.L19:
 689 017c 00000000 	 .word zahler_lightprog01
 690 0180 00000000 	 .word PDM_DIMMED_LED_LAMP_0
 691 0184 B80B0000 	 .word 3000
 692              	 .cfi_endproc
 693              	.LFE292:
 695              	 .section .text.light_aus,"ax",%progbits
 696              	 .align 2
 697              	 .global light_aus
 698              	 .code 16
 699              	 .thumb_func
 701              	light_aus:
 702              	.LFB293:
 175:../samuel/samuel_io.c ****   //------------------------------------------
 176:../samuel/samuel_io.c ****   void light_aus (void)//n+l
 177:../samuel/samuel_io.c ****    {
 703              	 .loc 3 177 0
 704              	 .cfi_startproc
 705 0000 80B5     	 push {r7,lr}
 706              	.LCFI18:
 707              	 .cfi_def_cfa_offset 8
 708              	 .cfi_offset 7,-8
 709              	 .cfi_offset 14,-4
 710 0002 00AF     	 add r7,sp,#0
 711              	.LCFI19:
 712              	 .cfi_def_cfa_register 7
 178:../samuel/samuel_io.c ****       linearwalk_ww1 = linearwalk_gen;
 713              	 .loc 3 178 0
 714 0004 104B     	 ldr r3,.L22
 715 0006 1A88     	 ldrh r2,[r3]
 716 0008 104B     	 ldr r3,.L22+4
 717 000a 1A80     	 strh r2,[r3]
 179:../samuel/samuel_io.c ****       linearwalk_ww2 = linearwalk_gen;
 718              	 .loc 3 179 0
 719 000c 0E4B     	 ldr r3,.L22
 720 000e 1A88     	 ldrh r2,[r3]
 721 0010 0F4B     	 ldr r3,.L22+8
 722 0012 1A80     	 strh r2,[r3]
 180:../samuel/samuel_io.c ****       linearwalk_cw1 = linearwalk_gen;
 723              	 .loc 3 180 0
 724 0014 0C4B     	 ldr r3,.L22
 725 0016 1A88     	 ldrh r2,[r3]
 726 0018 0E4B     	 ldr r3,.L22+12
 727 001a 1A80     	 strh r2,[r3]
 181:../samuel/samuel_io.c ****       linearwalk_cw2 = linearwalk_gen;
 728              	 .loc 3 181 0
 729 001c 0A4B     	 ldr r3,.L22
 730 001e 1A88     	 ldrh r2,[r3]
 731 0020 0D4B     	 ldr r3,.L22+16
 732 0022 1A80     	 strh r2,[r3]
 182:../samuel/samuel_io.c **** 	  bcudirAktBerechnung();
 733              	 .loc 3 182 0
 734 0024 FFF7FEFF 	 bl bcudirAktBerechnung
 183:../samuel/samuel_io.c **** 	  bcuUebergabe();
 735              	 .loc 3 183 0
 736 0028 FFF7FEFF 	 bl bcuUebergabe
 184:../samuel/samuel_io.c **** 	    // Set Target Level 50%
 185:../samuel/samuel_io.c **** 	     DIM_BCCU_SetDimLvl(&DIM_BCCU_0, 2048);
 737              	 .loc 3 185 0
 738 002c 0B4A     	 ldr r2,.L22+20
 739 002e 8023     	 mov r3,#128
 740 0030 1B01     	 lsl r3,r3,#4
 741 0032 101C     	 mov r0,r2
 742 0034 191C     	 mov r1,r3
 743 0036 FFF7FEFF 	 bl DIM_BCCU_SetDimLvl
 186:../samuel/samuel_io.c **** 	     // Start Dimming
 187:../samuel/samuel_io.c **** 	     DIM_BCCU_StartDimming(&DIM_BCCU_0);
 744              	 .loc 3 187 0
 745 003a 084B     	 ldr r3,.L22+20
 746 003c 181C     	 mov r0,r3
 747 003e FFF7FEFF 	 bl DIM_BCCU_StartDimming
 188:../samuel/samuel_io.c **** 
 189:../samuel/samuel_io.c ****    }
 748              	 .loc 3 189 0
 749 0042 BD46     	 mov sp,r7
 750              	 
 751 0044 80BD     	 pop {r7,pc}
 752              	.L23:
 753 0046 C046     	 .align 2
 754              	.L22:
 755 0048 00000000 	 .word linearwalk_gen
 756 004c 00000000 	 .word linearwalk_ww1
 757 0050 00000000 	 .word linearwalk_ww2
 758 0054 00000000 	 .word linearwalk_cw1
 759 0058 00000000 	 .word linearwalk_cw2
 760 005c 00000000 	 .word DIM_BCCU_0
 761              	 .cfi_endproc
 762              	.LFE293:
 764              	 .section .text.analog_start,"ax",%progbits
 765              	 .align 2
 766              	 .global analog_start
 767              	 .code 16
 768              	 .thumb_func
 770              	analog_start:
 771              	.LFB294:
 190:../samuel/samuel_io.c ****   //------------------------------------------
 191:../samuel/samuel_io.c **** 
 192:../samuel/samuel_io.c **** 
 193:../samuel/samuel_io.c **** 
 194:../samuel/samuel_io.c ****  void analog_start (void)
 195:../samuel/samuel_io.c ****   {
 772              	 .loc 3 195 0
 773              	 .cfi_startproc
 774 0000 80B5     	 push {r7,lr}
 775              	.LCFI20:
 776              	 .cfi_def_cfa_offset 8
 777              	 .cfi_offset 7,-8
 778              	 .cfi_offset 14,-4
 779 0002 00AF     	 add r7,sp,#0
 780              	.LCFI21:
 781              	 .cfi_def_cfa_register 7
 196:../samuel/samuel_io.c **** //ADC_MEASUREMENT_ADV_StartADC(&ADC_MEASUREMENT_ADV_0);
 197:../samuel/samuel_io.c ****  // ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 198:../samuel/samuel_io.c **** 
 199:../samuel/samuel_io.c ****   }
 782              	 .loc 3 199 0
 783 0004 BD46     	 mov sp,r7
 784              	 
 785 0006 80BD     	 pop {r7,pc}
 786              	 .cfi_endproc
 787              	.LFE294:
 789              	 .section .text.SCU_0_IRQHandler,"ax",%progbits
 790              	 .align 2
 791              	 .global SCU_0_IRQHandler
 792              	 .code 16
 793              	 .thumb_func
 795              	SCU_0_IRQHandler:
 796              	.LFB295:
 200:../samuel/samuel_io.c **** 
 201:../samuel/samuel_io.c **** 
 202:../samuel/samuel_io.c ****  void UserIRQHandler(void)
 203:../samuel/samuel_io.c ****   {
 797              	 .loc 3 203 0
 798              	 .cfi_startproc
 799 0000 80B5     	 push {r7,lr}
 800              	.LCFI22:
 801              	 .cfi_def_cfa_offset 8
 802              	 .cfi_offset 7,-8
 803              	 .cfi_offset 14,-4
 804 0002 00AF     	 add r7,sp,#0
 805              	.LCFI23:
 806              	 .cfi_def_cfa_register 7
 204:../samuel/samuel_io.c **** 	 // DIGITAL_IO_ToggleOutput(&DO_VCC_LED_shtdwn);
 205:../samuel/samuel_io.c **** 	//  DIGITAL_IO_SetOutputHigh(&DO_VCC_LED_shtdwn);
 206:../samuel/samuel_io.c ****     //    resultA = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_ntc);
 207:../samuel/samuel_io.c ****     //    resultB = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_U_in);
 208:../samuel/samuel_io.c ****     //    resultC = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_ww);
 209:../samuel/samuel_io.c ****      //   resultD = ADC_MEASUREMENT_ADV_GetResult(&ADC_MEASUREMENT_ADV_0_xmc_I_cw);
 210:../samuel/samuel_io.c ****    	//  DIGITAL_IO_SetOutputLow(&DO_VCC_LED_shtdwn);
 211:../samuel/samuel_io.c ****   }
 807              	 .loc 3 211 0
 808 0004 BD46     	 mov sp,r7
 809              	 
 810 0006 80BD     	 pop {r7,pc}
 811              	 .cfi_endproc
 812              	.LFE295:
 814              	 .section .text.new_data_fill,"ax",%progbits
 815              	 .align 2
 816              	 .global new_data_fill
 817              	 .code 16
 818              	 .thumb_func
 820              	new_data_fill:
 821              	.LFB296:
 212:../samuel/samuel_io.c **** 
 213:../samuel/samuel_io.c ****  void new_data_fill(void) // ausgabe über rxd
 214:../samuel/samuel_io.c ****  {
 822              	 .loc 3 214 0
 823              	 .cfi_startproc
 824 0000 80B5     	 push {r7,lr}
 825              	.LCFI24:
 826              	 .cfi_def_cfa_offset 8
 827              	 .cfi_offset 7,-8
 828              	 .cfi_offset 14,-4
 829 0002 00AF     	 add r7,sp,#0
 830              	.LCFI25:
 831              	 .cfi_def_cfa_register 7
 215:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 832              	 .loc 3 215 0
 833 0004 124B     	 ldr r3,.L27
 834 0006 0B22     	 mov r2,#11
 835 0008 1A70     	 strb r2,[r3]
 216:../samuel/samuel_io.c **** 	 new_data[0]=1;
 836              	 .loc 3 216 0
 837 000a 124B     	 ldr r3,.L27+4
 838 000c 0122     	 mov r2,#1
 839 000e 1A70     	 strb r2,[r3]
 217:../samuel/samuel_io.c **** 	 new_data[1]=2;
 840              	 .loc 3 217 0
 841 0010 104B     	 ldr r3,.L27+4
 842 0012 0222     	 mov r2,#2
 843 0014 5A70     	 strb r2,[r3,#1]
 218:../samuel/samuel_io.c **** 	 new_data[2]=3;
 844              	 .loc 3 218 0
 845 0016 0F4B     	 ldr r3,.L27+4
 846 0018 0322     	 mov r2,#3
 847 001a 9A70     	 strb r2,[r3,#2]
 219:../samuel/samuel_io.c **** 	 new_data[3]=4;
 848              	 .loc 3 219 0
 849 001c 0D4B     	 ldr r3,.L27+4
 850 001e 0422     	 mov r2,#4
 851 0020 DA70     	 strb r2,[r3,#3]
 220:../samuel/samuel_io.c **** 	 new_data[4]=5;
 852              	 .loc 3 220 0
 853 0022 0C4B     	 ldr r3,.L27+4
 854 0024 0522     	 mov r2,#5
 855 0026 1A71     	 strb r2,[r3,#4]
 221:../samuel/samuel_io.c **** 	 new_data[5]=6;
 856              	 .loc 3 221 0
 857 0028 0A4B     	 ldr r3,.L27+4
 858 002a 0622     	 mov r2,#6
 859 002c 5A71     	 strb r2,[r3,#5]
 222:../samuel/samuel_io.c ****  	 new_data[6]=7;
 860              	 .loc 3 222 0
 861 002e 094B     	 ldr r3,.L27+4
 862 0030 0722     	 mov r2,#7
 863 0032 9A71     	 strb r2,[r3,#6]
 223:../samuel/samuel_io.c ****  	 new_data[7]=8;
 864              	 .loc 3 223 0
 865 0034 074B     	 ldr r3,.L27+4
 866 0036 0822     	 mov r2,#8
 867 0038 DA71     	 strb r2,[r3,#7]
 224:../samuel/samuel_io.c ****  	 new_data[8]=9;
 868              	 .loc 3 224 0
 869 003a 064B     	 ldr r3,.L27+4
 870 003c 0922     	 mov r2,#9
 871 003e 1A72     	 strb r2,[r3,#8]
 225:../samuel/samuel_io.c ****  	 new_data[9]='a';
 872              	 .loc 3 225 0
 873 0040 044B     	 ldr r3,.L27+4
 874 0042 6122     	 mov r2,#97
 875 0044 5A72     	 strb r2,[r3,#9]
 226:../samuel/samuel_io.c **** 	 new_data[10]='b';
 876              	 .loc 3 226 0
 877 0046 034B     	 ldr r3,.L27+4
 878 0048 6222     	 mov r2,#98
 879 004a 9A72     	 strb r2,[r3,#10]
 227:../samuel/samuel_io.c ****  }
 880              	 .loc 3 227 0
 881 004c BD46     	 mov sp,r7
 882              	 
 883 004e 80BD     	 pop {r7,pc}
 884              	.L28:
 885              	 .align 2
 886              	.L27:
 887 0050 00000000 	 .word transmit_buf_size
 888 0054 00000000 	 .word new_data
 889              	 .cfi_endproc
 890              	.LFE296:
 892              	 .section .text.new_data_unbekanntBack,"ax",%progbits
 893              	 .align 2
 894              	 .global new_data_unbekanntBack
 895              	 .code 16
 896              	 .thumb_func
 898              	new_data_unbekanntBack:
 899              	.LFB297:
 228:../samuel/samuel_io.c **** 
 229:../samuel/samuel_io.c **** 
 230:../samuel/samuel_io.c **** 
 231:../samuel/samuel_io.c **** 
 232:../samuel/samuel_io.c ****  void new_data_unbekanntBack(void) // ausgabe über rxd
 233:../samuel/samuel_io.c ****  {
 900              	 .loc 3 233 0
 901              	 .cfi_startproc
 902 0000 80B5     	 push {r7,lr}
 903              	.LCFI26:
 904              	 .cfi_def_cfa_offset 8
 905              	 .cfi_offset 7,-8
 906              	 .cfi_offset 14,-4
 907 0002 00AF     	 add r7,sp,#0
 908              	.LCFI27:
 909              	 .cfi_def_cfa_register 7
 234:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 910              	 .loc 3 234 0
 911 0004 134B     	 ldr r3,.L30
 912 0006 0B22     	 mov r2,#11
 913 0008 1A70     	 strb r2,[r3]
 235:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 914              	 .loc 3 235 0
 915 000a 134B     	 ldr r3,.L30+4
 916 000c 4C22     	 mov r2,#76
 917 000e 1A70     	 strb r2,[r3]
 236:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 918              	 .loc 3 236 0
 919 0010 114B     	 ldr r3,.L30+4
 920 0012 4922     	 mov r2,#73
 921 0014 5A70     	 strb r2,[r3,#1]
 237:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 922              	 .loc 3 237 0
 923 0016 104B     	 ldr r3,.L30+4
 924 0018 4E22     	 mov r2,#78
 925 001a 9A70     	 strb r2,[r3,#2]
 238:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 926              	 .loc 3 238 0
 927 001c 0F4B     	 ldr r3,.L30+8
 928 001e 1A78     	 ldrb r2,[r3]
 929 0020 0D4B     	 ldr r3,.L30+4
 930 0022 DA70     	 strb r2,[r3,#3]
 239:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 931              	 .loc 3 239 0
 932 0024 0B4B     	 ldr r3,.L30
 933 0026 1A78     	 ldrb r2,[r3]
 934 0028 0B4B     	 ldr r3,.L30+4
 935 002a 1A71     	 strb r2,[r3,#4]
 240:../samuel/samuel_io.c **** 	 new_data[5]= command_unbekanntBack;
 936              	 .loc 3 240 0
 937 002c 0A4B     	 ldr r3,.L30+4
 938 002e 3122     	 mov r2,#49
 939 0030 5A71     	 strb r2,[r3,#5]
 241:../samuel/samuel_io.c **** 	 new_data[6]='n';
 940              	 .loc 3 241 0
 941 0032 094B     	 ldr r3,.L30+4
 942 0034 6E22     	 mov r2,#110
 943 0036 9A71     	 strb r2,[r3,#6]
 242:../samuel/samuel_io.c **** 	 new_data[7]='o';
 944              	 .loc 3 242 0
 945 0038 074B     	 ldr r3,.L30+4
 946 003a 6F22     	 mov r2,#111
 947 003c DA71     	 strb r2,[r3,#7]
 243:../samuel/samuel_io.c **** 	 new_data[8]='n';
 948              	 .loc 3 243 0
 949 003e 064B     	 ldr r3,.L30+4
 950 0040 6E22     	 mov r2,#110
 951 0042 1A72     	 strb r2,[r3,#8]
 244:../samuel/samuel_io.c **** 	 new_data[9]='o';
 952              	 .loc 3 244 0
 953 0044 044B     	 ldr r3,.L30+4
 954 0046 6F22     	 mov r2,#111
 955 0048 5A72     	 strb r2,[r3,#9]
 245:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 956              	 .loc 3 245 0
 957 004a 034B     	 ldr r3,.L30+4
 958 004c FF22     	 mov r2,#255
 959 004e 9A72     	 strb r2,[r3,#10]
 246:../samuel/samuel_io.c ****  }
 960              	 .loc 3 246 0
 961 0050 BD46     	 mov sp,r7
 962              	 
 963 0052 80BD     	 pop {r7,pc}
 964              	.L31:
 965              	 .align 2
 966              	.L30:
 967 0054 00000000 	 .word transmit_buf_size
 968 0058 00000000 	 .word new_data
 969 005c 00000000 	 .word node_id
 970              	 .cfi_endproc
 971              	.LFE297:
 973              	 .section .text.new_data_BroadcastBack,"ax",%progbits
 974              	 .align 2
 975              	 .global new_data_BroadcastBack
 976              	 .code 16
 977              	 .thumb_func
 979              	new_data_BroadcastBack:
 980              	.LFB298:
 247:../samuel/samuel_io.c **** 
 248:../samuel/samuel_io.c **** //------------------------------------------
 249:../samuel/samuel_io.c ****  void new_data_BroadcastBack(void) // ausgabe über rxd
 250:../samuel/samuel_io.c ****  {
 981              	 .loc 3 250 0
 982              	 .cfi_startproc
 983 0000 80B5     	 push {r7,lr}
 984              	.LCFI28:
 985              	 .cfi_def_cfa_offset 8
 986              	 .cfi_offset 7,-8
 987              	 .cfi_offset 14,-4
 988 0002 00AF     	 add r7,sp,#0
 989              	.LCFI29:
 990              	 .cfi_def_cfa_register 7
 251:../samuel/samuel_io.c **** 
 252:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 991              	 .loc 3 252 0
 992 0004 194B     	 ldr r3,.L33
 993 0006 0B22     	 mov r2,#11
 994 0008 1A70     	 strb r2,[r3]
 253:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 995              	 .loc 3 253 0
 996 000a 194B     	 ldr r3,.L33+4
 997 000c 4C22     	 mov r2,#76
 998 000e 1A70     	 strb r2,[r3]
 254:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 999              	 .loc 3 254 0
 1000 0010 174B     	 ldr r3,.L33+4
 1001 0012 4922     	 mov r2,#73
 1002 0014 5A70     	 strb r2,[r3,#1]
 255:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1003              	 .loc 3 255 0
 1004 0016 164B     	 ldr r3,.L33+4
 1005 0018 4E22     	 mov r2,#78
 1006 001a 9A70     	 strb r2,[r3,#2]
 256:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1007              	 .loc 3 256 0
 1008 001c 154B     	 ldr r3,.L33+8
 1009 001e 1A78     	 ldrb r2,[r3]
 1010 0020 134B     	 ldr r3,.L33+4
 1011 0022 DA70     	 strb r2,[r3,#3]
 257:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1012              	 .loc 3 257 0
 1013 0024 114B     	 ldr r3,.L33
 1014 0026 1A78     	 ldrb r2,[r3]
 1015 0028 114B     	 ldr r3,.L33+4
 1016 002a 1A71     	 strb r2,[r3,#4]
 258:../samuel/samuel_io.c **** 	 new_data[5]=command_BroadcastBack;
 1017              	 .loc 3 258 0
 1018 002c 104B     	 ldr r3,.L33+4
 1019 002e 6F22     	 mov r2,#111
 1020 0030 5A71     	 strb r2,[r3,#5]
 259:../samuel/samuel_io.c ****  	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 1021              	 .loc 3 259 0
 1022 0032 114B     	 ldr r3,.L33+12
 1023 0034 1B88     	 ldrh r3,[r3]
 1024 0036 1B0A     	 lsr r3,r3,#8
 1025 0038 9BB2     	 uxth r3,r3
 1026 003a DAB2     	 uxtb r2,r3
 1027 003c 0C4B     	 ldr r3,.L33+4
 1028 003e 9A71     	 strb r2,[r3,#6]
 260:../samuel/samuel_io.c ****  	 new_data[7]= 	Ser_NrH  & 0xff; //highbyte
 1029              	 .loc 3 260 0
 1030 0040 0D4B     	 ldr r3,.L33+12
 1031 0042 1B88     	 ldrh r3,[r3]
 1032 0044 DAB2     	 uxtb r2,r3
 1033 0046 0A4B     	 ldr r3,.L33+4
 1034 0048 DA71     	 strb r2,[r3,#7]
 261:../samuel/samuel_io.c ****  	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 1035              	 .loc 3 261 0
 1036 004a 0C4B     	 ldr r3,.L33+16
 1037 004c 1B88     	 ldrh r3,[r3]
 1038 004e 1B0A     	 lsr r3,r3,#8
 1039 0050 9BB2     	 uxth r3,r3
 1040 0052 DAB2     	 uxtb r2,r3
 1041 0054 064B     	 ldr r3,.L33+4
 1042 0056 1A72     	 strb r2,[r3,#8]
 262:../samuel/samuel_io.c ****  	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 1043              	 .loc 3 262 0
 1044 0058 084B     	 ldr r3,.L33+16
 1045 005a 1B88     	 ldrh r3,[r3]
 1046 005c DAB2     	 uxtb r2,r3
 1047 005e 044B     	 ldr r3,.L33+4
 1048 0060 5A72     	 strb r2,[r3,#9]
 263:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1049              	 .loc 3 263 0
 1050 0062 034B     	 ldr r3,.L33+4
 1051 0064 FF22     	 mov r2,#255
 1052 0066 9A72     	 strb r2,[r3,#10]
 264:../samuel/samuel_io.c ****  }
 1053              	 .loc 3 264 0
 1054 0068 BD46     	 mov sp,r7
 1055              	 
 1056 006a 80BD     	 pop {r7,pc}
 1057              	.L34:
 1058              	 .align 2
 1059              	.L33:
 1060 006c 00000000 	 .word transmit_buf_size
 1061 0070 00000000 	 .word new_data
 1062 0074 00000000 	 .word node_id
 1063 0078 00000000 	 .word Ser_NrH
 1064 007c 00000000 	 .word Ser_NrL
 1065              	 .cfi_endproc
 1066              	.LFE298:
 1068              	 .section .text.new_data_analog1Back,"ax",%progbits
 1069              	 .align 2
 1070              	 .global new_data_analog1Back
 1071              	 .code 16
 1072              	 .thumb_func
 1074              	new_data_analog1Back:
 1075              	.LFB299:
 265:../samuel/samuel_io.c ****  //------------------------------------------
 266:../samuel/samuel_io.c ****  void new_data_analog1Back(void) // ausgabe über rxd
 267:../samuel/samuel_io.c ****  {
 1076              	 .loc 3 267 0
 1077              	 .cfi_startproc
 1078 0000 80B5     	 push {r7,lr}
 1079              	.LCFI30:
 1080              	 .cfi_def_cfa_offset 8
 1081              	 .cfi_offset 7,-8
 1082              	 .cfi_offset 14,-4
 1083 0002 00AF     	 add r7,sp,#0
 1084              	.LCFI31:
 1085              	 .cfi_def_cfa_register 7
 268:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1086              	 .loc 3 268 0
 1087 0004 194B     	 ldr r3,.L36
 1088 0006 0B22     	 mov r2,#11
 1089 0008 1A70     	 strb r2,[r3]
 269:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1090              	 .loc 3 269 0
 1091 000a 194B     	 ldr r3,.L36+4
 1092 000c 4C22     	 mov r2,#76
 1093 000e 1A70     	 strb r2,[r3]
 270:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1094              	 .loc 3 270 0
 1095 0010 174B     	 ldr r3,.L36+4
 1096 0012 4922     	 mov r2,#73
 1097 0014 5A70     	 strb r2,[r3,#1]
 271:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1098              	 .loc 3 271 0
 1099 0016 164B     	 ldr r3,.L36+4
 1100 0018 4E22     	 mov r2,#78
 1101 001a 9A70     	 strb r2,[r3,#2]
 272:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1102              	 .loc 3 272 0
 1103 001c 154B     	 ldr r3,.L36+8
 1104 001e 1A78     	 ldrb r2,[r3]
 1105 0020 134B     	 ldr r3,.L36+4
 1106 0022 DA70     	 strb r2,[r3,#3]
 273:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1107              	 .loc 3 273 0
 1108 0024 114B     	 ldr r3,.L36
 1109 0026 1A78     	 ldrb r2,[r3]
 1110 0028 114B     	 ldr r3,.L36+4
 1111 002a 1A71     	 strb r2,[r3,#4]
 274:../samuel/samuel_io.c **** 	 new_data[5]=command_ana1Back;
 1112              	 .loc 3 274 0
 1113 002c 104B     	 ldr r3,.L36+4
 1114 002e 6122     	 mov r2,#97
 1115 0030 5A71     	 strb r2,[r3,#5]
 275:../samuel/samuel_io.c ****  	 new_data[6]= 	resultA2  / 256; //highbyte
 1116              	 .loc 3 275 0
 1117 0032 114B     	 ldr r3,.L36+12
 1118 0034 1B88     	 ldrh r3,[r3]
 1119 0036 1B0A     	 lsr r3,r3,#8
 1120 0038 9BB2     	 uxth r3,r3
 1121 003a DAB2     	 uxtb r2,r3
 1122 003c 0C4B     	 ldr r3,.L36+4
 1123 003e 9A71     	 strb r2,[r3,#6]
 276:../samuel/samuel_io.c ****  	 new_data[7]= 	resultA2  & 0xff; //lowbyte
 1124              	 .loc 3 276 0
 1125 0040 0D4B     	 ldr r3,.L36+12
 1126 0042 1B88     	 ldrh r3,[r3]
 1127 0044 DAB2     	 uxtb r2,r3
 1128 0046 0A4B     	 ldr r3,.L36+4
 1129 0048 DA71     	 strb r2,[r3,#7]
 277:../samuel/samuel_io.c ****  	 new_data[8]= 	resultB2 / 256; //highbyte
 1130              	 .loc 3 277 0
 1131 004a 0C4B     	 ldr r3,.L36+16
 1132 004c 1B88     	 ldrh r3,[r3]
 1133 004e 1B0A     	 lsr r3,r3,#8
 1134 0050 9BB2     	 uxth r3,r3
 1135 0052 DAB2     	 uxtb r2,r3
 1136 0054 064B     	 ldr r3,.L36+4
 1137 0056 1A72     	 strb r2,[r3,#8]
 278:../samuel/samuel_io.c ****  	 new_data[9]= 	resultB2  & 0xff; //lowbyte
 1138              	 .loc 3 278 0
 1139 0058 084B     	 ldr r3,.L36+16
 1140 005a 1B88     	 ldrh r3,[r3]
 1141 005c DAB2     	 uxtb r2,r3
 1142 005e 044B     	 ldr r3,.L36+4
 1143 0060 5A72     	 strb r2,[r3,#9]
 279:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1144              	 .loc 3 279 0
 1145 0062 034B     	 ldr r3,.L36+4
 1146 0064 FF22     	 mov r2,#255
 1147 0066 9A72     	 strb r2,[r3,#10]
 280:../samuel/samuel_io.c ****  }
 1148              	 .loc 3 280 0
 1149 0068 BD46     	 mov sp,r7
 1150              	 
 1151 006a 80BD     	 pop {r7,pc}
 1152              	.L37:
 1153              	 .align 2
 1154              	.L36:
 1155 006c 00000000 	 .word transmit_buf_size
 1156 0070 00000000 	 .word new_data
 1157 0074 00000000 	 .word node_id
 1158 0078 00000000 	 .word resultA2
 1159 007c 00000000 	 .word resultB2
 1160              	 .cfi_endproc
 1161              	.LFE299:
 1163              	 .section .text.new_data_analog2Back,"ax",%progbits
 1164              	 .align 2
 1165              	 .global new_data_analog2Back
 1166              	 .code 16
 1167              	 .thumb_func
 1169              	new_data_analog2Back:
 1170              	.LFB300:
 281:../samuel/samuel_io.c ****  //------------------------------------------------------
 282:../samuel/samuel_io.c **** 
 283:../samuel/samuel_io.c ****  void new_data_analog2Back(void) // ausgabe über rxd
 284:../samuel/samuel_io.c ****  {
 1171              	 .loc 3 284 0
 1172              	 .cfi_startproc
 1173 0000 80B5     	 push {r7,lr}
 1174              	.LCFI32:
 1175              	 .cfi_def_cfa_offset 8
 1176              	 .cfi_offset 7,-8
 1177              	 .cfi_offset 14,-4
 1178 0002 00AF     	 add r7,sp,#0
 1179              	.LCFI33:
 1180              	 .cfi_def_cfa_register 7
 285:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1181              	 .loc 3 285 0
 1182 0004 194B     	 ldr r3,.L39
 1183 0006 0B22     	 mov r2,#11
 1184 0008 1A70     	 strb r2,[r3]
 286:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1185              	 .loc 3 286 0
 1186 000a 194B     	 ldr r3,.L39+4
 1187 000c 4C22     	 mov r2,#76
 1188 000e 1A70     	 strb r2,[r3]
 287:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1189              	 .loc 3 287 0
 1190 0010 174B     	 ldr r3,.L39+4
 1191 0012 4922     	 mov r2,#73
 1192 0014 5A70     	 strb r2,[r3,#1]
 288:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1193              	 .loc 3 288 0
 1194 0016 164B     	 ldr r3,.L39+4
 1195 0018 4E22     	 mov r2,#78
 1196 001a 9A70     	 strb r2,[r3,#2]
 289:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1197              	 .loc 3 289 0
 1198 001c 154B     	 ldr r3,.L39+8
 1199 001e 1A78     	 ldrb r2,[r3]
 1200 0020 134B     	 ldr r3,.L39+4
 1201 0022 DA70     	 strb r2,[r3,#3]
 290:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1202              	 .loc 3 290 0
 1203 0024 114B     	 ldr r3,.L39
 1204 0026 1A78     	 ldrb r2,[r3]
 1205 0028 114B     	 ldr r3,.L39+4
 1206 002a 1A71     	 strb r2,[r3,#4]
 291:../samuel/samuel_io.c **** 	 new_data[5]=command_ana2Back;
 1207              	 .loc 3 291 0
 1208 002c 104B     	 ldr r3,.L39+4
 1209 002e 6222     	 mov r2,#98
 1210 0030 5A71     	 strb r2,[r3,#5]
 292:../samuel/samuel_io.c ****  	 new_data[6]= 	resultC2  / 256; //highbyteresultD2
 1211              	 .loc 3 292 0
 1212 0032 114B     	 ldr r3,.L39+12
 1213 0034 1B88     	 ldrh r3,[r3]
 1214 0036 1B0A     	 lsr r3,r3,#8
 1215 0038 9BB2     	 uxth r3,r3
 1216 003a DAB2     	 uxtb r2,r3
 1217 003c 0C4B     	 ldr r3,.L39+4
 1218 003e 9A71     	 strb r2,[r3,#6]
 293:../samuel/samuel_io.c ****  	 new_data[7]= 	resultC2  & 0xff; //lowbyte
 1219              	 .loc 3 293 0
 1220 0040 0D4B     	 ldr r3,.L39+12
 1221 0042 1B88     	 ldrh r3,[r3]
 1222 0044 DAB2     	 uxtb r2,r3
 1223 0046 0A4B     	 ldr r3,.L39+4
 1224 0048 DA71     	 strb r2,[r3,#7]
 294:../samuel/samuel_io.c ****  	 new_data[8]= 	resultD2 / 256; //highbyte
 1225              	 .loc 3 294 0
 1226 004a 0C4B     	 ldr r3,.L39+16
 1227 004c 1B88     	 ldrh r3,[r3]
 1228 004e 1B0A     	 lsr r3,r3,#8
 1229 0050 9BB2     	 uxth r3,r3
 1230 0052 DAB2     	 uxtb r2,r3
 1231 0054 064B     	 ldr r3,.L39+4
 1232 0056 1A72     	 strb r2,[r3,#8]
 295:../samuel/samuel_io.c ****  	 new_data[9]= 	resultD2  & 0xff; //lowbyte
 1233              	 .loc 3 295 0
 1234 0058 084B     	 ldr r3,.L39+16
 1235 005a 1B88     	 ldrh r3,[r3]
 1236 005c DAB2     	 uxtb r2,r3
 1237 005e 044B     	 ldr r3,.L39+4
 1238 0060 5A72     	 strb r2,[r3,#9]
 296:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1239              	 .loc 3 296 0
 1240 0062 034B     	 ldr r3,.L39+4
 1241 0064 FF22     	 mov r2,#255
 1242 0066 9A72     	 strb r2,[r3,#10]
 297:../samuel/samuel_io.c ****  }
 1243              	 .loc 3 297 0
 1244 0068 BD46     	 mov sp,r7
 1245              	 
 1246 006a 80BD     	 pop {r7,pc}
 1247              	.L40:
 1248              	 .align 2
 1249              	.L39:
 1250 006c 00000000 	 .word transmit_buf_size
 1251 0070 00000000 	 .word new_data
 1252 0074 00000000 	 .word node_id
 1253 0078 00000000 	 .word resultC2
 1254 007c 00000000 	 .word resultD2
 1255              	 .cfi_endproc
 1256              	.LFE300:
 1258              	 .section .text.new_data_aktLichtBack,"ax",%progbits
 1259              	 .align 2
 1260              	 .global new_data_aktLichtBack
 1261              	 .code 16
 1262              	 .thumb_func
 1264              	new_data_aktLichtBack:
 1265              	.LFB301:
 298:../samuel/samuel_io.c ****  //------------------------------------------------------
 299:../samuel/samuel_io.c **** 
 300:../samuel/samuel_io.c ****  void new_data_aktLichtBack(void) // ausgabe über rxd
 301:../samuel/samuel_io.c ****  {
 1266              	 .loc 3 301 0
 1267              	 .cfi_startproc
 1268 0000 80B5     	 push {r7,lr}
 1269              	.LCFI34:
 1270              	 .cfi_def_cfa_offset 8
 1271              	 .cfi_offset 7,-8
 1272              	 .cfi_offset 14,-4
 1273 0002 00AF     	 add r7,sp,#0
 1274              	.LCFI35:
 1275              	 .cfi_def_cfa_register 7
 302:../samuel/samuel_io.c **** 	 transmit_buf_size=11;
 1276              	 .loc 3 302 0
 1277 0004 194B     	 ldr r3,.L42
 1278 0006 0B22     	 mov r2,#11
 1279 0008 1A70     	 strb r2,[r3]
 303:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1280              	 .loc 3 303 0
 1281 000a 194B     	 ldr r3,.L42+4
 1282 000c 4C22     	 mov r2,#76
 1283 000e 1A70     	 strb r2,[r3]
 304:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1284              	 .loc 3 304 0
 1285 0010 174B     	 ldr r3,.L42+4
 1286 0012 4922     	 mov r2,#73
 1287 0014 5A70     	 strb r2,[r3,#1]
 305:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1288              	 .loc 3 305 0
 1289 0016 164B     	 ldr r3,.L42+4
 1290 0018 4E22     	 mov r2,#78
 1291 001a 9A70     	 strb r2,[r3,#2]
 306:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1292              	 .loc 3 306 0
 1293 001c 154B     	 ldr r3,.L42+8
 1294 001e 1A78     	 ldrb r2,[r3]
 1295 0020 134B     	 ldr r3,.L42+4
 1296 0022 DA70     	 strb r2,[r3,#3]
 307:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1297              	 .loc 3 307 0
 1298 0024 114B     	 ldr r3,.L42
 1299 0026 1A78     	 ldrb r2,[r3]
 1300 0028 114B     	 ldr r3,.L42+4
 1301 002a 1A71     	 strb r2,[r3,#4]
 308:../samuel/samuel_io.c **** 	 new_data[5]=command_aktLichtBack;
 1302              	 .loc 3 308 0
 1303 002c 104B     	 ldr r3,.L42+4
 1304 002e 6622     	 mov r2,#102
 1305 0030 5A71     	 strb r2,[r3,#5]
 309:../samuel/samuel_io.c ****  	 new_data[6]= 	dimAkt_Ww  / 256; //highbyte
 1306              	 .loc 3 309 0
 1307 0032 114B     	 ldr r3,.L42+12
 1308 0034 1B88     	 ldrh r3,[r3]
 1309 0036 1B0A     	 lsr r3,r3,#8
 1310 0038 9BB2     	 uxth r3,r3
 1311 003a DAB2     	 uxtb r2,r3
 1312 003c 0C4B     	 ldr r3,.L42+4
 1313 003e 9A71     	 strb r2,[r3,#6]
 310:../samuel/samuel_io.c ****  	 new_data[7]= 	dimAkt_Ww  & 0xff; //lowbyte
 1314              	 .loc 3 310 0
 1315 0040 0D4B     	 ldr r3,.L42+12
 1316 0042 1B88     	 ldrh r3,[r3]
 1317 0044 DAB2     	 uxtb r2,r3
 1318 0046 0A4B     	 ldr r3,.L42+4
 1319 0048 DA71     	 strb r2,[r3,#7]
 311:../samuel/samuel_io.c ****  	 new_data[8]= 	dimAkt_Cw / 256; //highbyte
 1320              	 .loc 3 311 0
 1321 004a 0C4B     	 ldr r3,.L42+16
 1322 004c 1B88     	 ldrh r3,[r3]
 1323 004e 1B0A     	 lsr r3,r3,#8
 1324 0050 9BB2     	 uxth r3,r3
 1325 0052 DAB2     	 uxtb r2,r3
 1326 0054 064B     	 ldr r3,.L42+4
 1327 0056 1A72     	 strb r2,[r3,#8]
 312:../samuel/samuel_io.c ****  	 new_data[9]= 	dimAkt_Cw  & 0xff; //lowbyte
 1328              	 .loc 3 312 0
 1329 0058 084B     	 ldr r3,.L42+16
 1330 005a 1B88     	 ldrh r3,[r3]
 1331 005c DAB2     	 uxtb r2,r3
 1332 005e 044B     	 ldr r3,.L42+4
 1333 0060 5A72     	 strb r2,[r3,#9]
 313:../samuel/samuel_io.c **** 	 new_data[10]=command_codeEnd;
 1334              	 .loc 3 313 0
 1335 0062 034B     	 ldr r3,.L42+4
 1336 0064 FF22     	 mov r2,#255
 1337 0066 9A72     	 strb r2,[r3,#10]
 314:../samuel/samuel_io.c ****  }
 1338              	 .loc 3 314 0
 1339 0068 BD46     	 mov sp,r7
 1340              	 
 1341 006a 80BD     	 pop {r7,pc}
 1342              	.L43:
 1343              	 .align 2
 1344              	.L42:
 1345 006c 00000000 	 .word transmit_buf_size
 1346 0070 00000000 	 .word new_data
 1347 0074 00000000 	 .word node_id
 1348 0078 00000000 	 .word dimAkt_Ww
 1349 007c 00000000 	 .word dimAkt_Cw
 1350              	 .cfi_endproc
 1351              	.LFE301:
 1353              	 .section .text.new_data_offLichtBack,"ax",%progbits
 1354              	 .align 2
 1355              	 .global new_data_offLichtBack
 1356              	 .code 16
 1357              	 .thumb_func
 1359              	new_data_offLichtBack:
 1360              	.LFB302:
 315:../samuel/samuel_io.c ****  //------------------------------------------------------
 316:../samuel/samuel_io.c **** 
 317:../samuel/samuel_io.c ****  void new_data_offLichtBack(void) // ausgabe über rxd
 318:../samuel/samuel_io.c ****  {
 1361              	 .loc 3 318 0
 1362              	 .cfi_startproc
 1363 0000 80B5     	 push {r7,lr}
 1364              	.LCFI36:
 1365              	 .cfi_def_cfa_offset 8
 1366              	 .cfi_offset 7,-8
 1367              	 .cfi_offset 14,-4
 1368 0002 00AF     	 add r7,sp,#0
 1369              	.LCFI37:
 1370              	 .cfi_def_cfa_register 7
 319:../samuel/samuel_io.c **** 	 transmit_buf_size=13;
 1371              	 .loc 3 319 0
 1372 0004 1D4B     	 ldr r3,.L45
 1373 0006 0D22     	 mov r2,#13
 1374 0008 1A70     	 strb r2,[r3]
 320:../samuel/samuel_io.c **** 	 new_data[0]=command_code01;
 1375              	 .loc 3 320 0
 1376 000a 1D4B     	 ldr r3,.L45+4
 1377 000c 4C22     	 mov r2,#76
 1378 000e 1A70     	 strb r2,[r3]
 321:../samuel/samuel_io.c **** 	 new_data[1]=command_code02;
 1379              	 .loc 3 321 0
 1380 0010 1B4B     	 ldr r3,.L45+4
 1381 0012 4922     	 mov r2,#73
 1382 0014 5A70     	 strb r2,[r3,#1]
 322:../samuel/samuel_io.c **** 	 new_data[2]=command_code03;
 1383              	 .loc 3 322 0
 1384 0016 1A4B     	 ldr r3,.L45+4
 1385 0018 4E22     	 mov r2,#78
 1386 001a 9A70     	 strb r2,[r3,#2]
 323:../samuel/samuel_io.c **** 	 new_data[3]=node_id;
 1387              	 .loc 3 323 0
 1388 001c 194B     	 ldr r3,.L45+8
 1389 001e 1A78     	 ldrb r2,[r3]
 1390 0020 174B     	 ldr r3,.L45+4
 1391 0022 DA70     	 strb r2,[r3,#3]
 324:../samuel/samuel_io.c **** 	 new_data[4]=transmit_buf_size;
 1392              	 .loc 3 324 0
 1393 0024 154B     	 ldr r3,.L45
 1394 0026 1A78     	 ldrb r2,[r3]
 1395 0028 154B     	 ldr r3,.L45+4
 1396 002a 1A71     	 strb r2,[r3,#4]
 325:../samuel/samuel_io.c **** 	 new_data[5]=command_offLichtBack;
 1397              	 .loc 3 325 0
 1398 002c 144B     	 ldr r3,.L45+4
 1399 002e 6722     	 mov r2,#103
 1400 0030 5A71     	 strb r2,[r3,#5]
 326:../samuel/samuel_io.c ****  	 new_data[6]= 	dimOff_Ww  / 256; //highbyte
 1401              	 .loc 3 326 0
 1402 0032 154B     	 ldr r3,.L45+12
 1403 0034 1B88     	 ldrh r3,[r3]
 1404 0036 1B0A     	 lsr r3,r3,#8
 1405 0038 9BB2     	 uxth r3,r3
 1406 003a DAB2     	 uxtb r2,r3
 1407 003c 104B     	 ldr r3,.L45+4
 1408 003e 9A71     	 strb r2,[r3,#6]
 327:../samuel/samuel_io.c ****  	 new_data[7]= 	dimOff_Ww  & 0xff; //lowbyte
 1409              	 .loc 3 327 0
 1410 0040 114B     	 ldr r3,.L45+12
 1411 0042 1B88     	 ldrh r3,[r3]
 1412 0044 DAB2     	 uxtb r2,r3
 1413 0046 0E4B     	 ldr r3,.L45+4
 1414 0048 DA71     	 strb r2,[r3,#7]
 328:../samuel/samuel_io.c ****  	 new_data[8]= 	dimOff_Cw  / 256; //highbyte
 1415              	 .loc 3 328 0
 1416 004a 104B     	 ldr r3,.L45+16
 1417 004c 1B88     	 ldrh r3,[r3]
 1418 004e 1B0A     	 lsr r3,r3,#8
 1419 0050 9BB2     	 uxth r3,r3
 1420 0052 DAB2     	 uxtb r2,r3
 1421 0054 0A4B     	 ldr r3,.L45+4
 1422 0056 1A72     	 strb r2,[r3,#8]
 329:../samuel/samuel_io.c ****  	 new_data[9]= 	dimOff_Cw  & 0xff; //lowbyte
 1423              	 .loc 3 329 0
 1424 0058 0C4B     	 ldr r3,.L45+16
 1425 005a 1B88     	 ldrh r3,[r3]
 1426 005c DAB2     	 uxtb r2,r3
 1427 005e 084B     	 ldr r3,.L45+4
 1428 0060 5A72     	 strb r2,[r3,#9]
 330:../samuel/samuel_io.c ****  	 new_data[10]= 	RegOnOff ; //
 1429              	 .loc 3 330 0
 1430 0062 0B4B     	 ldr r3,.L45+20
 1431 0064 1A78     	 ldrb r2,[r3]
 1432 0066 064B     	 ldr r3,.L45+4
 1433 0068 9A72     	 strb r2,[r3,#10]
 331:../samuel/samuel_io.c ****  	 new_data[11]= 	RegOnOff2 ;
 1434              	 .loc 3 331 0
 1435 006a 0A4B     	 ldr r3,.L45+24
 1436 006c 1A78     	 ldrb r2,[r3]
 1437 006e 044B     	 ldr r3,.L45+4
 1438 0070 DA72     	 strb r2,[r3,#11]
 332:../samuel/samuel_io.c **** 	 new_data[12]=command_codeEnd;
 1439              	 .loc 3 332 0
 1440 0072 034B     	 ldr r3,.L45+4
 1441 0074 FF22     	 mov r2,#255
 1442 0076 1A73     	 strb r2,[r3,#12]
 333:../samuel/samuel_io.c ****  }
 1443              	 .loc 3 333 0
 1444 0078 BD46     	 mov sp,r7
 1445              	 
 1446 007a 80BD     	 pop {r7,pc}
 1447              	.L46:
 1448              	 .align 2
 1449              	.L45:
 1450 007c 00000000 	 .word transmit_buf_size
 1451 0080 00000000 	 .word new_data
 1452 0084 00000000 	 .word node_id
 1453 0088 00000000 	 .word dimOff_Ww
 1454 008c 00000000 	 .word dimOff_Cw
 1455 0090 00000000 	 .word RegOnOff
 1456 0094 00000000 	 .word RegOnOff2
 1457              	 .cfi_endproc
 1458              	.LFE302:
 1460              	 .section .text.new_data_Bright_Color_Back,"ax",%progbits
 1461              	 .align 2
 1462              	 .global new_data_Bright_Color_Back
 1463              	 .code 16
 1464              	 .thumb_func
 1466              	new_data_Bright_Color_Back:
 1467              	.LFB303:
 334:../samuel/samuel_io.c ****  //------------------------------------------------------
 335:../samuel/samuel_io.c **** 
 336:../samuel/samuel_io.c ****   void new_data_Bright_Color_Back(void) // ausgabe über rxd
 337:../samuel/samuel_io.c ****   {
 1468              	 .loc 3 337 0
 1469              	 .cfi_startproc
 1470 0000 80B5     	 push {r7,lr}
 1471              	.LCFI38:
 1472              	 .cfi_def_cfa_offset 8
 1473              	 .cfi_offset 7,-8
 1474              	 .cfi_offset 14,-4
 1475 0002 00AF     	 add r7,sp,#0
 1476              	.LCFI39:
 1477              	 .cfi_def_cfa_register 7
 338:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1478              	 .loc 3 338 0
 1479 0004 194B     	 ldr r3,.L48
 1480 0006 0B22     	 mov r2,#11
 1481 0008 1A70     	 strb r2,[r3]
 339:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1482              	 .loc 3 339 0
 1483 000a 194B     	 ldr r3,.L48+4
 1484 000c 4C22     	 mov r2,#76
 1485 000e 1A70     	 strb r2,[r3]
 340:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1486              	 .loc 3 340 0
 1487 0010 174B     	 ldr r3,.L48+4
 1488 0012 4922     	 mov r2,#73
 1489 0014 5A70     	 strb r2,[r3,#1]
 341:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1490              	 .loc 3 341 0
 1491 0016 164B     	 ldr r3,.L48+4
 1492 0018 4E22     	 mov r2,#78
 1493 001a 9A70     	 strb r2,[r3,#2]
 342:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1494              	 .loc 3 342 0
 1495 001c 154B     	 ldr r3,.L48+8
 1496 001e 1A78     	 ldrb r2,[r3]
 1497 0020 134B     	 ldr r3,.L48+4
 1498 0022 DA70     	 strb r2,[r3,#3]
 343:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1499              	 .loc 3 343 0
 1500 0024 114B     	 ldr r3,.L48
 1501 0026 1A78     	 ldrb r2,[r3]
 1502 0028 114B     	 ldr r3,.L48+4
 1503 002a 1A71     	 strb r2,[r3,#4]
 344:../samuel/samuel_io.c ****  	 new_data[5]=command_Bright_Color_Back;
 1504              	 .loc 3 344 0
 1505 002c 104B     	 ldr r3,.L48+4
 1506 002e 6822     	 mov r2,#104
 1507 0030 5A71     	 strb r2,[r3,#5]
 345:../samuel/samuel_io.c ****   	 new_data[6]= 	Brightness_Gen  / 256; //highbyte
 1508              	 .loc 3 345 0
 1509 0032 114B     	 ldr r3,.L48+12
 1510 0034 1B88     	 ldrh r3,[r3]
 1511 0036 1B0A     	 lsr r3,r3,#8
 1512 0038 9BB2     	 uxth r3,r3
 1513 003a DAB2     	 uxtb r2,r3
 1514 003c 0C4B     	 ldr r3,.L48+4
 1515 003e 9A71     	 strb r2,[r3,#6]
 346:../samuel/samuel_io.c ****   	 new_data[7]= 	Brightness_Gen  & 0xff; //lowbyte
 1516              	 .loc 3 346 0
 1517 0040 0D4B     	 ldr r3,.L48+12
 1518 0042 1B88     	 ldrh r3,[r3]
 1519 0044 DAB2     	 uxtb r2,r3
 1520 0046 0A4B     	 ldr r3,.L48+4
 1521 0048 DA71     	 strb r2,[r3,#7]
 347:../samuel/samuel_io.c ****   	 new_data[8]= 	ColorQuot_Gen / 256; //highbyte
 1522              	 .loc 3 347 0
 1523 004a 0C4B     	 ldr r3,.L48+16
 1524 004c 1B88     	 ldrh r3,[r3]
 1525 004e 1B0A     	 lsr r3,r3,#8
 1526 0050 9BB2     	 uxth r3,r3
 1527 0052 DAB2     	 uxtb r2,r3
 1528 0054 064B     	 ldr r3,.L48+4
 1529 0056 1A72     	 strb r2,[r3,#8]
 348:../samuel/samuel_io.c ****   	 new_data[9]= 	ColorQuot_Gen  & 0xff; //lowbyte
 1530              	 .loc 3 348 0
 1531 0058 084B     	 ldr r3,.L48+16
 1532 005a 1B88     	 ldrh r3,[r3]
 1533 005c DAB2     	 uxtb r2,r3
 1534 005e 044B     	 ldr r3,.L48+4
 1535 0060 5A72     	 strb r2,[r3,#9]
 349:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1536              	 .loc 3 349 0
 1537 0062 034B     	 ldr r3,.L48+4
 1538 0064 FF22     	 mov r2,#255
 1539 0066 9A72     	 strb r2,[r3,#10]
 350:../samuel/samuel_io.c ****   }
 1540              	 .loc 3 350 0
 1541 0068 BD46     	 mov sp,r7
 1542              	 
 1543 006a 80BD     	 pop {r7,pc}
 1544              	.L49:
 1545              	 .align 2
 1546              	.L48:
 1547 006c 00000000 	 .word transmit_buf_size
 1548 0070 00000000 	 .word new_data
 1549 0074 00000000 	 .word node_id
 1550 0078 00000000 	 .word Brightness_Gen
 1551 007c 00000000 	 .word ColorQuot_Gen
 1552              	 .cfi_endproc
 1553              	.LFE303:
 1555              	 .section .text.new_data_Quot_Walk_Back,"ax",%progbits
 1556              	 .align 2
 1557              	 .global new_data_Quot_Walk_Back
 1558              	 .code 16
 1559              	 .thumb_func
 1561              	new_data_Quot_Walk_Back:
 1562              	.LFB304:
 351:../samuel/samuel_io.c ****   //------------------------------------------------------
 352:../samuel/samuel_io.c **** 
 353:../samuel/samuel_io.c ****   void new_data_Quot_Walk_Back(void) // ausgabe über rxd
 354:../samuel/samuel_io.c ****   {
 1563              	 .loc 3 354 0
 1564              	 .cfi_startproc
 1565 0000 80B5     	 push {r7,lr}
 1566              	.LCFI40:
 1567              	 .cfi_def_cfa_offset 8
 1568              	 .cfi_offset 7,-8
 1569              	 .cfi_offset 14,-4
 1570 0002 00AF     	 add r7,sp,#0
 1571              	.LCFI41:
 1572              	 .cfi_def_cfa_register 7
 355:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1573              	 .loc 3 355 0
 1574 0004 194B     	 ldr r3,.L51
 1575 0006 0B22     	 mov r2,#11
 1576 0008 1A70     	 strb r2,[r3]
 356:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1577              	 .loc 3 356 0
 1578 000a 194B     	 ldr r3,.L51+4
 1579 000c 4C22     	 mov r2,#76
 1580 000e 1A70     	 strb r2,[r3]
 357:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1581              	 .loc 3 357 0
 1582 0010 174B     	 ldr r3,.L51+4
 1583 0012 4922     	 mov r2,#73
 1584 0014 5A70     	 strb r2,[r3,#1]
 358:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1585              	 .loc 3 358 0
 1586 0016 164B     	 ldr r3,.L51+4
 1587 0018 4E22     	 mov r2,#78
 1588 001a 9A70     	 strb r2,[r3,#2]
 359:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1589              	 .loc 3 359 0
 1590 001c 154B     	 ldr r3,.L51+8
 1591 001e 1A78     	 ldrb r2,[r3]
 1592 0020 134B     	 ldr r3,.L51+4
 1593 0022 DA70     	 strb r2,[r3,#3]
 360:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1594              	 .loc 3 360 0
 1595 0024 114B     	 ldr r3,.L51
 1596 0026 1A78     	 ldrb r2,[r3]
 1597 0028 114B     	 ldr r3,.L51+4
 1598 002a 1A71     	 strb r2,[r3,#4]
 361:../samuel/samuel_io.c ****  	 new_data[5]=command_Quot_Walk_Back;
 1599              	 .loc 3 361 0
 1600 002c 104B     	 ldr r3,.L51+4
 1601 002e 6922     	 mov r2,#105
 1602 0030 5A71     	 strb r2,[r3,#5]
 362:../samuel/samuel_io.c ****   	 new_data[6]= 	linearwalk_gen  / 256; //highbyte
 1603              	 .loc 3 362 0
 1604 0032 114B     	 ldr r3,.L51+12
 1605 0034 1B88     	 ldrh r3,[r3]
 1606 0036 1B0A     	 lsr r3,r3,#8
 1607 0038 9BB2     	 uxth r3,r3
 1608 003a DAB2     	 uxtb r2,r3
 1609 003c 0C4B     	 ldr r3,.L51+4
 1610 003e 9A71     	 strb r2,[r3,#6]
 363:../samuel/samuel_io.c ****   	 new_data[7]= 	linearwalk_gen  & 0xff; //lowbyte
 1611              	 .loc 3 363 0
 1612 0040 0D4B     	 ldr r3,.L51+12
 1613 0042 1B88     	 ldrh r3,[r3]
 1614 0044 DAB2     	 uxtb r2,r3
 1615 0046 0A4B     	 ldr r3,.L51+4
 1616 0048 DA71     	 strb r2,[r3,#7]
 364:../samuel/samuel_io.c ****   	 new_data[8]= 	Farbe_wwcw_Quot_gen / 256; //highbyte
 1617              	 .loc 3 364 0
 1618 004a 0C4B     	 ldr r3,.L51+16
 1619 004c 1B88     	 ldrh r3,[r3]
 1620 004e 1B0A     	 lsr r3,r3,#8
 1621 0050 9BB2     	 uxth r3,r3
 1622 0052 DAB2     	 uxtb r2,r3
 1623 0054 064B     	 ldr r3,.L51+4
 1624 0056 1A72     	 strb r2,[r3,#8]
 365:../samuel/samuel_io.c ****   	 new_data[9]= 	Farbe_wwcw_Quot_gen  & 0xff; //lowbyte
 1625              	 .loc 3 365 0
 1626 0058 084B     	 ldr r3,.L51+16
 1627 005a 1B88     	 ldrh r3,[r3]
 1628 005c DAB2     	 uxtb r2,r3
 1629 005e 044B     	 ldr r3,.L51+4
 1630 0060 5A72     	 strb r2,[r3,#9]
 366:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1631              	 .loc 3 366 0
 1632 0062 034B     	 ldr r3,.L51+4
 1633 0064 FF22     	 mov r2,#255
 1634 0066 9A72     	 strb r2,[r3,#10]
 367:../samuel/samuel_io.c ****   }
 1635              	 .loc 3 367 0
 1636 0068 BD46     	 mov sp,r7
 1637              	 
 1638 006a 80BD     	 pop {r7,pc}
 1639              	.L52:
 1640              	 .align 2
 1641              	.L51:
 1642 006c 00000000 	 .word transmit_buf_size
 1643 0070 00000000 	 .word new_data
 1644 0074 00000000 	 .word node_id
 1645 0078 00000000 	 .word linearwalk_gen
 1646 007c 00000000 	 .word Farbe_wwcw_Quot_gen
 1647              	 .cfi_endproc
 1648              	.LFE304:
 1650              	 .section .text.new_data_HalloBack,"ax",%progbits
 1651              	 .align 2
 1652              	 .global new_data_HalloBack
 1653              	 .code 16
 1654              	 .thumb_func
 1656              	new_data_HalloBack:
 1657              	.LFB305:
 368:../samuel/samuel_io.c ****  //------------------------------------------
 369:../samuel/samuel_io.c **** 
 370:../samuel/samuel_io.c ****   void new_data_HalloBack(void) // ausgabe über rxd
 371:../samuel/samuel_io.c ****   {
 1658              	 .loc 3 371 0
 1659              	 .cfi_startproc
 1660 0000 80B5     	 push {r7,lr}
 1661              	.LCFI42:
 1662              	 .cfi_def_cfa_offset 8
 1663              	 .cfi_offset 7,-8
 1664              	 .cfi_offset 14,-4
 1665 0002 00AF     	 add r7,sp,#0
 1666              	.LCFI43:
 1667              	 .cfi_def_cfa_register 7
 372:../samuel/samuel_io.c ****  	 transmit_buf_size=11;
 1668              	 .loc 3 372 0
 1669 0004 134B     	 ldr r3,.L54
 1670 0006 0B22     	 mov r2,#11
 1671 0008 1A70     	 strb r2,[r3]
 373:../samuel/samuel_io.c ****  	 new_data[0]=command_code01;
 1672              	 .loc 3 373 0
 1673 000a 134B     	 ldr r3,.L54+4
 1674 000c 4C22     	 mov r2,#76
 1675 000e 1A70     	 strb r2,[r3]
 374:../samuel/samuel_io.c ****  	 new_data[1]=command_code02;
 1676              	 .loc 3 374 0
 1677 0010 114B     	 ldr r3,.L54+4
 1678 0012 4922     	 mov r2,#73
 1679 0014 5A70     	 strb r2,[r3,#1]
 375:../samuel/samuel_io.c ****  	 new_data[2]=command_code03;
 1680              	 .loc 3 375 0
 1681 0016 104B     	 ldr r3,.L54+4
 1682 0018 4E22     	 mov r2,#78
 1683 001a 9A70     	 strb r2,[r3,#2]
 376:../samuel/samuel_io.c ****  	 new_data[3]=node_id;
 1684              	 .loc 3 376 0
 1685 001c 0F4B     	 ldr r3,.L54+8
 1686 001e 1A78     	 ldrb r2,[r3]
 1687 0020 0D4B     	 ldr r3,.L54+4
 1688 0022 DA70     	 strb r2,[r3,#3]
 377:../samuel/samuel_io.c ****  	 new_data[4]=transmit_buf_size;
 1689              	 .loc 3 377 0
 1690 0024 0B4B     	 ldr r3,.L54
 1691 0026 1A78     	 ldrb r2,[r3]
 1692 0028 0B4B     	 ldr r3,.L54+4
 1693 002a 1A71     	 strb r2,[r3,#4]
 378:../samuel/samuel_io.c ****  	 new_data[5]=command_HalloBack;
 1694              	 .loc 3 378 0
 1695 002c 0A4B     	 ldr r3,.L54+4
 1696 002e 6A22     	 mov r2,#106
 1697 0030 5A71     	 strb r2,[r3,#5]
 379:../samuel/samuel_io.c ****  	 new_data[6]='o';
 1698              	 .loc 3 379 0
 1699 0032 094B     	 ldr r3,.L54+4
 1700 0034 6F22     	 mov r2,#111
 1701 0036 9A71     	 strb r2,[r3,#6]
 380:../samuel/samuel_io.c ****  	 new_data[7]='k';
 1702              	 .loc 3 380 0
 1703 0038 074B     	 ldr r3,.L54+4
 1704 003a 6B22     	 mov r2,#107
 1705 003c DA71     	 strb r2,[r3,#7]
 381:../samuel/samuel_io.c ****  	 new_data[8]='o';
 1706              	 .loc 3 381 0
 1707 003e 064B     	 ldr r3,.L54+4
 1708 0040 6F22     	 mov r2,#111
 1709 0042 1A72     	 strb r2,[r3,#8]
 382:../samuel/samuel_io.c ****  	 new_data[9]='k';
 1710              	 .loc 3 382 0
 1711 0044 044B     	 ldr r3,.L54+4
 1712 0046 6B22     	 mov r2,#107
 1713 0048 5A72     	 strb r2,[r3,#9]
 383:../samuel/samuel_io.c ****  	 new_data[10]=command_codeEnd;
 1714              	 .loc 3 383 0
 1715 004a 034B     	 ldr r3,.L54+4
 1716 004c FF22     	 mov r2,#255
 1717 004e 9A72     	 strb r2,[r3,#10]
 384:../samuel/samuel_io.c ****   }
 1718              	 .loc 3 384 0
 1719 0050 BD46     	 mov sp,r7
 1720              	 
 1721 0052 80BD     	 pop {r7,pc}
 1722              	.L55:
 1723              	 .align 2
 1724              	.L54:
 1725 0054 00000000 	 .word transmit_buf_size
 1726 0058 00000000 	 .word new_data
 1727 005c 00000000 	 .word node_id
 1728              	 .cfi_endproc
 1729              	.LFE305:
 1731              	 .section .text.new_data_neuNodeIdBack,"ax",%progbits
 1732              	 .align 2
 1733              	 .global new_data_neuNodeIdBack
 1734              	 .code 16
 1735              	 .thumb_func
 1737              	new_data_neuNodeIdBack:
 1738              	.LFB306:
 385:../samuel/samuel_io.c ****   //------------------------------------------------------
 386:../samuel/samuel_io.c ****    void new_data_neuNodeIdBack(void) // ausgabe über rxd
 387:../samuel/samuel_io.c ****    {
 1739              	 .loc 3 387 0
 1740              	 .cfi_startproc
 1741 0000 80B5     	 push {r7,lr}
 1742              	.LCFI44:
 1743              	 .cfi_def_cfa_offset 8
 1744              	 .cfi_offset 7,-8
 1745              	 .cfi_offset 14,-4
 1746 0002 00AF     	 add r7,sp,#0
 1747              	.LCFI45:
 1748              	 .cfi_def_cfa_register 7
 388:../samuel/samuel_io.c ****   	 transmit_buf_size=12;
 1749              	 .loc 3 388 0
 1750 0004 1B4B     	 ldr r3,.L57
 1751 0006 0C22     	 mov r2,#12
 1752 0008 1A70     	 strb r2,[r3]
 389:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1753              	 .loc 3 389 0
 1754 000a 1B4B     	 ldr r3,.L57+4
 1755 000c 4C22     	 mov r2,#76
 1756 000e 1A70     	 strb r2,[r3]
 390:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1757              	 .loc 3 390 0
 1758 0010 194B     	 ldr r3,.L57+4
 1759 0012 4922     	 mov r2,#73
 1760 0014 5A70     	 strb r2,[r3,#1]
 391:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1761              	 .loc 3 391 0
 1762 0016 184B     	 ldr r3,.L57+4
 1763 0018 4E22     	 mov r2,#78
 1764 001a 9A70     	 strb r2,[r3,#2]
 392:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1765              	 .loc 3 392 0
 1766 001c 174B     	 ldr r3,.L57+8
 1767 001e 1A78     	 ldrb r2,[r3]
 1768 0020 154B     	 ldr r3,.L57+4
 1769 0022 DA70     	 strb r2,[r3,#3]
 393:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1770              	 .loc 3 393 0
 1771 0024 134B     	 ldr r3,.L57
 1772 0026 1A78     	 ldrb r2,[r3]
 1773 0028 134B     	 ldr r3,.L57+4
 1774 002a 1A71     	 strb r2,[r3,#4]
 394:../samuel/samuel_io.c ****   	 new_data[5]=command_neuNodeIdBack;
 1775              	 .loc 3 394 0
 1776 002c 124B     	 ldr r3,.L57+4
 1777 002e 6B22     	 mov r2,#107
 1778 0030 5A71     	 strb r2,[r3,#5]
 395:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_neu; //highbyte
 1779              	 .loc 3 395 0
 1780 0032 134B     	 ldr r3,.L57+12
 1781 0034 1A78     	 ldrb r2,[r3]
 1782 0036 104B     	 ldr r3,.L57+4
 1783 0038 9A71     	 strb r2,[r3,#6]
 396:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  / 0x100; //highbyte
 1784              	 .loc 3 396 0
 1785 003a 124B     	 ldr r3,.L57+16
 1786 003c 1B88     	 ldrh r3,[r3]
 1787 003e 1B0A     	 lsr r3,r3,#8
 1788 0040 9BB2     	 uxth r3,r3
 1789 0042 DAB2     	 uxtb r2,r3
 1790 0044 0C4B     	 ldr r3,.L57+4
 1791 0046 DA71     	 strb r2,[r3,#7]
 397:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  & 0xff; //lowbyte
 1792              	 .loc 3 397 0
 1793 0048 0E4B     	 ldr r3,.L57+16
 1794 004a 1B88     	 ldrh r3,[r3]
 1795 004c DAB2     	 uxtb r2,r3
 1796 004e 0A4B     	 ldr r3,.L57+4
 1797 0050 1A72     	 strb r2,[r3,#8]
 398:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  / 0x100; //highbyte
 1798              	 .loc 3 398 0
 1799 0052 0D4B     	 ldr r3,.L57+20
 1800 0054 1B88     	 ldrh r3,[r3]
 1801 0056 1B0A     	 lsr r3,r3,#8
 1802 0058 9BB2     	 uxth r3,r3
 1803 005a DAB2     	 uxtb r2,r3
 1804 005c 064B     	 ldr r3,.L57+4
 1805 005e 5A72     	 strb r2,[r3,#9]
 399:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  & 0xff; //lowbyte
 1806              	 .loc 3 399 0
 1807 0060 094B     	 ldr r3,.L57+20
 1808 0062 1B88     	 ldrh r3,[r3]
 1809 0064 DAB2     	 uxtb r2,r3
 1810 0066 044B     	 ldr r3,.L57+4
 1811 0068 9A72     	 strb r2,[r3,#10]
 400:../samuel/samuel_io.c ****   	 new_data[11]=command_codeEnd;
 1812              	 .loc 3 400 0
 1813 006a 034B     	 ldr r3,.L57+4
 1814 006c FF22     	 mov r2,#255
 1815 006e DA72     	 strb r2,[r3,#11]
 401:../samuel/samuel_io.c ****    }
 1816              	 .loc 3 401 0
 1817 0070 BD46     	 mov sp,r7
 1818              	 
 1819 0072 80BD     	 pop {r7,pc}
 1820              	.L58:
 1821              	 .align 2
 1822              	.L57:
 1823 0074 00000000 	 .word transmit_buf_size
 1824 0078 00000000 	 .word new_data
 1825 007c 00000000 	 .word node_id
 1826 0080 00000000 	 .word node_id_neu
 1827 0084 00000000 	 .word Ser_NrH
 1828 0088 00000000 	 .word Ser_NrL
 1829              	 .cfi_endproc
 1830              	.LFE306:
 1832              	 .section .text.new_data_neuSerNrBack,"ax",%progbits
 1833              	 .align 2
 1834              	 .global new_data_neuSerNrBack
 1835              	 .code 16
 1836              	 .thumb_func
 1838              	new_data_neuSerNrBack:
 1839              	.LFB307:
 402:../samuel/samuel_io.c ****    //------------------------------------------------------
 403:../samuel/samuel_io.c **** 
 404:../samuel/samuel_io.c ****    void new_data_neuSerNrBack(void) // ausgabe über rxd
 405:../samuel/samuel_io.c ****    {
 1840              	 .loc 3 405 0
 1841              	 .cfi_startproc
 1842 0000 80B5     	 push {r7,lr}
 1843              	.LCFI46:
 1844              	 .cfi_def_cfa_offset 8
 1845              	 .cfi_offset 7,-8
 1846              	 .cfi_offset 14,-4
 1847 0002 00AF     	 add r7,sp,#0
 1848              	.LCFI47:
 1849              	 .cfi_def_cfa_register 7
 406:../samuel/samuel_io.c ****   	 transmit_buf_size=15;
 1850              	 .loc 3 406 0
 1851 0004 254B     	 ldr r3,.L60
 1852 0006 0F22     	 mov r2,#15
 1853 0008 1A70     	 strb r2,[r3]
 407:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1854              	 .loc 3 407 0
 1855 000a 254B     	 ldr r3,.L60+4
 1856 000c 4C22     	 mov r2,#76
 1857 000e 1A70     	 strb r2,[r3]
 408:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1858              	 .loc 3 408 0
 1859 0010 234B     	 ldr r3,.L60+4
 1860 0012 4922     	 mov r2,#73
 1861 0014 5A70     	 strb r2,[r3,#1]
 409:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1862              	 .loc 3 409 0
 1863 0016 224B     	 ldr r3,.L60+4
 1864 0018 4E22     	 mov r2,#78
 1865 001a 9A70     	 strb r2,[r3,#2]
 410:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1866              	 .loc 3 410 0
 1867 001c 214B     	 ldr r3,.L60+8
 1868 001e 1A78     	 ldrb r2,[r3]
 1869 0020 1F4B     	 ldr r3,.L60+4
 1870 0022 DA70     	 strb r2,[r3,#3]
 411:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1871              	 .loc 3 411 0
 1872 0024 1D4B     	 ldr r3,.L60
 1873 0026 1A78     	 ldrb r2,[r3]
 1874 0028 1D4B     	 ldr r3,.L60+4
 1875 002a 1A71     	 strb r2,[r3,#4]
 412:../samuel/samuel_io.c ****   	 new_data[5]=command_neuSerNrBack;
 1876              	 .loc 3 412 0
 1877 002c 1C4B     	 ldr r3,.L60+4
 1878 002e 6C22     	 mov r2,#108
 1879 0030 5A71     	 strb r2,[r3,#5]
 413:../samuel/samuel_io.c ****    	 new_data[6]= 	neu_Ser_NrH  / 0x100; //highbyte
 1880              	 .loc 3 413 0
 1881 0032 1D4B     	 ldr r3,.L60+12
 1882 0034 1B88     	 ldrh r3,[r3]
 1883 0036 1B0A     	 lsr r3,r3,#8
 1884 0038 9BB2     	 uxth r3,r3
 1885 003a DAB2     	 uxtb r2,r3
 1886 003c 184B     	 ldr r3,.L60+4
 1887 003e 9A71     	 strb r2,[r3,#6]
 414:../samuel/samuel_io.c ****    	 new_data[7]= 	neu_Ser_NrH  & 0xff; //highbyte
 1888              	 .loc 3 414 0
 1889 0040 194B     	 ldr r3,.L60+12
 1890 0042 1B88     	 ldrh r3,[r3]
 1891 0044 DAB2     	 uxtb r2,r3
 1892 0046 164B     	 ldr r3,.L60+4
 1893 0048 DA71     	 strb r2,[r3,#7]
 415:../samuel/samuel_io.c ****    	 new_data[8]= 	neu_Ser_NrL  / 0x100; //highbyte
 1894              	 .loc 3 415 0
 1895 004a 184B     	 ldr r3,.L60+16
 1896 004c 1B88     	 ldrh r3,[r3]
 1897 004e 1B0A     	 lsr r3,r3,#8
 1898 0050 9BB2     	 uxth r3,r3
 1899 0052 DAB2     	 uxtb r2,r3
 1900 0054 124B     	 ldr r3,.L60+4
 1901 0056 1A72     	 strb r2,[r3,#8]
 416:../samuel/samuel_io.c ****    	 new_data[9]= 	neu_Ser_NrL  & 0xff; //lowbyte
 1902              	 .loc 3 416 0
 1903 0058 144B     	 ldr r3,.L60+16
 1904 005a 1B88     	 ldrh r3,[r3]
 1905 005c DAB2     	 uxtb r2,r3
 1906 005e 104B     	 ldr r3,.L60+4
 1907 0060 5A72     	 strb r2,[r3,#9]
 417:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrH  / 0x100; //highbyte
 1908              	 .loc 3 417 0
 1909 0062 134B     	 ldr r3,.L60+20
 1910 0064 1B88     	 ldrh r3,[r3]
 1911 0066 1B0A     	 lsr r3,r3,#8
 1912 0068 9BB2     	 uxth r3,r3
 1913 006a DAB2     	 uxtb r2,r3
 1914 006c 0C4B     	 ldr r3,.L60+4
 1915 006e 9A72     	 strb r2,[r3,#10]
 418:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrH  & 0xff; //highbyte
 1916              	 .loc 3 418 0
 1917 0070 0F4B     	 ldr r3,.L60+20
 1918 0072 1B88     	 ldrh r3,[r3]
 1919 0074 DAB2     	 uxtb r2,r3
 1920 0076 0A4B     	 ldr r3,.L60+4
 1921 0078 DA72     	 strb r2,[r3,#11]
 419:../samuel/samuel_io.c ****    	 new_data[12]= 	Ser_NrL  / 0x100; //highbyte
 1922              	 .loc 3 419 0
 1923 007a 0E4B     	 ldr r3,.L60+24
 1924 007c 1B88     	 ldrh r3,[r3]
 1925 007e 1B0A     	 lsr r3,r3,#8
 1926 0080 9BB2     	 uxth r3,r3
 1927 0082 DAB2     	 uxtb r2,r3
 1928 0084 064B     	 ldr r3,.L60+4
 1929 0086 1A73     	 strb r2,[r3,#12]
 420:../samuel/samuel_io.c ****    	 new_data[13]= 	Ser_NrL  & 0xff; //lowbyte
 1930              	 .loc 3 420 0
 1931 0088 0A4B     	 ldr r3,.L60+24
 1932 008a 1B88     	 ldrh r3,[r3]
 1933 008c DAB2     	 uxtb r2,r3
 1934 008e 044B     	 ldr r3,.L60+4
 1935 0090 5A73     	 strb r2,[r3,#13]
 421:../samuel/samuel_io.c ****   	 new_data[14]=command_codeEnd;
 1936              	 .loc 3 421 0
 1937 0092 034B     	 ldr r3,.L60+4
 1938 0094 FF22     	 mov r2,#255
 1939 0096 9A73     	 strb r2,[r3,#14]
 422:../samuel/samuel_io.c ****    }
 1940              	 .loc 3 422 0
 1941 0098 BD46     	 mov sp,r7
 1942              	 
 1943 009a 80BD     	 pop {r7,pc}
 1944              	.L61:
 1945              	 .align 2
 1946              	.L60:
 1947 009c 00000000 	 .word transmit_buf_size
 1948 00a0 00000000 	 .word new_data
 1949 00a4 00000000 	 .word node_id
 1950 00a8 00000000 	 .word neu_Ser_NrH
 1951 00ac 00000000 	 .word neu_Ser_NrL
 1952 00b0 00000000 	 .word Ser_NrH
 1953 00b4 00000000 	 .word Ser_NrL
 1954              	 .cfi_endproc
 1955              	.LFE307:
 1957              	 .section .text.new_data_NodeIdBack,"ax",%progbits
 1958              	 .align 2
 1959              	 .global new_data_NodeIdBack
 1960              	 .code 16
 1961              	 .thumb_func
 1963              	new_data_NodeIdBack:
 1964              	.LFB308:
 423:../samuel/samuel_io.c ****    //------------------------------------------------------
 424:../samuel/samuel_io.c **** 
 425:../samuel/samuel_io.c ****    void new_data_NodeIdBack(void) // ausgabe über rxd
 426:../samuel/samuel_io.c ****    {
 1965              	 .loc 3 426 0
 1966              	 .cfi_startproc
 1967 0000 80B5     	 push {r7,lr}
 1968              	.LCFI48:
 1969              	 .cfi_def_cfa_offset 8
 1970              	 .cfi_offset 7,-8
 1971              	 .cfi_offset 14,-4
 1972 0002 00AF     	 add r7,sp,#0
 1973              	.LCFI49:
 1974              	 .cfi_def_cfa_register 7
 427:../samuel/samuel_io.c ****   	 transmit_buf_size=13;
 1975              	 .loc 3 427 0
 1976 0004 1D4B     	 ldr r3,.L63
 1977 0006 0D22     	 mov r2,#13
 1978 0008 1A70     	 strb r2,[r3]
 428:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 1979              	 .loc 3 428 0
 1980 000a 1D4B     	 ldr r3,.L63+4
 1981 000c 4C22     	 mov r2,#76
 1982 000e 1A70     	 strb r2,[r3]
 429:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 1983              	 .loc 3 429 0
 1984 0010 1B4B     	 ldr r3,.L63+4
 1985 0012 4922     	 mov r2,#73
 1986 0014 5A70     	 strb r2,[r3,#1]
 430:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 1987              	 .loc 3 430 0
 1988 0016 1A4B     	 ldr r3,.L63+4
 1989 0018 4E22     	 mov r2,#78
 1990 001a 9A70     	 strb r2,[r3,#2]
 431:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 1991              	 .loc 3 431 0
 1992 001c 194B     	 ldr r3,.L63+8
 1993 001e 1A78     	 ldrb r2,[r3]
 1994 0020 174B     	 ldr r3,.L63+4
 1995 0022 DA70     	 strb r2,[r3,#3]
 432:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 1996              	 .loc 3 432 0
 1997 0024 154B     	 ldr r3,.L63
 1998 0026 1A78     	 ldrb r2,[r3]
 1999 0028 154B     	 ldr r3,.L63+4
 2000 002a 1A71     	 strb r2,[r3,#4]
 433:../samuel/samuel_io.c ****   	 new_data[5]=command_NodeIdBack;
 2001              	 .loc 3 433 0
 2002 002c 144B     	 ldr r3,.L63+4
 2003 002e 6D22     	 mov r2,#109
 2004 0030 5A71     	 strb r2,[r3,#5]
 434:../samuel/samuel_io.c ****    	 new_data[6]= 	node_id_alt ; // alte node_id_eeprom
 2005              	 .loc 3 434 0
 2006 0032 154B     	 ldr r3,.L63+12
 2007 0034 1A78     	 ldrb r2,[r3]
 2008 0036 124B     	 ldr r3,.L63+4
 2009 0038 9A71     	 strb r2,[r3,#6]
 435:../samuel/samuel_io.c ****    	 new_data[7]= 	node_id; // node_id_eeprom
 2010              	 .loc 3 435 0
 2011 003a 124B     	 ldr r3,.L63+8
 2012 003c 1A78     	 ldrb r2,[r3]
 2013 003e 104B     	 ldr r3,.L63+4
 2014 0040 DA71     	 strb r2,[r3,#7]
 436:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrH  / 0x100; //highbyte
 2015              	 .loc 3 436 0
 2016 0042 124B     	 ldr r3,.L63+16
 2017 0044 1B88     	 ldrh r3,[r3]
 2018 0046 1B0A     	 lsr r3,r3,#8
 2019 0048 9BB2     	 uxth r3,r3
 2020 004a DAB2     	 uxtb r2,r3
 2021 004c 0C4B     	 ldr r3,.L63+4
 2022 004e 1A72     	 strb r2,[r3,#8]
 437:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrH  & 0xff; //highbyte
 2023              	 .loc 3 437 0
 2024 0050 0E4B     	 ldr r3,.L63+16
 2025 0052 1B88     	 ldrh r3,[r3]
 2026 0054 DAB2     	 uxtb r2,r3
 2027 0056 0A4B     	 ldr r3,.L63+4
 2028 0058 5A72     	 strb r2,[r3,#9]
 438:../samuel/samuel_io.c ****    	 new_data[10]= 	Ser_NrL  / 0x100; //highbyte
 2029              	 .loc 3 438 0
 2030 005a 0D4B     	 ldr r3,.L63+20
 2031 005c 1B88     	 ldrh r3,[r3]
 2032 005e 1B0A     	 lsr r3,r3,#8
 2033 0060 9BB2     	 uxth r3,r3
 2034 0062 DAB2     	 uxtb r2,r3
 2035 0064 064B     	 ldr r3,.L63+4
 2036 0066 9A72     	 strb r2,[r3,#10]
 439:../samuel/samuel_io.c ****    	 new_data[11]= 	Ser_NrL  & 0xff; //lowbyte
 2037              	 .loc 3 439 0
 2038 0068 094B     	 ldr r3,.L63+20
 2039 006a 1B88     	 ldrh r3,[r3]
 2040 006c DAB2     	 uxtb r2,r3
 2041 006e 044B     	 ldr r3,.L63+4
 2042 0070 DA72     	 strb r2,[r3,#11]
 440:../samuel/samuel_io.c ****   	 new_data[12]=command_codeEnd;
 2043              	 .loc 3 440 0
 2044 0072 034B     	 ldr r3,.L63+4
 2045 0074 FF22     	 mov r2,#255
 2046 0076 1A73     	 strb r2,[r3,#12]
 441:../samuel/samuel_io.c ****    }
 2047              	 .loc 3 441 0
 2048 0078 BD46     	 mov sp,r7
 2049              	 
 2050 007a 80BD     	 pop {r7,pc}
 2051              	.L64:
 2052              	 .align 2
 2053              	.L63:
 2054 007c 00000000 	 .word transmit_buf_size
 2055 0080 00000000 	 .word new_data
 2056 0084 00000000 	 .word node_id
 2057 0088 00000000 	 .word node_id_alt
 2058 008c 00000000 	 .word Ser_NrH
 2059 0090 00000000 	 .word Ser_NrL
 2060              	 .cfi_endproc
 2061              	.LFE308:
 2063              	 .section .text.new_data_SerNrBack,"ax",%progbits
 2064              	 .align 2
 2065              	 .global new_data_SerNrBack
 2066              	 .code 16
 2067              	 .thumb_func
 2069              	new_data_SerNrBack:
 2070              	.LFB309:
 442:../samuel/samuel_io.c **** 
 443:../samuel/samuel_io.c ****    //------------------------------------------------------
 444:../samuel/samuel_io.c **** 
 445:../samuel/samuel_io.c ****    void new_data_SerNrBack(void) // ausgabe über rxd
 446:../samuel/samuel_io.c ****    {
 2071              	 .loc 3 446 0
 2072              	 .cfi_startproc
 2073 0000 80B5     	 push {r7,lr}
 2074              	.LCFI50:
 2075              	 .cfi_def_cfa_offset 8
 2076              	 .cfi_offset 7,-8
 2077              	 .cfi_offset 14,-4
 2078 0002 00AF     	 add r7,sp,#0
 2079              	.LCFI51:
 2080              	 .cfi_def_cfa_register 7
 447:../samuel/samuel_io.c ****   	 transmit_buf_size=11;
 2081              	 .loc 3 447 0
 2082 0004 194B     	 ldr r3,.L66
 2083 0006 0B22     	 mov r2,#11
 2084 0008 1A70     	 strb r2,[r3]
 448:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2085              	 .loc 3 448 0
 2086 000a 194B     	 ldr r3,.L66+4
 2087 000c 4C22     	 mov r2,#76
 2088 000e 1A70     	 strb r2,[r3]
 449:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2089              	 .loc 3 449 0
 2090 0010 174B     	 ldr r3,.L66+4
 2091 0012 4922     	 mov r2,#73
 2092 0014 5A70     	 strb r2,[r3,#1]
 450:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2093              	 .loc 3 450 0
 2094 0016 164B     	 ldr r3,.L66+4
 2095 0018 4E22     	 mov r2,#78
 2096 001a 9A70     	 strb r2,[r3,#2]
 451:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2097              	 .loc 3 451 0
 2098 001c 154B     	 ldr r3,.L66+8
 2099 001e 1A78     	 ldrb r2,[r3]
 2100 0020 134B     	 ldr r3,.L66+4
 2101 0022 DA70     	 strb r2,[r3,#3]
 452:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2102              	 .loc 3 452 0
 2103 0024 114B     	 ldr r3,.L66
 2104 0026 1A78     	 ldrb r2,[r3]
 2105 0028 114B     	 ldr r3,.L66+4
 2106 002a 1A71     	 strb r2,[r3,#4]
 453:../samuel/samuel_io.c ****   	 new_data[5]=command_SerNrBack;
 2107              	 .loc 3 453 0
 2108 002c 104B     	 ldr r3,.L66+4
 2109 002e 6E22     	 mov r2,#110
 2110 0030 5A71     	 strb r2,[r3,#5]
 454:../samuel/samuel_io.c ****    	 new_data[6]= 	Ser_NrH  / 0x100; //highbyte
 2111              	 .loc 3 454 0
 2112 0032 114B     	 ldr r3,.L66+12
 2113 0034 1B88     	 ldrh r3,[r3]
 2114 0036 1B0A     	 lsr r3,r3,#8
 2115 0038 9BB2     	 uxth r3,r3
 2116 003a DAB2     	 uxtb r2,r3
 2117 003c 0C4B     	 ldr r3,.L66+4
 2118 003e 9A71     	 strb r2,[r3,#6]
 455:../samuel/samuel_io.c ****    	 new_data[7]= 	Ser_NrH  & 0xff; //lowbyte
 2119              	 .loc 3 455 0
 2120 0040 0D4B     	 ldr r3,.L66+12
 2121 0042 1B88     	 ldrh r3,[r3]
 2122 0044 DAB2     	 uxtb r2,r3
 2123 0046 0A4B     	 ldr r3,.L66+4
 2124 0048 DA71     	 strb r2,[r3,#7]
 456:../samuel/samuel_io.c ****    	 new_data[8]= 	Ser_NrL  / 0x100; //highbyte
 2125              	 .loc 3 456 0
 2126 004a 0C4B     	 ldr r3,.L66+16
 2127 004c 1B88     	 ldrh r3,[r3]
 2128 004e 1B0A     	 lsr r3,r3,#8
 2129 0050 9BB2     	 uxth r3,r3
 2130 0052 DAB2     	 uxtb r2,r3
 2131 0054 064B     	 ldr r3,.L66+4
 2132 0056 1A72     	 strb r2,[r3,#8]
 457:../samuel/samuel_io.c ****    	 new_data[9]= 	Ser_NrL  & 0xff; //lowbyte
 2133              	 .loc 3 457 0
 2134 0058 084B     	 ldr r3,.L66+16
 2135 005a 1B88     	 ldrh r3,[r3]
 2136 005c DAB2     	 uxtb r2,r3
 2137 005e 044B     	 ldr r3,.L66+4
 2138 0060 5A72     	 strb r2,[r3,#9]
 458:../samuel/samuel_io.c ****   	 new_data[10]=command_codeEnd;
 2139              	 .loc 3 458 0
 2140 0062 034B     	 ldr r3,.L66+4
 2141 0064 FF22     	 mov r2,#255
 2142 0066 9A72     	 strb r2,[r3,#10]
 459:../samuel/samuel_io.c ****    }
 2143              	 .loc 3 459 0
 2144 0068 BD46     	 mov sp,r7
 2145              	 
 2146 006a 80BD     	 pop {r7,pc}
 2147              	.L67:
 2148              	 .align 2
 2149              	.L66:
 2150 006c 00000000 	 .word transmit_buf_size
 2151 0070 00000000 	 .word new_data
 2152 0074 00000000 	 .word node_id
 2153 0078 00000000 	 .word Ser_NrH
 2154 007c 00000000 	 .word Ser_NrL
 2155              	 .cfi_endproc
 2156              	.LFE309:
 2158              	 .section .text.new_data_readbuff2Back,"ax",%progbits
 2159              	 .align 2
 2160              	 .global new_data_readbuff2Back
 2161              	 .code 16
 2162              	 .thumb_func
 2164              	new_data_readbuff2Back:
 2165              	.LFB310:
 460:../samuel/samuel_io.c ****    //-------------------------------------
 461:../samuel/samuel_io.c ****    void new_data_readbuff2Back(void) // ausgabe über rxd
 462:../samuel/samuel_io.c ****    {
 2166              	 .loc 3 462 0
 2167              	 .cfi_startproc
 2168 0000 80B5     	 push {r7,lr}
 2169              	.LCFI52:
 2170              	 .cfi_def_cfa_offset 8
 2171              	 .cfi_offset 7,-8
 2172              	 .cfi_offset 14,-4
 2173 0002 00AF     	 add r7,sp,#0
 2174              	.LCFI53:
 2175              	 .cfi_def_cfa_register 7
 463:../samuel/samuel_io.c ****   	 transmit_buf_size=24;
 2176              	 .loc 3 463 0
 2177 0004 2F4B     	 ldr r3,.L69
 2178 0006 1822     	 mov r2,#24
 2179 0008 1A70     	 strb r2,[r3]
 464:../samuel/samuel_io.c ****   	 new_data[0]=command_code01;
 2180              	 .loc 3 464 0
 2181 000a 2F4B     	 ldr r3,.L69+4
 2182 000c 4C22     	 mov r2,#76
 2183 000e 1A70     	 strb r2,[r3]
 465:../samuel/samuel_io.c ****   	 new_data[1]=command_code02;
 2184              	 .loc 3 465 0
 2185 0010 2D4B     	 ldr r3,.L69+4
 2186 0012 4922     	 mov r2,#73
 2187 0014 5A70     	 strb r2,[r3,#1]
 466:../samuel/samuel_io.c ****   	 new_data[2]=command_code03;
 2188              	 .loc 3 466 0
 2189 0016 2C4B     	 ldr r3,.L69+4
 2190 0018 4E22     	 mov r2,#78
 2191 001a 9A70     	 strb r2,[r3,#2]
 467:../samuel/samuel_io.c ****   	 new_data[3]=node_id;
 2192              	 .loc 3 467 0
 2193 001c 2B4B     	 ldr r3,.L69+8
 2194 001e 1A78     	 ldrb r2,[r3]
 2195 0020 294B     	 ldr r3,.L69+4
 2196 0022 DA70     	 strb r2,[r3,#3]
 468:../samuel/samuel_io.c ****   	 new_data[4]=transmit_buf_size;
 2197              	 .loc 3 468 0
 2198 0024 274B     	 ldr r3,.L69
 2199 0026 1A78     	 ldrb r2,[r3]
 2200 0028 274B     	 ldr r3,.L69+4
 2201 002a 1A71     	 strb r2,[r3,#4]
 469:../samuel/samuel_io.c ****   	 new_data[5]=command_readbuff2Back;
 2202              	 .loc 3 469 0
 2203 002c 264B     	 ldr r3,.L69+4
 2204 002e 7022     	 mov r2,#112
 2205 0030 5A71     	 strb r2,[r3,#5]
 470:../samuel/samuel_io.c ****   	 new_data[6]=0; // buffertyp
 2206              	 .loc 3 470 0
 2207 0032 254B     	 ldr r3,.L69+4
 2208 0034 0022     	 mov r2,#0
 2209 0036 9A71     	 strb r2,[r3,#6]
 471:../samuel/samuel_io.c **** 								 new_data[7]=ReadBuffer2[0];
 2210              	 .loc 3 471 0
 2211 0038 254B     	 ldr r3,.L69+12
 2212 003a 1A78     	 ldrb r2,[r3]
 2213 003c 224B     	 ldr r3,.L69+4
 2214 003e DA71     	 strb r2,[r3,#7]
 472:../samuel/samuel_io.c **** 								 new_data[8]=ReadBuffer2[1];
 2215              	 .loc 3 472 0
 2216 0040 234B     	 ldr r3,.L69+12
 2217 0042 5A78     	 ldrb r2,[r3,#1]
 2218 0044 204B     	 ldr r3,.L69+4
 2219 0046 1A72     	 strb r2,[r3,#8]
 473:../samuel/samuel_io.c **** 								 new_data[9]=ReadBuffer2[2];
 2220              	 .loc 3 473 0
 2221 0048 214B     	 ldr r3,.L69+12
 2222 004a 9A78     	 ldrb r2,[r3,#2]
 2223 004c 1E4B     	 ldr r3,.L69+4
 2224 004e 5A72     	 strb r2,[r3,#9]
 474:../samuel/samuel_io.c **** 								 new_data[10]=ReadBuffer2[3];
 2225              	 .loc 3 474 0
 2226 0050 1F4B     	 ldr r3,.L69+12
 2227 0052 DA78     	 ldrb r2,[r3,#3]
 2228 0054 1C4B     	 ldr r3,.L69+4
 2229 0056 9A72     	 strb r2,[r3,#10]
 475:../samuel/samuel_io.c **** 								 new_data[11]=ReadBuffer2[4];
 2230              	 .loc 3 475 0
 2231 0058 1D4B     	 ldr r3,.L69+12
 2232 005a 1A79     	 ldrb r2,[r3,#4]
 2233 005c 1A4B     	 ldr r3,.L69+4
 2234 005e DA72     	 strb r2,[r3,#11]
 476:../samuel/samuel_io.c **** 								 new_data[12]=ReadBuffer2[5];
 2235              	 .loc 3 476 0
 2236 0060 1B4B     	 ldr r3,.L69+12
 2237 0062 5A79     	 ldrb r2,[r3,#5]
 2238 0064 184B     	 ldr r3,.L69+4
 2239 0066 1A73     	 strb r2,[r3,#12]
 477:../samuel/samuel_io.c **** 								 new_data[13]=ReadBuffer2[6];
 2240              	 .loc 3 477 0
 2241 0068 194B     	 ldr r3,.L69+12
 2242 006a 9A79     	 ldrb r2,[r3,#6]
 2243 006c 164B     	 ldr r3,.L69+4
 2244 006e 5A73     	 strb r2,[r3,#13]
 478:../samuel/samuel_io.c **** 								 new_data[14]=ReadBuffer2[7];
 2245              	 .loc 3 478 0
 2246 0070 174B     	 ldr r3,.L69+12
 2247 0072 DA79     	 ldrb r2,[r3,#7]
 2248 0074 144B     	 ldr r3,.L69+4
 2249 0076 9A73     	 strb r2,[r3,#14]
 479:../samuel/samuel_io.c **** 								 new_data[15]=ReadBuffer2[8];
 2250              	 .loc 3 479 0
 2251 0078 154B     	 ldr r3,.L69+12
 2252 007a 1A7A     	 ldrb r2,[r3,#8]
 2253 007c 124B     	 ldr r3,.L69+4
 2254 007e DA73     	 strb r2,[r3,#15]
 480:../samuel/samuel_io.c **** 								 new_data[16]=ReadBuffer2[9];
 2255              	 .loc 3 480 0
 2256 0080 134B     	 ldr r3,.L69+12
 2257 0082 5A7A     	 ldrb r2,[r3,#9]
 2258 0084 104B     	 ldr r3,.L69+4
 2259 0086 1A74     	 strb r2,[r3,#16]
 481:../samuel/samuel_io.c **** 								 new_data[17]=ReadBuffer2[10];
 2260              	 .loc 3 481 0
 2261 0088 114B     	 ldr r3,.L69+12
 2262 008a 9A7A     	 ldrb r2,[r3,#10]
 2263 008c 0E4B     	 ldr r3,.L69+4
 2264 008e 5A74     	 strb r2,[r3,#17]
 482:../samuel/samuel_io.c **** 								 new_data[18]=ReadBuffer2[11];
 2265              	 .loc 3 482 0
 2266 0090 0F4B     	 ldr r3,.L69+12
 2267 0092 DA7A     	 ldrb r2,[r3,#11]
 2268 0094 0C4B     	 ldr r3,.L69+4
 2269 0096 9A74     	 strb r2,[r3,#18]
 483:../samuel/samuel_io.c **** 								 new_data[19]=ReadBuffer2[12];
 2270              	 .loc 3 483 0
 2271 0098 0D4B     	 ldr r3,.L69+12
 2272 009a 1A7B     	 ldrb r2,[r3,#12]
 2273 009c 0A4B     	 ldr r3,.L69+4
 2274 009e DA74     	 strb r2,[r3,#19]
 484:../samuel/samuel_io.c **** 								 new_data[20]=ReadBuffer2[13];
 2275              	 .loc 3 484 0
 2276 00a0 0B4B     	 ldr r3,.L69+12
 2277 00a2 5A7B     	 ldrb r2,[r3,#13]
 2278 00a4 084B     	 ldr r3,.L69+4
 2279 00a6 1A75     	 strb r2,[r3,#20]
 485:../samuel/samuel_io.c **** 								 new_data[21]=ReadBuffer2[14];
 2280              	 .loc 3 485 0
 2281 00a8 094B     	 ldr r3,.L69+12
 2282 00aa 9A7B     	 ldrb r2,[r3,#14]
 2283 00ac 064B     	 ldr r3,.L69+4
 2284 00ae 5A75     	 strb r2,[r3,#21]
 486:../samuel/samuel_io.c **** 								 new_data[22]=ReadBuffer2[15];
 2285              	 .loc 3 486 0
 2286 00b0 074B     	 ldr r3,.L69+12
 2287 00b2 DA7B     	 ldrb r2,[r3,#15]
 2288 00b4 044B     	 ldr r3,.L69+4
 2289 00b6 9A75     	 strb r2,[r3,#22]
 487:../samuel/samuel_io.c **** 
 488:../samuel/samuel_io.c ****   	 new_data[23]=command_codeEnd;
 2290              	 .loc 3 488 0
 2291 00b8 034B     	 ldr r3,.L69+4
 2292 00ba FF22     	 mov r2,#255
 2293 00bc DA75     	 strb r2,[r3,#23]
 489:../samuel/samuel_io.c ****    }
 2294              	 .loc 3 489 0
 2295 00be BD46     	 mov sp,r7
 2296              	 
 2297 00c0 80BD     	 pop {r7,pc}
 2298              	.L70:
 2299 00c2 C046     	 .align 2
 2300              	.L69:
 2301 00c4 00000000 	 .word transmit_buf_size
 2302 00c8 00000000 	 .word new_data
 2303 00cc 00000000 	 .word node_id
 2304 00d0 00000000 	 .word ReadBuffer2
 2305              	 .cfi_endproc
 2306              	.LFE310:
 2308              	 .section .text.clearEpromBuffer,"ax",%progbits
 2309              	 .align 2
 2310              	 .global clearEpromBuffer
 2311              	 .code 16
 2312              	 .thumb_func
 2314              	clearEpromBuffer:
 2315              	.LFB311:
 490:../samuel/samuel_io.c **** 
 491:../samuel/samuel_io.c ****  //------------------------------------------------------
 492:../samuel/samuel_io.c **** 
 493:../samuel/samuel_io.c **** // Eprom speichern###############################################################
 494:../samuel/samuel_io.c ****  //'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''*/
 495:../samuel/samuel_io.c ****  void clearEpromBuffer(void)
 496:../samuel/samuel_io.c ****  {
 2316              	 .loc 3 496 0
 2317              	 .cfi_startproc
 2318 0000 80B5     	 push {r7,lr}
 2319              	.LCFI54:
 2320              	 .cfi_def_cfa_offset 8
 2321              	 .cfi_offset 7,-8
 2322              	 .cfi_offset 14,-4
 2323 0002 00AF     	 add r7,sp,#0
 2324              	.LCFI55:
 2325              	 .cfi_def_cfa_register 7
 497:../samuel/samuel_io.c **** 
 498:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 499:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2326              	 .loc 3 499 0
 2327 0004 1E4B     	 ldr r3,.L78
 2328 0006 0022     	 mov r2,#0
 2329 0008 1A70     	 strb r2,[r3]
 2330 000a 0BE0     	 b .L72
 2331              	.L73:
 500:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2332              	 .loc 3 500 0 discriminator 3
 2333 000c 1C4B     	 ldr r3,.L78
 2334 000e 1B78     	 ldrb r3,[r3]
 2335 0010 1A1C     	 mov r2,r3
 2336 0012 1C4B     	 ldr r3,.L78+4
 2337 0014 0021     	 mov r1,#0
 2338 0016 9954     	 strb r1,[r3,r2]
 499:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2339              	 .loc 3 499 0 discriminator 3
 2340 0018 194B     	 ldr r3,.L78
 2341 001a 1B78     	 ldrb r3,[r3]
 2342 001c 0133     	 add r3,r3,#1
 2343 001e DAB2     	 uxtb r2,r3
 2344 0020 174B     	 ldr r3,.L78
 2345 0022 1A70     	 strb r2,[r3]
 2346              	.L72:
 499:../samuel/samuel_io.c **** 	{  ReadBuffer1[Index] = 0; }
 2347              	 .loc 3 499 0 is_stmt 0 discriminator 1
 2348 0024 164B     	 ldr r3,.L78
 2349 0026 1B78     	 ldrb r3,[r3]
 2350 0028 0F2B     	 cmp r3,#15
 2351 002a EFD9     	 bls .L73
 501:../samuel/samuel_io.c **** 
 502:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 503:../samuel/samuel_io.c **** 	for(Index = 0; Index<16;Index++)
 2352              	 .loc 3 503 0 is_stmt 1
 2353 002c 144B     	 ldr r3,.L78
 2354 002e 0022     	 mov r2,#0
 2355 0030 1A70     	 strb r2,[r3]
 2356 0032 0BE0     	 b .L74
 2357              	.L75:
 504:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2358              	 .loc 3 504 0 discriminator 3
 2359 0034 124B     	 ldr r3,.L78
 2360 0036 1B78     	 ldrb r3,[r3]
 2361 0038 1A1C     	 mov r2,r3
 2362 003a 134B     	 ldr r3,.L78+8
 2363 003c 0021     	 mov r1,#0
 2364 003e 9954     	 strb r1,[r3,r2]
 503:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2365              	 .loc 3 503 0 discriminator 3
 2366 0040 0F4B     	 ldr r3,.L78
 2367 0042 1B78     	 ldrb r3,[r3]
 2368 0044 0133     	 add r3,r3,#1
 2369 0046 DAB2     	 uxtb r2,r3
 2370 0048 0D4B     	 ldr r3,.L78
 2371 004a 1A70     	 strb r2,[r3]
 2372              	.L74:
 503:../samuel/samuel_io.c **** 	{  ReadBuffer2[Index] = 0; }
 2373              	 .loc 3 503 0 is_stmt 0 discriminator 1
 2374 004c 0C4B     	 ldr r3,.L78
 2375 004e 1B78     	 ldrb r3,[r3]
 2376 0050 0F2B     	 cmp r3,#15
 2377 0052 EFD9     	 bls .L75
 505:../samuel/samuel_io.c **** 
 506:../samuel/samuel_io.c **** 	//Clear the Read buffer before accepting the read request
 507:../samuel/samuel_io.c **** 	for(Index = 0; Index<32;Index++)
 2378              	 .loc 3 507 0 is_stmt 1
 2379 0054 0A4B     	 ldr r3,.L78
 2380 0056 0022     	 mov r2,#0
 2381 0058 1A70     	 strb r2,[r3]
 2382 005a 0BE0     	 b .L76
 2383              	.L77:
 508:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2384              	 .loc 3 508 0 discriminator 3
 2385 005c 084B     	 ldr r3,.L78
 2386 005e 1B78     	 ldrb r3,[r3]
 2387 0060 1A1C     	 mov r2,r3
 2388 0062 0A4B     	 ldr r3,.L78+12
 2389 0064 0021     	 mov r1,#0
 2390 0066 9954     	 strb r1,[r3,r2]
 507:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2391              	 .loc 3 507 0 discriminator 3
 2392 0068 054B     	 ldr r3,.L78
 2393 006a 1B78     	 ldrb r3,[r3]
 2394 006c 0133     	 add r3,r3,#1
 2395 006e DAB2     	 uxtb r2,r3
 2396 0070 034B     	 ldr r3,.L78
 2397 0072 1A70     	 strb r2,[r3]
 2398              	.L76:
 507:../samuel/samuel_io.c **** 	{  ReadBuffer3[Index] = 0; }
 2399              	 .loc 3 507 0 is_stmt 0 discriminator 1
 2400 0074 024B     	 ldr r3,.L78
 2401 0076 1B78     	 ldrb r3,[r3]
 2402 0078 1F2B     	 cmp r3,#31
 2403 007a EFD9     	 bls .L77
 509:../samuel/samuel_io.c ****  }
 2404              	 .loc 3 509 0 is_stmt 1
 2405 007c BD46     	 mov sp,r7
 2406              	 
 2407 007e 80BD     	 pop {r7,pc}
 2408              	.L79:
 2409              	 .align 2
 2410              	.L78:
 2411 0080 00000000 	 .word Index
 2412 0084 00000000 	 .word ReadBuffer1
 2413 0088 00000000 	 .word ReadBuffer2
 2414 008c 00000000 	 .word ReadBuffer3
 2415              	 .cfi_endproc
 2416              	.LFE311:
 2418              	 .section .text.fillEpromBuffer,"ax",%progbits
 2419              	 .align 2
 2420              	 .global fillEpromBuffer
 2421              	 .code 16
 2422              	 .thumb_func
 2424              	fillEpromBuffer:
 2425              	.LFB312:
 510:../samuel/samuel_io.c **** 
 511:../samuel/samuel_io.c ****  //---------------------------------
 512:../samuel/samuel_io.c ****  void fillEpromBuffer(void)// Fill the buffer with incremental data from 0 to 100
 513:../samuel/samuel_io.c ****  {
 2426              	 .loc 3 513 0
 2427              	 .cfi_startproc
 2428 0000 80B5     	 push {r7,lr}
 2429              	.LCFI56:
 2430              	 .cfi_def_cfa_offset 8
 2431              	 .cfi_offset 7,-8
 2432              	 .cfi_offset 14,-4
 2433 0002 00AF     	 add r7,sp,#0
 2434              	.LCFI57:
 2435              	 .cfi_def_cfa_register 7
 514:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 515:../samuel/samuel_io.c **** 	for(Index = 0; Index<100;Index++)
 2436              	 .loc 3 515 0
 2437 0004 0B4B     	 ldr r3,.L83
 2438 0006 0022     	 mov r2,#0
 2439 0008 1A70     	 strb r2,[r3]
 2440 000a 0CE0     	 b .L81
 2441              	.L82:
 516:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2442              	 .loc 3 516 0 discriminator 3
 2443 000c 094B     	 ldr r3,.L83
 2444 000e 1B78     	 ldrb r3,[r3]
 2445 0010 1A1C     	 mov r2,r3
 2446 0012 084B     	 ldr r3,.L83
 2447 0014 1978     	 ldrb r1,[r3]
 2448 0016 084B     	 ldr r3,.L83+4
 2449 0018 9954     	 strb r1,[r3,r2]
 515:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2450              	 .loc 3 515 0 discriminator 3
 2451 001a 064B     	 ldr r3,.L83
 2452 001c 1B78     	 ldrb r3,[r3]
 2453 001e 0133     	 add r3,r3,#1
 2454 0020 DAB2     	 uxtb r2,r3
 2455 0022 044B     	 ldr r3,.L83
 2456 0024 1A70     	 strb r2,[r3]
 2457              	.L81:
 515:../samuel/samuel_io.c **** 	{  data_buffer[Index] = Index; }
 2458              	 .loc 3 515 0 is_stmt 0 discriminator 1
 2459 0026 034B     	 ldr r3,.L83
 2460 0028 1B78     	 ldrb r3,[r3]
 2461 002a 632B     	 cmp r3,#99
 2462 002c EED9     	 bls .L82
 517:../samuel/samuel_io.c ****  }
 2463              	 .loc 3 517 0 is_stmt 1
 2464 002e BD46     	 mov sp,r7
 2465              	 
 2466 0030 80BD     	 pop {r7,pc}
 2467              	.L84:
 2468 0032 C046     	 .align 2
 2469              	.L83:
 2470 0034 00000000 	 .word Index
 2471 0038 00000000 	 .word data_buffer
 2472              	 .cfi_endproc
 2473              	.LFE312:
 2475              	 .section .text.fill2EpromBuffer,"ax",%progbits
 2476              	 .align 2
 2477              	 .global fill2EpromBuffer
 2478              	 .code 16
 2479              	 .thumb_func
 2481              	fill2EpromBuffer:
 2482              	.LFB313:
 518:../samuel/samuel_io.c **** 
 519:../samuel/samuel_io.c ****  //---------------------------------
 520:../samuel/samuel_io.c ****  void fill2EpromBuffer(void)  //Refill the data buffer with new values starting from 255 to 155
 521:../samuel/samuel_io.c ****  {
 2483              	 .loc 3 521 0
 2484              	 .cfi_startproc
 2485 0000 80B5     	 push {r7,lr}
 2486              	.LCFI58:
 2487              	 .cfi_def_cfa_offset 8
 2488              	 .cfi_offset 7,-8
 2489              	 .cfi_offset 14,-4
 2490 0002 00AF     	 add r7,sp,#0
 2491              	.LCFI59:
 2492              	 .cfi_def_cfa_register 7
 522:../samuel/samuel_io.c **** 	// Fill the buffer with incremental data from 0 to 100
 523:../samuel/samuel_io.c **** 	 for(Index = 0; Index<100; Index++)
 2493              	 .loc 3 523 0
 2494 0004 0C4B     	 ldr r3,.L88
 2495 0006 0022     	 mov r2,#0
 2496 0008 1A70     	 strb r2,[r3]
 2497 000a 0EE0     	 b .L86
 2498              	.L87:
 524:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2499              	 .loc 3 524 0 discriminator 3
 2500 000c 0A4B     	 ldr r3,.L88
 2501 000e 1B78     	 ldrb r3,[r3]
 2502 0010 1A1C     	 mov r2,r3
 2503 0012 094B     	 ldr r3,.L88
 2504 0014 1B78     	 ldrb r3,[r3]
 2505 0016 DB43     	 mvn r3,r3
 2506 0018 D9B2     	 uxtb r1,r3
 2507 001a 084B     	 ldr r3,.L88+4
 2508 001c 9954     	 strb r1,[r3,r2]
 523:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2509              	 .loc 3 523 0 discriminator 3
 2510 001e 064B     	 ldr r3,.L88
 2511 0020 1B78     	 ldrb r3,[r3]
 2512 0022 0133     	 add r3,r3,#1
 2513 0024 DAB2     	 uxtb r2,r3
 2514 0026 044B     	 ldr r3,.L88
 2515 0028 1A70     	 strb r2,[r3]
 2516              	.L86:
 523:../samuel/samuel_io.c **** 	 {  data_buffer[Index] = (255 - Index); }
 2517              	 .loc 3 523 0 is_stmt 0 discriminator 1
 2518 002a 034B     	 ldr r3,.L88
 2519 002c 1B78     	 ldrb r3,[r3]
 2520 002e 632B     	 cmp r3,#99
 2521 0030 ECD9     	 bls .L87
 525:../samuel/samuel_io.c ****  }
 2522              	 .loc 3 525 0 is_stmt 1
 2523 0032 BD46     	 mov sp,r7
 2524              	 
 2525 0034 80BD     	 pop {r7,pc}
 2526              	.L89:
 2527 0036 C046     	 .align 2
 2528              	.L88:
 2529 0038 00000000 	 .word Index
 2530 003c 00000000 	 .word data_buffer
 2531              	 .cfi_endproc
 2532              	.LFE313:
 2534              	 .section .text.readAllEEprom,"ax",%progbits
 2535              	 .align 2
 2536              	 .global readAllEEprom
 2537              	 .code 16
 2538              	 .thumb_func
 2540              	readAllEEprom:
 2541              	.LFB314:
 526:../samuel/samuel_io.c **** 
 527:../samuel/samuel_io.c **** 
 528:../samuel/samuel_io.c ****  //------------------------------------------------
 529:../samuel/samuel_io.c **** 
 530:../samuel/samuel_io.c **** 
 531:../samuel/samuel_io.c ****  //------------------------------------------------
 532:../samuel/samuel_io.c ****  int readAllEEprom(void)
 533:../samuel/samuel_io.c ****  {
 2542              	 .loc 3 533 0
 2543              	 .cfi_startproc
 2544 0000 80B5     	 push {r7,lr}
 2545              	.LCFI60:
 2546              	 .cfi_def_cfa_offset 8
 2547              	 .cfi_offset 7,-8
 2548              	 .cfi_offset 14,-4
 2549 0002 00AF     	 add r7,sp,#0
 2550              	.LCFI61:
 2551              	 .cfi_def_cfa_register 7
 534:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2552              	 .loc 3 534 0
 2553 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2554 0008 031C     	 mov r3,r0
 2555 000a 1A1C     	 mov r2,r3
 2556 000c 614B     	 ldr r3,.L96
 2557 000e 1A70     	 strb r2,[r3]
 535:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2558              	 .loc 3 535 0
 2559 0010 604B     	 ldr r3,.L96
 2560 0012 1B78     	 ldrb r3,[r3]
 2561 0014 032B     	 cmp r3,#3
 2562 0016 0AD1     	 bne .L91
 536:../samuel/samuel_io.c ****    {
 537:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2563              	 .loc 3 537 0
 2564 0018 5F4B     	 ldr r3,.L96+4
 2565 001a 0120     	 mov r0,#1
 2566 001c 0021     	 mov r1,#0
 2567 001e 1A1C     	 mov r2,r3
 2568 0020 1023     	 mov r3,#16
 2569 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2570 0026 031C     	 mov r3,r0
 2571 0028 1A1C     	 mov r2,r3
 2572 002a 5C4B     	 ldr r3,.L96+8
 2573 002c 1A70     	 strb r2,[r3]
 2574              	.L91:
 538:../samuel/samuel_io.c ****    }
 539:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2575              	 .loc 3 539 0
 2576 002e 5B4B     	 ldr r3,.L96+8
 2577 0030 1B78     	 ldrb r3,[r3]
 2578 0032 002B     	 cmp r3,#0
 2579 0034 14D1     	 bne .L92
 540:../samuel/samuel_io.c ****    {
 541:../samuel/samuel_io.c **** 	   Ser_NrH = ReadBuffer1[1];
 2580              	 .loc 3 541 0
 2581 0036 584B     	 ldr r3,.L96+4
 2582 0038 5B78     	 ldrb r3,[r3,#1]
 2583 003a 9AB2     	 uxth r2,r3
 2584 003c 584B     	 ldr r3,.L96+12
 2585 003e 1A80     	 strh r2,[r3]
 542:../samuel/samuel_io.c **** 	   Ser_NrL = ReadBuffer1[2];
 2586              	 .loc 3 542 0
 2587 0040 554B     	 ldr r3,.L96+4
 2588 0042 9B78     	 ldrb r3,[r3,#2]
 2589 0044 9AB2     	 uxth r2,r3
 2590 0046 574B     	 ldr r3,.L96+16
 2591 0048 1A80     	 strh r2,[r3]
 543:../samuel/samuel_io.c **** 
 544:../samuel/samuel_io.c **** 
 545:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2592              	 .loc 3 545 0
 2593 004a 574B     	 ldr r3,.L96+20
 2594 004c 0220     	 mov r0,#2
 2595 004e 0021     	 mov r1,#0
 2596 0050 1A1C     	 mov r2,r3
 2597 0052 1023     	 mov r3,#16
 2598 0054 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2599 0058 031C     	 mov r3,r0
 2600 005a 1A1C     	 mov r2,r3
 2601 005c 4F4B     	 ldr r3,.L96+8
 2602 005e 1A70     	 strb r2,[r3]
 2603              	.L92:
 546:../samuel/samuel_io.c ****    }
 547:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2604              	 .loc 3 547 0
 2605 0060 4E4B     	 ldr r3,.L96+8
 2606 0062 1B78     	 ldrb r3,[r3]
 2607 0064 002B     	 cmp r3,#0
 2608 0066 1ED1     	 bne .L93
 548:../samuel/samuel_io.c ****    {
 549:../samuel/samuel_io.c **** 	   node_id_alt = ReadBuffer2[1];
 2609              	 .loc 3 549 0
 2610 0068 4F4B     	 ldr r3,.L96+20
 2611 006a 5A78     	 ldrb r2,[r3,#1]
 2612 006c 4F4B     	 ldr r3,.L96+24
 2613 006e 1A70     	 strb r2,[r3]
 550:../samuel/samuel_io.c **** 	   node_id  = ReadBuffer2[2];
 2614              	 .loc 3 550 0
 2615 0070 4D4B     	 ldr r3,.L96+20
 2616 0072 9A78     	 ldrb r2,[r3,#2]
 2617 0074 4E4B     	 ldr r3,.L96+28
 2618 0076 1A70     	 strb r2,[r3]
 551:../samuel/samuel_io.c **** 	   node_id_16bit = ReadBuffer2[3] * 0x100 + ReadBuffer2[4];
 2619              	 .loc 3 551 0
 2620 0078 4B4B     	 ldr r3,.L96+20
 2621 007a DB78     	 ldrb r3,[r3,#3]
 2622 007c 9BB2     	 uxth r3,r3
 2623 007e 1B02     	 lsl r3,r3,#8
 2624 0080 9AB2     	 uxth r2,r3
 2625 0082 494B     	 ldr r3,.L96+20
 2626 0084 1B79     	 ldrb r3,[r3,#4]
 2627 0086 9BB2     	 uxth r3,r3
 2628 0088 D318     	 add r3,r2,r3
 2629 008a 9AB2     	 uxth r2,r3
 2630 008c 494B     	 ldr r3,.L96+32
 2631 008e 1A80     	 strh r2,[r3]
 552:../samuel/samuel_io.c **** 
 553:../samuel/samuel_io.c ****    oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer3,32U);
 2632              	 .loc 3 553 0
 2633 0090 494B     	 ldr r3,.L96+36
 2634 0092 0520     	 mov r0,#5
 2635 0094 0021     	 mov r1,#0
 2636 0096 1A1C     	 mov r2,r3
 2637 0098 2023     	 mov r3,#32
 2638 009a FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2639 009e 031C     	 mov r3,r0
 2640 00a0 1A1C     	 mov r2,r3
 2641 00a2 3E4B     	 ldr r3,.L96+8
 2642 00a4 1A70     	 strb r2,[r3]
 2643              	.L93:
 554:../samuel/samuel_io.c ****    }
 555:../samuel/samuel_io.c ****    if(oper_status == E_EEPROM_XMC1_OPERATION_STATUS_SUCCESS)
 2644              	 .loc 3 555 0
 2645 00a6 3D4B     	 ldr r3,.L96+8
 2646 00a8 1B78     	 ldrb r3,[r3]
 2647 00aa 002B     	 cmp r3,#0
 2648 00ac 67D1     	 bne .L94
 556:../samuel/samuel_io.c ****    {
 557:../samuel/samuel_io.c **** 	   RegOnOff = ReadBuffer3[1];
 2649              	 .loc 3 557 0
 2650 00ae 424B     	 ldr r3,.L96+36
 2651 00b0 5A78     	 ldrb r2,[r3,#1]
 2652 00b2 424B     	 ldr r3,.L96+40
 2653 00b4 1A70     	 strb r2,[r3]
 558:../samuel/samuel_io.c **** 	   RegOnOff2 = ReadBuffer3[2];
 2654              	 .loc 3 558 0
 2655 00b6 404B     	 ldr r3,.L96+36
 2656 00b8 9A78     	 ldrb r2,[r3,#2]
 2657 00ba 414B     	 ldr r3,.L96+44
 2658 00bc 1A70     	 strb r2,[r3]
 559:../samuel/samuel_io.c **** 	   dimAkt_Ww = ReadBuffer3[3] * 0x100 + ReadBuffer3[4];
 2659              	 .loc 3 559 0
 2660 00be 3E4B     	 ldr r3,.L96+36
 2661 00c0 DB78     	 ldrb r3,[r3,#3]
 2662 00c2 9BB2     	 uxth r3,r3
 2663 00c4 1B02     	 lsl r3,r3,#8
 2664 00c6 9AB2     	 uxth r2,r3
 2665 00c8 3B4B     	 ldr r3,.L96+36
 2666 00ca 1B79     	 ldrb r3,[r3,#4]
 2667 00cc 9BB2     	 uxth r3,r3
 2668 00ce D318     	 add r3,r2,r3
 2669 00d0 9AB2     	 uxth r2,r3
 2670 00d2 3C4B     	 ldr r3,.L96+48
 2671 00d4 1A80     	 strh r2,[r3]
 560:../samuel/samuel_io.c **** 	   dimAkt_Cw =  ReadBuffer3[5] * 0x100 + ReadBuffer3[6];
 2672              	 .loc 3 560 0
 2673 00d6 384B     	 ldr r3,.L96+36
 2674 00d8 5B79     	 ldrb r3,[r3,#5]
 2675 00da 9BB2     	 uxth r3,r3
 2676 00dc 1B02     	 lsl r3,r3,#8
 2677 00de 9AB2     	 uxth r2,r3
 2678 00e0 354B     	 ldr r3,.L96+36
 2679 00e2 9B79     	 ldrb r3,[r3,#6]
 2680 00e4 9BB2     	 uxth r3,r3
 2681 00e6 D318     	 add r3,r2,r3
 2682 00e8 9AB2     	 uxth r2,r3
 2683 00ea 374B     	 ldr r3,.L96+52
 2684 00ec 1A80     	 strh r2,[r3]
 561:../samuel/samuel_io.c **** 	   dimOff_Ww = ReadBuffer3[7] * 0x100 + ReadBuffer3[8];
 2685              	 .loc 3 561 0
 2686 00ee 324B     	 ldr r3,.L96+36
 2687 00f0 DB79     	 ldrb r3,[r3,#7]
 2688 00f2 9BB2     	 uxth r3,r3
 2689 00f4 1B02     	 lsl r3,r3,#8
 2690 00f6 9AB2     	 uxth r2,r3
 2691 00f8 2F4B     	 ldr r3,.L96+36
 2692 00fa 1B7A     	 ldrb r3,[r3,#8]
 2693 00fc 9BB2     	 uxth r3,r3
 2694 00fe D318     	 add r3,r2,r3
 2695 0100 9AB2     	 uxth r2,r3
 2696 0102 324B     	 ldr r3,.L96+56
 2697 0104 1A80     	 strh r2,[r3]
 562:../samuel/samuel_io.c **** 	   dimOff_Cw = ReadBuffer3[9] * 0x100 + ReadBuffer3[10];
 2698              	 .loc 3 562 0
 2699 0106 2C4B     	 ldr r3,.L96+36
 2700 0108 5B7A     	 ldrb r3,[r3,#9]
 2701 010a 9BB2     	 uxth r3,r3
 2702 010c 1B02     	 lsl r3,r3,#8
 2703 010e 9AB2     	 uxth r2,r3
 2704 0110 294B     	 ldr r3,.L96+36
 2705 0112 9B7A     	 ldrb r3,[r3,#10]
 2706 0114 9BB2     	 uxth r3,r3
 2707 0116 D318     	 add r3,r2,r3
 2708 0118 9AB2     	 uxth r2,r3
 2709 011a 2D4B     	 ldr r3,.L96+60
 2710 011c 1A80     	 strh r2,[r3]
 563:../samuel/samuel_io.c **** 	   dimNorm1_Ww = ReadBuffer3[11] * 0x100 + ReadBuffer3[12];
 2711              	 .loc 3 563 0
 2712 011e 264B     	 ldr r3,.L96+36
 2713 0120 DB7A     	 ldrb r3,[r3,#11]
 2714 0122 9BB2     	 uxth r3,r3
 2715 0124 1B02     	 lsl r3,r3,#8
 2716 0126 9AB2     	 uxth r2,r3
 2717 0128 234B     	 ldr r3,.L96+36
 2718 012a 1B7B     	 ldrb r3,[r3,#12]
 2719 012c 9BB2     	 uxth r3,r3
 2720 012e D318     	 add r3,r2,r3
 2721 0130 9AB2     	 uxth r2,r3
 2722 0132 284B     	 ldr r3,.L96+64
 2723 0134 1A80     	 strh r2,[r3]
 564:../samuel/samuel_io.c **** 	   dimNorm1_Cw = ReadBuffer3[13] * 0x100 + ReadBuffer3[14];
 2724              	 .loc 3 564 0
 2725 0136 204B     	 ldr r3,.L96+36
 2726 0138 5B7B     	 ldrb r3,[r3,#13]
 2727 013a 9BB2     	 uxth r3,r3
 2728 013c 1B02     	 lsl r3,r3,#8
 2729 013e 9AB2     	 uxth r2,r3
 2730 0140 1D4B     	 ldr r3,.L96+36
 2731 0142 9B7B     	 ldrb r3,[r3,#14]
 2732 0144 9BB2     	 uxth r3,r3
 2733 0146 D318     	 add r3,r2,r3
 2734 0148 9AB2     	 uxth r2,r3
 2735 014a 234B     	 ldr r3,.L96+68
 2736 014c 1A80     	 strh r2,[r3]
 565:../samuel/samuel_io.c **** 	   dimNorm2_Ww = ReadBuffer3[15] * 0x100 + ReadBuffer3[16];
 2737              	 .loc 3 565 0
 2738 014e 1A4B     	 ldr r3,.L96+36
 2739 0150 DB7B     	 ldrb r3,[r3,#15]
 2740 0152 9BB2     	 uxth r3,r3
 2741 0154 1B02     	 lsl r3,r3,#8
 2742 0156 9AB2     	 uxth r2,r3
 2743 0158 174B     	 ldr r3,.L96+36
 2744 015a 1B7C     	 ldrb r3,[r3,#16]
 2745 015c 9BB2     	 uxth r3,r3
 2746 015e D318     	 add r3,r2,r3
 2747 0160 9AB2     	 uxth r2,r3
 2748 0162 1E4B     	 ldr r3,.L96+72
 2749 0164 1A80     	 strh r2,[r3]
 566:../samuel/samuel_io.c **** 	   dimNorm2_Cw = ReadBuffer3[17] * 0x100 + ReadBuffer3[18];
 2750              	 .loc 3 566 0
 2751 0166 144B     	 ldr r3,.L96+36
 2752 0168 5B7C     	 ldrb r3,[r3,#17]
 2753 016a 9BB2     	 uxth r3,r3
 2754 016c 1B02     	 lsl r3,r3,#8
 2755 016e 9AB2     	 uxth r2,r3
 2756 0170 114B     	 ldr r3,.L96+36
 2757 0172 9B7C     	 ldrb r3,[r3,#18]
 2758 0174 9BB2     	 uxth r3,r3
 2759 0176 D318     	 add r3,r2,r3
 2760 0178 9AB2     	 uxth r2,r3
 2761 017a 194B     	 ldr r3,.L96+76
 2762 017c 1A80     	 strh r2,[r3]
 2763              	.L94:
 567:../samuel/samuel_io.c **** 
 568:../samuel/samuel_io.c ****    }
 569:../samuel/samuel_io.c ****    return (EEprom_status+0x10*oper_status);
 2764              	 .loc 3 569 0
 2765 017e 054B     	 ldr r3,.L96
 2766 0180 1B78     	 ldrb r3,[r3]
 2767 0182 1A1C     	 mov r2,r3
 2768 0184 054B     	 ldr r3,.L96+8
 2769 0186 1B78     	 ldrb r3,[r3]
 2770 0188 1B01     	 lsl r3,r3,#4
 2771 018a D318     	 add r3,r2,r3
 570:../samuel/samuel_io.c ****  }
 2772              	 .loc 3 570 0
 2773 018c 181C     	 mov r0,r3
 2774 018e BD46     	 mov sp,r7
 2775              	 
 2776 0190 80BD     	 pop {r7,pc}
 2777              	.L97:
 2778 0192 C046     	 .align 2
 2779              	.L96:
 2780 0194 00000000 	 .word EEprom_status
 2781 0198 00000000 	 .word ReadBuffer1
 2782 019c 00000000 	 .word oper_status
 2783 01a0 00000000 	 .word Ser_NrH
 2784 01a4 00000000 	 .word Ser_NrL
 2785 01a8 00000000 	 .word ReadBuffer2
 2786 01ac 00000000 	 .word node_id_alt
 2787 01b0 00000000 	 .word node_id
 2788 01b4 00000000 	 .word node_id_16bit
 2789 01b8 00000000 	 .word ReadBuffer3
 2790 01bc 00000000 	 .word RegOnOff
 2791 01c0 00000000 	 .word RegOnOff2
 2792 01c4 00000000 	 .word dimAkt_Ww
 2793 01c8 00000000 	 .word dimAkt_Cw
 2794 01cc 00000000 	 .word dimOff_Ww
 2795 01d0 00000000 	 .word dimOff_Cw
 2796 01d4 00000000 	 .word dimNorm1_Ww
 2797 01d8 00000000 	 .word dimNorm1_Cw
 2798 01dc 00000000 	 .word dimNorm2_Ww
 2799 01e0 00000000 	 .word dimNorm2_Cw
 2800              	 .cfi_endproc
 2801              	.LFE314:
 2803              	 .section .text.readSerNrEEprom,"ax",%progbits
 2804              	 .align 2
 2805              	 .global readSerNrEEprom
 2806              	 .code 16
 2807              	 .thumb_func
 2809              	readSerNrEEprom:
 2810              	.LFB315:
 571:../samuel/samuel_io.c ****  //------------------------------------------------
 572:../samuel/samuel_io.c **** 
 573:../samuel/samuel_io.c ****  int readSerNrEEprom(void)
 574:../samuel/samuel_io.c ****  {
 2811              	 .loc 3 574 0
 2812              	 .cfi_startproc
 2813 0000 80B5     	 push {r7,lr}
 2814              	.LCFI62:
 2815              	 .cfi_def_cfa_offset 8
 2816              	 .cfi_offset 7,-8
 2817              	 .cfi_offset 14,-4
 2818 0002 00AF     	 add r7,sp,#0
 2819              	.LCFI63:
 2820              	 .cfi_def_cfa_register 7
 575:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2821              	 .loc 3 575 0
 2822 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2823 0008 031C     	 mov r3,r0
 2824 000a 1A1C     	 mov r2,r3
 2825 000c 0D4B     	 ldr r3,.L101
 2826 000e 1A70     	 strb r2,[r3]
 576:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2827              	 .loc 3 576 0
 2828 0010 0C4B     	 ldr r3,.L101
 2829 0012 1B78     	 ldrb r3,[r3]
 2830 0014 032B     	 cmp r3,#3
 2831 0016 0AD1     	 bne .L99
 577:../samuel/samuel_io.c **** 	 {
 578:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(serial_first_data,0U,ReadBuffer1,16U);
 2832              	 .loc 3 578 0
 2833 0018 0B4B     	 ldr r3,.L101+4
 2834 001a 0120     	 mov r0,#1
 2835 001c 0021     	 mov r1,#0
 2836 001e 1A1C     	 mov r2,r3
 2837 0020 1023     	 mov r3,#16
 2838 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2839 0026 031C     	 mov r3,r0
 2840 0028 1A1C     	 mov r2,r3
 2841 002a 084B     	 ldr r3,.L101+8
 2842 002c 1A70     	 strb r2,[r3]
 2843              	.L99:
 579:../samuel/samuel_io.c ****      }
 580:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);
 2844              	 .loc 3 580 0
 2845 002e 054B     	 ldr r3,.L101
 2846 0030 1B78     	 ldrb r3,[r3]
 2847 0032 1A1C     	 mov r2,r3
 2848 0034 054B     	 ldr r3,.L101+8
 2849 0036 1B78     	 ldrb r3,[r3]
 2850 0038 1B01     	 lsl r3,r3,#4
 2851 003a D318     	 add r3,r2,r3
 581:../samuel/samuel_io.c ****  }
 2852              	 .loc 3 581 0
 2853 003c 181C     	 mov r0,r3
 2854 003e BD46     	 mov sp,r7
 2855              	 
 2856 0040 80BD     	 pop {r7,pc}
 2857              	.L102:
 2858 0042 C046     	 .align 2
 2859              	.L101:
 2860 0044 00000000 	 .word EEprom_status
 2861 0048 00000000 	 .word ReadBuffer1
 2862 004c 00000000 	 .word oper_status
 2863              	 .cfi_endproc
 2864              	.LFE315:
 2866              	 .section .text.readNodeIdEEprom,"ax",%progbits
 2867              	 .align 2
 2868              	 .global readNodeIdEEprom
 2869              	 .code 16
 2870              	 .thumb_func
 2872              	readNodeIdEEprom:
 2873              	.LFB316:
 582:../samuel/samuel_io.c ****  //------------------------------------------------
 583:../samuel/samuel_io.c **** 
 584:../samuel/samuel_io.c ****  int readNodeIdEEprom(void)
 585:../samuel/samuel_io.c ****  {
 2874              	 .loc 3 585 0
 2875              	 .cfi_startproc
 2876 0000 80B5     	 push {r7,lr}
 2877              	.LCFI64:
 2878              	 .cfi_def_cfa_offset 8
 2879              	 .cfi_offset 7,-8
 2880              	 .cfi_offset 14,-4
 2881 0002 00AF     	 add r7,sp,#0
 2882              	.LCFI65:
 2883              	 .cfi_def_cfa_register 7
 586:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2884              	 .loc 3 586 0
 2885 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2886 0008 031C     	 mov r3,r0
 2887 000a 1A1C     	 mov r2,r3
 2888 000c 0D4B     	 ldr r3,.L106
 2889 000e 1A70     	 strb r2,[r3]
 587:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2890              	 .loc 3 587 0
 2891 0010 0C4B     	 ldr r3,.L106
 2892 0012 1B78     	 ldrb r3,[r3]
 2893 0014 032B     	 cmp r3,#3
 2894 0016 0AD1     	 bne .L104
 588:../samuel/samuel_io.c **** 	 {
 589:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(node_data,0U,ReadBuffer2,16U);
 2895              	 .loc 3 589 0
 2896 0018 0B4B     	 ldr r3,.L106+4
 2897 001a 0220     	 mov r0,#2
 2898 001c 0021     	 mov r1,#0
 2899 001e 1A1C     	 mov r2,r3
 2900 0020 1023     	 mov r3,#16
 2901 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2902 0026 031C     	 mov r3,r0
 2903 0028 1A1C     	 mov r2,r3
 2904 002a 084B     	 ldr r3,.L106+8
 2905 002c 1A70     	 strb r2,[r3]
 2906              	.L104:
 590:../samuel/samuel_io.c ****      }
 591:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2907              	 .loc 3 591 0
 2908 002e 054B     	 ldr r3,.L106
 2909 0030 1B78     	 ldrb r3,[r3]
 2910 0032 1A1C     	 mov r2,r3
 2911 0034 054B     	 ldr r3,.L106+8
 2912 0036 1B78     	 ldrb r3,[r3]
 2913 0038 1B01     	 lsl r3,r3,#4
 2914 003a D318     	 add r3,r2,r3
 592:../samuel/samuel_io.c ****  }
 2915              	 .loc 3 592 0
 2916 003c 181C     	 mov r0,r3
 2917 003e BD46     	 mov sp,r7
 2918              	 
 2919 0040 80BD     	 pop {r7,pc}
 2920              	.L107:
 2921 0042 C046     	 .align 2
 2922              	.L106:
 2923 0044 00000000 	 .word EEprom_status
 2924 0048 00000000 	 .word ReadBuffer2
 2925 004c 00000000 	 .word oper_status
 2926              	 .cfi_endproc
 2927              	.LFE316:
 2929              	 .section .text.read_akt_light_EEprom,"ax",%progbits
 2930              	 .align 2
 2931              	 .global read_akt_light_EEprom
 2932              	 .code 16
 2933              	 .thumb_func
 2935              	read_akt_light_EEprom:
 2936              	.LFB317:
 593:../samuel/samuel_io.c **** 
 594:../samuel/samuel_io.c ****  //------------------------------------------------
 595:../samuel/samuel_io.c **** 
 596:../samuel/samuel_io.c ****  int read_akt_light_EEprom(void)
 597:../samuel/samuel_io.c ****  {
 2937              	 .loc 3 597 0
 2938              	 .cfi_startproc
 2939 0000 80B5     	 push {r7,lr}
 2940              	.LCFI66:
 2941              	 .cfi_def_cfa_offset 8
 2942              	 .cfi_offset 7,-8
 2943              	 .cfi_offset 14,-4
 2944 0002 00AF     	 add r7,sp,#0
 2945              	.LCFI67:
 2946              	 .cfi_def_cfa_register 7
 598:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 2947              	 .loc 3 598 0
 2948 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 2949 0008 031C     	 mov r3,r0
 2950 000a 1A1C     	 mov r2,r3
 2951 000c 0D4B     	 ldr r3,.L111
 2952 000e 1A70     	 strb r2,[r3]
 599:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 2953              	 .loc 3 599 0
 2954 0010 0C4B     	 ldr r3,.L111
 2955 0012 1B78     	 ldrb r3,[r3]
 2956 0014 032B     	 cmp r3,#3
 2957 0016 0AD1     	 bne .L109
 600:../samuel/samuel_io.c **** 	 {
 601:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(akt_light_data,0U,ReadBuffer2,16U);
 2958              	 .loc 3 601 0
 2959 0018 0B4B     	 ldr r3,.L111+4
 2960 001a 0420     	 mov r0,#4
 2961 001c 0021     	 mov r1,#0
 2962 001e 1A1C     	 mov r2,r3
 2963 0020 1023     	 mov r3,#16
 2964 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 2965 0026 031C     	 mov r3,r0
 2966 0028 1A1C     	 mov r2,r3
 2967 002a 084B     	 ldr r3,.L111+8
 2968 002c 1A70     	 strb r2,[r3]
 2969              	.L109:
 602:../samuel/samuel_io.c ****      }
 603:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 2970              	 .loc 3 603 0
 2971 002e 054B     	 ldr r3,.L111
 2972 0030 1B78     	 ldrb r3,[r3]
 2973 0032 1A1C     	 mov r2,r3
 2974 0034 054B     	 ldr r3,.L111+8
 2975 0036 1B78     	 ldrb r3,[r3]
 2976 0038 1B01     	 lsl r3,r3,#4
 2977 003a D318     	 add r3,r2,r3
 604:../samuel/samuel_io.c ****  }
 2978              	 .loc 3 604 0
 2979 003c 181C     	 mov r0,r3
 2980 003e BD46     	 mov sp,r7
 2981              	 
 2982 0040 80BD     	 pop {r7,pc}
 2983              	.L112:
 2984 0042 C046     	 .align 2
 2985              	.L111:
 2986 0044 00000000 	 .word EEprom_status
 2987 0048 00000000 	 .word ReadBuffer2
 2988 004c 00000000 	 .word oper_status
 2989              	 .cfi_endproc
 2990              	.LFE317:
 2992              	 .section .text.read_off_light_EEprom,"ax",%progbits
 2993              	 .align 2
 2994              	 .global read_off_light_EEprom
 2995              	 .code 16
 2996              	 .thumb_func
 2998              	read_off_light_EEprom:
 2999              	.LFB318:
 605:../samuel/samuel_io.c ****  //------------------------------------------------
 606:../samuel/samuel_io.c **** 
 607:../samuel/samuel_io.c ****  int read_off_light_EEprom(void)
 608:../samuel/samuel_io.c ****  {
 3000              	 .loc 3 608 0
 3001              	 .cfi_startproc
 3002 0000 80B5     	 push {r7,lr}
 3003              	.LCFI68:
 3004              	 .cfi_def_cfa_offset 8
 3005              	 .cfi_offset 7,-8
 3006              	 .cfi_offset 14,-4
 3007 0002 00AF     	 add r7,sp,#0
 3008              	.LCFI69:
 3009              	 .cfi_def_cfa_register 7
 609:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3010              	 .loc 3 609 0
 3011 0004 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3012 0008 031C     	 mov r3,r0
 3013 000a 1A1C     	 mov r2,r3
 3014 000c 0D4B     	 ldr r3,.L116
 3015 000e 1A70     	 strb r2,[r3]
 610:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3016              	 .loc 3 610 0
 3017 0010 0C4B     	 ldr r3,.L116
 3018 0012 1B78     	 ldrb r3,[r3]
 3019 0014 032B     	 cmp r3,#3
 3020 0016 0AD1     	 bne .L114
 611:../samuel/samuel_io.c **** 	 {
 612:../samuel/samuel_io.c ****        oper_status = E_EEPROM_XMC1_Read(off_light_data,0U,ReadBuffer2,16U);
 3021              	 .loc 3 612 0
 3022 0018 0B4B     	 ldr r3,.L116+4
 3023 001a 0520     	 mov r0,#5
 3024 001c 0021     	 mov r1,#0
 3025 001e 1A1C     	 mov r2,r3
 3026 0020 1023     	 mov r3,#16
 3027 0022 FFF7FEFF 	 bl E_EEPROM_XMC1_Read
 3028 0026 031C     	 mov r3,r0
 3029 0028 1A1C     	 mov r2,r3
 3030 002a 084B     	 ldr r3,.L116+8
 3031 002c 1A70     	 strb r2,[r3]
 3032              	.L114:
 613:../samuel/samuel_io.c ****      }
 614:../samuel/samuel_io.c ****  return (EEprom_status+0x10*oper_status);// idle =3 succses =0  ==0x03
 3033              	 .loc 3 614 0
 3034 002e 054B     	 ldr r3,.L116
 3035 0030 1B78     	 ldrb r3,[r3]
 3036 0032 1A1C     	 mov r2,r3
 3037 0034 054B     	 ldr r3,.L116+8
 3038 0036 1B78     	 ldrb r3,[r3]
 3039 0038 1B01     	 lsl r3,r3,#4
 3040 003a D318     	 add r3,r2,r3
 615:../samuel/samuel_io.c ****  }
 3041              	 .loc 3 615 0
 3042 003c 181C     	 mov r0,r3
 3043 003e BD46     	 mov sp,r7
 3044              	 
 3045 0040 80BD     	 pop {r7,pc}
 3046              	.L117:
 3047 0042 C046     	 .align 2
 3048              	.L116:
 3049 0044 00000000 	 .word EEprom_status
 3050 0048 00000000 	 .word ReadBuffer2
 3051 004c 00000000 	 .word oper_status
 3052              	 .cfi_endproc
 3053              	.LFE318:
 3055              	 .section .text.writeSernr_B1_EEprom,"ax",%progbits
 3056              	 .align 2
 3057              	 .global writeSernr_B1_EEprom
 3058              	 .code 16
 3059              	 .thumb_func
 3061              	writeSernr_B1_EEprom:
 3062              	.LFB319:
 616:../samuel/samuel_io.c **** 
 617:../samuel/samuel_io.c ****  //------------------------------------------------
 618:../samuel/samuel_io.c ****  int writeSernr_B1_EEprom(void)
 619:../samuel/samuel_io.c ****  {
 3063              	 .loc 3 619 0
 3064              	 .cfi_startproc
 3065 0000 80B5     	 push {r7,lr}
 3066              	.LCFI70:
 3067              	 .cfi_def_cfa_offset 8
 3068              	 .cfi_offset 7,-8
 3069              	 .cfi_offset 14,-4
 3070 0002 82B0     	 sub sp,sp,#8
 3071              	.LCFI71:
 3072              	 .cfi_def_cfa_offset 16
 3073 0004 00AF     	 add r7,sp,#0
 3074              	.LCFI72:
 3075              	 .cfi_def_cfa_register 7
 620:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3076              	 .loc 3 620 0
 3077 0006 8023     	 mov r3,#128
 3078 0008 7B60     	 str r3,[r7,#4]
 621:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3079              	 .loc 3 621 0
 3080 000a 144B     	 ldr r3,.L122
 3081 000c 1A88     	 ldrh r2,[r3]
 3082 000e BA23     	 mov r3,#186
 3083 0010 1B01     	 lsl r3,r3,#4
 3084 0012 9A42     	 cmp r2,r3
 3085 0014 14D9     	 bls .L119
 622:../samuel/samuel_io.c ****   {
 623:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3086              	 .loc 3 623 0
 3087 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3088 001a 031C     	 mov r3,r0
 3089 001c 1A1C     	 mov r2,r3
 3090 001e 104B     	 ldr r3,.L122+4
 3091 0020 1A70     	 strb r2,[r3]
 624:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3092              	 .loc 3 624 0
 3093 0022 0F4B     	 ldr r3,.L122+4
 3094 0024 1B78     	 ldrb r3,[r3]
 3095 0026 032B     	 cmp r3,#3
 3096 0028 08D1     	 bne .L120
 625:../samuel/samuel_io.c ****     {
 626:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(serial_first_data,ReadBuffer1);
 3097              	 .loc 3 626 0
 3098 002a 0E4B     	 ldr r3,.L122+8
 3099 002c 0120     	 mov r0,#1
 3100 002e 191C     	 mov r1,r3
 3101 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3102 0034 031C     	 mov r3,r0
 3103 0036 1A1C     	 mov r2,r3
 3104 0038 0B4B     	 ldr r3,.L122+12
 3105 003a 1A70     	 strb r2,[r3]
 3106              	.L120:
 627:../samuel/samuel_io.c ****     }
 628:../samuel/samuel_io.c **** 	 a = 0;
 3107              	 .loc 3 628 0
 3108 003c 0023     	 mov r3,#0
 3109 003e 7B60     	 str r3,[r7,#4]
 3110              	.L119:
 629:../samuel/samuel_io.c ****   }
 630:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3111              	 .loc 3 630 0
 3112 0040 074B     	 ldr r3,.L122+4
 3113 0042 1B78     	 ldrb r3,[r3]
 3114 0044 1A1C     	 mov r2,r3
 3115 0046 084B     	 ldr r3,.L122+12
 3116 0048 1B78     	 ldrb r3,[r3]
 3117 004a 1B01     	 lsl r3,r3,#4
 3118 004c D218     	 add r2,r2,r3
 3119 004e 7B68     	 ldr r3,[r7,#4]
 3120 0050 D318     	 add r3,r2,r3
 631:../samuel/samuel_io.c ****  }
 3121              	 .loc 3 631 0
 3122 0052 181C     	 mov r0,r3
 3123 0054 BD46     	 mov sp,r7
 3124 0056 02B0     	 add sp,sp,#8
 3125              	 
 3126 0058 80BD     	 pop {r7,pc}
 3127              	.L123:
 3128 005a C046     	 .align 2
 3129              	.L122:
 3130 005c 00000000 	 .word resultB
 3131 0060 00000000 	 .word EEprom_status
 3132 0064 00000000 	 .word ReadBuffer1
 3133 0068 00000000 	 .word oper_status
 3134              	 .cfi_endproc
 3135              	.LFE319:
 3137              	 .section .text.writeNodeid_B2_EEprom,"ax",%progbits
 3138              	 .align 2
 3139              	 .global writeNodeid_B2_EEprom
 3140              	 .code 16
 3141              	 .thumb_func
 3143              	writeNodeid_B2_EEprom:
 3144              	.LFB320:
 632:../samuel/samuel_io.c ****  //------------------------------------------------
 633:../samuel/samuel_io.c ****  int writeNodeid_B2_EEprom(void)
 634:../samuel/samuel_io.c ****  {
 3145              	 .loc 3 634 0
 3146              	 .cfi_startproc
 3147 0000 80B5     	 push {r7,lr}
 3148              	.LCFI73:
 3149              	 .cfi_def_cfa_offset 8
 3150              	 .cfi_offset 7,-8
 3151              	 .cfi_offset 14,-4
 3152 0002 82B0     	 sub sp,sp,#8
 3153              	.LCFI74:
 3154              	 .cfi_def_cfa_offset 16
 3155 0004 00AF     	 add r7,sp,#0
 3156              	.LCFI75:
 3157              	 .cfi_def_cfa_register 7
 635:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3158              	 .loc 3 635 0
 3159 0006 8023     	 mov r3,#128
 3160 0008 7B60     	 str r3,[r7,#4]
 636:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3161              	 .loc 3 636 0
 3162 000a 144B     	 ldr r3,.L128
 3163 000c 1A88     	 ldrh r2,[r3]
 3164 000e BA23     	 mov r3,#186
 3165 0010 1B01     	 lsl r3,r3,#4
 3166 0012 9A42     	 cmp r2,r3
 3167 0014 14D9     	 bls .L125
 637:../samuel/samuel_io.c ****     {
 638:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3168              	 .loc 3 638 0
 3169 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3170 001a 031C     	 mov r3,r0
 3171 001c 1A1C     	 mov r2,r3
 3172 001e 104B     	 ldr r3,.L128+4
 3173 0020 1A70     	 strb r2,[r3]
 639:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3174              	 .loc 3 639 0
 3175 0022 0F4B     	 ldr r3,.L128+4
 3176 0024 1B78     	 ldrb r3,[r3]
 3177 0026 032B     	 cmp r3,#3
 3178 0028 08D1     	 bne .L126
 640:../samuel/samuel_io.c ****       {
 641:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(node_data,ReadBuffer2);
 3179              	 .loc 3 641 0
 3180 002a 0E4B     	 ldr r3,.L128+8
 3181 002c 0220     	 mov r0,#2
 3182 002e 191C     	 mov r1,r3
 3183 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3184 0034 031C     	 mov r3,r0
 3185 0036 1A1C     	 mov r2,r3
 3186 0038 0B4B     	 ldr r3,.L128+12
 3187 003a 1A70     	 strb r2,[r3]
 3188              	.L126:
 642:../samuel/samuel_io.c ****       }
 643:../samuel/samuel_io.c **** 	 a = 0;
 3189              	 .loc 3 643 0
 3190 003c 0023     	 mov r3,#0
 3191 003e 7B60     	 str r3,[r7,#4]
 3192              	.L125:
 644:../samuel/samuel_io.c ****     }
 645:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3193              	 .loc 3 645 0
 3194 0040 074B     	 ldr r3,.L128+4
 3195 0042 1B78     	 ldrb r3,[r3]
 3196 0044 1A1C     	 mov r2,r3
 3197 0046 084B     	 ldr r3,.L128+12
 3198 0048 1B78     	 ldrb r3,[r3]
 3199 004a 1B01     	 lsl r3,r3,#4
 3200 004c D218     	 add r2,r2,r3
 3201 004e 7B68     	 ldr r3,[r7,#4]
 3202 0050 D318     	 add r3,r2,r3
 646:../samuel/samuel_io.c ****  }
 3203              	 .loc 3 646 0
 3204 0052 181C     	 mov r0,r3
 3205 0054 BD46     	 mov sp,r7
 3206 0056 02B0     	 add sp,sp,#8
 3207              	 
 3208 0058 80BD     	 pop {r7,pc}
 3209              	.L129:
 3210 005a C046     	 .align 2
 3211              	.L128:
 3212 005c 00000000 	 .word resultB
 3213 0060 00000000 	 .word EEprom_status
 3214 0064 00000000 	 .word ReadBuffer2
 3215 0068 00000000 	 .word oper_status
 3216              	 .cfi_endproc
 3217              	.LFE320:
 3219              	 .section .text.writeLamp_data_B3_EEprom,"ax",%progbits
 3220              	 .align 2
 3221              	 .global writeLamp_data_B3_EEprom
 3222              	 .code 16
 3223              	 .thumb_func
 3225              	writeLamp_data_B3_EEprom:
 3226              	.LFB321:
 647:../samuel/samuel_io.c ****  //----------------------------
 648:../samuel/samuel_io.c **** 
 649:../samuel/samuel_io.c ****  int writeLamp_data_B3_EEprom(void) // writeLamp_data_B3_EEprom
 650:../samuel/samuel_io.c ****  {
 3227              	 .loc 3 650 0
 3228              	 .cfi_startproc
 3229 0000 80B5     	 push {r7,lr}
 3230              	.LCFI76:
 3231              	 .cfi_def_cfa_offset 8
 3232              	 .cfi_offset 7,-8
 3233              	 .cfi_offset 14,-4
 3234 0002 82B0     	 sub sp,sp,#8
 3235              	.LCFI77:
 3236              	 .cfi_def_cfa_offset 16
 3237 0004 00AF     	 add r7,sp,#0
 3238              	.LCFI78:
 3239              	 .cfi_def_cfa_register 7
 651:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3240              	 .loc 3 651 0
 3241 0006 8023     	 mov r3,#128
 3242 0008 7B60     	 str r3,[r7,#4]
 652:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3243              	 .loc 3 652 0
 3244 000a 144B     	 ldr r3,.L134
 3245 000c 1A88     	 ldrh r2,[r3]
 3246 000e BA23     	 mov r3,#186
 3247 0010 1B01     	 lsl r3,r3,#4
 3248 0012 9A42     	 cmp r2,r3
 3249 0014 14D9     	 bls .L131
 653:../samuel/samuel_io.c ****   {
 654:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3250              	 .loc 3 654 0
 3251 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3252 001a 031C     	 mov r3,r0
 3253 001c 1A1C     	 mov r2,r3
 3254 001e 104B     	 ldr r3,.L134+4
 3255 0020 1A70     	 strb r2,[r3]
 655:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3256              	 .loc 3 655 0
 3257 0022 0F4B     	 ldr r3,.L134+4
 3258 0024 1B78     	 ldrb r3,[r3]
 3259 0026 032B     	 cmp r3,#3
 3260 0028 08D1     	 bne .L132
 656:../samuel/samuel_io.c ****     {
 657:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(lamp_data,ReadBuffer3);
 3261              	 .loc 3 657 0
 3262 002a 0E4B     	 ldr r3,.L134+8
 3263 002c 0320     	 mov r0,#3
 3264 002e 191C     	 mov r1,r3
 3265 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3266 0034 031C     	 mov r3,r0
 3267 0036 1A1C     	 mov r2,r3
 3268 0038 0B4B     	 ldr r3,.L134+12
 3269 003a 1A70     	 strb r2,[r3]
 3270              	.L132:
 658:../samuel/samuel_io.c ****     }
 659:../samuel/samuel_io.c **** 	 a = 0;
 3271              	 .loc 3 659 0
 3272 003c 0023     	 mov r3,#0
 3273 003e 7B60     	 str r3,[r7,#4]
 3274              	.L131:
 660:../samuel/samuel_io.c ****   }
 661:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3275              	 .loc 3 661 0
 3276 0040 074B     	 ldr r3,.L134+4
 3277 0042 1B78     	 ldrb r3,[r3]
 3278 0044 1A1C     	 mov r2,r3
 3279 0046 084B     	 ldr r3,.L134+12
 3280 0048 1B78     	 ldrb r3,[r3]
 3281 004a 1B01     	 lsl r3,r3,#4
 3282 004c D218     	 add r2,r2,r3
 3283 004e 7B68     	 ldr r3,[r7,#4]
 3284 0050 D318     	 add r3,r2,r3
 662:../samuel/samuel_io.c ****  }
 3285              	 .loc 3 662 0
 3286 0052 181C     	 mov r0,r3
 3287 0054 BD46     	 mov sp,r7
 3288 0056 02B0     	 add sp,sp,#8
 3289              	 
 3290 0058 80BD     	 pop {r7,pc}
 3291              	.L135:
 3292 005a C046     	 .align 2
 3293              	.L134:
 3294 005c 00000000 	 .word resultB
 3295 0060 00000000 	 .word EEprom_status
 3296 0064 00000000 	 .word ReadBuffer3
 3297 0068 00000000 	 .word oper_status
 3298              	 .cfi_endproc
 3299              	.LFE321:
 3301              	 .section .text.writeakt_light_data_B4_EEprom,"ax",%progbits
 3302              	 .align 2
 3303              	 .global writeakt_light_data_B4_EEprom
 3304              	 .code 16
 3305              	 .thumb_func
 3307              	writeakt_light_data_B4_EEprom:
 3308              	.LFB322:
 663:../samuel/samuel_io.c **** 
 664:../samuel/samuel_io.c ****  //------------------------------------------------
 665:../samuel/samuel_io.c ****  int writeakt_light_data_B4_EEprom(void)
 666:../samuel/samuel_io.c ****  {
 3309              	 .loc 3 666 0
 3310              	 .cfi_startproc
 3311 0000 80B5     	 push {r7,lr}
 3312              	.LCFI79:
 3313              	 .cfi_def_cfa_offset 8
 3314              	 .cfi_offset 7,-8
 3315              	 .cfi_offset 14,-4
 3316 0002 82B0     	 sub sp,sp,#8
 3317              	.LCFI80:
 3318              	 .cfi_def_cfa_offset 16
 3319 0004 00AF     	 add r7,sp,#0
 3320              	.LCFI81:
 3321              	 .cfi_def_cfa_register 7
 667:../samuel/samuel_io.c ****   int a = 0b10000000; // erfolgreiche spannung=0
 3322              	 .loc 3 667 0
 3323 0006 8023     	 mov r3,#128
 3324 0008 7B60     	 str r3,[r7,#4]
 668:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3325              	 .loc 3 668 0
 3326 000a 144B     	 ldr r3,.L140
 3327 000c 1A88     	 ldrh r2,[r3]
 3328 000e BA23     	 mov r3,#186
 3329 0010 1B01     	 lsl r3,r3,#4
 3330 0012 9A42     	 cmp r2,r3
 3331 0014 14D9     	 bls .L137
 669:../samuel/samuel_io.c ****     {
 670:../samuel/samuel_io.c **** 	 EEprom_status = E_EEPROM_XMC1_GetStatus();
 3332              	 .loc 3 670 0
 3333 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3334 001a 031C     	 mov r3,r0
 3335 001c 1A1C     	 mov r2,r3
 3336 001e 104B     	 ldr r3,.L140+4
 3337 0020 1A70     	 strb r2,[r3]
 671:../samuel/samuel_io.c **** 	  if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3338              	 .loc 3 671 0
 3339 0022 0F4B     	 ldr r3,.L140+4
 3340 0024 1B78     	 ldrb r3,[r3]
 3341 0026 032B     	 cmp r3,#3
 3342 0028 08D1     	 bne .L138
 672:../samuel/samuel_io.c ****       {
 673:../samuel/samuel_io.c ****       oper_status = E_EEPROM_XMC1_Write(akt_light_data,ReadBuffer2);
 3343              	 .loc 3 673 0
 3344 002a 0E4B     	 ldr r3,.L140+8
 3345 002c 0420     	 mov r0,#4
 3346 002e 191C     	 mov r1,r3
 3347 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3348 0034 031C     	 mov r3,r0
 3349 0036 1A1C     	 mov r2,r3
 3350 0038 0B4B     	 ldr r3,.L140+12
 3351 003a 1A70     	 strb r2,[r3]
 3352              	.L138:
 674:../samuel/samuel_io.c ****       }
 675:../samuel/samuel_io.c **** 	 a = 0;
 3353              	 .loc 3 675 0
 3354 003c 0023     	 mov r3,#0
 3355 003e 7B60     	 str r3,[r7,#4]
 3356              	.L137:
 676:../samuel/samuel_io.c ****     }
 677:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3357              	 .loc 3 677 0
 3358 0040 074B     	 ldr r3,.L140+4
 3359 0042 1B78     	 ldrb r3,[r3]
 3360 0044 1A1C     	 mov r2,r3
 3361 0046 084B     	 ldr r3,.L140+12
 3362 0048 1B78     	 ldrb r3,[r3]
 3363 004a 1B01     	 lsl r3,r3,#4
 3364 004c D218     	 add r2,r2,r3
 3365 004e 7B68     	 ldr r3,[r7,#4]
 3366 0050 D318     	 add r3,r2,r3
 678:../samuel/samuel_io.c ****  }
 3367              	 .loc 3 678 0
 3368 0052 181C     	 mov r0,r3
 3369 0054 BD46     	 mov sp,r7
 3370 0056 02B0     	 add sp,sp,#8
 3371              	 
 3372 0058 80BD     	 pop {r7,pc}
 3373              	.L141:
 3374 005a C046     	 .align 2
 3375              	.L140:
 3376 005c 00000000 	 .word resultB
 3377 0060 00000000 	 .word EEprom_status
 3378 0064 00000000 	 .word ReadBuffer2
 3379 0068 00000000 	 .word oper_status
 3380              	 .cfi_endproc
 3381              	.LFE322:
 3383              	 .section .text.writeOff_light_B5_EEprom,"ax",%progbits
 3384              	 .align 2
 3385              	 .global writeOff_light_B5_EEprom
 3386              	 .code 16
 3387              	 .thumb_func
 3389              	writeOff_light_B5_EEprom:
 3390              	.LFB323:
 679:../samuel/samuel_io.c ****  //----------------------------
 680:../samuel/samuel_io.c **** 
 681:../samuel/samuel_io.c ****  int writeOff_light_B5_EEprom(void)
 682:../samuel/samuel_io.c ****  {
 3391              	 .loc 3 682 0
 3392              	 .cfi_startproc
 3393 0000 80B5     	 push {r7,lr}
 3394              	.LCFI82:
 3395              	 .cfi_def_cfa_offset 8
 3396              	 .cfi_offset 7,-8
 3397              	 .cfi_offset 14,-4
 3398 0002 82B0     	 sub sp,sp,#8
 3399              	.LCFI83:
 3400              	 .cfi_def_cfa_offset 16
 3401 0004 00AF     	 add r7,sp,#0
 3402              	.LCFI84:
 3403              	 .cfi_def_cfa_register 7
 683:../samuel/samuel_io.c **** 	 int a = 0b10000000;
 3404              	 .loc 3 683 0
 3405 0006 8023     	 mov r3,#128
 3406 0008 7B60     	 str r3,[r7,#4]
 684:../samuel/samuel_io.c **** 	if (resultB > min_EEP_Voltage_Uin)
 3407              	 .loc 3 684 0
 3408 000a 144B     	 ldr r3,.L146
 3409 000c 1A88     	 ldrh r2,[r3]
 3410 000e BA23     	 mov r3,#186
 3411 0010 1B01     	 lsl r3,r3,#4
 3412 0012 9A42     	 cmp r2,r3
 3413 0014 14D9     	 bls .L143
 685:../samuel/samuel_io.c ****   {
 686:../samuel/samuel_io.c **** 	  EEprom_status = E_EEPROM_XMC1_GetStatus();
 3414              	 .loc 3 686 0
 3415 0016 FFF7FEFF 	 bl E_EEPROM_XMC1_GetStatus
 3416 001a 031C     	 mov r3,r0
 3417 001c 1A1C     	 mov r2,r3
 3418 001e 104B     	 ldr r3,.L146+4
 3419 0020 1A70     	 strb r2,[r3]
 687:../samuel/samuel_io.c **** 	 if(EEprom_status == E_EEPROM_XMC1_STATUS_IDLE)
 3420              	 .loc 3 687 0
 3421 0022 0F4B     	 ldr r3,.L146+4
 3422 0024 1B78     	 ldrb r3,[r3]
 3423 0026 032B     	 cmp r3,#3
 3424 0028 08D1     	 bne .L144
 688:../samuel/samuel_io.c ****     {
 689:../samuel/samuel_io.c ****     oper_status = E_EEPROM_XMC1_Write(off_light_data,ReadBuffer2);
 3425              	 .loc 3 689 0
 3426 002a 0E4B     	 ldr r3,.L146+8
 3427 002c 0520     	 mov r0,#5
 3428 002e 191C     	 mov r1,r3
 3429 0030 FFF7FEFF 	 bl E_EEPROM_XMC1_Write
 3430 0034 031C     	 mov r3,r0
 3431 0036 1A1C     	 mov r2,r3
 3432 0038 0B4B     	 ldr r3,.L146+12
 3433 003a 1A70     	 strb r2,[r3]
 3434              	.L144:
 690:../samuel/samuel_io.c **** 
 691:../samuel/samuel_io.c **** 
 692:../samuel/samuel_io.c **** 
 693:../samuel/samuel_io.c **** 
 694:../samuel/samuel_io.c ****     }
 695:../samuel/samuel_io.c **** 	 a = 0;
 3435              	 .loc 3 695 0
 3436 003c 0023     	 mov r3,#0
 3437 003e 7B60     	 str r3,[r7,#4]
 3438              	.L143:
 696:../samuel/samuel_io.c ****   }
 697:../samuel/samuel_io.c ****     return (EEprom_status + 0x10 * oper_status + a);
 3439              	 .loc 3 697 0
 3440 0040 074B     	 ldr r3,.L146+4
 3441 0042 1B78     	 ldrb r3,[r3]
 3442 0044 1A1C     	 mov r2,r3
 3443 0046 084B     	 ldr r3,.L146+12
 3444 0048 1B78     	 ldrb r3,[r3]
 3445 004a 1B01     	 lsl r3,r3,#4
 3446 004c D218     	 add r2,r2,r3
 3447 004e 7B68     	 ldr r3,[r7,#4]
 3448 0050 D318     	 add r3,r2,r3
 698:../samuel/samuel_io.c ****  }
 3449              	 .loc 3 698 0
 3450 0052 181C     	 mov r0,r3
 3451 0054 BD46     	 mov sp,r7
 3452 0056 02B0     	 add sp,sp,#8
 3453              	 
 3454 0058 80BD     	 pop {r7,pc}
 3455              	.L147:
 3456 005a C046     	 .align 2
 3457              	.L146:
 3458 005c 00000000 	 .word resultB
 3459 0060 00000000 	 .word EEprom_status
 3460 0064 00000000 	 .word ReadBuffer2
 3461 0068 00000000 	 .word oper_status
 3462              	 .cfi_endproc
 3463              	.LFE323:
 3465              	 .section .text.sysiniValueB1,"ax",%progbits
 3466              	 .align 2
 3467              	 .global sysiniValueB1
 3468              	 .code 16
 3469              	 .thumb_func
 3471              	sysiniValueB1:
 3472              	.LFB324:
 699:../samuel/samuel_io.c **** 
 700:../samuel/samuel_io.c **** ///#############################################
 701:../samuel/samuel_io.c ****  //initialisierung
 702:../samuel/samuel_io.c **** 
 703:../samuel/samuel_io.c **** 
 704:../samuel/samuel_io.c ****  void sysiniValueB1(void)
 705:../samuel/samuel_io.c ****  {
 3473              	 .loc 3 705 0
 3474              	 .cfi_startproc
 3475 0000 80B5     	 push {r7,lr}
 3476              	.LCFI85:
 3477              	 .cfi_def_cfa_offset 8
 3478              	 .cfi_offset 7,-8
 3479              	 .cfi_offset 14,-4
 3480 0002 00AF     	 add r7,sp,#0
 3481              	.LCFI86:
 3482              	 .cfi_def_cfa_register 7
 706:../samuel/samuel_io.c **** //	   Ser_NrH = 0x4142 ;
 707:../samuel/samuel_io.c **** //	   Ser_NrL = 0x4344 ;
 708:../samuel/samuel_io.c **** 
 709:../samuel/samuel_io.c **** 	   Ser_NrH = 0x7b7a;
 3483              	 .loc 3 709 0
 3484 0004 124B     	 ldr r3,.L149
 3485 0006 134A     	 ldr r2,.L149+4
 3486 0008 1A80     	 strh r2,[r3]
 710:../samuel/samuel_io.c ****        Ser_NrL = 0x5859 ;
 3487              	 .loc 3 710 0
 3488 000a 134B     	 ldr r3,.L149+8
 3489 000c 134A     	 ldr r2,.L149+12
 3490 000e 1A80     	 strh r2,[r3]
 711:../samuel/samuel_io.c ****        Hard_Vers = 1000 ;
 3491              	 .loc 3 711 0
 3492 0010 134B     	 ldr r3,.L149+16
 3493 0012 FA22     	 mov r2,#250
 3494 0014 9200     	 lsl r2,r2,#2
 3495 0016 1A80     	 strh r2,[r3]
 712:../samuel/samuel_io.c **** 	   Soft_Vers = 1000 ;
 3496              	 .loc 3 712 0
 3497 0018 124B     	 ldr r3,.L149+20
 3498 001a FA22     	 mov r2,#250
 3499 001c 9200     	 lsl r2,r2,#2
 3500 001e 1A80     	 strh r2,[r3]
 713:../samuel/samuel_io.c **** 	   GEH_Vers = 1000 ;
 3501              	 .loc 3 713 0
 3502 0020 114B     	 ldr r3,.L149+24
 3503 0022 FA22     	 mov r2,#250
 3504 0024 9200     	 lsl r2,r2,#2
 3505 0026 1A80     	 strh r2,[r3]
 714:../samuel/samuel_io.c **** 	   Mon_Vers = 1000 ;
 3506              	 .loc 3 714 0
 3507 0028 104B     	 ldr r3,.L149+28
 3508 002a FA22     	 mov r2,#250
 3509 002c 9200     	 lsl r2,r2,#2
 3510 002e 1A80     	 strh r2,[r3]
 715:../samuel/samuel_io.c **** 	   LED_WW_Vers = 1000 ;
 3511              	 .loc 3 715 0
 3512 0030 0F4B     	 ldr r3,.L149+32
 3513 0032 FA22     	 mov r2,#250
 3514 0034 9200     	 lsl r2,r2,#2
 3515 0036 1A80     	 strh r2,[r3]
 716:../samuel/samuel_io.c **** 	   LED_CW_Vers = 1000 ;
 3516              	 .loc 3 716 0
 3517 0038 0E4B     	 ldr r3,.L149+36
 3518 003a FA22     	 mov r2,#250
 3519 003c 9200     	 lsl r2,r2,#2
 3520 003e 1A80     	 strh r2,[r3]
 717:../samuel/samuel_io.c **** 
 718:../samuel/samuel_io.c ****        neu_Ser_NrH = 0 ;
 3521              	 .loc 3 718 0
 3522 0040 0D4B     	 ldr r3,.L149+40
 3523 0042 0022     	 mov r2,#0
 3524 0044 1A80     	 strh r2,[r3]
 719:../samuel/samuel_io.c ****        neu_Ser_NrL = 0 ;
 3525              	 .loc 3 719 0
 3526 0046 0D4B     	 ldr r3,.L149+44
 3527 0048 0022     	 mov r2,#0
 3528 004a 1A80     	 strh r2,[r3]
 720:../samuel/samuel_io.c **** 
 721:../samuel/samuel_io.c ****  }
 3529              	 .loc 3 721 0
 3530 004c BD46     	 mov sp,r7
 3531              	 
 3532 004e 80BD     	 pop {r7,pc}
 3533              	.L150:
 3534              	 .align 2
 3535              	.L149:
 3536 0050 00000000 	 .word Ser_NrH
 3537 0054 7A7B0000 	 .word 31610
 3538 0058 00000000 	 .word Ser_NrL
 3539 005c 59580000 	 .word 22617
 3540 0060 00000000 	 .word Hard_Vers
 3541 0064 00000000 	 .word Soft_Vers
 3542 0068 00000000 	 .word GEH_Vers
 3543 006c 00000000 	 .word Mon_Vers
 3544 0070 00000000 	 .word LED_WW_Vers
 3545 0074 00000000 	 .word LED_CW_Vers
 3546 0078 00000000 	 .word neu_Ser_NrH
 3547 007c 00000000 	 .word neu_Ser_NrL
 3548              	 .cfi_endproc
 3549              	.LFE324:
 3551              	 .section .text.sysiniValueB2,"ax",%progbits
 3552              	 .align 2
 3553              	 .global sysiniValueB2
 3554              	 .code 16
 3555              	 .thumb_func
 3557              	sysiniValueB2:
 3558              	.LFB325:
 722:../samuel/samuel_io.c **** 
 723:../samuel/samuel_io.c **** 
 724:../samuel/samuel_io.c ****  void sysiniValueB2(void)
 725:../samuel/samuel_io.c ****  {
 3559              	 .loc 3 725 0
 3560              	 .cfi_startproc
 3561 0000 80B5     	 push {r7,lr}
 3562              	.LCFI87:
 3563              	 .cfi_def_cfa_offset 8
 3564              	 .cfi_offset 7,-8
 3565              	 .cfi_offset 14,-4
 3566 0002 00AF     	 add r7,sp,#0
 3567              	.LCFI88:
 3568              	 .cfi_def_cfa_register 7
 726:../samuel/samuel_io.c ****            node_id = 1;
 3569              	 .loc 3 726 0
 3570 0004 114B     	 ldr r3,.L152
 3571 0006 0122     	 mov r2,#1
 3572 0008 1A70     	 strb r2,[r3]
 727:../samuel/samuel_io.c ****            node_id_alt = 1;
 3573              	 .loc 3 727 0
 3574 000a 114B     	 ldr r3,.L152+4
 3575 000c 0122     	 mov r2,#1
 3576 000e 1A70     	 strb r2,[r3]
 728:../samuel/samuel_io.c ****     	   node_id_16bit = 0x1234;
 3577              	 .loc 3 728 0
 3578 0010 104B     	 ldr r3,.L152+8
 3579 0012 114A     	 ldr r2,.L152+12
 3580 0014 1A80     	 strh r2,[r3]
 729:../samuel/samuel_io.c ****     	   val_Pow_Nom=2000;
 3581              	 .loc 3 729 0
 3582 0016 114B     	 ldr r3,.L152+16
 3583 0018 FA22     	 mov r2,#250
 3584 001a D200     	 lsl r2,r2,#3
 3585 001c 1A80     	 strh r2,[r3]
 730:../samuel/samuel_io.c **** 		   val_Pow_max=2000;
 3586              	 .loc 3 730 0
 3587 001e 104B     	 ldr r3,.L152+20
 3588 0020 FA22     	 mov r2,#250
 3589 0022 D200     	 lsl r2,r2,#3
 3590 0024 1A80     	 strh r2,[r3]
 731:../samuel/samuel_io.c **** 		   val_Spannung_min=3600;
 3591              	 .loc 3 731 0
 3592 0026 0F4B     	 ldr r3,.L152+24
 3593 0028 E122     	 mov r2,#225
 3594 002a 1201     	 lsl r2,r2,#4
 3595 002c 1A80     	 strh r2,[r3]
 732:../samuel/samuel_io.c **** 		   val_Spannung_max=4200;
 3596              	 .loc 3 732 0
 3597 002e 0E4B     	 ldr r3,.L152+28
 3598 0030 0E4A     	 ldr r2,.L152+32
 3599 0032 1A80     	 strh r2,[r3]
 733:../samuel/samuel_io.c **** 		   led_grupp=10;
 3600              	 .loc 3 733 0
 3601 0034 0E4B     	 ldr r3,.L152+36
 3602 0036 0A22     	 mov r2,#10
 3603 0038 1A80     	 strh r2,[r3]
 734:../samuel/samuel_io.c **** 		   led_Strom=0065;
 3604              	 .loc 3 734 0
 3605 003a 0E4B     	 ldr r3,.L152+40
 3606 003c 3522     	 mov r2,#53
 3607 003e 1A80     	 strh r2,[r3]
 735:../samuel/samuel_io.c **** 
 736:../samuel/samuel_io.c ****     	   node_id_neu = 1;
 3608              	 .loc 3 736 0
 3609 0040 0D4B     	 ldr r3,.L152+44
 3610 0042 0122     	 mov r2,#1
 3611 0044 1A70     	 strb r2,[r3]
 737:../samuel/samuel_io.c ****  }
 3612              	 .loc 3 737 0
 3613 0046 BD46     	 mov sp,r7
 3614              	 
 3615 0048 80BD     	 pop {r7,pc}
 3616              	.L153:
 3617 004a C046     	 .align 2
 3618              	.L152:
 3619 004c 00000000 	 .word node_id
 3620 0050 00000000 	 .word node_id_alt
 3621 0054 00000000 	 .word node_id_16bit
 3622 0058 34120000 	 .word 4660
 3623 005c 00000000 	 .word val_Pow_Nom
 3624 0060 00000000 	 .word val_Pow_max
 3625 0064 00000000 	 .word val_Spannung_min
 3626 0068 00000000 	 .word val_Spannung_max
 3627 006c 68100000 	 .word 4200
 3628 0070 00000000 	 .word led_grupp
 3629 0074 00000000 	 .word led_Strom
 3630 0078 00000000 	 .word node_id_neu
 3631              	 .cfi_endproc
 3632              	.LFE325:
 3634              	 .section .text.sysiniValueB4,"ax",%progbits
 3635              	 .align 2
 3636              	 .global sysiniValueB4
 3637              	 .code 16
 3638              	 .thumb_func
 3640              	sysiniValueB4:
 3641              	.LFB326:
 738:../samuel/samuel_io.c **** 
 739:../samuel/samuel_io.c ****  void sysiniValueB4(void)
 740:../samuel/samuel_io.c ****  {
 3642              	 .loc 3 740 0
 3643              	 .cfi_startproc
 3644 0000 80B5     	 push {r7,lr}
 3645              	.LCFI89:
 3646              	 .cfi_def_cfa_offset 8
 3647              	 .cfi_offset 7,-8
 3648              	 .cfi_offset 14,-4
 3649 0002 00AF     	 add r7,sp,#0
 3650              	.LCFI90:
 3651              	 .cfi_def_cfa_register 7
 741:../samuel/samuel_io.c **** 	 Dimm_Gamma=10;
 3652              	 .loc 3 741 0
 3653 0004 264B     	 ldr r3,.L155
 3654 0006 0A22     	 mov r2,#10
 3655 0008 1A70     	 strb r2,[r3]
 742:../samuel/samuel_io.c **** 	 Dimm_Stufen=10;
 3656              	 .loc 3 742 0
 3657 000a 264B     	 ldr r3,.L155+4
 3658 000c 0A22     	 mov r2,#10
 3659 000e 1A70     	 strb r2,[r3]
 743:../samuel/samuel_io.c **** 	 Dimm_StufenGR=10;
 3660              	 .loc 3 743 0
 3661 0010 254B     	 ldr r3,.L155+8
 3662 0012 0A22     	 mov r2,#10
 3663 0014 1A70     	 strb r2,[r3]
 744:../samuel/samuel_io.c **** 	 Dimm_Valu=10;
 3664              	 .loc 3 744 0
 3665 0016 254B     	 ldr r3,.L155+12
 3666 0018 0A22     	 mov r2,#10
 3667 001a 1A70     	 strb r2,[r3]
 745:../samuel/samuel_io.c **** 	 Smooth_Value=10;
 3668              	 .loc 3 745 0
 3669 001c 244B     	 ldr r3,.L155+16
 3670 001e 0A22     	 mov r2,#10
 3671 0020 1A80     	 strh r2,[r3]
 746:../samuel/samuel_io.c **** 	 linearwalk_gen= 0xb0;
 3672              	 .loc 3 746 0
 3673 0022 244B     	 ldr r3,.L155+20
 3674 0024 B022     	 mov r2,#176
 3675 0026 1A80     	 strh r2,[r3]
 747:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 3676              	 .loc 3 747 0
 3677 0028 234B     	 ldr r3,.L155+24
 3678 002a 0122     	 mov r2,#1
 3679 002c 5242     	 neg r2,r2
 3680 002e 1A80     	 strh r2,[r3]
 748:../samuel/samuel_io.c **** 	 Reserve_1=0;
 3681              	 .loc 3 748 0
 3682 0030 224B     	 ldr r3,.L155+28
 3683 0032 0022     	 mov r2,#0
 3684 0034 1A80     	 strh r2,[r3]
 749:../samuel/samuel_io.c **** 	 Dimm_Max_WW=1000;
 3685              	 .loc 3 749 0
 3686 0036 224B     	 ldr r3,.L155+32
 3687 0038 FA22     	 mov r2,#250
 3688 003a 9200     	 lsl r2,r2,#2
 3689 003c 1A80     	 strh r2,[r3]
 750:../samuel/samuel_io.c **** 	 Dimm_Max_CW=1000;
 3690              	 .loc 3 750 0
 3691 003e 214B     	 ldr r3,.L155+36
 3692 0040 FA22     	 mov r2,#250
 3693 0042 9200     	 lsl r2,r2,#2
 3694 0044 1A80     	 strh r2,[r3]
 751:../samuel/samuel_io.c **** 
 752:../samuel/samuel_io.c **** 	linearwalk_ww1 = linearwalk_gen;
 3695              	 .loc 3 752 0
 3696 0046 1B4B     	 ldr r3,.L155+20
 3697 0048 1A88     	 ldrh r2,[r3]
 3698 004a 1F4B     	 ldr r3,.L155+40
 3699 004c 1A80     	 strh r2,[r3]
 753:../samuel/samuel_io.c **** 	linearwalk_ww2 = linearwalk_gen;
 3700              	 .loc 3 753 0
 3701 004e 194B     	 ldr r3,.L155+20
 3702 0050 1A88     	 ldrh r2,[r3]
 3703 0052 1E4B     	 ldr r3,.L155+44
 3704 0054 1A80     	 strh r2,[r3]
 754:../samuel/samuel_io.c **** 	linearwalk_cw1 = linearwalk_gen;
 3705              	 .loc 3 754 0
 3706 0056 174B     	 ldr r3,.L155+20
 3707 0058 1A88     	 ldrh r2,[r3]
 3708 005a 1D4B     	 ldr r3,.L155+48
 3709 005c 1A80     	 strh r2,[r3]
 755:../samuel/samuel_io.c **** 	linearwalk_cw2 = linearwalk_gen;
 3710              	 .loc 3 755 0
 3711 005e 154B     	 ldr r3,.L155+20
 3712 0060 1A88     	 ldrh r2,[r3]
 3713 0062 1C4B     	 ldr r3,.L155+52
 3714 0064 1A80     	 strh r2,[r3]
 756:../samuel/samuel_io.c **** 
 757:../samuel/samuel_io.c **** 	Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 3715              	 .loc 3 757 0
 3716 0066 144B     	 ldr r3,.L155+24
 3717 0068 1B88     	 ldrh r3,[r3]
 3718 006a 1B0A     	 lsr r3,r3,#8
 3719 006c 9AB2     	 uxth r2,r3
 3720 006e 1A4B     	 ldr r3,.L155+56
 3721 0070 1A80     	 strh r2,[r3]
 758:../samuel/samuel_io.c **** 	Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 3722              	 .loc 3 758 0
 3723 0072 114B     	 ldr r3,.L155+24
 3724 0074 1B88     	 ldrh r3,[r3]
 3725 0076 1B0A     	 lsr r3,r3,#8
 3726 0078 9AB2     	 uxth r2,r3
 3727 007a 184B     	 ldr r3,.L155+60
 3728 007c 1A80     	 strh r2,[r3]
 759:../samuel/samuel_io.c **** 	Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3729              	 .loc 3 759 0
 3730 007e 0E4B     	 ldr r3,.L155+24
 3731 0080 1B88     	 ldrh r3,[r3]
 3732 0082 FF22     	 mov r2,#255
 3733 0084 1340     	 and r3,r2
 3734 0086 9AB2     	 uxth r2,r3
 3735 0088 154B     	 ldr r3,.L155+64
 3736 008a 1A80     	 strh r2,[r3]
 760:../samuel/samuel_io.c **** 	Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0x00ff;
 3737              	 .loc 3 760 0
 3738 008c 0A4B     	 ldr r3,.L155+24
 3739 008e 1B88     	 ldrh r3,[r3]
 3740 0090 FF22     	 mov r2,#255
 3741 0092 1340     	 and r3,r2
 3742 0094 9AB2     	 uxth r2,r3
 3743 0096 134B     	 ldr r3,.L155+68
 3744 0098 1A80     	 strh r2,[r3]
 761:../samuel/samuel_io.c ****  }
 3745              	 .loc 3 761 0
 3746 009a BD46     	 mov sp,r7
 3747              	 
 3748 009c 80BD     	 pop {r7,pc}
 3749              	.L156:
 3750 009e C046     	 .align 2
 3751              	.L155:
 3752 00a0 00000000 	 .word Dimm_Gamma
 3753 00a4 00000000 	 .word Dimm_Stufen
 3754 00a8 00000000 	 .word Dimm_StufenGR
 3755 00ac 00000000 	 .word Dimm_Valu
 3756 00b0 00000000 	 .word Smooth_Value
 3757 00b4 00000000 	 .word linearwalk_gen
 3758 00b8 00000000 	 .word Farbe_wwcw_Quot_gen
 3759 00bc 00000000 	 .word Reserve_1
 3760 00c0 00000000 	 .word Dimm_Max_WW
 3761 00c4 00000000 	 .word Dimm_Max_CW
 3762 00c8 00000000 	 .word linearwalk_ww1
 3763 00cc 00000000 	 .word linearwalk_ww2
 3764 00d0 00000000 	 .word linearwalk_cw1
 3765 00d4 00000000 	 .word linearwalk_cw2
 3766 00d8 00000000 	 .word Farbe_ww1_Quot
 3767 00dc 00000000 	 .word Farbe_cw1_Quot
 3768 00e0 00000000 	 .word Farbe_ww2_Quot
 3769 00e4 00000000 	 .word Farbe_cw2_Quot
 3770              	 .cfi_endproc
 3771              	.LFE326:
 3773              	 .section .text.sysiniValueB5,"ax",%progbits
 3774              	 .align 2
 3775              	 .global sysiniValueB5
 3776              	 .code 16
 3777              	 .thumb_func
 3779              	sysiniValueB5:
 3780              	.LFB327:
 762:../samuel/samuel_io.c **** 
 763:../samuel/samuel_io.c ****  void sysiniValueB5(void)
 764:../samuel/samuel_io.c ****  {
 3781              	 .loc 3 764 0
 3782              	 .cfi_startproc
 3783 0000 80B5     	 push {r7,lr}
 3784              	.LCFI91:
 3785              	 .cfi_def_cfa_offset 8
 3786              	 .cfi_offset 7,-8
 3787              	 .cfi_offset 14,-4
 3788 0002 00AF     	 add r7,sp,#0
 3789              	.LCFI92:
 3790              	 .cfi_def_cfa_register 7
 765:../samuel/samuel_io.c **** 	 RegOnOff = RegOnOff_OFFvalue;
 3791              	 .loc 3 765 0
 3792 0004 0E4B     	 ldr r3,.L158
 3793 0006 0522     	 mov r2,#5
 3794 0008 1A70     	 strb r2,[r3]
 766:../samuel/samuel_io.c **** 	 RegOnOff2 = 0;
 3795              	 .loc 3 766 0
 3796 000a 0E4B     	 ldr r3,.L158+4
 3797 000c 0022     	 mov r2,#0
 3798 000e 1A70     	 strb r2,[r3]
 767:../samuel/samuel_io.c **** 	 Reserve_2 = 0;
 3799              	 .loc 3 767 0
 3800 0010 0D4B     	 ldr r3,.L158+8
 3801 0012 0022     	 mov r2,#0
 3802 0014 1A80     	 strh r2,[r3]
 768:../samuel/samuel_io.c **** 	 dimOff_Ww = 4095;
 3803              	 .loc 3 768 0
 3804 0016 0D4B     	 ldr r3,.L158+12
 3805 0018 0D4A     	 ldr r2,.L158+16
 3806 001a 1A80     	 strh r2,[r3]
 769:../samuel/samuel_io.c **** 	 dimOff_Cw = 4095;
 3807              	 .loc 3 769 0
 3808 001c 0D4B     	 ldr r3,.L158+20
 3809 001e 0C4A     	 ldr r2,.L158+16
 3810 0020 1A80     	 strh r2,[r3]
 770:../samuel/samuel_io.c **** 	 dimNorm1_Ww = 0x01ff;
 3811              	 .loc 3 770 0
 3812 0022 0D4B     	 ldr r3,.L158+24
 3813 0024 0D4A     	 ldr r2,.L158+28
 3814 0026 1A80     	 strh r2,[r3]
 771:../samuel/samuel_io.c **** 	 dimNorm1_Cw = 0x01ff;
 3815              	 .loc 3 771 0
 3816 0028 0D4B     	 ldr r3,.L158+32
 3817 002a 0C4A     	 ldr r2,.L158+28
 3818 002c 1A80     	 strh r2,[r3]
 772:../samuel/samuel_io.c **** 	 dimNorm2_Ww = 0x02ff;
 3819              	 .loc 3 772 0
 3820 002e 0D4B     	 ldr r3,.L158+36
 3821 0030 0D4A     	 ldr r2,.L158+40
 3822 0032 1A80     	 strh r2,[r3]
 773:../samuel/samuel_io.c **** 	 dimNorm2_Cw = 0x02ff;
 3823              	 .loc 3 773 0
 3824 0034 0D4B     	 ldr r3,.L158+44
 3825 0036 0C4A     	 ldr r2,.L158+40
 3826 0038 1A80     	 strh r2,[r3]
 774:../samuel/samuel_io.c ****  }
 3827              	 .loc 3 774 0
 3828 003a BD46     	 mov sp,r7
 3829              	 
 3830 003c 80BD     	 pop {r7,pc}
 3831              	.L159:
 3832 003e C046     	 .align 2
 3833              	.L158:
 3834 0040 00000000 	 .word RegOnOff
 3835 0044 00000000 	 .word RegOnOff2
 3836 0048 00000000 	 .word Reserve_2
 3837 004c 00000000 	 .word dimOff_Ww
 3838 0050 FF0F0000 	 .word 4095
 3839 0054 00000000 	 .word dimOff_Cw
 3840 0058 00000000 	 .word dimNorm1_Ww
 3841 005c FF010000 	 .word 511
 3842 0060 00000000 	 .word dimNorm1_Cw
 3843 0064 00000000 	 .word dimNorm2_Ww
 3844 0068 FF020000 	 .word 767
 3845 006c 00000000 	 .word dimNorm2_Cw
 3846              	 .cfi_endproc
 3847              	.LFE327:
 3849              	 .section .text.bcuInit,"ax",%progbits
 3850              	 .align 2
 3851              	 .global bcuInit
 3852              	 .code 16
 3853              	 .thumb_func
 3855              	bcuInit:
 3856              	.LFB328:
 775:../samuel/samuel_io.c **** 
 776:../samuel/samuel_io.c ****  //-----------------------------------------------
 777:../samuel/samuel_io.c ****  // BCCU Vorgaben
 778:../samuel/samuel_io.c **** 
 779:../samuel/samuel_io.c ****  void bcuInit(void)
 780:../samuel/samuel_io.c ****  {
 3857              	 .loc 3 780 0
 3858              	 .cfi_startproc
 3859 0000 80B5     	 push {r7,lr}
 3860              	.LCFI93:
 3861              	 .cfi_def_cfa_offset 8
 3862              	 .cfi_offset 7,-8
 3863              	 .cfi_offset 14,-4
 3864 0002 00AF     	 add r7,sp,#0
 3865              	.LCFI94:
 3866              	 .cfi_def_cfa_register 7
 781:../samuel/samuel_io.c **** 		switch  (RegOnOff)
 3867              	 .loc 3 781 0
 3868 0004 194B     	 ldr r3,.L170
 3869 0006 1B78     	 ldrb r3,[r3]
 3870 0008 052B     	 cmp r3,#5
 3871 000a 2CD8     	 bhi .L169
 3872 000c 9A00     	 lsl r2,r3,#2
 3873 000e 184B     	 ldr r3,.L170+4
 3874 0010 D318     	 add r3,r2,r3
 3875 0012 1B68     	 ldr r3,[r3]
 3876 0014 9F46     	 mov pc,r3
 3877              	 .section .rodata.bcuInit,"a",%progbits
 3878              	 .align 2
 3879              	.L163:
 3880 0000 66000000 	 .word .L169
 3881 0004 16000000 	 .word .L162
 3882 0008 24000000 	 .word .L164
 3883 000c 32000000 	 .word .L165
 3884 0010 42000000 	 .word .L166
 3885 0014 54000000 	 .word .L167
 3886              	 .section .text.bcuInit
 3887              	.L162:
 782:../samuel/samuel_io.c **** 		{
 783:../samuel/samuel_io.c **** 		case RegOnOff_0Proz : 		dimAkt_Ww = 0;
 3888              	 .loc 3 783 0
 3889 0016 174B     	 ldr r3,.L170+8
 3890 0018 0022     	 mov r2,#0
 3891 001a 1A80     	 strh r2,[r3]
 784:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0;
 3892              	 .loc 3 784 0
 3893 001c 164B     	 ldr r3,.L170+12
 3894 001e 0022     	 mov r2,#0
 3895 0020 1A80     	 strh r2,[r3]
 785:../samuel/samuel_io.c **** 									break;
 3896              	 .loc 3 785 0
 3897 0022 21E0     	 b .L160
 3898              	.L164:
 786:../samuel/samuel_io.c **** 		case RegOnOff_100Proz : 	dimAkt_Ww = 0x7fff;
 3899              	 .loc 3 786 0
 3900 0024 134B     	 ldr r3,.L170+8
 3901 0026 154A     	 ldr r2,.L170+16
 3902 0028 1A80     	 strh r2,[r3]
 787:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = 0x7fff;
 3903              	 .loc 3 787 0
 3904 002a 134B     	 ldr r3,.L170+12
 3905 002c 134A     	 ldr r2,.L170+16
 3906 002e 1A80     	 strh r2,[r3]
 788:../samuel/samuel_io.c **** 									break;
 3907              	 .loc 3 788 0
 3908 0030 1AE0     	 b .L160
 3909              	.L165:
 789:../samuel/samuel_io.c **** 		case RegOnOff_N1value : 	dimAkt_Ww = dimNorm1_Ww;
 3910              	 .loc 3 789 0
 3911 0032 134B     	 ldr r3,.L170+20
 3912 0034 1A88     	 ldrh r2,[r3]
 3913 0036 0F4B     	 ldr r3,.L170+8
 3914 0038 1A80     	 strh r2,[r3]
 790:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm1_Cw;
 3915              	 .loc 3 790 0
 3916 003a 124B     	 ldr r3,.L170+24
 3917 003c 1A88     	 ldrh r2,[r3]
 3918 003e 0E4B     	 ldr r3,.L170+12
 3919 0040 1A80     	 strh r2,[r3]
 3920              	.L166:
 791:../samuel/samuel_io.c **** 		case RegOnOff_N2value : 	dimAkt_Ww = dimNorm2_Ww;
 3921              	 .loc 3 791 0
 3922 0042 114B     	 ldr r3,.L170+28
 3923 0044 1A88     	 ldrh r2,[r3]
 3924 0046 0B4B     	 ldr r3,.L170+8
 3925 0048 1A80     	 strh r2,[r3]
 792:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimNorm2_Cw;
 3926              	 .loc 3 792 0
 3927 004a 104B     	 ldr r3,.L170+32
 3928 004c 1A88     	 ldrh r2,[r3]
 3929 004e 0A4B     	 ldr r3,.L170+12
 3930 0050 1A80     	 strh r2,[r3]
 793:../samuel/samuel_io.c **** 									break;
 3931              	 .loc 3 793 0
 3932 0052 09E0     	 b .L160
 3933              	.L167:
 794:../samuel/samuel_io.c **** 		case RegOnOff_OFFvalue : 	dimAkt_Ww = dimOff_Ww;
 3934              	 .loc 3 794 0
 3935 0054 0E4B     	 ldr r3,.L170+36
 3936 0056 1A88     	 ldrh r2,[r3]
 3937 0058 064B     	 ldr r3,.L170+8
 3938 005a 1A80     	 strh r2,[r3]
 795:../samuel/samuel_io.c **** 				 	 	 	 	 	dimAkt_Cw = dimOff_Cw;
 3939              	 .loc 3 795 0
 3940 005c 0D4B     	 ldr r3,.L170+40
 3941 005e 1A88     	 ldrh r2,[r3]
 3942 0060 054B     	 ldr r3,.L170+12
 3943 0062 1A80     	 strh r2,[r3]
 796:../samuel/samuel_io.c **** 									break;
 3944              	 .loc 3 796 0
 3945 0064 00E0     	 b .L160
 3946              	.L169:
 797:../samuel/samuel_io.c **** 		default:
 798:../samuel/samuel_io.c **** 									break;
 3947              	 .loc 3 798 0
 3948 0066 C046     	 mov r8,r8
 3949              	.L160:
 799:../samuel/samuel_io.c **** 		}
 800:../samuel/samuel_io.c **** 
 801:../samuel/samuel_io.c ****  }
 3950              	 .loc 3 801 0
 3951 0068 BD46     	 mov sp,r7
 3952              	 
 3953 006a 80BD     	 pop {r7,pc}
 3954              	.L171:
 3955              	 .align 2
 3956              	.L170:
 3957 006c 00000000 	 .word RegOnOff
 3958 0070 00000000 	 .word .L163
 3959 0074 00000000 	 .word dimAkt_Ww
 3960 0078 00000000 	 .word dimAkt_Cw
 3961 007c FF7F0000 	 .word 32767
 3962 0080 00000000 	 .word dimNorm1_Ww
 3963 0084 00000000 	 .word dimNorm1_Cw
 3964 0088 00000000 	 .word dimNorm2_Ww
 3965 008c 00000000 	 .word dimNorm2_Cw
 3966 0090 00000000 	 .word dimOff_Ww
 3967 0094 00000000 	 .word dimOff_Cw
 3968              	 .cfi_endproc
 3969              	.LFE328:
 3971              	 .section .text.bcuUebergabe,"ax",%progbits
 3972              	 .align 2
 3973              	 .global bcuUebergabe
 3974              	 .code 16
 3975              	 .thumb_func
 3977              	bcuUebergabe:
 3978              	.LFB329:
 802:../samuel/samuel_io.c ****  //----------------------------------
 803:../samuel/samuel_io.c **** 
 804:../samuel/samuel_io.c ****  void bcuUebergabe(void)
 805:../samuel/samuel_io.c ****  {
 3979              	 .loc 3 805 0
 3980              	 .cfi_startproc
 3981 0000 80B5     	 push {r7,lr}
 3982              	.LCFI95:
 3983              	 .cfi_def_cfa_offset 8
 3984              	 .cfi_offset 7,-8
 3985              	 .cfi_offset 14,-4
 3986 0002 00AF     	 add r7,sp,#0
 3987              	.LCFI96:
 3988              	 .cfi_def_cfa_register 7
 806:../samuel/samuel_io.c **** 
 807:../samuel/samuel_io.c **** //	 PDM_BCCU_AbortLinearWalk(&PDM_BCCU_0);
 808:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_1);
 809:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_2);
 810:../samuel/samuel_io.c **** 	//  PDM_BCCU_AbortLinearWalk(&PDM_BCCU_3);
 811:../samuel/samuel_io.c **** 
 812:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_0,Farbe_ww2);
 3989              	 .loc 3 812 0
 3990 0004 204B     	 ldr r3,.L173
 3991 0006 1B88     	 ldrh r3,[r3]
 3992 0008 1A1C     	 mov r2,r3
 3993 000a 204B     	 ldr r3,.L173+4
 3994 000c 181C     	 mov r0,r3
 3995 000e 111C     	 mov r1,r2
 3996 0010 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 813:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_1,Farbe_cw2);
 3997              	 .loc 3 813 0
 3998 0014 1E4B     	 ldr r3,.L173+8
 3999 0016 1B88     	 ldrh r3,[r3]
 4000 0018 1A1C     	 mov r2,r3
 4001 001a 1E4B     	 ldr r3,.L173+12
 4002 001c 181C     	 mov r0,r3
 4003 001e 111C     	 mov r1,r2
 4004 0020 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 814:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_2,Farbe_ww1);
 4005              	 .loc 3 814 0
 4006 0024 1C4B     	 ldr r3,.L173+16
 4007 0026 1B88     	 ldrh r3,[r3]
 4008 0028 1A1C     	 mov r2,r3
 4009 002a 1C4B     	 ldr r3,.L173+20
 4010 002c 181C     	 mov r0,r3
 4011 002e 111C     	 mov r1,r2
 4012 0030 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 815:../samuel/samuel_io.c ****  PDM_BCCU_SetIntensity(&PDM_BCCU_3,Farbe_cw1);
 4013              	 .loc 3 815 0
 4014 0034 1A4B     	 ldr r3,.L173+24
 4015 0036 1B88     	 ldrh r3,[r3]
 4016 0038 1A1C     	 mov r2,r3
 4017 003a 1A4B     	 ldr r3,.L173+28
 4018 003c 181C     	 mov r0,r3
 4019 003e 111C     	 mov r1,r2
 4020 0040 FFF7FEFF 	 bl PDM_BCCU_SetIntensity
 816:../samuel/samuel_io.c **** 
 817:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_0,linearwalk_ww2); // Go to target intensity slowly
 4021              	 .loc 3 817 0
 4022 0044 184B     	 ldr r3,.L173+32
 4023 0046 1B88     	 ldrh r3,[r3]
 4024 0048 1A1C     	 mov r2,r3
 4025 004a 104B     	 ldr r3,.L173+4
 4026 004c 181C     	 mov r0,r3
 4027 004e 111C     	 mov r1,r2
 4028 0050 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 818:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_1,linearwalk_cw2); // Go to target intensity slowly
 4029              	 .loc 3 818 0
 4030 0054 154B     	 ldr r3,.L173+36
 4031 0056 1B88     	 ldrh r3,[r3]
 4032 0058 1A1C     	 mov r2,r3
 4033 005a 0E4B     	 ldr r3,.L173+12
 4034 005c 181C     	 mov r0,r3
 4035 005e 111C     	 mov r1,r2
 4036 0060 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 819:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_2,linearwalk_ww1); // Go to target intensity slowly
 4037              	 .loc 3 819 0
 4038 0064 124B     	 ldr r3,.L173+40
 4039 0066 1B88     	 ldrh r3,[r3]
 4040 0068 1A1C     	 mov r2,r3
 4041 006a 0C4B     	 ldr r3,.L173+20
 4042 006c 181C     	 mov r0,r3
 4043 006e 111C     	 mov r1,r2
 4044 0070 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 820:../samuel/samuel_io.c ****  PDM_BCCU_SetLinearWalk(&PDM_BCCU_3,linearwalk_cw1); // Go to target intensity slowly
 4045              	 .loc 3 820 0
 4046 0074 0F4B     	 ldr r3,.L173+44
 4047 0076 1B88     	 ldrh r3,[r3]
 4048 0078 1A1C     	 mov r2,r3
 4049 007a 0A4B     	 ldr r3,.L173+28
 4050 007c 181C     	 mov r0,r3
 4051 007e 111C     	 mov r1,r2
 4052 0080 FFF7FEFF 	 bl PDM_BCCU_SetLinearWalk
 821:../samuel/samuel_io.c **** 
 822:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_0);
 823:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_2);
 824:../samuel/samuel_io.c **** 
 825:../samuel/samuel_io.c ****  //PDM_BCCU_StartLinearWalk(&PDM_BCCU_1);
 826:../samuel/samuel_io.c **** // PDM_BCCU_StartLinearWalk(&PDM_BCCU_3);
 827:../samuel/samuel_io.c ****  }
 4053              	 .loc 3 827 0
 4054 0084 BD46     	 mov sp,r7
 4055              	 
 4056 0086 80BD     	 pop {r7,pc}
 4057              	.L174:
 4058              	 .align 2
 4059              	.L173:
 4060 0088 00000000 	 .word Farbe_ww2
 4061 008c 00000000 	 .word PDM_BCCU_0
 4062 0090 00000000 	 .word Farbe_cw2
 4063 0094 00000000 	 .word PDM_BCCU_1
 4064 0098 00000000 	 .word Farbe_ww1
 4065 009c 00000000 	 .word PDM_BCCU_2
 4066 00a0 00000000 	 .word Farbe_cw1
 4067 00a4 00000000 	 .word PDM_BCCU_3
 4068 00a8 00000000 	 .word linearwalk_ww2
 4069 00ac 00000000 	 .word linearwalk_cw2
 4070 00b0 00000000 	 .word linearwalk_ww1
 4071 00b4 00000000 	 .word linearwalk_cw1
 4072              	 .cfi_endproc
 4073              	.LFE329:
 4075              	 .section .text.bcuAktBerechnung,"ax",%progbits
 4076              	 .align 2
 4077              	 .global bcuAktBerechnung
 4078              	 .code 16
 4079              	 .thumb_func
 4081              	bcuAktBerechnung:
 4082              	.LFB330:
 828:../samuel/samuel_io.c ****  //----------------------------------
 829:../samuel/samuel_io.c **** 
 830:../samuel/samuel_io.c **** 
 831:../samuel/samuel_io.c ****  //----------------------------------
 832:../samuel/samuel_io.c ****  void bcuAktBerechnung(void)
 833:../samuel/samuel_io.c ****   {
 4083              	 .loc 3 833 0
 4084              	 .cfi_startproc
 4085 0000 80B5     	 push {r7,lr}
 4086              	.LCFI97:
 4087              	 .cfi_def_cfa_offset 8
 4088              	 .cfi_offset 7,-8
 4089              	 .cfi_offset 14,-4
 4090 0002 82B0     	 sub sp,sp,#8
 4091              	.LCFI98:
 4092              	 .cfi_def_cfa_offset 16
 4093 0004 00AF     	 add r7,sp,#0
 4094              	.LCFI99:
 4095              	 .cfi_def_cfa_register 7
 834:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 835:../samuel/samuel_io.c **** 
 836:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4096              	 .loc 3 836 0
 4097 0006 284B     	 ldr r3,.L176
 4098 0008 1B88     	 ldrh r3,[r3]
 4099 000a 1B0A     	 lsr r3,r3,#8
 4100 000c 9AB2     	 uxth r2,r3
 4101 000e 274B     	 ldr r3,.L176+4
 4102 0010 1A80     	 strh r2,[r3]
 837:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4103              	 .loc 3 837 0
 4104 0012 254B     	 ldr r3,.L176
 4105 0014 1B88     	 ldrh r3,[r3]
 4106 0016 1B0A     	 lsr r3,r3,#8
 4107 0018 9AB2     	 uxth r2,r3
 4108 001a 254B     	 ldr r3,.L176+8
 4109 001c 1A80     	 strh r2,[r3]
 838:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4110              	 .loc 3 838 0
 4111 001e 224B     	 ldr r3,.L176
 4112 0020 1B88     	 ldrh r3,[r3]
 4113 0022 FF22     	 mov r2,#255
 4114 0024 1340     	 and r3,r2
 4115 0026 9AB2     	 uxth r2,r3
 4116 0028 224B     	 ldr r3,.L176+12
 4117 002a 1A80     	 strh r2,[r3]
 839:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4118              	 .loc 3 839 0
 4119 002c 1E4B     	 ldr r3,.L176
 4120 002e 1B88     	 ldrh r3,[r3]
 4121 0030 FF22     	 mov r2,#255
 4122 0032 1340     	 and r3,r2
 4123 0034 9AB2     	 uxth r2,r3
 4124 0036 204B     	 ldr r3,.L176+16
 4125 0038 1A80     	 strh r2,[r3]
 840:../samuel/samuel_io.c **** 
 841:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4126              	 .loc 3 841 0
 4127 003a 204B     	 ldr r3,.L176+20
 4128 003c 1B88     	 ldrh r3,[r3]
 4129 003e 1A1C     	 mov r2,r3
 4130 0040 1A4B     	 ldr r3,.L176+4
 4131 0042 1B88     	 ldrh r3,[r3]
 4132 0044 5343     	 mul r3,r2
 4133 0046 7B60     	 str r3,[r7,#4]
 842:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4134              	 .loc 3 842 0
 4135 0048 7B68     	 ldr r3,[r7,#4]
 4136 004a 1B0A     	 lsr r3,r3,#8
 4137 004c 1B09     	 lsr r3,r3,#4
 4138 004e 9AB2     	 uxth r2,r3
 4139 0050 1B4B     	 ldr r3,.L176+24
 4140 0052 1A80     	 strh r2,[r3]
 843:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4141              	 .loc 3 843 0
 4142 0054 194B     	 ldr r3,.L176+20
 4143 0056 1B88     	 ldrh r3,[r3]
 4144 0058 1A1C     	 mov r2,r3
 4145 005a 164B     	 ldr r3,.L176+12
 4146 005c 1B88     	 ldrh r3,[r3]
 4147 005e 5343     	 mul r3,r2
 4148 0060 7B60     	 str r3,[r7,#4]
 844:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4149              	 .loc 3 844 0
 4150 0062 7B68     	 ldr r3,[r7,#4]
 4151 0064 1B0A     	 lsr r3,r3,#8
 4152 0066 1B09     	 lsr r3,r3,#4
 4153 0068 9AB2     	 uxth r2,r3
 4154 006a 164B     	 ldr r3,.L176+28
 4155 006c 1A80     	 strh r2,[r3]
 845:../samuel/samuel_io.c **** 
 846:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4156              	 .loc 3 846 0
 4157 006e 164B     	 ldr r3,.L176+32
 4158 0070 1B88     	 ldrh r3,[r3]
 4159 0072 1A1C     	 mov r2,r3
 4160 0074 0E4B     	 ldr r3,.L176+8
 4161 0076 1B88     	 ldrh r3,[r3]
 4162 0078 5343     	 mul r3,r2
 4163 007a 7B60     	 str r3,[r7,#4]
 847:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4164              	 .loc 3 847 0
 4165 007c 7B68     	 ldr r3,[r7,#4]
 4166 007e 1B0A     	 lsr r3,r3,#8
 4167 0080 1B09     	 lsr r3,r3,#4
 4168 0082 9AB2     	 uxth r2,r3
 4169 0084 114B     	 ldr r3,.L176+36
 4170 0086 1A80     	 strh r2,[r3]
 848:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4171              	 .loc 3 848 0
 4172 0088 0F4B     	 ldr r3,.L176+32
 4173 008a 1B88     	 ldrh r3,[r3]
 4174 008c 1A1C     	 mov r2,r3
 4175 008e 0A4B     	 ldr r3,.L176+16
 4176 0090 1B88     	 ldrh r3,[r3]
 4177 0092 5343     	 mul r3,r2
 4178 0094 7B60     	 str r3,[r7,#4]
 849:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4179              	 .loc 3 849 0
 4180 0096 7B68     	 ldr r3,[r7,#4]
 4181 0098 1B0A     	 lsr r3,r3,#8
 4182 009a 1B09     	 lsr r3,r3,#4
 4183 009c 9AB2     	 uxth r2,r3
 4184 009e 0C4B     	 ldr r3,.L176+40
 4185 00a0 1A80     	 strh r2,[r3]
 850:../samuel/samuel_io.c ****   }
 4186              	 .loc 3 850 0
 4187 00a2 BD46     	 mov sp,r7
 4188 00a4 02B0     	 add sp,sp,#8
 4189              	 
 4190 00a6 80BD     	 pop {r7,pc}
 4191              	.L177:
 4192              	 .align 2
 4193              	.L176:
 4194 00a8 00000000 	 .word Farbe_wwcw_Quot_gen
 4195 00ac 00000000 	 .word Farbe_ww1_Quot
 4196 00b0 00000000 	 .word Farbe_cw1_Quot
 4197 00b4 00000000 	 .word Farbe_ww2_Quot
 4198 00b8 00000000 	 .word Farbe_cw2_Quot
 4199 00bc 00000000 	 .word dimAkt_Ww
 4200 00c0 00000000 	 .word Farbe_ww1
 4201 00c4 00000000 	 .word Farbe_ww2
 4202 00c8 00000000 	 .word dimAkt_Cw
 4203 00cc 00000000 	 .word Farbe_cw1
 4204 00d0 00000000 	 .word Farbe_cw2
 4205              	 .cfi_endproc
 4206              	.LFE330:
 4208              	 .section .text.bcudirAktBerechnung,"ax",%progbits
 4209              	 .align 2
 4210              	 .global bcudirAktBerechnung
 4211              	 .code 16
 4212              	 .thumb_func
 4214              	bcudirAktBerechnung:
 4215              	.LFB331:
 851:../samuel/samuel_io.c **** 
 852:../samuel/samuel_io.c ****  //----------------------------------  //n+l
 853:../samuel/samuel_io.c ****  // direkte Lichtübergabe, 8 bit wert wird direkt übergeben ohne farbquotient
 854:../samuel/samuel_io.c ****  // werte eingabe direkt in die variable  Farbe_ww1_Quot
 855:../samuel/samuel_io.c ****  void bcudirAktBerechnung(void)
 856:../samuel/samuel_io.c **** 
 857:../samuel/samuel_io.c ****   {
 4216              	 .loc 3 857 0
 4217              	 .cfi_startproc
 4218 0000 80B5     	 push {r7,lr}
 4219              	.LCFI100:
 4220              	 .cfi_def_cfa_offset 8
 4221              	 .cfi_offset 7,-8
 4222              	 .cfi_offset 14,-4
 4223 0002 82B0     	 sub sp,sp,#8
 4224              	.LCFI101:
 4225              	 .cfi_def_cfa_offset 16
 4226 0004 00AF     	 add r7,sp,#0
 4227              	.LCFI102:
 4228              	 .cfi_def_cfa_register 7
 858:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 859:../samuel/samuel_io.c **** 
 860:../samuel/samuel_io.c **** 	 Farbe_wwcw_Quot_gen=0xffff;
 4229              	 .loc 3 860 0
 4230 0006 2A4B     	 ldr r3,.L179
 4231 0008 0122     	 mov r2,#1
 4232 000a 5242     	 neg r2,r2
 4233 000c 1A80     	 strh r2,[r3]
 861:../samuel/samuel_io.c ****      Farbe_ww1_Quot = Farbe_wwcw_Quot_gen>>8;
 4234              	 .loc 3 861 0
 4235 000e 284B     	 ldr r3,.L179
 4236 0010 1B88     	 ldrh r3,[r3]
 4237 0012 1B0A     	 lsr r3,r3,#8
 4238 0014 9AB2     	 uxth r2,r3
 4239 0016 274B     	 ldr r3,.L179+4
 4240 0018 1A80     	 strh r2,[r3]
 862:../samuel/samuel_io.c ****      Farbe_cw1_Quot = Farbe_wwcw_Quot_gen>>8;
 4241              	 .loc 3 862 0
 4242 001a 254B     	 ldr r3,.L179
 4243 001c 1B88     	 ldrh r3,[r3]
 4244 001e 1B0A     	 lsr r3,r3,#8
 4245 0020 9AB2     	 uxth r2,r3
 4246 0022 254B     	 ldr r3,.L179+8
 4247 0024 1A80     	 strh r2,[r3]
 863:../samuel/samuel_io.c ****      Farbe_ww2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4248              	 .loc 3 863 0
 4249 0026 224B     	 ldr r3,.L179
 4250 0028 1B88     	 ldrh r3,[r3]
 4251 002a FF22     	 mov r2,#255
 4252 002c 1340     	 and r3,r2
 4253 002e 9AB2     	 uxth r2,r3
 4254 0030 224B     	 ldr r3,.L179+12
 4255 0032 1A80     	 strh r2,[r3]
 864:../samuel/samuel_io.c ****      Farbe_cw2_Quot = Farbe_wwcw_Quot_gen & 0xff;
 4256              	 .loc 3 864 0
 4257 0034 1E4B     	 ldr r3,.L179
 4258 0036 1B88     	 ldrh r3,[r3]
 4259 0038 FF22     	 mov r2,#255
 4260 003a 1340     	 and r3,r2
 4261 003c 9AB2     	 uxth r2,r3
 4262 003e 204B     	 ldr r3,.L179+16
 4263 0040 1A80     	 strh r2,[r3]
 865:../samuel/samuel_io.c **** 
 866:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww1_Quot;
 4264              	 .loc 3 866 0
 4265 0042 204B     	 ldr r3,.L179+20
 4266 0044 1B88     	 ldrh r3,[r3]
 4267 0046 1A1C     	 mov r2,r3
 4268 0048 1A4B     	 ldr r3,.L179+4
 4269 004a 1B88     	 ldrh r3,[r3]
 4270 004c 5343     	 mul r3,r2
 4271 004e 7B60     	 str r3,[r7,#4]
 867:../samuel/samuel_io.c **** 	 Farbe_ww1 = (VarA / 0x100) >>4;
 4272              	 .loc 3 867 0
 4273 0050 7B68     	 ldr r3,[r7,#4]
 4274 0052 1B0A     	 lsr r3,r3,#8
 4275 0054 1B09     	 lsr r3,r3,#4
 4276 0056 9AB2     	 uxth r2,r3
 4277 0058 1B4B     	 ldr r3,.L179+24
 4278 005a 1A80     	 strh r2,[r3]
 868:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Farbe_ww2_Quot;
 4279              	 .loc 3 868 0
 4280 005c 194B     	 ldr r3,.L179+20
 4281 005e 1B88     	 ldrh r3,[r3]
 4282 0060 1A1C     	 mov r2,r3
 4283 0062 164B     	 ldr r3,.L179+12
 4284 0064 1B88     	 ldrh r3,[r3]
 4285 0066 5343     	 mul r3,r2
 4286 0068 7B60     	 str r3,[r7,#4]
 869:../samuel/samuel_io.c **** 	 Farbe_ww2 = (VarA / 0x100) >>4;
 4287              	 .loc 3 869 0
 4288 006a 7B68     	 ldr r3,[r7,#4]
 4289 006c 1B0A     	 lsr r3,r3,#8
 4290 006e 1B09     	 lsr r3,r3,#4
 4291 0070 9AB2     	 uxth r2,r3
 4292 0072 164B     	 ldr r3,.L179+28
 4293 0074 1A80     	 strh r2,[r3]
 870:../samuel/samuel_io.c **** 
 871:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw1_Quot;
 4294              	 .loc 3 871 0
 4295 0076 164B     	 ldr r3,.L179+32
 4296 0078 1B88     	 ldrh r3,[r3]
 4297 007a 1A1C     	 mov r2,r3
 4298 007c 0E4B     	 ldr r3,.L179+8
 4299 007e 1B88     	 ldrh r3,[r3]
 4300 0080 5343     	 mul r3,r2
 4301 0082 7B60     	 str r3,[r7,#4]
 872:../samuel/samuel_io.c **** 	 Farbe_cw1 = (VarA / 0x100) >>4;
 4302              	 .loc 3 872 0
 4303 0084 7B68     	 ldr r3,[r7,#4]
 4304 0086 1B0A     	 lsr r3,r3,#8
 4305 0088 1B09     	 lsr r3,r3,#4
 4306 008a 9AB2     	 uxth r2,r3
 4307 008c 114B     	 ldr r3,.L179+36
 4308 008e 1A80     	 strh r2,[r3]
 873:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Farbe_cw2_Quot;
 4309              	 .loc 3 873 0
 4310 0090 0F4B     	 ldr r3,.L179+32
 4311 0092 1B88     	 ldrh r3,[r3]
 4312 0094 1A1C     	 mov r2,r3
 4313 0096 0A4B     	 ldr r3,.L179+16
 4314 0098 1B88     	 ldrh r3,[r3]
 4315 009a 5343     	 mul r3,r2
 4316 009c 7B60     	 str r3,[r7,#4]
 874:../samuel/samuel_io.c **** 	 Farbe_cw2 = (VarA / 0x100) >>4;
 4317              	 .loc 3 874 0
 4318 009e 7B68     	 ldr r3,[r7,#4]
 4319 00a0 1B0A     	 lsr r3,r3,#8
 4320 00a2 1B09     	 lsr r3,r3,#4
 4321 00a4 9AB2     	 uxth r2,r3
 4322 00a6 0C4B     	 ldr r3,.L179+40
 4323 00a8 1A80     	 strh r2,[r3]
 875:../samuel/samuel_io.c ****   }
 4324              	 .loc 3 875 0
 4325 00aa BD46     	 mov sp,r7
 4326 00ac 02B0     	 add sp,sp,#8
 4327              	 
 4328 00ae 80BD     	 pop {r7,pc}
 4329              	.L180:
 4330              	 .align 2
 4331              	.L179:
 4332 00b0 00000000 	 .word Farbe_wwcw_Quot_gen
 4333 00b4 00000000 	 .word Farbe_ww1_Quot
 4334 00b8 00000000 	 .word Farbe_cw1_Quot
 4335 00bc 00000000 	 .word Farbe_ww2_Quot
 4336 00c0 00000000 	 .word Farbe_cw2_Quot
 4337 00c4 00000000 	 .word dimAkt_Ww
 4338 00c8 00000000 	 .word Farbe_ww1
 4339 00cc 00000000 	 .word Farbe_ww2
 4340 00d0 00000000 	 .word dimAkt_Cw
 4341 00d4 00000000 	 .word Farbe_cw1
 4342 00d8 00000000 	 .word Farbe_cw2
 4343              	 .cfi_endproc
 4344              	.LFE331:
 4346              	 .section .text.bcuColorBerechnung,"ax",%progbits
 4347              	 .align 2
 4348              	 .global bcuColorBerechnung
 4349              	 .code 16
 4350              	 .thumb_func
 4352              	bcuColorBerechnung:
 4353              	.LFB332:
 876:../samuel/samuel_io.c ****  //----------------------------------
 877:../samuel/samuel_io.c **** 
 878:../samuel/samuel_io.c ****  void bcuColorBerechnung(void)
 879:../samuel/samuel_io.c ****   {
 4354              	 .loc 3 879 0
 4355              	 .cfi_startproc
 4356 0000 80B5     	 push {r7,lr}
 4357              	.LCFI103:
 4358              	 .cfi_def_cfa_offset 8
 4359              	 .cfi_offset 7,-8
 4360              	 .cfi_offset 14,-4
 4361 0002 82B0     	 sub sp,sp,#8
 4362              	.LCFI104:
 4363              	 .cfi_def_cfa_offset 16
 4364 0004 00AF     	 add r7,sp,#0
 4365              	.LCFI105:
 4366              	 .cfi_def_cfa_register 7
 880:../samuel/samuel_io.c **** 	 uint32_t 	VarA;
 881:../samuel/samuel_io.c **** 
 882:../samuel/samuel_io.c **** 	 dimAkt_Ww = 0xffff;
 4367              	 .loc 3 882 0
 4368 0006 1E4B     	 ldr r3,.L182
 4369 0008 0122     	 mov r2,#1
 4370 000a 5242     	 neg r2,r2
 4371 000c 1A80     	 strh r2,[r3]
 883:../samuel/samuel_io.c **** 	 VarA = dimAkt_Ww * Brightness_Gen;
 4372              	 .loc 3 883 0
 4373 000e 1C4B     	 ldr r3,.L182
 4374 0010 1B88     	 ldrh r3,[r3]
 4375 0012 1A1C     	 mov r2,r3
 4376 0014 1B4B     	 ldr r3,.L182+4
 4377 0016 1B88     	 ldrh r3,[r3]
 4378 0018 5343     	 mul r3,r2
 4379 001a 7B60     	 str r3,[r7,#4]
 884:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4380              	 .loc 3 884 0
 4381 001c 7B68     	 ldr r3,[r7,#4]
 4382 001e 1B0C     	 lsr r3,r3,#16
 4383 0020 7B60     	 str r3,[r7,#4]
 885:../samuel/samuel_io.c **** 	 VarA = VarA * (0xffff - ColorQuot_Gen);
 4384              	 .loc 3 885 0
 4385 0022 194B     	 ldr r3,.L182+8
 4386 0024 1B88     	 ldrh r3,[r3]
 4387 0026 1A1C     	 mov r2,r3
 4388 0028 184B     	 ldr r3,.L182+12
 4389 002a 9B1A     	 sub r3,r3,r2
 4390 002c 1A1C     	 mov r2,r3
 4391 002e 7B68     	 ldr r3,[r7,#4]
 4392 0030 5343     	 mul r3,r2
 4393 0032 7B60     	 str r3,[r7,#4]
 886:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4394              	 .loc 3 886 0
 4395 0034 7B68     	 ldr r3,[r7,#4]
 4396 0036 1B0C     	 lsr r3,r3,#16
 4397 0038 7B60     	 str r3,[r7,#4]
 887:../samuel/samuel_io.c **** 	 dimAkt_Ww = VarA;
 4398              	 .loc 3 887 0
 4399 003a 7B68     	 ldr r3,[r7,#4]
 4400 003c 9AB2     	 uxth r2,r3
 4401 003e 104B     	 ldr r3,.L182
 4402 0040 1A80     	 strh r2,[r3]
 888:../samuel/samuel_io.c **** 
 889:../samuel/samuel_io.c **** 	 dimAkt_Cw = 0xffff;
 4403              	 .loc 3 889 0
 4404 0042 134B     	 ldr r3,.L182+16
 4405 0044 0122     	 mov r2,#1
 4406 0046 5242     	 neg r2,r2
 4407 0048 1A80     	 strh r2,[r3]
 890:../samuel/samuel_io.c **** 	 VarA = dimAkt_Cw * Brightness_Gen;
 4408              	 .loc 3 890 0
 4409 004a 114B     	 ldr r3,.L182+16
 4410 004c 1B88     	 ldrh r3,[r3]
 4411 004e 1A1C     	 mov r2,r3
 4412 0050 0C4B     	 ldr r3,.L182+4
 4413 0052 1B88     	 ldrh r3,[r3]
 4414 0054 5343     	 mul r3,r2
 4415 0056 7B60     	 str r3,[r7,#4]
 891:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4416              	 .loc 3 891 0
 4417 0058 7B68     	 ldr r3,[r7,#4]
 4418 005a 1B0C     	 lsr r3,r3,#16
 4419 005c 7B60     	 str r3,[r7,#4]
 892:../samuel/samuel_io.c **** 	 VarA = VarA * ColorQuot_Gen;
 4420              	 .loc 3 892 0
 4421 005e 0A4B     	 ldr r3,.L182+8
 4422 0060 1B88     	 ldrh r3,[r3]
 4423 0062 1A1C     	 mov r2,r3
 4424 0064 7B68     	 ldr r3,[r7,#4]
 4425 0066 5343     	 mul r3,r2
 4426 0068 7B60     	 str r3,[r7,#4]
 893:../samuel/samuel_io.c **** 	 VarA = VarA>>16;
 4427              	 .loc 3 893 0
 4428 006a 7B68     	 ldr r3,[r7,#4]
 4429 006c 1B0C     	 lsr r3,r3,#16
 4430 006e 7B60     	 str r3,[r7,#4]
 894:../samuel/samuel_io.c **** 	 dimAkt_Cw = VarA;
 4431              	 .loc 3 894 0
 4432 0070 7B68     	 ldr r3,[r7,#4]
 4433 0072 9AB2     	 uxth r2,r3
 4434 0074 064B     	 ldr r3,.L182+16
 4435 0076 1A80     	 strh r2,[r3]
 895:../samuel/samuel_io.c ****   }
 4436              	 .loc 3 895 0
 4437 0078 BD46     	 mov sp,r7
 4438 007a 02B0     	 add sp,sp,#8
 4439              	 
 4440 007c 80BD     	 pop {r7,pc}
 4441              	.L183:
 4442 007e C046     	 .align 2
 4443              	.L182:
 4444 0080 00000000 	 .word dimAkt_Ww
 4445 0084 00000000 	 .word Brightness_Gen
 4446 0088 00000000 	 .word ColorQuot_Gen
 4447 008c FFFF0000 	 .word 65535
 4448 0090 00000000 	 .word dimAkt_Cw
 4449              	 .cfi_endproc
 4450              	.LFE332:
 4452              	 .section .text.Offlight_zahler_write,"ax",%progbits
 4453              	 .align 2
 4454              	 .global Offlight_zahler_write
 4455              	 .code 16
 4456              	 .thumb_func
 4458              	Offlight_zahler_write:
 4459              	.LFB333:
 896:../samuel/samuel_io.c ****  //----------------------------------
 897:../samuel/samuel_io.c **** 
 898:../samuel/samuel_io.c **** 
 899:../samuel/samuel_io.c **** 
 900:../samuel/samuel_io.c ****  void Offlight_zahler_write(void)
 901:../samuel/samuel_io.c ****  {
 4460              	 .loc 3 901 0
 4461              	 .cfi_startproc
 4462 0000 80B5     	 push {r7,lr}
 4463              	.LCFI106:
 4464              	 .cfi_def_cfa_offset 8
 4465              	 .cfi_offset 7,-8
 4466              	 .cfi_offset 14,-4
 4467 0002 82B0     	 sub sp,sp,#8
 4468              	.LCFI107:
 4469              	 .cfi_def_cfa_offset 16
 4470 0004 00AF     	 add r7,sp,#0
 4471              	.LCFI108:
 4472              	 .cfi_def_cfa_register 7
 902:../samuel/samuel_io.c ****      uint8_t a;
 903:../samuel/samuel_io.c **** 	 if(RegOnOff == RegOnOff_OFFvalue)
 4473              	 .loc 3 903 0
 4474 0006 3B4B     	 ldr r3,.L190
 4475 0008 1B78     	 ldrb r3,[r3]
 4476 000a 052B     	 cmp r3,#5
 4477 000c 00D0     	 beq .LCB3715
 4478 000e 6EE0     	 b .L184
 4479              	.LCB3715:
 904:../samuel/samuel_io.c **** 	 {
 905:../samuel/samuel_io.c **** 	 zahler_offlight=zahler_offlight+1;
 4480              	 .loc 3 905 0
 4481 0010 394B     	 ldr r3,.L190+4
 4482 0012 1B88     	 ldrh r3,[r3]
 4483 0014 0133     	 add r3,r3,#1
 4484 0016 9AB2     	 uxth r2,r3
 4485 0018 374B     	 ldr r3,.L190+4
 4486 001a 1A80     	 strh r2,[r3]
 906:../samuel/samuel_io.c **** 
 907:../samuel/samuel_io.c **** 	  if(zahler_offlight >= con_zahler_offlight)
 4487              	 .loc 3 907 0
 4488 001c 364B     	 ldr r3,.L190+4
 4489 001e 1B88     	 ldrh r3,[r3]
 4490 0020 3B2B     	 cmp r3,#59
 4491 0022 64D9     	 bls .L184
 908:../samuel/samuel_io.c **** 	  {
 909:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4492              	 .loc 3 909 0
 4493 0024 344B     	 ldr r3,.L190+4
 4494 0026 0022     	 mov r2,#0
 4495 0028 1A80     	 strh r2,[r3]
 910:../samuel/samuel_io.c **** 			a = read_off_light_EEprom();
 4496              	 .loc 3 910 0
 4497 002a FFF7FEFF 	 bl read_off_light_EEprom
 4498 002e 021C     	 mov r2,r0
 4499 0030 FB1D     	 add r3,r7,#7
 4500 0032 1A70     	 strb r2,[r3]
 911:../samuel/samuel_io.c **** 			if (a == 0x03)
 4501              	 .loc 3 911 0
 4502 0034 FB1D     	 add r3,r7,#7
 4503 0036 1B78     	 ldrb r3,[r3]
 4504 0038 032B     	 cmp r3,#3
 4505 003a 52D1     	 bne .L186
 912:../samuel/samuel_io.c **** 			{
 913:../samuel/samuel_io.c **** 			dimOff_Ww = dimAkt_Ww;
 4506              	 .loc 3 913 0
 4507 003c 2F4B     	 ldr r3,.L190+8
 4508 003e 1A88     	 ldrh r2,[r3]
 4509 0040 2F4B     	 ldr r3,.L190+12
 4510 0042 1A80     	 strh r2,[r3]
 914:../samuel/samuel_io.c **** 			dimOff_Cw = dimAkt_Cw;
 4511              	 .loc 3 914 0
 4512 0044 2F4B     	 ldr r3,.L190+16
 4513 0046 1A88     	 ldrh r2,[r3]
 4514 0048 2F4B     	 ldr r3,.L190+20
 4515 004a 1A80     	 strh r2,[r3]
 915:../samuel/samuel_io.c **** 
 916:../samuel/samuel_io.c **** 			 if ((ReadBuffer2[4] == (dimOff_Ww / 0x100)) && ( ReadBuffer2[5] == (dimOff_Ww & 0xff) ) && (Rea
 4516              	 .loc 3 916 0
 4517 004c 2F4B     	 ldr r3,.L190+24
 4518 004e 1B79     	 ldrb r3,[r3,#4]
 4519 0050 9AB2     	 uxth r2,r3
 4520 0052 2B4B     	 ldr r3,.L190+12
 4521 0054 1B88     	 ldrh r3,[r3]
 4522 0056 1B0A     	 lsr r3,r3,#8
 4523 0058 9BB2     	 uxth r3,r3
 4524 005a 9A42     	 cmp r2,r3
 4525 005c 20D1     	 bne .L187
 4526              	 .loc 3 916 0 is_stmt 0 discriminator 1
 4527 005e 2B4B     	 ldr r3,.L190+24
 4528 0060 5B79     	 ldrb r3,[r3,#5]
 4529 0062 1A1C     	 mov r2,r3
 4530 0064 264B     	 ldr r3,.L190+12
 4531 0066 1B88     	 ldrh r3,[r3]
 4532 0068 191C     	 mov r1,r3
 4533 006a FF23     	 mov r3,#255
 4534 006c 0B40     	 and r3,r1
 4535 006e 9A42     	 cmp r2,r3
 4536 0070 16D1     	 bne .L187
 4537              	 .loc 3 916 0 discriminator 2
 4538 0072 264B     	 ldr r3,.L190+24
 4539 0074 9B79     	 ldrb r3,[r3,#6]
 4540 0076 9AB2     	 uxth r2,r3
 4541 0078 234B     	 ldr r3,.L190+20
 4542 007a 1B88     	 ldrh r3,[r3]
 4543 007c 1B0A     	 lsr r3,r3,#8
 4544 007e 9BB2     	 uxth r3,r3
 4545 0080 9A42     	 cmp r2,r3
 4546 0082 0DD1     	 bne .L187
 4547              	 .loc 3 916 0 discriminator 3
 4548 0084 214B     	 ldr r3,.L190+24
 4549 0086 DB79     	 ldrb r3,[r3,#7]
 4550 0088 1A1C     	 mov r2,r3
 4551 008a 1F4B     	 ldr r3,.L190+20
 4552 008c 1B88     	 ldrh r3,[r3]
 4553 008e 191C     	 mov r1,r3
 4554 0090 FF23     	 mov r3,#255
 4555 0092 0B40     	 and r3,r1
 4556 0094 9A42     	 cmp r2,r3
 4557 0096 03D1     	 bne .L187
 917:../samuel/samuel_io.c **** 			 {
 918:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4558              	 .loc 3 918 0 is_stmt 1
 4559 0098 174B     	 ldr r3,.L190+4
 4560 009a 0022     	 mov r2,#0
 4561 009c 1A80     	 strh r2,[r3]
 4562 009e 23E0     	 b .L189
 4563              	.L187:
 919:../samuel/samuel_io.c **** 			 }
 920:../samuel/samuel_io.c **** 			 else{
 921:../samuel/samuel_io.c **** 		     ReadBuffer2[4] = dimOff_Ww / 0x100;
 4564              	 .loc 3 921 0
 4565 00a0 174B     	 ldr r3,.L190+12
 4566 00a2 1B88     	 ldrh r3,[r3]
 4567 00a4 1B0A     	 lsr r3,r3,#8
 4568 00a6 9BB2     	 uxth r3,r3
 4569 00a8 DAB2     	 uxtb r2,r3
 4570 00aa 184B     	 ldr r3,.L190+24
 4571 00ac 1A71     	 strb r2,[r3,#4]
 922:../samuel/samuel_io.c **** 		     ReadBuffer2[5] = dimOff_Ww & 0xff;
 4572              	 .loc 3 922 0
 4573 00ae 144B     	 ldr r3,.L190+12
 4574 00b0 1B88     	 ldrh r3,[r3]
 4575 00b2 DAB2     	 uxtb r2,r3
 4576 00b4 154B     	 ldr r3,.L190+24
 4577 00b6 5A71     	 strb r2,[r3,#5]
 923:../samuel/samuel_io.c **** 		     ReadBuffer2[6] = dimOff_Cw / 0x100;
 4578              	 .loc 3 923 0
 4579 00b8 134B     	 ldr r3,.L190+20
 4580 00ba 1B88     	 ldrh r3,[r3]
 4581 00bc 1B0A     	 lsr r3,r3,#8
 4582 00be 9BB2     	 uxth r3,r3
 4583 00c0 DAB2     	 uxtb r2,r3
 4584 00c2 124B     	 ldr r3,.L190+24
 4585 00c4 9A71     	 strb r2,[r3,#6]
 924:../samuel/samuel_io.c **** 		     ReadBuffer2[7] = dimOff_Cw & 0xff;
 4586              	 .loc 3 924 0
 4587 00c6 104B     	 ldr r3,.L190+20
 4588 00c8 1B88     	 ldrh r3,[r3]
 4589 00ca DAB2     	 uxtb r2,r3
 4590 00cc 0F4B     	 ldr r3,.L190+24
 4591 00ce DA71     	 strb r2,[r3,#7]
 925:../samuel/samuel_io.c **** 		     a = writeOff_light_B5_EEprom();
 4592              	 .loc 3 925 0
 4593 00d0 FFF7FEFF 	 bl writeOff_light_B5_EEprom
 4594 00d4 021C     	 mov r2,r0
 4595 00d6 FB1D     	 add r3,r7,#7
 4596 00d8 1A70     	 strb r2,[r3]
 926:../samuel/samuel_io.c **** 		     zahler_offlight=0;
 4597              	 .loc 3 926 0
 4598 00da 074B     	 ldr r3,.L190+4
 4599 00dc 0022     	 mov r2,#0
 4600 00de 1A80     	 strh r2,[r3]
 4601 00e0 02E0     	 b .L189
 4602              	.L186:
 927:../samuel/samuel_io.c **** 		    		//    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 928:../samuel/samuel_io.c **** 			 }
 929:../samuel/samuel_io.c **** 			}
 930:../samuel/samuel_io.c **** 			else {
 931:../samuel/samuel_io.c **** 			zahler_offlight = con_zahler_offlight/2;
 4603              	 .loc 3 931 0
 4604 00e2 054B     	 ldr r3,.L190+4
 4605 00e4 1E22     	 mov r2,#30
 4606 00e6 1A80     	 strh r2,[r3]
 4607              	.L189:
 932:../samuel/samuel_io.c **** 			}
 933:../samuel/samuel_io.c **** 
 934:../samuel/samuel_io.c **** 	   zahler_offlight=0;
 4608              	 .loc 3 934 0
 4609 00e8 034B     	 ldr r3,.L190+4
 4610 00ea 0022     	 mov r2,#0
 4611 00ec 1A80     	 strh r2,[r3]
 4612              	.L184:
 935:../samuel/samuel_io.c **** 	  }//zahler_offlight
 936:../samuel/samuel_io.c **** 	 }//regonoff
 937:../samuel/samuel_io.c ****  }
 4613              	 .loc 3 937 0
 4614 00ee BD46     	 mov sp,r7
 4615 00f0 02B0     	 add sp,sp,#8
 4616              	 
 4617 00f2 80BD     	 pop {r7,pc}
 4618              	.L191:
 4619              	 .align 2
 4620              	.L190:
 4621 00f4 00000000 	 .word RegOnOff
 4622 00f8 00000000 	 .word zahler_offlight
 4623 00fc 00000000 	 .word dimAkt_Ww
 4624 0100 00000000 	 .word dimOff_Ww
 4625 0104 00000000 	 .word dimAkt_Cw
 4626 0108 00000000 	 .word dimOff_Cw
 4627 010c 00000000 	 .word ReadBuffer2
 4628              	 .cfi_endproc
 4629              	.LFE333:
 4631              	 .section .text.plus39V_stop,"ax",%progbits
 4632              	 .align 2
 4633              	 .global plus39V_stop
 4634              	 .code 16
 4635              	 .thumb_func
 4637              	plus39V_stop:
 4638              	.LFB334:
 938:../samuel/samuel_io.c **** 
 939:../samuel/samuel_io.c ****  //----------------------------------------------------
 940:../samuel/samuel_io.c **** 
 941:../samuel/samuel_io.c ****  void plus39V_stop (void) // spannung ok
 942:../samuel/samuel_io.c ****   {
 4639              	 .loc 3 942 0
 4640              	 .cfi_startproc
 4641 0000 80B5     	 push {r7,lr}
 4642              	.LCFI109:
 4643              	 .cfi_def_cfa_offset 8
 4644              	 .cfi_offset 7,-8
 4645              	 .cfi_offset 14,-4
 4646 0002 00AF     	 add r7,sp,#0
 4647              	.LCFI110:
 4648              	 .cfi_def_cfa_register 7
 943:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 944:../samuel/samuel_io.c **** 
 945:../samuel/samuel_io.c **** 
 946:../samuel/samuel_io.c ****   }
 4649              	 .loc 3 946 0
 4650 0004 BD46     	 mov sp,r7
 4651              	 
 4652 0006 80BD     	 pop {r7,pc}
 4653              	 .cfi_endproc
 4654              	.LFE334:
 4656              	 .section .text.plus39V_start,"ax",%progbits
 4657              	 .align 2
 4658              	 .global plus39V_start
 4659              	 .code 16
 4660              	 .thumb_func
 4662              	plus39V_start:
 4663              	.LFB335:
 947:../samuel/samuel_io.c **** 
 948:../samuel/samuel_io.c ****  void plus39V_start (void) // spannung ok
 949:../samuel/samuel_io.c ****   {
 4664              	 .loc 3 949 0
 4665              	 .cfi_startproc
 4666 0000 80B5     	 push {r7,lr}
 4667              	.LCFI111:
 4668              	 .cfi_def_cfa_offset 8
 4669              	 .cfi_offset 7,-8
 4670              	 .cfi_offset 14,-4
 4671 0002 00AF     	 add r7,sp,#0
 4672              	.LCFI112:
 4673              	 .cfi_def_cfa_register 7
 950:../samuel/samuel_io.c **** 	// 	DIGITAL_IO_SetOutputHigh(&xmc_sel_gain);
 951:../samuel/samuel_io.c **** 
 952:../samuel/samuel_io.c ****   }
 4674              	 .loc 3 952 0
 4675 0004 BD46     	 mov sp,r7
 4676              	 
 4677 0006 80BD     	 pop {r7,pc}
 4678              	 .cfi_endproc
 4679              	.LFE335:
 4681              	 .section .text.Time1msec,"ax",%progbits
 4682              	 .align 2
 4683              	 .global Time1msec
 4684              	 .code 16
 4685              	 .thumb_func
 4687              	Time1msec:
 4688              	.LFB336:
 953:../samuel/samuel_io.c **** 
 954:../samuel/samuel_io.c ****  //----------------------------------
 955:../samuel/samuel_io.c **** 
 956:../samuel/samuel_io.c ****   void Time1msec (void) //
 957:../samuel/samuel_io.c ****   {
 4689              	 .loc 3 957 0
 4690              	 .cfi_startproc
 4691 0000 80B5     	 push {r7,lr}
 4692              	.LCFI113:
 4693              	 .cfi_def_cfa_offset 8
 4694              	 .cfi_offset 7,-8
 4695              	 .cfi_offset 14,-4
 4696 0002 00AF     	 add r7,sp,#0
 4697              	.LCFI114:
 4698              	 .cfi_def_cfa_register 7
 958:../samuel/samuel_io.c ****       ADC_MEASUREMENT_ADV_SoftwareTrigger(&ADC_MEASUREMENT_ADV_0);
 4699              	 .loc 3 958 0
 4700 0004 024B     	 ldr r3,.L195
 4701 0006 181C     	 mov r0,r3
 4702 0008 FFF7FEFF 	 bl ADC_MEASUREMENT_ADV_SoftwareTrigger
 959:../samuel/samuel_io.c **** 
 960:../samuel/samuel_io.c ****   }
 4703              	 .loc 3 960 0
 4704 000c BD46     	 mov sp,r7
 4705              	 
 4706 000e 80BD     	 pop {r7,pc}
 4707              	.L196:
 4708              	 .align 2
 4709              	.L195:
 4710 0010 00000000 	 .word ADC_MEASUREMENT_ADV_0
 4711              	 .cfi_endproc
 4712              	.LFE336:
 4714              	 .section .text.Time20msec,"ax",%progbits
 4715              	 .align 2
 4716              	 .global Time20msec
 4717              	 .code 16
 4718              	 .thumb_func
 4720              	Time20msec:
 4721              	.LFB337:
 961:../samuel/samuel_io.c ****   //----------------------------------
 962:../samuel/samuel_io.c **** 
 963:../samuel/samuel_io.c ****    void Time20msec (void) //
 964:../samuel/samuel_io.c ****    {
 4722              	 .loc 3 964 0
 4723              	 .cfi_startproc
 4724 0000 80B5     	 push {r7,lr}
 4725              	.LCFI115:
 4726              	 .cfi_def_cfa_offset 8
 4727              	 .cfi_offset 7,-8
 4728              	 .cfi_offset 14,-4
 4729 0002 00AF     	 add r7,sp,#0
 4730              	.LCFI116:
 4731              	 .cfi_def_cfa_register 7
 965:../samuel/samuel_io.c **** 
 966:../samuel/samuel_io.c ****    //    DIGITAL_IO_ToggleOutput(&VCC_LED_shtdwn);
 967:../samuel/samuel_io.c ****        resultA2 = (3*resultA2 + resultAalt)/4;
 4732              	 .loc 3 967 0
 4733 0004 364B     	 ldr r3,.L204
 4734 0006 1B88     	 ldrh r3,[r3]
 4735 0008 1A1C     	 mov r2,r3
 4736 000a 131C     	 mov r3,r2
 4737 000c 5B00     	 lsl r3,r3,#1
 4738 000e 9B18     	 add r3,r3,r2
 4739 0010 344A     	 ldr r2,.L204+4
 4740 0012 1288     	 ldrh r2,[r2]
 4741 0014 9B18     	 add r3,r3,r2
 4742 0016 002B     	 cmp r3,#0
 4743 0018 00DA     	 bge .L198
 4744 001a 0333     	 add r3,r3,#3
 4745              	.L198:
 4746 001c 9B10     	 asr r3,r3,#2
 4747 001e 9AB2     	 uxth r2,r3
 4748 0020 2F4B     	 ldr r3,.L204
 4749 0022 1A80     	 strh r2,[r3]
 968:../samuel/samuel_io.c ****        resultB2 = (3*resultB2 + resultBalt)/4;
 4750              	 .loc 3 968 0
 4751 0024 304B     	 ldr r3,.L204+8
 4752 0026 1B88     	 ldrh r3,[r3]
 4753 0028 1A1C     	 mov r2,r3
 4754 002a 131C     	 mov r3,r2
 4755 002c 5B00     	 lsl r3,r3,#1
 4756 002e 9B18     	 add r3,r3,r2
 4757 0030 2E4A     	 ldr r2,.L204+12
 4758 0032 1288     	 ldrh r2,[r2]
 4759 0034 9B18     	 add r3,r3,r2
 4760 0036 002B     	 cmp r3,#0
 4761 0038 00DA     	 bge .L199
 4762 003a 0333     	 add r3,r3,#3
 4763              	.L199:
 4764 003c 9B10     	 asr r3,r3,#2
 4765 003e 9AB2     	 uxth r2,r3
 4766 0040 294B     	 ldr r3,.L204+8
 4767 0042 1A80     	 strh r2,[r3]
 969:../samuel/samuel_io.c ****        resultC2 = (3*resultC2 + resultCalt)/4;
 4768              	 .loc 3 969 0
 4769 0044 2A4B     	 ldr r3,.L204+16
 4770 0046 1B88     	 ldrh r3,[r3]
 4771 0048 1A1C     	 mov r2,r3
 4772 004a 131C     	 mov r3,r2
 4773 004c 5B00     	 lsl r3,r3,#1
 4774 004e 9B18     	 add r3,r3,r2
 4775 0050 284A     	 ldr r2,.L204+20
 4776 0052 1288     	 ldrh r2,[r2]
 4777 0054 9B18     	 add r3,r3,r2
 4778 0056 002B     	 cmp r3,#0
 4779 0058 00DA     	 bge .L200
 4780 005a 0333     	 add r3,r3,#3
 4781              	.L200:
 4782 005c 9B10     	 asr r3,r3,#2
 4783 005e 9AB2     	 uxth r2,r3
 4784 0060 234B     	 ldr r3,.L204+16
 4785 0062 1A80     	 strh r2,[r3]
 970:../samuel/samuel_io.c ****        resultD2 = (3*resultD2 + resultDalt)/4;
 4786              	 .loc 3 970 0
 4787 0064 244B     	 ldr r3,.L204+24
 4788 0066 1B88     	 ldrh r3,[r3]
 4789 0068 1A1C     	 mov r2,r3
 4790 006a 131C     	 mov r3,r2
 4791 006c 5B00     	 lsl r3,r3,#1
 4792 006e 9B18     	 add r3,r3,r2
 4793 0070 224A     	 ldr r2,.L204+28
 4794 0072 1288     	 ldrh r2,[r2]
 4795 0074 9B18     	 add r3,r3,r2
 4796 0076 002B     	 cmp r3,#0
 4797 0078 00DA     	 bge .L201
 4798 007a 0333     	 add r3,r3,#3
 4799              	.L201:
 4800 007c 9B10     	 asr r3,r3,#2
 4801 007e 9AB2     	 uxth r2,r3
 4802 0080 1D4B     	 ldr r3,.L204+24
 4803 0082 1A80     	 strh r2,[r3]
 971:../samuel/samuel_io.c ****        adc_ready20m=adc_ready20m + 1;
 4804              	 .loc 3 971 0
 4805 0084 1E4B     	 ldr r3,.L204+32
 4806 0086 1B88     	 ldrh r3,[r3]
 4807 0088 0133     	 add r3,r3,#1
 4808 008a 9AB2     	 uxth r2,r3
 4809 008c 1C4B     	 ldr r3,.L204+32
 4810 008e 1A80     	 strh r2,[r3]
 972:../samuel/samuel_io.c **** 
 973:../samuel/samuel_io.c ****       if (adc_ready20m > 5)
 4811              	 .loc 3 973 0
 4812 0090 1B4B     	 ldr r3,.L204+32
 4813 0092 1B88     	 ldrh r3,[r3]
 4814 0094 052B     	 cmp r3,#5
 4815 0096 21D9     	 bls .L197
 974:../samuel/samuel_io.c ****       {
 975:../samuel/samuel_io.c ****      	//    DIGITAL_IO_ToggleOutput(&LED);
 976:../samuel/samuel_io.c ****      	 adc_ready20m=0;
 4816              	 .loc 3 976 0
 4817 0098 194B     	 ldr r3,.L204+32
 4818 009a 0022     	 mov r2,#0
 4819 009c 1A80     	 strh r2,[r3]
 977:../samuel/samuel_io.c ****      	    if (resultA2 < min_EEP_Voltage_Uin)
 4820              	 .loc 3 977 0
 4821 009e 104B     	 ldr r3,.L204
 4822 00a0 1B88     	 ldrh r3,[r3]
 4823 00a2 184A     	 ldr r2,.L204+36
 4824 00a4 9342     	 cmp r3,r2
 4825 00a6 09D8     	 bhi .L203
 978:../samuel/samuel_io.c ****      	     {
 979:../samuel/samuel_io.c ****      	     plus39V_stop();
 4826              	 .loc 3 979 0
 4827 00a8 FFF7FEFF 	 bl plus39V_stop
 980:../samuel/samuel_io.c **** 					B_nextLedOff=0;   // schaltet on led beim spannnungsvergleich aus
 4828              	 .loc 3 980 0
 4829 00ac 164B     	 ldr r3,.L204+40
 4830 00ae 0022     	 mov r2,#0
 4831 00b0 1A70     	 strb r2,[r3]
 981:../samuel/samuel_io.c ****  	 		 	DIGITAL_IO_SetOutputLow(&VCC_LED_shtdwn);
 4832              	 .loc 3 981 0
 4833 00b2 164B     	 ldr r3,.L204+44
 4834 00b4 181C     	 mov r0,r3
 4835 00b6 FFF7FEFF 	 bl DIGITAL_IO_SetOutputLow
 4836 00ba 0FE0     	 b .L197
 4837              	.L203:
 982:../samuel/samuel_io.c ****      	     }
 983:../samuel/samuel_io.c ****      	    else if (resultA2 > minHyst_EEP_Voltage_Uin)
 4838              	 .loc 3 983 0
 4839 00bc 084B     	 ldr r3,.L204
 4840 00be 1A88     	 ldrh r2,[r3]
 4841 00c0 BF23     	 mov r3,#191
 4842 00c2 1B01     	 lsl r3,r3,#4
 4843 00c4 9A42     	 cmp r2,r3
 4844 00c6 09D9     	 bls .L197
 984:../samuel/samuel_io.c ****  			 {
 985:../samuel/samuel_io.c ****      	     plus39V_start();
 4845              	 .loc 3 985 0
 4846 00c8 FFF7FEFF 	 bl plus39V_start
 986:../samuel/samuel_io.c **** 				if(	B_nextLedOff==0)
 4847              	 .loc 3 986 0
 4848 00cc 0E4B     	 ldr r3,.L204+40
 4849 00ce 1B78     	 ldrb r3,[r3]
 4850 00d0 002B     	 cmp r3,#0
 4851 00d2 03D1     	 bne .L197
 987:../samuel/samuel_io.c ****  	 		 	{DIGITAL_IO_SetOutputHigh(&VCC_LED_shtdwn);}
 4852              	 .loc 3 987 0
 4853 00d4 0D4B     	 ldr r3,.L204+44
 4854 00d6 181C     	 mov r0,r3
 4855 00d8 FFF7FEFF 	 bl DIGITAL_IO_SetOutputHigh
 4856              	.L197:
 988:../samuel/samuel_io.c ****  			 }
 989:../samuel/samuel_io.c ****       }
 990:../samuel/samuel_io.c **** 
 991:../samuel/samuel_io.c **** 
 992:../samuel/samuel_io.c ****    }
 4857              	 .loc 3 992 0
 4858 00dc BD46     	 mov sp,r7
 4859              	 
 4860 00de 80BD     	 pop {r7,pc}
 4861              	.L205:
 4862              	 .align 2
 4863              	.L204:
 4864 00e0 00000000 	 .word resultA2
 4865 00e4 00000000 	 .word resultAalt
 4866 00e8 00000000 	 .word resultB2
 4867 00ec 00000000 	 .word resultBalt
 4868 00f0 00000000 	 .word resultC2
 4869 00f4 00000000 	 .word resultCalt
 4870 00f8 00000000 	 .word resultD2
 4871 00fc 00000000 	 .word resultDalt
 4872 0100 00000000 	 .word adc_ready20m
 4873 0104 9F0B0000 	 .word 2975
 4874 0108 00000000 	 .word B_nextLedOff
 4875 010c 00000000 	 .word VCC_LED_shtdwn
 4876              	 .cfi_endproc
 4877              	.LFE337:
 4879              	 .section .text.firstuartBack,"ax",%progbits
 4880              	 .align 2
 4881              	 .global firstuartBack
 4882              	 .code 16
 4883              	 .thumb_func
 4885              	firstuartBack:
 4886              	.LFB338:
 993:../samuel/samuel_io.c ****   //------------------------------
 994:../samuel/samuel_io.c **** 
 995:../samuel/samuel_io.c ****    void firstuartBack (void) //
 996:../samuel/samuel_io.c ****    {	if ( B_first_uart == 0 )
 4887              	 .loc 3 996 0
 4888              	 .cfi_startproc
 4889 0000 98B5     	 push {r3,r4,r7,lr}
 4890              	.LCFI117:
 4891              	 .cfi_def_cfa_offset 16
 4892              	 .cfi_offset 3,-16
 4893              	 .cfi_offset 4,-12
 4894              	 .cfi_offset 7,-8
 4895              	 .cfi_offset 14,-4
 4896 0002 00AF     	 add r7,sp,#0
 4897              	.LCFI118:
 4898              	 .cfi_def_cfa_register 7
 4899              	 .loc 3 996 0
 4900 0004 174B     	 ldr r3,.L208
 4901 0006 1B78     	 ldrb r3,[r3]
 4902 0008 002B     	 cmp r3,#0
 4903 000a 29D1     	 bne .L206
 997:../samuel/samuel_io.c ****    	   {
 998:../samuel/samuel_io.c **** 	   new_data_HalloBack();
 4904              	 .loc 3 998 0
 4905 000c FFF7FEFF 	 bl new_data_HalloBack
 999:../samuel/samuel_io.c **** 	   new_data[5]= command_firstuartBack ;
 4906              	 .loc 3 999 0
 4907 0010 154B     	 ldr r3,.L208+4
 4908 0012 3022     	 mov r2,#48
 4909 0014 5A71     	 strb r2,[r3,#5]
1000:../samuel/samuel_io.c ****    	   new_data[6]= Ser_NrH  / 0x100 ;
 4910              	 .loc 3 1000 0
 4911 0016 154B     	 ldr r3,.L208+8
 4912 0018 1B88     	 ldrh r3,[r3]
 4913 001a 1B0A     	 lsr r3,r3,#8
 4914 001c 9BB2     	 uxth r3,r3
 4915 001e DAB2     	 uxtb r2,r3
 4916 0020 114B     	 ldr r3,.L208+4
 4917 0022 9A71     	 strb r2,[r3,#6]
1001:../samuel/samuel_io.c ****    	   new_data[7]= Ser_NrH  & 0xff ;
 4918              	 .loc 3 1001 0
 4919 0024 114B     	 ldr r3,.L208+8
 4920 0026 1B88     	 ldrh r3,[r3]
 4921 0028 DAB2     	 uxtb r2,r3
 4922 002a 0F4B     	 ldr r3,.L208+4
 4923 002c DA71     	 strb r2,[r3,#7]
1002:../samuel/samuel_io.c ****    	   new_data[8]= Ser_NrL  / 0x100 ;
 4924              	 .loc 3 1002 0
 4925 002e 104B     	 ldr r3,.L208+12
 4926 0030 1B88     	 ldrh r3,[r3]
 4927 0032 1B0A     	 lsr r3,r3,#8
 4928 0034 9BB2     	 uxth r3,r3
 4929 0036 DAB2     	 uxtb r2,r3
 4930 0038 0B4B     	 ldr r3,.L208+4
 4931 003a 1A72     	 strb r2,[r3,#8]
1003:../samuel/samuel_io.c ****    	   new_data[9]= Ser_NrL  & 0xff ;
 4932              	 .loc 3 1003 0
 4933 003c 0C4B     	 ldr r3,.L208+12
 4934 003e 1B88     	 ldrh r3,[r3]
 4935 0040 DAB2     	 uxtb r2,r3
 4936 0042 094B     	 ldr r3,.L208+4
 4937 0044 5A72     	 strb r2,[r3,#9]
1004:../samuel/samuel_io.c ****    	   UART_Transmit(&UART_1, new_data,transmit_buf_size);
 4938              	 .loc 3 1004 0
 4939 0046 0B4B     	 ldr r3,.L208+16
 4940 0048 1B78     	 ldrb r3,[r3]
 4941 004a 1C1C     	 mov r4,r3
 4942 004c 0A4A     	 ldr r2,.L208+20
 4943 004e 064B     	 ldr r3,.L208+4
 4944 0050 101C     	 mov r0,r2
 4945 0052 191C     	 mov r1,r3
 4946 0054 221C     	 mov r2,r4
 4947 0056 FFF7FEFF 	 bl UART_Transmit
1005:../samuel/samuel_io.c ****    	   B_first_uart=1;
 4948              	 .loc 3 1005 0
 4949 005a 024B     	 ldr r3,.L208
 4950 005c 0122     	 mov r2,#1
 4951 005e 1A70     	 strb r2,[r3]
 4952              	.L206:
1006:../samuel/samuel_io.c ****    	   }
1007:../samuel/samuel_io.c ****    }
 4953              	 .loc 3 1007 0
 4954 0060 BD46     	 mov sp,r7
 4955              	 
 4956 0062 98BD     	 pop {r3,r4,r7,pc}
 4957              	.L209:
 4958              	 .align 2
 4959              	.L208:
 4960 0064 00000000 	 .word B_first_uart
 4961 0068 00000000 	 .word new_data
 4962 006c 00000000 	 .word Ser_NrH
 4963 0070 00000000 	 .word Ser_NrL
 4964 0074 00000000 	 .word transmit_buf_size
 4965 0078 00000000 	 .word UART_1
 4966              	 .cfi_endproc
 4967              	.LFE338:
 4969              	 .text
 4970              	.Letext0:
 4971              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4972              	 .file 5 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4973              	 .file 6 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 4974              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc/xmc1_gpio.h"
 4975              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc/xmc_usic.h"
 4976              	 .file 9 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc/xmc_uart.h"
 4977              	 .file 10 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/UART/uart.h"
 4978              	 .file 11 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/E_EEPROM_XMC1/e_eeprom_xmc1.h"
 4979              	 .file 12 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc/xmc_vadc.h"
 4980              	 .file 13 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv.h"
 4981              	 .file 14 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/XMCLib/inc/xmc_bccu.h"
 4982              	 .file 15 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/GLOBAL_BCCU/global_bccu.h"
 4983              	 .file 16 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIM_BCCU/dim_bccu.h"
 4984              	 .file 17 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/PDM_BCCU/pdm_bccu.h"
 4985              	 .file 18 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/PDM_DIMMED_LED_LAMP/pdm_dimmed_led_lamp.h"
 4986              	 .file 19 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
 4987              	 .file 20 "../samuel/samuel_io.h"
 4988              	 .file 21 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIGITAL_IO/digital_io_extern.h"
 4989              	 .file 22 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/UART/uart_extern.h"
 4990              	 .file 23 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/ADC_MEASUREMENT_ADV/adc_measurement_adv_extern.h"
 4991              	 .file 24 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/DIM_BCCU/dim_bccu_extern.h"
 4992              	 .file 25 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/PDM_BCCU/pdm_bccu_extern.h"
 4993              	 .file 26 "C:/DAVEv4-64Bit/work/Demo_2_GoodMorning/Dave/Generated/PDM_DIMMED_LED_LAMP/PDM_DIMMED_LED_LAMP_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 samuel_io.c
                            *COM*:00000002 adc_ready
    {standard input}:23     .bss.adc_ready20m:00000000 adc_ready20m
    {standard input}:20     .bss.adc_ready20m:00000000 $d
                            *COM*:00000002 resultA
    {standard input}:31     .data.resultB:00000000 resultB
    {standard input}:28     .data.resultB:00000000 $d
                            *COM*:00000002 resultC
                            *COM*:00000002 resultD
                            *COM*:00000002 resultA2
                            *COM*:00000002 resultB2
                            *COM*:00000002 resultC2
                            *COM*:00000002 resultD2
                            *COM*:00000002 resultAalt
                            *COM*:00000002 resultBalt
                            *COM*:00000002 resultCalt
    {standard input}:47     .bss.resultDalt:00000000 resultDalt
    {standard input}:44     .bss.resultDalt:00000000 $d
                            *COM*:00000002 resultAalt2
                            *COM*:00000002 resultBalt2
                            *COM*:00000002 resultCalt2
                            *COM*:00000002 resultDCalt2
    {standard input}:58     .data.delay_count:00000000 delay_count
    {standard input}:55     .data.delay_count:00000000 $d
    {standard input}:65     .bss.zahler_offlight:00000000 zahler_offlight
    {standard input}:62     .bss.zahler_offlight:00000000 $d
    {standard input}:72     .bss.zahler_lightprog01:00000000 zahler_lightprog01
    {standard input}:69     .bss.zahler_lightprog01:00000000 $d
                            *COM*:00000002 Ser_NrH
                            *COM*:00000002 Ser_NrL
                            *COM*:00000002 Hard_Vers
                            *COM*:00000002 Soft_Vers
                            *COM*:00000002 GEH_Vers
                            *COM*:00000002 Mon_Vers
                            *COM*:00000002 LED_WW_Vers
                            *COM*:00000002 LED_CW_Vers
                            *COM*:00000002 neu_Ser_NrH
                            *COM*:00000002 neu_Ser_NrL
                            *COM*:00000001 node_id
                            *COM*:00000001 node_id_alt
                            *COM*:00000002 node_id_16bit
                            *COM*:00000002 val_Pow_Nom
                            *COM*:00000002 val_Pow_max
                            *COM*:00000002 val_Spannung_min
                            *COM*:00000002 val_Spannung_max
                            *COM*:00000002 led_grupp
                            *COM*:00000002 led_Strom
                            *COM*:00000001 node_id_resi
                            *COM*:00000001 node_id_neu
                            *COM*:00000001 Dimm_Gamma
                            *COM*:00000001 Dimm_Stufen
                            *COM*:00000001 Dimm_StufenGR
                            *COM*:00000001 Dimm_Valu
                            *COM*:00000002 Smooth_Value
    {standard input}:105    .data.linearwalk_gen:00000000 linearwalk_gen
    {standard input}:102    .data.linearwalk_gen:00000000 $d
                            *COM*:00000002 Farbe_wwcw_Quot_gen
                            *COM*:00000002 Reserve_1
                            *COM*:00000002 Dimm_Max_WW
                            *COM*:00000002 Dimm_Max_CW
                            *COM*:00000002 dimAkt_Ww
                            *COM*:00000002 dimAkt_Cw
                            *COM*:00000002 linearwalk_ww1
                            *COM*:00000002 linearwalk_ww2
                            *COM*:00000002 linearwalk_cw1
                            *COM*:00000002 linearwalk_cw2
                            *COM*:00000002 Farbe_ww1_Quot
                            *COM*:00000002 Farbe_cw1_Quot
                            *COM*:00000002 Farbe_ww2_Quot
                            *COM*:00000002 Farbe_cw2_Quot
                            *COM*:00000002 Farbe_ww1
                            *COM*:00000002 Farbe_ww2
                            *COM*:00000002 Farbe_cw1
                            *COM*:00000002 Farbe_cw2
                            *COM*:00000001 RegOnOff
                            *COM*:00000001 RegOnOff2
                            *COM*:00000002 Reserve_2
                            *COM*:00000002 dimOff_Ww
                            *COM*:00000002 dimOff_Cw
                            *COM*:00000002 dimNorm1_Ww
                            *COM*:00000002 dimNorm1_Cw
                            *COM*:00000002 dimNorm2_Ww
                            *COM*:00000002 dimNorm2_Cw
    {standard input}:139    .data.Brightness_Gen:00000000 Brightness_Gen
    {standard input}:136    .data.Brightness_Gen:00000000 $d
    {standard input}:146    .data.ColorQuot_Gen:00000000 ColorQuot_Gen
    {standard input}:143    .data.ColorQuot_Gen:00000000 $d
                            *COM*:00000010 rec_data
                            *COM*:00000010 new_data
                            *COM*:00000020 eeprom_data
    {standard input}:155    .data.transmit_buf_size:00000000 transmit_buf_size
                            *COM*:00000008 ReadData
                            *COM*:00000001 execute
                            *COM*:00000001 charcount
                            *COM*:00000001 synclevel
                            *COM*:00000001 command
                            *COM*:00000001 framelength
                            *COM*:00000001 Index
                            *COM*:00000010 ReadBuffer1
                            *COM*:00000010 ReadBuffer2
                            *COM*:00000020 ReadBuffer3
                            *COM*:00000064 data_buffer
                            *COM*:00000020 ReadBuffer4
    {standard input}:173    .bss.B_first_uart:00000000 B_first_uart
    {standard input}:174    .bss.B_first_uart:00000000 $d
    {standard input}:179    .bss.B_nextLedOff:00000000 B_nextLedOff
    {standard input}:180    .bss.B_nextLedOff:00000000 $d
    {standard input}:182    .text.XMC_GPIO_SetOutputHigh:00000000 $t
    {standard input}:186    .text.XMC_GPIO_SetOutputHigh:00000000 XMC_GPIO_SetOutputHigh
    {standard input}:222    .text.XMC_GPIO_SetOutputLow:00000000 $t
    {standard input}:226    .text.XMC_GPIO_SetOutputLow:00000000 XMC_GPIO_SetOutputLow
    {standard input}:262    .text.DIGITAL_IO_SetOutputHigh:00000000 $t
    {standard input}:266    .text.DIGITAL_IO_SetOutputHigh:00000000 DIGITAL_IO_SetOutputHigh
    {standard input}:300    .text.DIGITAL_IO_SetOutputLow:00000000 $t
    {standard input}:304    .text.DIGITAL_IO_SetOutputLow:00000000 DIGITAL_IO_SetOutputLow
    {standard input}:341    .data.test:00000000 test
    {standard input}:338    .data.test:00000000 $d
                            *COM*:00000001 EEprom_status
                            *COM*:00000001 oper_status
    {standard input}:350    .bss.resultDalt2:00000000 resultDalt2
    {standard input}:347    .bss.resultDalt2:00000000 $d
    {standard input}:353    .text.digitalo:00000000 $t
    {standard input}:358    .text.digitalo:00000000 digitalo
    {standard input}:407    .text.digitalo:00000034 $d
    {standard input}:414    .text.LED_Toggle_EverySec:00000000 $t
    {standard input}:419    .text.LED_Toggle_EverySec:00000000 LED_Toggle_EverySec
    {standard input}:4458   .text.Offlight_zahler_write:00000000 Offlight_zahler_write
    {standard input}:4885   .text.firstuartBack:00000000 firstuartBack
    {standard input}:450    .text.lightprog01:00000000 lightprog01
    {standard input}:445    .text.lightprog01:00000000 $t
    {standard input}:689    .text.lightprog01:0000017c $d
    {standard input}:696    .text.light_aus:00000000 $t
    {standard input}:701    .text.light_aus:00000000 light_aus
    {standard input}:4214   .text.bcudirAktBerechnung:00000000 bcudirAktBerechnung
    {standard input}:3977   .text.bcuUebergabe:00000000 bcuUebergabe
    {standard input}:755    .text.light_aus:00000048 $d
    {standard input}:765    .text.analog_start:00000000 $t
    {standard input}:770    .text.analog_start:00000000 analog_start
    {standard input}:790    .text.SCU_0_IRQHandler:00000000 $t
    {standard input}:795    .text.SCU_0_IRQHandler:00000000 SCU_0_IRQHandler
    {standard input}:815    .text.new_data_fill:00000000 $t
    {standard input}:820    .text.new_data_fill:00000000 new_data_fill
    {standard input}:887    .text.new_data_fill:00000050 $d
    {standard input}:893    .text.new_data_unbekanntBack:00000000 $t
    {standard input}:898    .text.new_data_unbekanntBack:00000000 new_data_unbekanntBack
    {standard input}:967    .text.new_data_unbekanntBack:00000054 $d
    {standard input}:974    .text.new_data_BroadcastBack:00000000 $t
    {standard input}:979    .text.new_data_BroadcastBack:00000000 new_data_BroadcastBack
    {standard input}:1060   .text.new_data_BroadcastBack:0000006c $d
    {standard input}:1069   .text.new_data_analog1Back:00000000 $t
    {standard input}:1074   .text.new_data_analog1Back:00000000 new_data_analog1Back
    {standard input}:1155   .text.new_data_analog1Back:0000006c $d
    {standard input}:1164   .text.new_data_analog2Back:00000000 $t
    {standard input}:1169   .text.new_data_analog2Back:00000000 new_data_analog2Back
    {standard input}:1250   .text.new_data_analog2Back:0000006c $d
    {standard input}:1259   .text.new_data_aktLichtBack:00000000 $t
    {standard input}:1264   .text.new_data_aktLichtBack:00000000 new_data_aktLichtBack
    {standard input}:1345   .text.new_data_aktLichtBack:0000006c $d
    {standard input}:1354   .text.new_data_offLichtBack:00000000 $t
    {standard input}:1359   .text.new_data_offLichtBack:00000000 new_data_offLichtBack
    {standard input}:1450   .text.new_data_offLichtBack:0000007c $d
    {standard input}:1461   .text.new_data_Bright_Color_Back:00000000 $t
    {standard input}:1466   .text.new_data_Bright_Color_Back:00000000 new_data_Bright_Color_Back
    {standard input}:1547   .text.new_data_Bright_Color_Back:0000006c $d
    {standard input}:1556   .text.new_data_Quot_Walk_Back:00000000 $t
    {standard input}:1561   .text.new_data_Quot_Walk_Back:00000000 new_data_Quot_Walk_Back
    {standard input}:1642   .text.new_data_Quot_Walk_Back:0000006c $d
    {standard input}:1651   .text.new_data_HalloBack:00000000 $t
    {standard input}:1656   .text.new_data_HalloBack:00000000 new_data_HalloBack
    {standard input}:1725   .text.new_data_HalloBack:00000054 $d
    {standard input}:1732   .text.new_data_neuNodeIdBack:00000000 $t
    {standard input}:1737   .text.new_data_neuNodeIdBack:00000000 new_data_neuNodeIdBack
    {standard input}:1823   .text.new_data_neuNodeIdBack:00000074 $d
    {standard input}:1833   .text.new_data_neuSerNrBack:00000000 $t
    {standard input}:1838   .text.new_data_neuSerNrBack:00000000 new_data_neuSerNrBack
    {standard input}:1947   .text.new_data_neuSerNrBack:0000009c $d
    {standard input}:1958   .text.new_data_NodeIdBack:00000000 $t
    {standard input}:1963   .text.new_data_NodeIdBack:00000000 new_data_NodeIdBack
    {standard input}:2054   .text.new_data_NodeIdBack:0000007c $d
    {standard input}:2064   .text.new_data_SerNrBack:00000000 $t
    {standard input}:2069   .text.new_data_SerNrBack:00000000 new_data_SerNrBack
    {standard input}:2150   .text.new_data_SerNrBack:0000006c $d
    {standard input}:2159   .text.new_data_readbuff2Back:00000000 $t
    {standard input}:2164   .text.new_data_readbuff2Back:00000000 new_data_readbuff2Back
    {standard input}:2301   .text.new_data_readbuff2Back:000000c4 $d
    {standard input}:2309   .text.clearEpromBuffer:00000000 $t
    {standard input}:2314   .text.clearEpromBuffer:00000000 clearEpromBuffer
    {standard input}:2411   .text.clearEpromBuffer:00000080 $d
    {standard input}:2419   .text.fillEpromBuffer:00000000 $t
    {standard input}:2424   .text.fillEpromBuffer:00000000 fillEpromBuffer
    {standard input}:2470   .text.fillEpromBuffer:00000034 $d
    {standard input}:2476   .text.fill2EpromBuffer:00000000 $t
    {standard input}:2481   .text.fill2EpromBuffer:00000000 fill2EpromBuffer
    {standard input}:2529   .text.fill2EpromBuffer:00000038 $d
    {standard input}:2535   .text.readAllEEprom:00000000 $t
    {standard input}:2540   .text.readAllEEprom:00000000 readAllEEprom
    {standard input}:2780   .text.readAllEEprom:00000194 $d
    {standard input}:2804   .text.readSerNrEEprom:00000000 $t
    {standard input}:2809   .text.readSerNrEEprom:00000000 readSerNrEEprom
    {standard input}:2860   .text.readSerNrEEprom:00000044 $d
    {standard input}:2867   .text.readNodeIdEEprom:00000000 $t
    {standard input}:2872   .text.readNodeIdEEprom:00000000 readNodeIdEEprom
    {standard input}:2923   .text.readNodeIdEEprom:00000044 $d
    {standard input}:2930   .text.read_akt_light_EEprom:00000000 $t
    {standard input}:2935   .text.read_akt_light_EEprom:00000000 read_akt_light_EEprom
    {standard input}:2986   .text.read_akt_light_EEprom:00000044 $d
    {standard input}:2993   .text.read_off_light_EEprom:00000000 $t
    {standard input}:2998   .text.read_off_light_EEprom:00000000 read_off_light_EEprom
    {standard input}:3049   .text.read_off_light_EEprom:00000044 $d
    {standard input}:3056   .text.writeSernr_B1_EEprom:00000000 $t
    {standard input}:3061   .text.writeSernr_B1_EEprom:00000000 writeSernr_B1_EEprom
    {standard input}:3130   .text.writeSernr_B1_EEprom:0000005c $d
    {standard input}:3138   .text.writeNodeid_B2_EEprom:00000000 $t
    {standard input}:3143   .text.writeNodeid_B2_EEprom:00000000 writeNodeid_B2_EEprom
    {standard input}:3212   .text.writeNodeid_B2_EEprom:0000005c $d
    {standard input}:3220   .text.writeLamp_data_B3_EEprom:00000000 $t
    {standard input}:3225   .text.writeLamp_data_B3_EEprom:00000000 writeLamp_data_B3_EEprom
    {standard input}:3294   .text.writeLamp_data_B3_EEprom:0000005c $d
    {standard input}:3302   .text.writeakt_light_data_B4_EEprom:00000000 $t
    {standard input}:3307   .text.writeakt_light_data_B4_EEprom:00000000 writeakt_light_data_B4_EEprom
    {standard input}:3376   .text.writeakt_light_data_B4_EEprom:0000005c $d
    {standard input}:3384   .text.writeOff_light_B5_EEprom:00000000 $t
    {standard input}:3389   .text.writeOff_light_B5_EEprom:00000000 writeOff_light_B5_EEprom
    {standard input}:3458   .text.writeOff_light_B5_EEprom:0000005c $d
    {standard input}:3466   .text.sysiniValueB1:00000000 $t
    {standard input}:3471   .text.sysiniValueB1:00000000 sysiniValueB1
    {standard input}:3536   .text.sysiniValueB1:00000050 $d
    {standard input}:3552   .text.sysiniValueB2:00000000 $t
    {standard input}:3557   .text.sysiniValueB2:00000000 sysiniValueB2
    {standard input}:3619   .text.sysiniValueB2:0000004c $d
    {standard input}:3635   .text.sysiniValueB4:00000000 $t
    {standard input}:3640   .text.sysiniValueB4:00000000 sysiniValueB4
    {standard input}:3752   .text.sysiniValueB4:000000a0 $d
    {standard input}:3774   .text.sysiniValueB5:00000000 $t
    {standard input}:3779   .text.sysiniValueB5:00000000 sysiniValueB5
    {standard input}:3834   .text.sysiniValueB5:00000040 $d
    {standard input}:3850   .text.bcuInit:00000000 $t
    {standard input}:3855   .text.bcuInit:00000000 bcuInit
    {standard input}:3878   .rodata.bcuInit:00000000 $d
    {standard input}:3957   .text.bcuInit:0000006c $d
    {standard input}:3972   .text.bcuUebergabe:00000000 $t
    {standard input}:4060   .text.bcuUebergabe:00000088 $d
    {standard input}:4076   .text.bcuAktBerechnung:00000000 $t
    {standard input}:4081   .text.bcuAktBerechnung:00000000 bcuAktBerechnung
    {standard input}:4194   .text.bcuAktBerechnung:000000a8 $d
    {standard input}:4209   .text.bcudirAktBerechnung:00000000 $t
    {standard input}:4332   .text.bcudirAktBerechnung:000000b0 $d
    {standard input}:4347   .text.bcuColorBerechnung:00000000 $t
    {standard input}:4352   .text.bcuColorBerechnung:00000000 bcuColorBerechnung
    {standard input}:4444   .text.bcuColorBerechnung:00000080 $d
    {standard input}:4453   .text.Offlight_zahler_write:00000000 $t
    {standard input}:4621   .text.Offlight_zahler_write:000000f4 $d
    {standard input}:4632   .text.plus39V_stop:00000000 $t
    {standard input}:4637   .text.plus39V_stop:00000000 plus39V_stop
    {standard input}:4657   .text.plus39V_start:00000000 $t
    {standard input}:4662   .text.plus39V_start:00000000 plus39V_start
    {standard input}:4682   .text.Time1msec:00000000 $t
    {standard input}:4687   .text.Time1msec:00000000 Time1msec
    {standard input}:4710   .text.Time1msec:00000010 $d
    {standard input}:4715   .text.Time20msec:00000000 $t
    {standard input}:4720   .text.Time20msec:00000000 Time20msec
    {standard input}:4864   .text.Time20msec:000000e0 $d
    {standard input}:4880   .text.firstuartBack:00000000 $t
    {standard input}:4960   .text.firstuartBack:00000064 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PDM_DIMMED_LED_LAMP_SetColor
PDM_DIMMED_LED_LAMP_SetDimLevelExponentialAdv
PDM_DIMMED_LED_LAMP_0
DIM_BCCU_SetDimLvl
DIM_BCCU_StartDimming
DIM_BCCU_0
E_EEPROM_XMC1_GetStatus
E_EEPROM_XMC1_Read
E_EEPROM_XMC1_Write
PDM_BCCU_SetIntensity
PDM_BCCU_SetLinearWalk
PDM_BCCU_0
PDM_BCCU_1
PDM_BCCU_2
PDM_BCCU_3
ADC_MEASUREMENT_ADV_SoftwareTrigger
ADC_MEASUREMENT_ADV_0
VCC_LED_shtdwn
UART_Transmit
UART_1
