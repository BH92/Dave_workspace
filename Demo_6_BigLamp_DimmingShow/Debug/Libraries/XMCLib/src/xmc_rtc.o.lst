   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_rtc.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_SCU_GetMirrorStatus:
  23              	.LFB49:
  24              	 .file 1 "C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc/xmc_scu.h"
   1:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
   2:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
   5:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @cond
   6:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
   9:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                                             
  12:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  18:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * 
  21:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  36:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Change History
  37:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * --------------
  38:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  39:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  42:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  46:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  53:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  56:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *      
  59:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  61:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
  62:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  
  65:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
  70:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
  71:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
  73:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
  74:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  
  75:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
  76:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  79:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  86:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  90:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
  94:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
  96:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 107:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 111:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 112:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 117:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 122:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 127:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 134:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 137:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 141:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 144:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 145:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 152:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  \endif
 157:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @{
 158:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 159:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  
 160:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 164:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 168:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 170:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** {
 172:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 179:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 180:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 184:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 185:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 187:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 189:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 193:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #else
 198:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 200:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 201:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 205:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 208:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 209:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 210:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 211:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 212:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 217:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 218:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 219:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 230:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** {
 232:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** }
 234:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 235:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 236:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 237:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 242:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 243:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 244:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 255:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** {
 257:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** }
 259:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 260:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 261:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 262:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 267:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 268:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 269:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 280:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 287:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 290:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 292:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 293:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 294:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 297:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 298:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 299:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 307:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 309:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 310:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 311:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 312:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 315:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 316:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 317:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 323:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 325:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 326:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 327:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 330:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 331:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 332:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 339:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 341:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 342:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 344:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 354:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 356:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 357:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 358:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 361:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 362:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 363:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 369:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 372:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 374:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 375:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 376:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 378:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 388:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 391:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** {
 393:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** }
 395:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 396:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 398:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 403:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 406:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** {
 408:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** }
 411:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  
 412:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 413:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 415:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 422:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 425:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** {
 427:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 428:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** }
 429:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 430:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 431:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 433:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 434:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 439:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 441:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  
 443:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 444:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 445:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 448:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 449:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 450:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 451:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 454:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 459:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 460:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 461:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * 
 466:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 467:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 472:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  
 474:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 475:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 476:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 478:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 479:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return None
 480:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 481:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 482:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 485:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 487:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 491:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 492:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 496:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 497:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 500:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 502:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 503:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 504:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 507:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 510:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 511:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 513:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 515:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 516:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \endif
 518:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 519:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 521:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 524:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** #endif
 526:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 527:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** 
 528:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** /**
 529:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 533:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  *
 534:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 535:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****  */
 543:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** {
  25              	 .loc 1 544 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 00AF     	 add r7,sp,#0
  33              	.LCFI1:
  34              	 .cfi_def_cfa_register 7
 545:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
  35              	 .loc 1 545 0
  36 0004 024B     	 ldr r3,.L3
  37 0006 9B6C     	 ldr r3,[r3,#72]
 546:C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc\xmc_scu.h **** }
  38              	 .loc 1 546 0
  39 0008 181C     	 mov r0,r3
  40 000a BD46     	 mov sp,r7
  41              	 
  42 000c 80BD     	 pop {r7,pc}
  43              	.L4:
  44 000e C046     	 .align 2
  45              	.L3:
  46 0010 00000140 	 .word 1073807360
  47              	 .cfi_endproc
  48              	.LFE49:
  50              	 .section .text.XMC_RTC_Start,"ax",%progbits
  51              	 .align 2
  52              	 .global XMC_RTC_Start
  53              	 .code 16
  54              	 .thumb_func
  56              	XMC_RTC_Start:
  57              	.LFB52:
  58              	 .file 2 "../Libraries/XMCLib/src/xmc_rtc.c"
   1:../Libraries/XMCLib/src/xmc_rtc.c **** /**
   2:../Libraries/XMCLib/src/xmc_rtc.c ****  * @file xmc_rtc.c
   3:../Libraries/XMCLib/src/xmc_rtc.c ****  * @date 2015-06-20
   4:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   5:../Libraries/XMCLib/src/xmc_rtc.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_rtc.c ****  * XMClib v2.1.6 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_rtc.c ****  *
   9:../Libraries/XMCLib/src/xmc_rtc.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_rtc.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_rtc.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_rtc.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  18:../Libraries/XMCLib/src/xmc_rtc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_rtc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_rtc.c ****  * 
  21:../Libraries/XMCLib/src/xmc_rtc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_rtc.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_rtc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_rtc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_rtc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_rtc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_rtc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_rtc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_rtc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_rtc.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_rtc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_rtc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  36:../Libraries/XMCLib/src/xmc_rtc.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_rtc.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  39:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_rtc.c ****  *      
  42:../Libraries/XMCLib/src/xmc_rtc.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_rtc.c ****  *     - Removed GetDriverVersion API
  44:../Libraries/XMCLib/src/xmc_rtc.c ****  * @endcond 
  45:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  46:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  47:../Libraries/XMCLib/src/xmc_rtc.c **** 
  48:../Libraries/XMCLib/src/xmc_rtc.c **** /**
  49:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  50:../Libraries/XMCLib/src/xmc_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  51:../Libraries/XMCLib/src/xmc_rtc.c ****  *
  52:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  53:../Libraries/XMCLib/src/xmc_rtc.c **** 
  54:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  55:../Libraries/XMCLib/src/xmc_rtc.c ****  * HEADER FILES
  56:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  57:../Libraries/XMCLib/src/xmc_rtc.c ****  
  58:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_scu.h"
  59:../Libraries/XMCLib/src/xmc_rtc.c **** #include "xmc_rtc.h"
  60:../Libraries/XMCLib/src/xmc_rtc.c **** 
  61:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  62:../Libraries/XMCLib/src/xmc_rtc.c ****  * MACROS
  63:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_rtc.c **** 
  65:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXSECONDS  (59U)   /**< RTC time : Maximum seconds */
  66:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMINUTES  (59U)   /**< RTC time : Maximum minutes */
  67:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXHOURS    (23U)   /**< RTC time : Maximum hours */
  68:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYS     (31U)   /**< RTC time : Maximum days */
  69:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYSOFWEEK  (7U) /**< RTC time : Maximum days of week */
  70:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMONTH  (12U)     /**< RTC time : Maximum month */
  71:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXYEAR  (0xFFFFU)  /**< RTC time : Maximum year */
  72:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXPRESCALER  (0xFFFFU)  /**< RTC time : Maximum prescaler */
  73:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_YEAR_OFFSET (1900U)      /**< RTC year offset : Year offset */
  74:../Libraries/XMCLib/src/xmc_rtc.c **** 
  75:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC4)
  76:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (1U)
  77:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  78:../Libraries/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC1)
  79:../Libraries/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (0U)
  80:../Libraries/XMCLib/src/xmc_rtc.c **** #endif
  81:../Libraries/XMCLib/src/xmc_rtc.c **** 
  82:../Libraries/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  83:../Libraries/XMCLib/src/xmc_rtc.c ****  * API IMPLEMENTATION
  84:../Libraries/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  85:../Libraries/XMCLib/src/xmc_rtc.c **** 
  86:../Libraries/XMCLib/src/xmc_rtc.c **** /*
  87:../Libraries/XMCLib/src/xmc_rtc.c ****  * Enables RTC peripheral to start counting time
  88:../Libraries/XMCLib/src/xmc_rtc.c ****  */
  89:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Start(void)
  90:../Libraries/XMCLib/src/xmc_rtc.c **** {
  59              	 .loc 2 90 0
  60              	 .cfi_startproc
  61 0000 80B5     	 push {r7,lr}
  62              	.LCFI2:
  63              	 .cfi_def_cfa_offset 8
  64              	 .cfi_offset 7,-8
  65              	 .cfi_offset 14,-4
  66 0002 00AF     	 add r7,sp,#0
  67              	.LCFI3:
  68              	 .cfi_def_cfa_register 7
  91:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  69              	 .loc 2 91 0
  70 0004 C046     	 mov r8,r8
  71              	.L6:
  72              	 .loc 2 91 0 is_stmt 0 discriminator 1
  73 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
  74 000a 021C     	 mov r2,r0
  75 000c 0123     	 mov r3,#1
  76 000e 1340     	 and r3,r2
  77 0010 F9D1     	 bne .L6
  92:../Libraries/XMCLib/src/xmc_rtc.c ****   {
  93:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
  94:../Libraries/XMCLib/src/xmc_rtc.c ****   }
  95:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR |= (uint32_t)RTC_CTR_ENB_Msk;
  78              	 .loc 2 95 0 is_stmt 1
  79 0012 044B     	 ldr r3,.L7
  80 0014 034A     	 ldr r2,.L7
  81 0016 5268     	 ldr r2,[r2,#4]
  82 0018 0121     	 mov r1,#1
  83 001a 0A43     	 orr r2,r1
  84 001c 5A60     	 str r2,[r3,#4]
  96:../Libraries/XMCLib/src/xmc_rtc.c **** }
  85              	 .loc 2 96 0
  86 001e BD46     	 mov sp,r7
  87              	 
  88 0020 80BD     	 pop {r7,pc}
  89              	.L8:
  90 0022 C046     	 .align 2
  91              	.L7:
  92 0024 000A0140 	 .word 1073809920
  93              	 .cfi_endproc
  94              	.LFE52:
  96              	 .section .text.XMC_RTC_Stop,"ax",%progbits
  97              	 .align 2
  98              	 .global XMC_RTC_Stop
  99              	 .code 16
 100              	 .thumb_func
 102              	XMC_RTC_Stop:
 103              	.LFB53:
  97:../Libraries/XMCLib/src/xmc_rtc.c **** 
  98:../Libraries/XMCLib/src/xmc_rtc.c **** /*
  99:../Libraries/XMCLib/src/xmc_rtc.c ****  * Disables RTC peripheral to start counting time
 100:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 101:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Stop(void)
 102:../Libraries/XMCLib/src/xmc_rtc.c **** {
 104              	 .loc 2 102 0
 105              	 .cfi_startproc
 106 0000 80B5     	 push {r7,lr}
 107              	.LCFI4:
 108              	 .cfi_def_cfa_offset 8
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 00AF     	 add r7,sp,#0
 112              	.LCFI5:
 113              	 .cfi_def_cfa_register 7
 103:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 114              	 .loc 2 103 0
 115 0004 C046     	 mov r8,r8
 116              	.L10:
 117              	 .loc 2 103 0 is_stmt 0 discriminator 1
 118 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 119 000a 021C     	 mov r2,r0
 120 000c 0123     	 mov r3,#1
 121 000e 1340     	 and r3,r2
 122 0010 F9D1     	 bne .L10
 104:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 105:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 106:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 107:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR &= ~(uint32_t)RTC_CTR_ENB_Msk;
 123              	 .loc 2 107 0 is_stmt 1
 124 0012 044B     	 ldr r3,.L11
 125 0014 034A     	 ldr r2,.L11
 126 0016 5268     	 ldr r2,[r2,#4]
 127 0018 0121     	 mov r1,#1
 128 001a 8A43     	 bic r2,r1
 129 001c 5A60     	 str r2,[r3,#4]
 108:../Libraries/XMCLib/src/xmc_rtc.c **** }
 130              	 .loc 2 108 0
 131 001e BD46     	 mov sp,r7
 132              	 
 133 0020 80BD     	 pop {r7,pc}
 134              	.L12:
 135 0022 C046     	 .align 2
 136              	.L11:
 137 0024 000A0140 	 .word 1073809920
 138              	 .cfi_endproc
 139              	.LFE53:
 141              	 .section .text.XMC_RTC_SetPrescaler,"ax",%progbits
 142              	 .align 2
 143              	 .global XMC_RTC_SetPrescaler
 144              	 .code 16
 145              	 .thumb_func
 147              	XMC_RTC_SetPrescaler:
 148              	.LFB54:
 109:../Libraries/XMCLib/src/xmc_rtc.c **** 
 110:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 111:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module prescaler value
 112:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 113:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetPrescaler(uint16_t prescaler)
 114:../Libraries/XMCLib/src/xmc_rtc.c **** {
 149              	 .loc 2 114 0
 150              	 .cfi_startproc
 151 0000 80B5     	 push {r7,lr}
 152              	.LCFI6:
 153              	 .cfi_def_cfa_offset 8
 154              	 .cfi_offset 7,-8
 155              	 .cfi_offset 14,-4
 156 0002 82B0     	 sub sp,sp,#8
 157              	.LCFI7:
 158              	 .cfi_def_cfa_offset 16
 159 0004 00AF     	 add r7,sp,#0
 160              	.LCFI8:
 161              	 .cfi_def_cfa_register 7
 162 0006 021C     	 mov r2,r0
 163 0008 BB1D     	 add r3,r7,#6
 164 000a 1A80     	 strh r2,[r3]
 115:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetPrescaler:Wrong prescaler value", (prescaler < XMC_RTC_MAXPRESCALER));
 116:../Libraries/XMCLib/src/xmc_rtc.c ****   
 117:../Libraries/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 165              	 .loc 2 117 0
 166 000c C046     	 mov r8,r8
 167              	.L14:
 168              	 .loc 2 117 0 is_stmt 0 discriminator 1
 169 000e FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 170 0012 021C     	 mov r2,r0
 171 0014 0123     	 mov r3,#1
 172 0016 1340     	 and r3,r2
 173 0018 F9D1     	 bne .L14
 118:../Libraries/XMCLib/src/xmc_rtc.c ****   {
 119:../Libraries/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 120:../Libraries/XMCLib/src/xmc_rtc.c ****   }
 121:../Libraries/XMCLib/src/xmc_rtc.c ****   RTC->CTR = (RTC->CTR & ~(uint32_t)RTC_CTR_DIV_Msk) |
 174              	 .loc 2 121 0 is_stmt 1
 175 001a 064B     	 ldr r3,.L15
 176 001c 054A     	 ldr r2,.L15
 177 001e 5268     	 ldr r2,[r2,#4]
 178 0020 1204     	 lsl r2,r2,#16
 179 0022 110C     	 lsr r1,r2,#16
 122:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 180              	 .loc 2 122 0
 181 0024 BA1D     	 add r2,r7,#6
 182 0026 1288     	 ldrh r2,[r2]
 183 0028 1204     	 lsl r2,r2,#16
 121:../Libraries/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 184              	 .loc 2 121 0
 185 002a 0A43     	 orr r2,r1
 186 002c 5A60     	 str r2,[r3,#4]
 123:../Libraries/XMCLib/src/xmc_rtc.c **** }
 187              	 .loc 2 123 0
 188 002e BD46     	 mov sp,r7
 189 0030 02B0     	 add sp,sp,#8
 190              	 
 191 0032 80BD     	 pop {r7,pc}
 192              	.L16:
 193              	 .align 2
 194              	.L15:
 195 0034 000A0140 	 .word 1073809920
 196              	 .cfi_endproc
 197              	.LFE54:
 199              	 .section .text.XMC_RTC_SetTime,"ax",%progbits
 200              	 .align 2
 201              	 .global XMC_RTC_SetTime
 202              	 .code 16
 203              	 .thumb_func
 205              	XMC_RTC_SetTime:
 206              	.LFB55:
 124:../Libraries/XMCLib/src/xmc_rtc.c **** 
 125:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 126:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC_TIM0, RTC_TIM1 registers with time values
 127:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 128:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const time)
 129:../Libraries/XMCLib/src/xmc_rtc.c **** {
 207              	 .loc 2 129 0
 208              	 .cfi_startproc
 209 0000 80B5     	 push {r7,lr}
 210              	.LCFI9:
 211              	 .cfi_def_cfa_offset 8
 212              	 .cfi_offset 7,-8
 213              	 .cfi_offset 14,-4
 214 0002 82B0     	 sub sp,sp,#8
 215              	.LCFI10:
 216              	 .cfi_def_cfa_offset 16
 217 0004 00AF     	 add r7,sp,#0
 218              	.LCFI11:
 219              	 .cfi_def_cfa_register 7
 220 0006 7860     	 str r0,[r7,#4]
 130:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong seconds value", ((uint32_t)time->seconds < XMC_RTC_MAXSECONDS))
 131:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong minutes value", ((uint32_t)time->minutes < XMC_RTC_MAXMINUTES))
 132:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong hours value", ((uint32_t)time->hours < XMC_RTC_MAXHOURS));
 133:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month day value", ((uint32_t)time->days < XMC_RTC_MAXDAYS));
 134:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong week day value", ((uint32_t)time->daysofweek < XMC_RTC_MAXDAYSO
 135:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month value", ((uint32_t)time->month < XMC_RTC_MAXMONTH));
 136:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong year value", ((uint32_t)time->year < XMC_RTC_MAXYEAR));
 137:../Libraries/XMCLib/src/xmc_rtc.c **** 
 138:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 139:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 140:../Libraries/XMCLib/src/xmc_rtc.c ****       { 
 141:../Libraries/XMCLib/src/xmc_rtc.c ****          /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 142:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 143:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 144:../Libraries/XMCLib/src/xmc_rtc.c ****       
 145:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 146:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 147:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 148:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 149:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	     
 150:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif
 151:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 152:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk | SCU_GENERAL_MIRRSTS_R
 221              	 .loc 2 152 0
 222 0008 C046     	 mov r8,r8
 223              	.L18:
 224              	 .loc 2 152 0 is_stmt 0 discriminator 1
 225 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 226 000e 021C     	 mov r2,r0
 227 0010 1823     	 mov r3,#24
 228 0012 1340     	 and r3,r2
 229 0014 F9D1     	 bne .L18
 153:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 154:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 155:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 156:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 230              	 .loc 2 156 0 is_stmt 1
 231 0016 054A     	 ldr r2,.L19
 232 0018 7B68     	 ldr r3,[r7,#4]
 233 001a 1B68     	 ldr r3,[r3]
 234 001c 1362     	 str r3,[r2,#32]
 157:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	; 
 235              	 .loc 2 157 0
 236 001e 034A     	 ldr r2,.L19
 237 0020 7B68     	 ldr r3,[r7,#4]
 238 0022 5B68     	 ldr r3,[r3,#4]
 239 0024 5362     	 str r3,[r2,#36]
 158:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif  
 159:../Libraries/XMCLib/src/xmc_rtc.c **** }
 240              	 .loc 2 159 0
 241 0026 BD46     	 mov sp,r7
 242 0028 02B0     	 add sp,sp,#8
 243              	 
 244 002a 80BD     	 pop {r7,pc}
 245              	.L20:
 246              	 .align 2
 247              	.L19:
 248 002c 000A0140 	 .word 1073809920
 249              	 .cfi_endproc
 250              	.LFE55:
 252              	 .section .text.XMC_RTC_GetTime,"ax",%progbits
 253              	 .align 2
 254              	 .global XMC_RTC_GetTime
 255              	 .code 16
 256              	 .thumb_func
 258              	XMC_RTC_GetTime:
 259              	.LFB56:
 160:../Libraries/XMCLib/src/xmc_rtc.c **** 
 161:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 162:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time value
 163:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 164:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time)
 165:../Libraries/XMCLib/src/xmc_rtc.c **** {
 260              	 .loc 2 165 0
 261              	 .cfi_startproc
 262 0000 80B5     	 push {r7,lr}
 263              	.LCFI12:
 264              	 .cfi_def_cfa_offset 8
 265              	 .cfi_offset 7,-8
 266              	 .cfi_offset 14,-4
 267 0002 82B0     	 sub sp,sp,#8
 268              	.LCFI13:
 269              	 .cfi_def_cfa_offset 16
 270 0004 00AF     	 add r7,sp,#0
 271              	.LCFI14:
 272              	 .cfi_def_cfa_register 7
 273 0006 7860     	 str r0,[r7,#4]
 166:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 274              	 .loc 2 166 0
 275 0008 054B     	 ldr r3,.L22
 276 000a 1A6A     	 ldr r2,[r3,#32]
 277 000c 7B68     	 ldr r3,[r7,#4]
 278 000e 1A60     	 str r2,[r3]
 167:../Libraries/XMCLib/src/xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 279              	 .loc 2 167 0
 280 0010 034B     	 ldr r3,.L22
 281 0012 5A6A     	 ldr r2,[r3,#36]
 282 0014 7B68     	 ldr r3,[r7,#4]
 283 0016 5A60     	 str r2,[r3,#4]
 168:../Libraries/XMCLib/src/xmc_rtc.c **** }
 284              	 .loc 2 168 0
 285 0018 BD46     	 mov sp,r7
 286 001a 02B0     	 add sp,sp,#8
 287              	 
 288 001c 80BD     	 pop {r7,pc}
 289              	.L23:
 290 001e C046     	 .align 2
 291              	.L22:
 292 0020 000A0140 	 .word 1073809920
 293              	 .cfi_endproc
 294              	.LFE56:
 296              	 .section .text.XMC_RTC_GetTimeStdFormat,"ax",%progbits
 297              	 .align 2
 298              	 .global XMC_RTC_GetTimeStdFormat
 299              	 .code 16
 300              	 .thumb_func
 302              	XMC_RTC_GetTimeStdFormat:
 303              	.LFB57:
 169:../Libraries/XMCLib/src/xmc_rtc.c **** 
 170:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 171:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time values in standard format
 172:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 173:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime)
 174:../Libraries/XMCLib/src/xmc_rtc.c **** {
 304              	 .loc 2 174 0
 305              	 .cfi_startproc
 306 0000 80B5     	 push {r7,lr}
 307              	.LCFI15:
 308              	 .cfi_def_cfa_offset 8
 309              	 .cfi_offset 7,-8
 310              	 .cfi_offset 14,-4
 311 0002 84B0     	 sub sp,sp,#16
 312              	.LCFI16:
 313              	 .cfi_def_cfa_offset 24
 314 0004 00AF     	 add r7,sp,#0
 315              	.LCFI17:
 316              	 .cfi_def_cfa_register 7
 317 0006 7860     	 str r0,[r7,#4]
 175:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 176:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw0 = RTC->TIM0;
 318              	 .loc 2 176 0
 319 0008 244B     	 ldr r3,.L25
 320 000a 1A6A     	 ldr r2,[r3,#32]
 321 000c 0823     	 mov r3,#8
 322 000e FB18     	 add r3,r7,r3
 323 0010 1A60     	 str r2,[r3]
 177:../Libraries/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 324              	 .loc 2 177 0
 325 0012 224B     	 ldr r3,.L25
 326 0014 5A6A     	 ldr r2,[r3,#36]
 327 0016 0823     	 mov r3,#8
 328 0018 FB18     	 add r3,r7,r3
 329 001a 5A60     	 str r2,[r3,#4]
 178:../Libraries/XMCLib/src/xmc_rtc.c ****   
 179:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)time.seconds;
 330              	 .loc 2 179 0
 331 001c 0823     	 mov r3,#8
 332 001e FB18     	 add r3,r7,r3
 333 0020 1B78     	 ldrb r3,[r3]
 334 0022 9B06     	 lsl r3,r3,#26
 335 0024 9B0E     	 lsr r3,r3,#26
 336 0026 DBB2     	 uxtb r3,r3
 337 0028 1A1C     	 mov r2,r3
 338 002a 7B68     	 ldr r3,[r7,#4]
 339 002c 1A60     	 str r2,[r3]
 180:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 340              	 .loc 2 180 0
 341 002e 0823     	 mov r3,#8
 342 0030 FB18     	 add r3,r7,r3
 343 0032 5B78     	 ldrb r3,[r3,#1]
 344 0034 9B06     	 lsl r3,r3,#26
 345 0036 9B0E     	 lsr r3,r3,#26
 346 0038 DBB2     	 uxtb r3,r3
 347 003a 1A1C     	 mov r2,r3
 348 003c 7B68     	 ldr r3,[r7,#4]
 349 003e 5A60     	 str r2,[r3,#4]
 181:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 350              	 .loc 2 181 0
 351 0040 0823     	 mov r3,#8
 352 0042 FB18     	 add r3,r7,r3
 353 0044 9B78     	 ldrb r3,[r3,#2]
 354 0046 DB06     	 lsl r3,r3,#27
 355 0048 DB0E     	 lsr r3,r3,#27
 356 004a DBB2     	 uxtb r3,r3
 357 004c 1A1C     	 mov r2,r3
 358 004e 7B68     	 ldr r3,[r7,#4]
 359 0050 9A60     	 str r2,[r3,#8]
 182:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 360              	 .loc 2 182 0
 361 0052 0823     	 mov r3,#8
 362 0054 FB18     	 add r3,r7,r3
 363 0056 DB78     	 ldrb r3,[r3,#3]
 364 0058 DB06     	 lsl r3,r3,#27
 365 005a DB0E     	 lsr r3,r3,#27
 366 005c DBB2     	 uxtb r3,r3
 367 005e 5A1C     	 add r2,r3,#1
 368 0060 7B68     	 ldr r3,[r7,#4]
 369 0062 DA60     	 str r2,[r3,#12]
 183:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 370              	 .loc 2 183 0
 371 0064 0823     	 mov r3,#8
 372 0066 FB18     	 add r3,r7,r3
 373 0068 5B79     	 ldrb r3,[r3,#5]
 374 006a 1B07     	 lsl r3,r3,#28
 375 006c 1B0F     	 lsr r3,r3,#28
 376 006e DBB2     	 uxtb r3,r3
 377 0070 1A1C     	 mov r2,r3
 378 0072 7B68     	 ldr r3,[r7,#4]
 379 0074 1A61     	 str r2,[r3,#16]
 184:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 380              	 .loc 2 184 0
 381 0076 0823     	 mov r3,#8
 382 0078 FB18     	 add r3,r7,r3
 383 007a DB88     	 ldrh r3,[r3,#6]
 384 007c 084A     	 ldr r2,.L25+4
 385 007e 9A18     	 add r2,r3,r2
 386 0080 7B68     	 ldr r3,[r7,#4]
 387 0082 5A61     	 str r2,[r3,#20]
 185:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 388              	 .loc 2 185 0
 389 0084 0823     	 mov r3,#8
 390 0086 FB18     	 add r3,r7,r3
 391 0088 1B79     	 ldrb r3,[r3,#4]
 392 008a 5B07     	 lsl r3,r3,#29
 393 008c 5B0F     	 lsr r3,r3,#29
 394 008e DBB2     	 uxtb r3,r3
 395 0090 1A1C     	 mov r2,r3
 396 0092 7B68     	 ldr r3,[r7,#4]
 397 0094 9A61     	 str r2,[r3,#24]
 186:../Libraries/XMCLib/src/xmc_rtc.c **** }
 398              	 .loc 2 186 0
 399 0096 BD46     	 mov sp,r7
 400 0098 04B0     	 add sp,sp,#16
 401              	 
 402 009a 80BD     	 pop {r7,pc}
 403              	.L26:
 404              	 .align 2
 405              	.L25:
 406 009c 000A0140 	 .word 1073809920
 407 00a0 94F8FFFF 	 .word -1900
 408              	 .cfi_endproc
 409              	.LFE57:
 411              	 .section .text.XMC_RTC_SetAlarm,"ax",%progbits
 412              	 .align 2
 413              	 .global XMC_RTC_SetAlarm
 414              	 .code 16
 415              	 .thumb_func
 417              	XMC_RTC_SetAlarm:
 418              	.LFB58:
 187:../Libraries/XMCLib/src/xmc_rtc.c **** 
 188:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 189:../Libraries/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value
 190:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 191:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm)
 192:../Libraries/XMCLib/src/xmc_rtc.c **** {
 419              	 .loc 2 192 0
 420              	 .cfi_startproc
 421 0000 80B5     	 push {r7,lr}
 422              	.LCFI18:
 423              	 .cfi_def_cfa_offset 8
 424              	 .cfi_offset 7,-8
 425              	 .cfi_offset 14,-4
 426 0002 82B0     	 sub sp,sp,#8
 427              	.LCFI19:
 428              	 .cfi_def_cfa_offset 16
 429 0004 00AF     	 add r7,sp,#0
 430              	.LCFI20:
 431              	 .cfi_def_cfa_register 7
 432 0006 7860     	 str r0,[r7,#4]
 193:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong seconds value", ((uint32_t)alarm->seconds < XMC_RTC_MAXSECONDS
 194:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong minutes value", ((uint32_t)alarm->minutes < XMC_RTC_MAXMINUTES
 195:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong hours value", ((uint32_t)alarm->hours < XMC_RTC_MAXHOURS));
 196:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong days value", ((uint32_t)alarm->days < XMC_RTC_MAXDAYS));
 197:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong month value", ((uint32_t)alarm->month < XMC_RTC_MAXMONTH));
 198:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong year value", ((uint32_t)alarm->year < XMC_RTC_MAXYEAR));
 199:../Libraries/XMCLib/src/xmc_rtc.c **** 
 200:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 201:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 202:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 203:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 204:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 205:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 206:../Libraries/XMCLib/src/xmc_rtc.c ****       
 207:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 208:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 209:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 210:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 211:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 212:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif
 213:../Libraries/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 214:../Libraries/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk | SCU_GENERAL_MIRRSTS_
 433              	 .loc 2 214 0
 434 0008 C046     	 mov r8,r8
 435              	.L28:
 436              	 .loc 2 214 0 is_stmt 0 discriminator 1
 437 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 438 000e 021C     	 mov r2,r0
 439 0010 0623     	 mov r3,#6
 440 0012 1340     	 and r3,r2
 441 0014 F9D1     	 bne .L28
 215:../Libraries/XMCLib/src/xmc_rtc.c ****       {
 216:../Libraries/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 217:../Libraries/XMCLib/src/xmc_rtc.c ****       }
 218:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 442              	 .loc 2 218 0 is_stmt 1
 443 0016 054A     	 ldr r2,.L29
 444 0018 7B68     	 ldr r3,[r7,#4]
 445 001a 1B68     	 ldr r3,[r3]
 446 001c 9361     	 str r3,[r2,#24]
 219:../Libraries/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 447              	 .loc 2 219 0
 448 001e 034A     	 ldr r2,.L29
 449 0020 7B68     	 ldr r3,[r7,#4]
 450 0022 5B68     	 ldr r3,[r3,#4]
 451 0024 D361     	 str r3,[r2,#28]
 220:../Libraries/XMCLib/src/xmc_rtc.c ****   #endif  
 221:../Libraries/XMCLib/src/xmc_rtc.c **** }
 452              	 .loc 2 221 0
 453 0026 BD46     	 mov sp,r7
 454 0028 02B0     	 add sp,sp,#8
 455              	 
 456 002a 80BD     	 pop {r7,pc}
 457              	.L30:
 458              	 .align 2
 459              	.L29:
 460 002c 000A0140 	 .word 1073809920
 461              	 .cfi_endproc
 462              	.LFE58:
 464              	 .section .text.XMC_RTC_GetAlarm,"ax",%progbits
 465              	 .align 2
 466              	 .global XMC_RTC_GetAlarm
 467              	 .code 16
 468              	 .thumb_func
 470              	XMC_RTC_GetAlarm:
 471              	.LFB59:
 222:../Libraries/XMCLib/src/xmc_rtc.c **** 
 223:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 224:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value
 225:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 226:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm)
 227:../Libraries/XMCLib/src/xmc_rtc.c **** {
 472              	 .loc 2 227 0
 473              	 .cfi_startproc
 474 0000 80B5     	 push {r7,lr}
 475              	.LCFI21:
 476              	 .cfi_def_cfa_offset 8
 477              	 .cfi_offset 7,-8
 478              	 .cfi_offset 14,-4
 479 0002 82B0     	 sub sp,sp,#8
 480              	.LCFI22:
 481              	 .cfi_def_cfa_offset 16
 482 0004 00AF     	 add r7,sp,#0
 483              	.LCFI23:
 484              	 .cfi_def_cfa_register 7
 485 0006 7860     	 str r0,[r7,#4]
 228:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 486              	 .loc 2 228 0
 487 0008 054B     	 ldr r3,.L32
 488 000a 9A69     	 ldr r2,[r3,#24]
 489 000c 7B68     	 ldr r3,[r7,#4]
 490 000e 1A60     	 str r2,[r3]
 229:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 491              	 .loc 2 229 0
 492 0010 034B     	 ldr r3,.L32
 493 0012 DA69     	 ldr r2,[r3,#28]
 494 0014 7B68     	 ldr r3,[r7,#4]
 495 0016 5A60     	 str r2,[r3,#4]
 230:../Libraries/XMCLib/src/xmc_rtc.c **** }
 496              	 .loc 2 230 0
 497 0018 BD46     	 mov sp,r7
 498 001a 02B0     	 add sp,sp,#8
 499              	 
 500 001c 80BD     	 pop {r7,pc}
 501              	.L33:
 502 001e C046     	 .align 2
 503              	.L32:
 504 0020 000A0140 	 .word 1073809920
 505              	 .cfi_endproc
 506              	.LFE59:
 508              	 .section .text.XMC_RTC_GetAlarmStdFormat,"ax",%progbits
 509              	 .align 2
 510              	 .global XMC_RTC_GetAlarmStdFormat
 511              	 .code 16
 512              	 .thumb_func
 514              	XMC_RTC_GetAlarmStdFormat:
 515              	.LFB60:
 231:../Libraries/XMCLib/src/xmc_rtc.c **** 
 232:../Libraries/XMCLib/src/xmc_rtc.c **** 
 233:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 234:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value in standard format
 235:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 236:../Libraries/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime)
 237:../Libraries/XMCLib/src/xmc_rtc.c **** {
 516              	 .loc 2 237 0
 517              	 .cfi_startproc
 518 0000 80B5     	 push {r7,lr}
 519              	.LCFI24:
 520              	 .cfi_def_cfa_offset 8
 521              	 .cfi_offset 7,-8
 522              	 .cfi_offset 14,-4
 523 0002 84B0     	 sub sp,sp,#16
 524              	.LCFI25:
 525              	 .cfi_def_cfa_offset 24
 526 0004 00AF     	 add r7,sp,#0
 527              	.LCFI26:
 528              	 .cfi_def_cfa_register 7
 529 0006 7860     	 str r0,[r7,#4]
 238:../Libraries/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 239:../Libraries/XMCLib/src/xmc_rtc.c ****   
 240:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw0 = RTC->ATIM0;
 530              	 .loc 2 240 0
 531 0008 204B     	 ldr r3,.L35
 532 000a 9A69     	 ldr r2,[r3,#24]
 533 000c 0823     	 mov r3,#8
 534 000e FB18     	 add r3,r7,r3
 535 0010 1A60     	 str r2,[r3]
 241:../Libraries/XMCLib/src/xmc_rtc.c ****   alarm.raw1 = RTC->ATIM1;
 536              	 .loc 2 241 0
 537 0012 1E4B     	 ldr r3,.L35
 538 0014 DA69     	 ldr r2,[r3,#28]
 539 0016 0823     	 mov r3,#8
 540 0018 FB18     	 add r3,r7,r3
 541 001a 5A60     	 str r2,[r3,#4]
 242:../Libraries/XMCLib/src/xmc_rtc.c **** 
 243:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)alarm.seconds;
 542              	 .loc 2 243 0
 543 001c 0823     	 mov r3,#8
 544 001e FB18     	 add r3,r7,r3
 545 0020 1B78     	 ldrb r3,[r3]
 546 0022 9B06     	 lsl r3,r3,#26
 547 0024 9B0E     	 lsr r3,r3,#26
 548 0026 DBB2     	 uxtb r3,r3
 549 0028 1A1C     	 mov r2,r3
 550 002a 7B68     	 ldr r3,[r7,#4]
 551 002c 1A60     	 str r2,[r3]
 244:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)alarm.minutes;
 552              	 .loc 2 244 0
 553 002e 0823     	 mov r3,#8
 554 0030 FB18     	 add r3,r7,r3
 555 0032 5B78     	 ldrb r3,[r3,#1]
 556 0034 9B06     	 lsl r3,r3,#26
 557 0036 9B0E     	 lsr r3,r3,#26
 558 0038 DBB2     	 uxtb r3,r3
 559 003a 1A1C     	 mov r2,r3
 560 003c 7B68     	 ldr r3,[r7,#4]
 561 003e 5A60     	 str r2,[r3,#4]
 245:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)alarm.hours;
 562              	 .loc 2 245 0
 563 0040 0823     	 mov r3,#8
 564 0042 FB18     	 add r3,r7,r3
 565 0044 9B78     	 ldrb r3,[r3,#2]
 566 0046 DB06     	 lsl r3,r3,#27
 567 0048 DB0E     	 lsr r3,r3,#27
 568 004a DBB2     	 uxtb r3,r3
 569 004c 1A1C     	 mov r2,r3
 570 004e 7B68     	 ldr r3,[r7,#4]
 571 0050 9A60     	 str r2,[r3,#8]
 246:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)alarm.days + (int8_t)1);
 572              	 .loc 2 246 0
 573 0052 0823     	 mov r3,#8
 574 0054 FB18     	 add r3,r7,r3
 575 0056 DB78     	 ldrb r3,[r3,#3]
 576 0058 DB06     	 lsl r3,r3,#27
 577 005a DB0E     	 lsr r3,r3,#27
 578 005c DBB2     	 uxtb r3,r3
 579 005e 5A1C     	 add r2,r3,#1
 580 0060 7B68     	 ldr r3,[r7,#4]
 581 0062 DA60     	 str r2,[r3,#12]
 247:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)alarm.month;
 582              	 .loc 2 247 0
 583 0064 0823     	 mov r3,#8
 584 0066 FB18     	 add r3,r7,r3
 585 0068 5B79     	 ldrb r3,[r3,#5]
 586 006a 1B07     	 lsl r3,r3,#28
 587 006c 1B0F     	 lsr r3,r3,#28
 588 006e DBB2     	 uxtb r3,r3
 589 0070 1A1C     	 mov r2,r3
 590 0072 7B68     	 ldr r3,[r7,#4]
 591 0074 1A61     	 str r2,[r3,#16]
 248:../Libraries/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)alarm.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 592              	 .loc 2 248 0
 593 0076 0823     	 mov r3,#8
 594 0078 FB18     	 add r3,r7,r3
 595 007a DB88     	 ldrh r3,[r3,#6]
 596 007c 044A     	 ldr r2,.L35+4
 597 007e 9A18     	 add r2,r3,r2
 598 0080 7B68     	 ldr r3,[r7,#4]
 599 0082 5A61     	 str r2,[r3,#20]
 249:../Libraries/XMCLib/src/xmc_rtc.c **** }
 600              	 .loc 2 249 0
 601 0084 BD46     	 mov sp,r7
 602 0086 04B0     	 add sp,sp,#16
 603              	 
 604 0088 80BD     	 pop {r7,pc}
 605              	.L36:
 606 008a C046     	 .align 2
 607              	.L35:
 608 008c 000A0140 	 .word 1073809920
 609 0090 94F8FFFF 	 .word -1900
 610              	 .cfi_endproc
 611              	.LFE60:
 613              	 .section .text.XMC_RTC_GetEventStatus,"ax",%progbits
 614              	 .align 2
 615              	 .global XMC_RTC_GetEventStatus
 616              	 .code 16
 617              	 .thumb_func
 619              	XMC_RTC_GetEventStatus:
 620              	.LFB61:
 250:../Libraries/XMCLib/src/xmc_rtc.c **** 
 251:../Libraries/XMCLib/src/xmc_rtc.c **** /*
 252:../Libraries/XMCLib/src/xmc_rtc.c ****  * Gets the RTC periodic and alarm event(s) status
 253:../Libraries/XMCLib/src/xmc_rtc.c ****  */
 254:../Libraries/XMCLib/src/xmc_rtc.c **** uint32_t XMC_RTC_GetEventStatus(void)
 255:../Libraries/XMCLib/src/xmc_rtc.c **** {
 621              	 .loc 2 255 0
 622              	 .cfi_startproc
 623 0000 80B5     	 push {r7,lr}
 624              	.LCFI27:
 625              	 .cfi_def_cfa_offset 8
 626              	 .cfi_offset 7,-8
 627              	 .cfi_offset 14,-4
 628 0002 00AF     	 add r7,sp,#0
 629              	.LCFI28:
 630              	 .cfi_def_cfa_register 7
 256:../Libraries/XMCLib/src/xmc_rtc.c ****   return RTC->STSSR;
 631              	 .loc 2 256 0
 632 0004 024B     	 ldr r3,.L39
 633 0006 DB68     	 ldr r3,[r3,#12]
 257:../Libraries/XMCLib/src/xmc_rtc.c **** }
 634              	 .loc 2 257 0
 635 0008 181C     	 mov r0,r3
 636 000a BD46     	 mov sp,r7
 637              	 
 638 000c 80BD     	 pop {r7,pc}
 639              	.L40:
 640 000e C046     	 .align 2
 641              	.L39:
 642 0010 000A0140 	 .word 1073809920
 643              	 .cfi_endproc
 644              	.LFE61:
 646              	 .text
 647              	.Letext0:
 648              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 649              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 650              	 .file 5 "C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/CMSIS/Infineon/XMC1300_series/Include/XMC1300.h"
 651              	 .file 6 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\time.h"
 652              	 .file 7 "C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/XMCLib/inc/xmc_rtc.h"
 653              	 .file 8 "C:/DAVEv4-64Bit/work/Demo_6_BigLamp_DimmingShow/Libraries/CMSIS/Infineon/XMC1300_series/Include/system_XMC1300.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_rtc.c
    {standard input}:18     .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:22     .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:46     .text.XMC_SCU_GetMirrorStatus:00000010 $d
    {standard input}:51     .text.XMC_RTC_Start:00000000 $t
    {standard input}:56     .text.XMC_RTC_Start:00000000 XMC_RTC_Start
    {standard input}:92     .text.XMC_RTC_Start:00000024 $d
    {standard input}:97     .text.XMC_RTC_Stop:00000000 $t
    {standard input}:102    .text.XMC_RTC_Stop:00000000 XMC_RTC_Stop
    {standard input}:137    .text.XMC_RTC_Stop:00000024 $d
    {standard input}:142    .text.XMC_RTC_SetPrescaler:00000000 $t
    {standard input}:147    .text.XMC_RTC_SetPrescaler:00000000 XMC_RTC_SetPrescaler
    {standard input}:195    .text.XMC_RTC_SetPrescaler:00000034 $d
    {standard input}:200    .text.XMC_RTC_SetTime:00000000 $t
    {standard input}:205    .text.XMC_RTC_SetTime:00000000 XMC_RTC_SetTime
    {standard input}:248    .text.XMC_RTC_SetTime:0000002c $d
    {standard input}:253    .text.XMC_RTC_GetTime:00000000 $t
    {standard input}:258    .text.XMC_RTC_GetTime:00000000 XMC_RTC_GetTime
    {standard input}:292    .text.XMC_RTC_GetTime:00000020 $d
    {standard input}:297    .text.XMC_RTC_GetTimeStdFormat:00000000 $t
    {standard input}:302    .text.XMC_RTC_GetTimeStdFormat:00000000 XMC_RTC_GetTimeStdFormat
    {standard input}:406    .text.XMC_RTC_GetTimeStdFormat:0000009c $d
    {standard input}:412    .text.XMC_RTC_SetAlarm:00000000 $t
    {standard input}:417    .text.XMC_RTC_SetAlarm:00000000 XMC_RTC_SetAlarm
    {standard input}:460    .text.XMC_RTC_SetAlarm:0000002c $d
    {standard input}:465    .text.XMC_RTC_GetAlarm:00000000 $t
    {standard input}:470    .text.XMC_RTC_GetAlarm:00000000 XMC_RTC_GetAlarm
    {standard input}:504    .text.XMC_RTC_GetAlarm:00000020 $d
    {standard input}:509    .text.XMC_RTC_GetAlarmStdFormat:00000000 $t
    {standard input}:514    .text.XMC_RTC_GetAlarmStdFormat:00000000 XMC_RTC_GetAlarmStdFormat
    {standard input}:608    .text.XMC_RTC_GetAlarmStdFormat:0000008c $d
    {standard input}:614    .text.XMC_RTC_GetEventStatus:00000000 $t
    {standard input}:619    .text.XMC_RTC_GetEventStatus:00000000 XMC_RTC_GetEventStatus
    {standard input}:642    .text.XMC_RTC_GetEventStatus:00000010 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
